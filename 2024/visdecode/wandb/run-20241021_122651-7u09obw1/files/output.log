
[36m[1mEpoch :[39m[22m 0 [32m[1m | Loss :[39m[22m 3.6374154090881348















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:07<00:00,  3.37s/it]
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
[31mheights = ['Alcohol Consumption', 'Mode Age', 'Alcohol Consumption']<0x0A><0x0A>for i in heights:<0x0A>    plt.scatter(df[i], df['Alcohol Consumption'])<0x0A>    plt.xlabel(i)<0x0A>    plt.ylabel('Alcohol Consumption')<0x0A>    plt.xlim(0, 6000)<0x0A>    plt.ylim(0, 45000)<0x0A>    plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
[31mfacet = sns.FacetGrid(data, height=7, aspect=1.5)<0x0A>facet.map(sns.barplot, 'Water Usage', 'CO2 Emissions', color='steelblue')<0x0A>facet.set(xlim=(0, 80000))<0x0A>facet.set(ylim=(0, 80000))<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
[31mgrupos = ['Dog', 'Red', 'USA']<0x0A><0x0A># Create a bar plot of the dataframe<0x0A>df_bar = pd.DataFrame(<0x0A>    [<0x0A>        df_merged['Dog'],<0x0A>        df_merged['Red'],<0x0A>        df_merged['USA']]<0x0A>    ],<0x0A>    index=['Kurtosis And Skewness Of Annual Corporate Profit Margins',<0x0A>        'Kurtosis And Skewness Of Annual Corporate Profit Margins']<0x0A>    )<0x0A><0x0A># Create a bar plot of the dataframe<0x0A>df_bar.plot(kind='bar',<0x0A>        figsize=(6, 6),<0x0A>        rot=90,<0x0A>        xticks= grupos,<0x0A>        yticks= grupos,<0x0A>        xlabel='',<0x0A>        ylabel='',<0x0A>        color='#003366')<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
[31mgrouped_df = pd.DataFrame(grouped_df, columns=['Product', 'Sales', 'Price'])<0x0A>grouped_df.index = ['Product', 'Sales', 'Price']<0x0A>grouped_df.sort_values(by='Product', ascending=False, inplace=True)<0x0A><0x0A>plt.figure(figsize=(10,10))<0x0A>sns.set(style="ticks")<0x0A>sns.barplot(grouped_df.Product, grouped_df.Sales, palette="Blues_d")<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
[31m# Plot the data<0x0A>plt.figure(figsize=(10,10))<0x0A>data.groupby(['Regional_Inflation_Rates']).size().plot(kind='bar')<0x0A>plt.ylabel('')<0x0A>plt.xlabel('')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(fontsize=10)<0x0A>plt.ylim(0,160)<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
[31mfig, ax = plt.subplots(figsize=(8, 6))<0x0A><0x0A># Plot bar graph<0x0A>sns.barplot(x='Cost', y='Quantile Regression Estimates Of Salary By Experience Level', data=df, ax=ax)<0x0A><0x0A># Add some helpful info<0x0A>ax.set_xticklabels(ax.get_xticklabels(), rotation=90)<0x0A><0x0A># Show graphic<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
[31mheights.plot(kind='scatter', x='Height', y='Height', figsize=(10,10), alpha=0.7, s=100)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
[31mfig, ax = plt.subplots(figsize=(10,10))<0x0A>ax.scatter(x, y, s=100)<0x0A>ax.set_xlim(0, 9000)<0x0A>ax.set_ylim(0, 400)<0x0A>ax.set_xticks(np.arange(0, 9000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_xlim(0, 9000)<0x0A>ax.set_ylim(0, 400)<0x0A>ax.set_xticks(np.arange(0, 9000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_xticks(np.arange(0, 9000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_xticks(np.arange(0, 9000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
[31mfacet = sns.FacetGrid(data=df, col='BondPrice')<0x0A>facet.map(sns.lineplot, 'Smoking Rate', 'Simulation Results Of Variable Interest Interest Rates On Bond Prices')<0x0A>facet.set(xlim=(1,1930))<0x0A>facet.set(ylim=(0,200))<0x0A>facet.add_legend()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
[31mfacet = sns.FacetGrid(data, row = 'CO2 Emissions', size = 6)<0x0A>facet.map(plt.plot, 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'CO2 Emissions', color = 'C0', linewidth = 0.5)<0x0A>facet.set(xlim=(1.814, 1.822))<0x0A>facet.set(ylim=(0, 90))<0x0A>facet.add_legend()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
[31mfacet = sns.FacetGrid(df, height=8)<0x0A>facet.map(sns.lineplot, "Time", "Count")<0x0A>facet.add_legend()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
[31mfig = plt.figure(figsize=(10, 10))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plot the scatter plot<0x0A>ax.scatter(x=df_predictive_accuracy['predictive_accuracy'], y=df_predictive_accuracy['heterogeneity'], alpha=0.5)<0x0A><0x0A># Plot the scatter plot<0x0A>ax.scatter(x=df_predictive_accuracy['predictive_accuracy'], y=df_predictive_accuracy['heterogeneity'], alpha=0.5)<0x0A><0x0A># Add axis labels<0x0A>ax.set_ylabel('Heterogeneity In Clinical Trial Populations By Gender And Age')<0x0A>ax.set_xlabel('Predictive Accuracy Of Seasonal Demand Forecasting Models')<0x0A><0x0A># Add axis tick labels<0x0A>ax.set_yticklabels(['0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100', '150', '170', '180', '200', '250', '300', '450', '550', '570', '750', '775', '1050', '175', '185', '190', '205', '250', '27
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
[31mg = sns.relplot(x="Distance", y="Probability Density Density Function OYA Age Distribution in Population Survey", data=df, kind="line", height=6, aspect=1.5)<0x0A>g.set(xlabel="Distance", ylabel="Probability Density Density Function OYA Age Distribution in Population Survey")<0x0A>g.set(ylim=(0, 600))<0x0A>g.set(xlim=(1, 1810), ylim=(0, 600))
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
[31mempirical_plot(data, 'Growth Rate', 'GDP')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
[31mimport seaborn as sns<0x0A>import matplotlib.pyplot as plt<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
[31mfacet = ggplot(df, aes(x='Assessment Of Healthcare Utilization Rates By Demographic Groups', y='Demographic Groups')) + \<0x0A>    geom_point() + facet<0x0A><0x0A># ggplot(df, aes(x='Assessment Of Healthcare Utilization Rates By Demographic Groups', y='Demographic Groups')) + \<0x0A>    geom_point() + facet<0x0A><0x0A># facet.set_xlim(0, 2000)<0x0A># facet.set_ylim(0, 400)<0x0A># facet.set_xticks(0, 2000)<0x0A># facet.set_xticklabels(["Assessment Of Healthcare Utilization Rates By Demographic Groups"])<0x0A># facet.set_yticks(0, 400)<0x0A># facet.set_xticklabels(["Assessment Of Healthcare Utilization Rates By Demographic Groups"])<0x0A># facet.set_yticklabels(["Demographic Groups"])<0x0A># facet.set_xticklabels(["Demographic Groups"])<0x0A># facet.set_yticklabels(["Demographic Groups"])<0x0A># facet.set_xticklabels(["Demographic Groups"])<0x0A># facet.set_yticklabels(["Demographic Groups"])<0x0A># facet.set_yticklabels(["Demographic Groups"])<0x0A># facet.set_xticklabels(["Demographic Groups"])<0x0A># facet.set_yticklabels(["Demographic Groups"])<0x0A># facet.set_yticklabels(["Demographic Groups"])<0x0A># facet.set_xticklabels(["Demographic Groups"])<0x0A># facet.set_yticklabels(["Demographic Groups"])<0x0A># facet.set_yticklabels(["Demographic Groups"])<0x0A># facet.set
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
[31mpoverty_rate_plot = poverty_rate_plot.plot(kind='bar', color='#006699', figsize=(6,6), fontsize=12)<0x0A>poverty_rate_plot.set_xlabel('')<0x0A>poverty_rate_plot.set_ylabel('')<0x0A>poverty_rate_plot.set_xticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_plot.set_yticklabels(['Poverty Rate', 'Poverty Rate'], fontsize=12)<0x0A>poverty_rate_plot.set_yticklabels(['Poverty Rate', 'Poverty Rate'], fontsize=12)<0x0A>poverty_rate_plot.set_xticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_plot.set_yticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_plot.set_xticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_plot.set_yticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_plot.set_yticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_plot.set_yticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_plot.set_yticklabels(['Dog', 'Nike', 
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
[31mfacet = sns.FacetGrid(data=df, col='time', height=5)<0x0A>facet.map(plt.plot, 'Impact Of Temperature Variability On Crop Yield Statistics', 'Drennled Analysis Of Yearly Weather Weather In Normalies In Temperature Data', linewidth=0.5)<0x0A>facet.add_legend()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
[31mfig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.plot(x,y)<0x0A><0x0A>ax.set_xlim(1825,1840)<0x0A>ax.set_ylim(0,5000)<0x0A><0x0A>ax.set_xticks(x)<0x0A>ax.set_xticklabels(x)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
[31mfacet = sns.relplot(x="Literacy Rate", y="Epcnt Vol", size="Epcnt Vol", data=df, height=8, aspect=1.5)<0x0A>facet.set(xlim=(0, 5000))<0x0A>facet.set(ylim=(0, 650))<0x0A>facet.fig.set_figwidth(10)<0x0A>facet.fig.set_figheight(10)<0x0A>plt.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------



















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:55<00:00,  5.79s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.set_title('Damage caused due to forest depletion in Belgium')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cosine (in a % of G/Y)')<0x0A>ax.set_xticks(np.arange(0, 100, 100))<0x0A>ax.set_yticks(np.arange(0, 0.02, 0.02))<0x0A><0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Cosine (in a % of G/Y)'], color='black', linestyle='dotted', linewidth=1)<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Cosine (in a % of G/Y)'], color='black', linestyle='dotted', linewidth=1)<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Cosine (in a % of G/Y)'], color='black', linestyle='dotted', linewidth=1)<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_ylim(0, 0.02)<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_ylim(0, 0.02)<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_y
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31mfig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.plot(df_filtered.groupby(['Year'])['Freshwater_Withdrawals'].sum(), '--', color='#006699')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Annual Freshwater Withdrawals (% of Ihilnommial Resources)')<0x0A>ax.set_title('Annual freshwater withdrawals (%) in Kazakhstan')<0x0A>ax.grid(True)<0x0A><0x0A>ax.set_xticklabels(['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'], rotation='horizontal')<0x0A><0x0A>ax.set_yticklabels(['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Oct', 'May', 'Dec'], rotation='horizontal')<0x0A><0x0A>ax.set_yticklabels(['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Oct', 'May', 'Dec'], rotation='horizontal')<0x0A><0x0A>ax.set_xticklabels(['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Oct', 'May', 'Jun', 'Jul', 'Aug', 'Oct', 'May', 'Jun', 'Jul', 'Aug', '
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plot the graph<0x0A><0x0A># Plot the graph<0x0A><0x0A># Plot the graph<0x0A><0x0A><0x0A># Plot the graph<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mfig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.plot(df_sanos['Year'], df_sanos['Number of Days'], color='black', linewidth=1)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of Days')<0x0A>ax.set_title('Time required to register a property in Sanos')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_xlim(0, 100000)<0x0A>ax.set_ylim(0, 100000)<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_y
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the cost of communications and computers with respect to service imports of Lebanon<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_y
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar chart of net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g_bar_plot = sns.barplot(x="Year", y="AID_flow_from_development_assistance_committee", data=net_bil_flow_from_development_assistance_committee, palette="RdYlBu_r")<0x0A>g_bar_plot.set_xticklabels(g_bar_plot.get_xticklabels(), rotation=90)<0x0A>g_bar_plot.set_title("Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A>g_bar_plot.set_xlabel("Year")<0x0A>g_bar_plot.set_ylabel("AID flow from Development Assistance Committee")<0x0A>g_bar_plot.set_ylim(0, 1200000)<0x0A>g_bar_plot.set_xticklabels(g_bar_plot.get_xticklabels(), rotation=90)<0x0A>g_bar_plot.set_yticklabels(g_bar_plot.get_yticklabels(), rotation=90)<0x0A>g_bar_plot.set_xlabel("Year")<0x0A>g_bar_plot.set_ylabel("AID flow from Development Assistance Committee")<0x0A>g_bar_plot.set_ylim(0, 1200000)<0x0A>g_bar_plot.set_xticklabels(g_bar_plot.get_xticklabels(), rotation=90)<0x0A>g_bar_plot.set_yticklabels(g_bar_plot.get_yticklabels(), rotation=90)<0x0A>g_bar_plot.set_yticklabels(g_bar_plot.get_yticklabels(), rotation=90
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31m# Create a bar chart with proper labels<0x0A>locations = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 99, 101, 101, 102, 103, 104, 105, 109, 109, 109, 109, 109, 
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31m# Create a bar chart of mean shortfall from the poverty lines in Sri Lanka<0x0A><0x0A># Create a bar chart of mean poverty lines in Sri Lanka<0x0A><0x0A># Create a bar chart of mean poverty lines in Sri Lanka<0x0A><0x0A># Create a bar chart of mean poverty lines in Sri Lanka<0x0A><0x0A># Create a bar chart of mean poverty lines in Sri Lanka<0x0A><0x0A><0x0A># Create a bar chart of mean poverty lines in Sri Lanka<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot = pd.DataFrame({'Year': df.groupby('Year').sum().index, 'Customs and other import duties (as % of tax revenue) of Indonesia': df.groupby('Year').sum().values})<0x0A>import_plot.index = df.groupby('Year').sum().index<0x0A>import_plot.plot(kind='bar', color='#111111', figsize=(20,20), title='Customs and other import duties (as % of tax revenue) of Indonesia', xlabel='Year', ylabel='5% of tax revenue', title='Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m# Plot number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Create a bar plot of number of procedures to build a warehouse in Congo (Republic)<0x0A>bar_plot = pd.DataFrame(data=proc_building_counts, columns=['Year', 'Number of procedures to build a warehouse in Congo (Republic)'])<0x0A>bar_plot.plot.bar(title='Number of procedures to build a warehouse in Congo (Republic)', color='green', figsize=(25, 25))<0x0A>bar_plot.set_xlabel('Year')<0x0A>bar_plot.set_ylabel('Number of procedures to build a warehouse in Congo (Republic)')<0x0A>bar_plot.grid(axis='y', alpha=0.75)<0x0A>bar_plot.set_ylim(0, 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.scatter(df['Year'],df['Production in production'],color='#000000')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in production')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A>ax.grid(True)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot the distance to frontier score (on scale of 100) of Armenia<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the distance to frontier score (on scale of 100) of Armenia<0x0A><0x0A>ax.scatter(df.Year, df.DistanceToFrontierScore, s=100)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (intranetel to 100hbarong)')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A>ax.set_xticklabels(df.Year, rotation='vertical')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m#Plotting Percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.title('Percentage of babies born with low-birthweight in Sri Lanka')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of babies')<0x0A>sns.catplot(x='Year',y='% of babies',data=df,height=15,aspect=1.7,palette='magma')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m# Plotting the percentage of children ages 12-23 months who received DPT vaccinations in Denmark<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.scatter(x=df_children_DPT_vaccinations.Year, y=df_children_DPT_vaccinations.DPT_vaccinations, color='green')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of children who received DPT vaccinations')<0x0A>ax.set_title('Percentage of children ages 12-23 months who received DPT vaccinations in Denmark')<0x0A>ax.set_xticklabels(df_children_DPT_vaccinations.Year, rotation='vertical')<0x0A>ax.set_yticklabels(df_children_DPT_vaccinations.Year, rotation='vertical')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m# Create a scatter plot of Percentage of households in Russian Federation that uses iodized salt<0x0A>sns.catplot(x="Year", y="Percentage of households in Russian Federation that uses iodized salt", data=df, height=15, aspect=1.5, palette="muted")<0x0A>plt.title("Percentage of households in Russian Federation that uses iodized salt")<0x0A>plt.xlabel("Year")<0x0A>plt.ylabel("% of households")<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.scatter(df_UK['Year'], df_UK['Consumption of/ and capital (age % of CWD)'])<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of/ and capital (age % of CWD)')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m# Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A><0x0A># Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m# Create a figure with two subplots<0x0A>fig, ax = plt.subplots(figsize=(20, 15))<0x0A><0x0A># Create a scatterplot of the ratings of Croatia<0x0A>sns.scatterplot(data=df, x='Year', y='Strength rating (1-10000)', color='green', ax=ax[0])<0x0A><0x0A># Create a title<0x0A>plt.title('Rating regarding strength of legal rights index in Croatia')<0x0A><0x0A># Add a legend<0x0A>plt.legend(loc='upper left')<0x0A><0x0A># Show the plot<0x0A>plt.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 1 [32m[1m | Loss :[39m[22m 3.533766269683838















 95%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:01<00:02,  2.94s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
[31mheights = ['Alcohol Consumption', 'Mode Age', 'Alcohol Consumption']<0x0A><0x0A>for i in heights:<0x0A>    plt.scatter(df[i], df['Alcohol Consumption'])<0x0A>    plt.xlabel(i)<0x0A>    plt.ylabel('Alcohol Consumption')<0x0A>    plt.xlim(0, 6000)<0x0A>    plt.ylim(0, 45000)<0x0A>    plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
[31mfacet = sns.FacetGrid(data, height=7, aspect=4)<0x0A>facet.map(sns.barplot, "Water Usage", "CO2 Emissions", color="steelblue")<0x0A>facet.set(xlim=(0, 8000))<0x0A>facet.set(ylim=(0, 8000))<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
[31mgrupos = ['Dog', 'Red', 'USA']<0x0A><0x0A># Create a bar plot of the dataframe<0x0A>df_bar = pd.DataFrame(<0x0A>    [<0x0A>        df_merged['Dog', 'Red', 'USA']<0x0A>       ,<0x0A>        df_merged['Dog', 'Red', 'USA']<0x0A>       ,<0x0A>        df_merged['Dog', 'Red', 'USA']<0x0A>       ,<0x0A>        df_merged['Dog', 'Red', 'USA']<0x0A>       ,<0x0A>        df_merged['Dog', 'Red', 'USA']<0x0A>       ,<0x0A>        df_merged['Dog', 'Red', 'USA']<0x0A>       ,<0x0A>        df_merged['Dog', 'Red', 'USA']<0x0A>       ,<0x0A>        df_merged['Dog', 'Red', 'USA']<0x0A>       ,<0x0A>        df_merged['Dog', 'Red', 'USA']<0x0A>       ,<0x0A>        df_merged['Dog', 'Red', 'USA']<0x0A>       ,<0x0A>        df_merged['Dog', 'Red', 'USA']<0x0A>       ,<0x0A>        df_merged['Dog', 'Red', 'USA']<0x0A>       ,<0x0A>        df_merged['Dog', 'Red', 'USA']<0x0A>       ,<0x0A>        df_merged['Dog', 'Red', 'USA']<0x0A>       ,<0x0A>        df_merged['Dog', 'Red', 'USA']<0x0A>       ,<0x0A>        df_merged['Dog', 'Red', 'USA']<0x0A>       ,<0x0A>        df_merge
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
[31mgrouped_df = pd.DataFrame(grouped_df, columns=['Product', 'Sales', 'Price'])<0x0A>grouped_df.index = ['Apple', 'Dog', 'Nike', 'Rock', 'Sedan', 'Spanish', 'USA']<0x0A>grouped_df.sort_values(by='Sales', ascending=False, inplace=True)<0x0A><0x0A>plt.figure(figsize=(10,10))<0x0A>sns.barplot(grouped_df.index, grouped_df.Sales, palette='Blues')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
[31m# Create a facetgrid to visualize correlations between the two variables<0x0A><0x0A>g = sns.FacetGrid(df, height=7, aspect=1.5)<0x0A>g.map(sns.barplot, "Median Household Income Indexed By Regional Inflation Rates", <0x0A>                         y = "Bond Yield", <0x0A>                         x = "Country", <0x0A>                         color = "steelblue", <0x0A>                         saturation = 1)<0x0A><0x0A># Add labels to the x-axis and tick labels<0x0A>g.set(xticklabels = ["Red", "USA"], yticklabels = ["Bond Yield", "Bond Yield", "USA"])<0x0A><0x0A># Add a title to the plot<0x0A>plt.subplots_adjust(top=0.9)<0x0A><0x0A># Display the plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
[31m# Create a bar plot using the seaborn library<0x0A>sns.set(context = 'notebook', style = 'ticks', <0x0A>        context = 'talk', <0x0A>        color = 'deepskyblue', <0x0A>        rc = {'axes.facecolor': '0.9', 'axes.grid': {'axes.axisbelow': '0', 'axes.titlesize': 12, 'axes.axisbelow': '0'})<0x0A><0x0A># Group by the user's cost and QRE Score<0x0A>user_df = pd.DataFrame(user_df.groupby(['Cost'])['Cost'].agg(['sum']))<0x0A>user_df = user_df.reset_index()<0x0A>user_df.columns = ['Cost', 'Quantile Regression Estimates Of Salary By Experience Level', 'Quantile Regression Estimates Of Salary By Experience Level']<0x0A><0x0A># Plot the bar graph<0x0A>sns.barplot(x = 'Cost', y = 'Quantile Regression Estimates Of Salary By Experience Level', data = user_df, palette = 'deepskyblue')<0x0A><0x0A># Add a Y-axis label<0x0A>plt.ylabel('Quantile Regression Estimates Of Salary By Experience Level')<0x0A>plt.xlabel('Cost')<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
[31mheights_by_gender = df.groupby('gender')['height'].mean()<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.columns = ['Height', 'Age']<0x0A>heights_by_gender.head()<0x0A>heights_by_gender.plot(kind='scatter', x='Height', y='Age', alpha=0.7, figsize=(10,10))<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
[31mfig, ax = plt.subplots(figsize=(10,10))<0x0A>ax.scatter(x, y, s=100)<0x0A>ax.set_xlim(0, 9000)<0x0A>ax.set_ylim(0, 400)<0x0A>ax.set_xticks(np.arange(0, 9000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_xlim(0, 9000)<0x0A>ax.set_ylim(0, 400)<0x0A>ax.set_xticks(np.arange(0, 9000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_xticks(np.arange(0, 9000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_xticks(np.arange(0, 9000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
[31mfacet = sns.FacetGrid(data=df, col='Bond', size=4)<0x0A>facet.map(sns.lineplot, 'Smoking Rate', 'Simulation Results Of Variable Interest Rates On Bond Prices')<0x0A>facet.set(xlim=(1,1930))<0x0A>facet.set(ylim=(0,200))<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
[31mfacet = sns.FacetGrid(data, row = 'CO2 Emissions', size = 6)<0x0A>facet.map(plt.plot, 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'CO2 Emissions', color = 'C0', linewidth = 2)<0x0A>facet.add_legend()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
[31mfacet = sns.FacetGrid(df, height=8)<0x0A>facet.map(sns.lineplot, "Time", "Count")<0x0A>facet.add_legend()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
[31mfacet = sns.FacetGrid(data=df, height=7, aspect=1.5)<0x0A>facet.map(plt.scatter, 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'Heterogeneity In Clinical Trial Populations By Gender And Age')<0x0A>facet.add_legend()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
[31msubset = df.groupby(['Distance', 'Population']).sum()<0x0A><0x0A># Plot the original data<0x0A>subset.plot(kind='line', x='Distance', y='Population', figsize=(10,10))<0x0A><0x0A># Add a caption for the chart<0x0A>plt.ylabel('Probability Density Density Function OY Age Distribution in Population Survey')<0x0A>plt.xlabel('Distance')<0x0A><0x0A># Display the plot<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
[31mGrowthRate = pd.DataFrame(df.groupby(['Growth Rate']).mean()['GDP']).reset_index()<0x0A>GrowthRate.columns = ['Growth Rate', 'GDP']<0x0A><0x0A># Create a scatter plot of the dataframe and the target variable<0x0A>sns.lmplot('Growth Rate', 'GDP', data=df, fit_reg=False, size=7, scatter_kws={'alpha':0.5,'s':70})
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
[31mimport seaborn as sns<0x0A>import matplotlib.pyplot as plt<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
[31mfacet = sns.FacetGrid(data=df, size=8)<0x0A>facet.map(plt.scatter, 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'Demographic Groups')<0x0A>facet.add_legend()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
[31mgrupos = ['Dog', 'Nike', 'Red', 'USA']<0x0A><0x0A># 1. grafico de barras<0x0A><0x0A># 2. grafico de barras<0x0A><0x0A># 3. grafico de barras<0x0A><0x0A># 4. grafico de barras<0x0A><0x0A># 5. grafico de barras<0x0A><0x0A># 6. grafico de barras<0x0A><0x0A><0x0A># 7. grafico de barras<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
[31mfacet = sns.FacetGrid(data=df, col='time', height=5)<0x0A>facet.map(plt.plot, 'Impact Of Temperature Variability On Crop Yield Statistics', 'Drennted Analysis Of Yearly Weather In Normalies In Temperature Data', linewidth=1)<0x0A>facet.add_legend()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
[31mfig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.plot(x,y)<0x0A><0x0A>ax.set_xlim(1825,1840)<0x0A>ax.set_ylim(0,5000)<0x0A><0x0A>ax.set_xticks(x)<0x0A>ax.set_xticklabels(x)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
[31mfacet = sns.relplot(x="Literacy Rate", y="Epcnt Volume",<0x0A>                   data=df, height=8, aspect=1.5,<0x0A>                   palette="muted")<0x0A><0x0A>#plt.savefig("../plots/fig1.png")
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:03<00:00,  3.16s/it]


















 95%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:46<00:02,  2.73s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.set_title('Damage caused due to forest depletion in Belgium')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Coal (total $\Gas$ of GHV)')<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='black', linestyle='dotted', linewidth=1)<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='black', linestyle='dotted', linewidth=1)<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='black', linestyle='dotted', linewidth=1)<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='black', linestyle='dotted', linewidth=1)<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='black', linestyle='dotted', linewidth=1)<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='black', linestyle='dotted', linewidth=1)<0x0A>ax.plot(df_Belg
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Create a line plot of unemployment youth population of Colombia<0x0A># Use the.plot() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to create a bar chart<0x0A># Use the.bar() function to
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31mfig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.plot(df_filtered.groupby(['Year'])['Freshwater withdrawal (%)'].mean(), '--', color='black')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Annual Freshwater withdrawal (%) of 10000000)<0x0A>ax.set_title('Annual freshwater withdrawals (%) in Kazakhstan')<0x0A>ax.set_xticklabels(['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'], rotation='horizontal')<0x0A>ax.grid(alpha=0.3)<0x0A><0x0A>ax.set_xticklabels(['Jan', 'Feb', 'Mar', 'May', 'Jun', 'Jul'], rotation='horizontal')<0x0A><0x0A>ax.set_yticklabels(['Jan', 'Mar', 'May', 'Jun', 'Jul'], rotation='horizontal')<0x0A><0x0A>ax.set_yticklabels(['Jan', 'Mar', 'May', 'Jun', 'Jul'], rotation='horizontal')<0x0A><0x0A>ax.set_xticklabels(['Jan', 'Mar', 'May', 'Jun', 'Jul'], rotation='horizontal')<0x0A><0x0A>ax.set_yticklabels(['Jan', 'Mar', 'May', 'Jun', 'Jul'], rotation='horizontal')<0x0A><0x0A>ax.set_yticklabels(['Jan', 'Mar', 'May', 'Jun'
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plot the graph<0x0A><0x0A># Plot the graph<0x0A><0x0A># Plot the graph<0x0A><0x0A><0x0A># Plot the graph<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df_brazil.groupby(['Year','Year'])['Value'].sum().sort_values(ascending=False).head(10), '-')<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mfig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.plot(df_sanos['Year'], df_sanos['Number of Days'], color='black', linewidth=1)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of Days')<0x0A>ax.set_title('Time required to register a property in Sanos')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_xlim(0, 1000)<0x0A>ax.set_ylim(0, 1000)<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the cost of communications and computers with respect to service imports of Lebanon<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(cost_comm_lebanon['Year'], cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'], color='blue')<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Cost Of communications and computers with respect to service imports of Lebanon')<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar chart of net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=20)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per person')<0x0A>Country_1981.set_xticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31m# Create a bar chart<0x0A><0x0A># Create a bar chart<0x0A><0x0A># Create a title<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the title<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the title<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the font size<0x0A><0x0A># Set the
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot = pd.DataFrame({'Year':['1959', '1960', '1961', '1962', '1963', '1964', '1965', '1966'], 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia',
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m# Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the figure size<0x0A>plt.rcParams['figure.figsize'] = (25, 15)<0x0A><0x0A># Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the title<0x0A>plt.title('Number of procedures to build a warehouse in Congo (Republic)')<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the title<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the title<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the title<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the title<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the title<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rc
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.scatter(df['Year'],df['Production in production'],color='#000000')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in production')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A>ax.grid(True)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot the distance to frontier score (on scale of 100) of Armenia<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the distance to frontier score (on scale of 100) of Armenia<0x0A><0x0A>ax.scatter(df.Year, df.DistanceToFrontierScore, s=100)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (intranet for redevelopment of redevelopment)')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A>ax.set_xticklabels(df.Year, rotation=90)<0x0A>ax.set_yticklabels(df.Year, rotation=90)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m#Plotting Percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A><0x0A>sns.catplot(x="Year", y="Survived", data=df, kind="point",<0x0A>            height=15, aspect=1.5, palette="mako")<0x0A><0x0A>plt.title("Percentage of babies born with low-Birthweight in Sri Lanka")<0x0A>plt.xticks(rotation=90)<0x0A>plt.ylabel("% of babies")<0x0A>plt.xlabel("Year")<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m# Plotting the percentage of children ages 12-23 months who received DPT vaccinations in Denmark<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.scatter(x=df_children_vaccinations.Year, y=df_children_vaccinations.DPT_vaccinations, color='green')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of children who received DPT vaccines')<0x0A>ax.set_title('Percentage of children ages 12-23 months who received DPT vaccinations in Denmark')<0x0A>ax.set_xticklabels(df_children_vaccinations.Year, rotation='vertical')<0x0A>ax.set_yticklabels(df_children_vaccinations.Year, rotation='vertical')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m# Create a scatter plot of Percentage of households in Russian Federation that uses iodized salt<0x0A>sns.catplot(x="Year", y="Percentage of households in Russian Federation that uses iodized salt", data=df, height=15, aspect=1.5, palette="muted")<0x0A>plt.title("Percentage of households in Russian Federation that uses iodized salt")<0x0A>plt.xlabel("Year")<0x0A>plt.ylabel("% of households")<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.scatter(df_UK['Year'], df_UK['Consumption of/ and capital (age % of CWD)'])<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of/ and capital (age % of CWD)')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m# Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A>ggplot(df, aes(x=Year, y=Cost, color=Year)) +<0x0A>    geom_point() +<0x0A>    labs(x="Year", y="Cost (y$ % of GW)") +<0x0A>    coord_flip() +<0x0A>    labs(title="Damage caused due to forest depletion in South Asia", x="Year", y="Cost (y$ % of GW)") +<0x0A>    coord_flip()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m# Create a figure with two subplots<0x0A>fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(20, 15))<0x0A><0x0A># Create a scatter plot of the dataframe<0x0A>df_cleaned.plot(kind='scatter', x='Year', y='Strength rating (12+ ratio)', color='green', ax=axes[0], s=100)<0x0A>axes[0].set_title('Rating regarding strength of legal rights index in Croatia')<0x0A>axes[0].set_xlabel('Year')<0x0A>axes[0].set_ylabel('Strength rating (12+ ratio)')<0x0A>axes[0].set_xticklabels([''] + ['']*100)<0x0A>axes[0].set_yticklabels([''] + ['']*100)<0x0A>axes[0].set_ylim([0, 10000])<0x0A><0x0A># Add a grid to the figure<0x0A>plt.grid(b=True, which='major', axis='y')<0x0A><0x0A># Add a grid to the figure<0x0A>plt.grid(b=True, which='minor', axis='x')<0x0A><0x0A># Add a legend<0x0A>plt.legend(loc='upper left', frameon=False, fontsize='xx-large')<0x0A><0x0A># Display the figure<0x0A>plt.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|

100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:52<00:00,  5.64s/it]
[36m[1mEpoch :[39m[22m 2 [32m[1m | Loss :[39m[22m 3.000483751296997














 95%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:11<00:05,  5.19s/it]
[35m|[39m JSON to Vega conversion error rate: [31m70.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.46 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.97 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
[31mMode_Age = sns.lmplot(x='Mode Age', y='Alcohol Consumption', data=df, fit_reg=False, height=7, aspect=1.5)<0x0A>Mode_Age.set(xlim=(0, 7000))<0x0A>Mode_Age.set(ylim=(0, 4200))
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Apple', 'y': 6200}, {'x': 'Dog', 'y': 6200}, {'x': 'Male', 'y': 4200}, {'x': 'Nike', 'y': 7200}, {'x': 'Rock', 'y': 7200}, {'x': 'Sedan', 'y': 4200}, {'x': 'USA', 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
[31mgrupos = {'Red': 'USA', 'Dog': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', 'Dog Red': 'USA', '
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
[31mgrupo_bairro['Valor'].plot.bar(color ='steelblue', figsize = (10,10))
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
[31mfig, ax = plt.subplots(figsize=(8, 6))<0x0A><0x0A># Plot bar graph<0x0A>sns.barplot(x='Cost', y='Quantile Regression Estimates Of Salary By Experience Level', data=df, ax=ax)<0x0A><0x0A># Decoration<0x0A>ax.set_xticklabels(df['Cost'], rotation=90)<0x0A><0x0A>ax.set_ylabel('Quantile Regression Estimates Of Salary By Experience Level')<0x0A><0x0A>ax.set_xlabel('Cost')<0x0A><0x0A>plt.tight_layout()<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
[31mfacet = sns.FacetGrid(data, height=7, aspect=1.5)<0x0A>facet.map(plt.scatter, 'Height', 'Survived')<0x0A>facet.add_legend()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
[31mfig, ax = plt.subplots(figsize=(10,10))<0x0A>ax.scatter(x, y, s=100)<0x0A>ax.set_xlim(0, 9000)<0x0A>ax.set_ylim(0, 400)<0x0A>ax.set_xticks(np.arange(0, 9000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_xlim(0, 9000)<0x0A>ax.set_ylim(0, 400)<0x0A>ax.set_xticks(np.arange(0, 9000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_xlim(0, 9000)<0x0A>ax.set_ylim(0, 400)<0x0A>ax.set_xlim(0, 9000)<0x0A>ax.set_ylim(0, 400)<0x0A>ax.set_xlim(0, 9000)<0x0A>ax.set_ylim(0, 400)<0x0A>ax.set_xlim(0, 9000)<0x0A>ax.set_ylim(0, 400)<0x0A>ax.set_xlim(0, 9000)<0x0A>ax.set_ylim(0, 400)<0x0A>ax.
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 1915}], 'x': 1915}, {'x': 1920, 'y': 1920}], 'data': {'x': 1920, 'y': 1920}], 'y': 1920}], 'data': {'x': 1920, 'y': 1920}], 'y': 1920}], 'data': {'x': 1920, 'y': 1920}], 'y': 1920}], }<0x0A>axis = 'y': {'x': {'field': 'Smoking Rate', 'type': 'quantitative'}}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'x': 1920, 'y': 1920}], 'y': 1920}], 'data': {'x': 19
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
[31mfacet = sns.FacetGrid(data, row = 'Model', size = 5)<0x0A>facet.map(plt.plot, 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'CO2 Emissions', )<0x0A>facet.set(xlim=(1.814, 1.822))<0x0A>facet.add_legend()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
[31mfacet = sns.FacetGrid(df, height=8)<0x0A>facet.map(sns.lineplot, "Time", "Count")<0x0A>facet.add_legend()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 890, 'y': 62.5}, {'x': 890, 'y': 62.5}, {'x': 890, 'y': 62.5}, {'x': 890, 'y': 62.5}, {'x': 890, 'y': 62.5}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
[31mfacet = sns.FacetGrid(data=df, col='Age', size=4)<0x0A>facet.map(plt.plot, 'Distance', 'Probability Density Density Function OY Age Distribution In Population Survey')<0x0A>facet.set(xlim=(1,1870), ylim=(0,600))<0x0A>facet.add_legend()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'quantitative'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2880}, {'x': 1920, 'y': 2880}, {'x': 1920, 'y': 2880}, {'x': 1920, 'y': 2880}, {'x': 1920, 'y': 2880}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
[31mfacet = sns.FacetGrid(data=df, col='variable', size=7)<0x0A>facet.map(plt.scatter, 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'Demographic Groups')<0x0A>facet.add_legend()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
[31mgrupos = {''.join(wrap(tipo, 'Poverty Rate', 'Poverty Rate', 'USA')),<0x0A>        ''.join(wrap(tipo, 'Poverty Rate', 'Poverty Rate')),<0x0A>        ''.join(wrap(tipo, 'Poverty Rate')),<0x0A>        ''.join(wrap(tipo, 'Poverty Rate')),<0x0A>        ''.join(wrap(tipo, 'Poverty Rate')),<0x0A>        ''.join(wrap(tipo, 'Poverty Rate')),<0x0A>        ''.join(wrap(tipo, 'Poverty Rate')),<0x0A>        ''.join(wrap(tipo, 'Poverty Rate')),<0x0A>        ''.join(wrap(tipo, 'Poverty Rate')),<0x0A>        ''.join(wrap(tipo, 'Poverty Rate')),<0x0A>        ''.join(wrap(tipo, 'Poverty Rate')),<0x0A>        ''.join(wrap(tipo, 'Poverty Rate')),<0x0A>        ''.join(wrap(tipo, 'Poverty Rate')),<0x0A>        ''.join(wrap(tipo, 'Poverty Rate')),<0x0A>        ''.join(wrap(tipo, 'Poverty Rate')),<0x0A>        ''.join(wrap(tipo, 'Poverty Rate')),<0x0A>        ''.join(wrap(tipo, 'Poverty Rate')),<0x0A>        ''.join(wrap(tipo, 'Poverty Rate')),<0x0A>        ''.join(wrap(tipo, 'Poverty Rate')),<0x0A>        ''.join(wrap(tipo, 'Pover
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
[31mfacet = sns.FacetGrid(data=df, col='time', height=4, aspect=1.5)<0x0A>facet.map(plt.plot, 'Impact Of Temperature Variability On Crop Yield Statistics', 'Dtrendled Analysis Of Yearly Weather In Normalies In Temperature Data', linewidth=1)<0x0A>facet.add_legend()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
[31mfig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.plot(df['year'], df['total_bill'])<0x0A>ax.set_xlim(1825, 1840)<0x0A>ax.set_ylim(0, 5000)<0x0A><0x0A>ax.set_xticks(np.arange(1825, 1840, 100))<0x0A>ax.set_yticks(np.arange(0, 5000, 100))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.set_xticks(np.arange(1825, 1840, 100))<0x0A>ax.set_xticks(np.arange(1825, 1840, 100))<0x0A>ax.set_yticks(np.arange(0, 5000, 100))<0x0A><0x0A>ax.set_ylim(0, 5000)<0x0A>ax.set_ylim(0, 5000)<0x0A><0x0A>ax.set_xticks(np.arange(1825, 1840, 100))<0x0A>ax.set_xticks(np.arange(1840, 1840, 100))<0x0A>ax.set_yticks(np
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Epoch Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1100, 'y': 570, 'type': 'quantitative'}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.46 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.97 [35m|
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:14<00:00,  3.73s/it]



















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:46<00:00,  5.34s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.set_title('Damage caused due to forest depletion in Belgium')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Coal (total $\Gas$ of GW)')<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.tick_params(bottom=False, top=False, left=False, right=False)<0x0A>ax.tick_params(top=False, bottom=False, left=False, right=False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a line plot of unemployment_df.plot(x='Year', y='Unemployed youth population of Colombia', kind='line', figsize=(25, 25), color='#003399', lw=2, alpha=0.7, <0x0A>#                                      title='Total unemployed youth population of Colombia', <0x0A>#                                      grid=False, legend=False, fontsize=25, <0x0A>#                                      title='Total unemployed youth population of Colombia', <0x0A>#                                      legend_kwds={'loc': 'upper left', 'fontsize': 15})<0x0A><0x0A># Set the x-axis label<0x0A>ax = df_unemployed.plot(x='Year', y='Unemployed youth population of Colombia', kind='line', figsize=(25, 25), color='#003399', lw=2, alpha=0.7, <0x0A>                                      title='Total unemployed youth population of Colombia', legend=False, fontsize=25, <0x0A>                                      legend_kwds={'loc': 'upper left', 'fontsize': 25})<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Unemployed youth % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31mfig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.plot(df_filtered.Year, df_filtered.AnnualFreshwaterWithdrawals, linestyle='--', color='black')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Annual Freshwater Withdrawals (%) of'+ df_filtered.Year.astype(int))<0x0A>ax.set_title('Annual freshwater withdrawals (%) of'+ df_filtered.Year.astype(int))<0x0A>ax.grid(True)<0x0A><0x0A>ax.set_xticklabels(df_filtered.Year, rotation='vertical')<0x0A>ax.set_yticklabels(df_filtered.Year, rotation='vertical')<0x0A><0x0A>ax.set_ylim(0, 55)<0x0A><0x0A>ax.set_xticklabels(df_filtered.Year, rotation='vertical')<0x0A><0x0A>ax.set_ylabel('Annual Freshwater Withdrawals (%) of'+ df_filtered.Year.astype(int))<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Annual Freshwater Withdrawals (%) of'+ df_filtered.Year.astype(int))<0x0A><0x0A>ax.set_yticklabels(df_filtered.Year, rotation='vertical')<0x0A><0x0A>ax.grid(True)<0x0A><0x0A>ax.set_title('Annual freshwater withdrawals (%) of'+ df_filtered.Year.astype(int))<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Annual Freshwater Withdrawals (%) of'+ df_filtered.Year
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plot the graph<0x0A><0x0A># Plot the graph<0x0A><0x0A># Plot the graph<0x0A><0x0A><0x0A># Plot the graph<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mfig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.plot(df_sanos['Year'], df_sanos['Number of Days'], color='black', linewidth=1)<0x0A>ax.set_title('Time required to register a property in Sanos')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of Days')<0x0A>ax.set_xticklabels(['Year', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the cost of communications and computers with respect to service imports of Lebanon<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(cost_comm_lebanon['Year'], cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'], color='blue')<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Cost Of communications and computers with respect to service imports of Lebanon')<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar chart of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=20)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per person/number')<0x0A>Country_1981.set_xticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31m# Create a bar chart<0x0A><0x0A># Create a bar plot<0x0A>plt.figure(figsize=(20,15))<0x0A><0x0A># Create a bar plot<0x0A>ax = plt.subplot(111)<0x0A><0x0A># Create a bar plot<0x0A>ax.bar(df_sri_lanka.Year, df_sri_lanka.Survived, color='#111111', edgecolor='#111111')<0x0A><0x0A># Create a title<0x0A>ax.set_title('Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A><0x0A># Add the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Add the y-axis label<0x0A>ax.set_ylabel('5-1/poverty lines')<0x0A><0x0A># Display the plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A># Create a bar plot of the data<0x0A>g = sns.catplot(x="Year", y="Import_Duties", data=df,<0x0A>                   height=15, aspect=1.5, palette="Set2",<0x0A>                   order=order, kind="bar", palette="Set2")<0x0A>g.fig.suptitle('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("5% of total imports")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("Customs and other import duties (as % of tax revenue) of Indonesia")<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m# Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the figure size<0x0A>plt.rcParams['figure.figsize'] = (25, 15)<0x0A><0x0A># Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the graph<0x0A><0x0A># Setting up the axes<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.scatter(df['Year'],df['Production in production'],color='#000000')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in production')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A>ax.grid(True)<0x0A><0x0A>ax.set_xticklabels(['Year','Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year','Production in production'], rotation=90)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot the distribution of distance to frontier score (on scale of 100) of Armenia<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the distance to frontier score (on scale of 100) of Armenia<0x0A><0x0A>ax.scatter(df.Year, df.DistanceToFrontierScore, s=100)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (integrated for rethought of refragmentory)')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A>ax.set_xticklabels(df.Year, rotation=90)<0x0A>ax.set_yticklabels(df.Year, rotation=90)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m#Plotting Percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A><0x0A>sns.catplot(x="Year", y="Survived", data=df, kind="point",<0x0A>            height=15, aspect=1.5, palette="mako")<0x0A><0x0A>plt.title("Percentage of babies born with low-Birthweight in Sri Lanka")<0x0A>plt.xticks(rotation=90)<0x0A>plt.ylabel("% of babies")<0x0A>plt.xlabel("Year")<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m# Plotting the percentage of children ages 12-23 months who received DPT vaccinations in Denmark<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.scatter(x=df_DPT_vaccinations.Year, y=df_DPT_vaccinations.DPT_vaccinations, color='green')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of children who received DPT vaccines')<0x0A>ax.set_title('Percentage of children ages 12-23 months who received DPT vaccinations in Denmark')<0x0A>ax.set_xticklabels(df_DPT_vaccinations.Year, rotation='vertical')<0x0A>ax.set_yticklabels(df_DPT_vaccinations.Year, rotation='vertical')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m# Create a scatter plot of Percentage of households in Russian Federation that uses iodized salt<0x0A>sns.catplot(x="Year", y="Percentage of households in Russian Federation that uses iodized salt", data=df, height=15, aspect=1.5, palette="muted")<0x0A>plt.title("Percentage of households in Russian Federation that uses iodized salt")<0x0A>plt.xlabel("Year")<0x0A>plt.ylabel("% of households")<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.scatter(df_UK['Year'], df_UK['Consumption of/and capital (age % of CWD)'])<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of/and capital (age % of CWD)')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m# Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A>ggplot(df, aes(x = Year, y = Cost, color = Damage)) +<0x0A>    geom_point() +<0x0A>    labs(x = "Year", y = "Cost (y = % of GW)") +<0x0A>    coord_flip() +<0x0A>    labs(title = "Damage caused due to forest depletion in South Asia", x = "Year", y = "Cost (y = % of GW)") +<0x0A>    coord_flip()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m# Create a scatter plot of the ratings of Croatia<0x0A>fig, ax = plt.subplots(figsize=(20,15))<0x0A><0x0A># Create a scatter plot of the ratings of Croatia<0x0A>sns.scatterplot(data=df, x='Year', y='Strength rating (12+1000)', color='green', ax=ax[0])<0x0A><0x0A># Add a title<0x0A>plt.title('Rating regarding strength of legal rights index in Croatia')<0x0A><0x0A># Add a legend<0x0A>plt.legend(loc='upper left')<0x0A><0x0A># Display the plot<0x0A>plt.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]


















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:43<00:00,  5.18s/it]
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m20.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.7 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.94 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
[31mModeAge = sns.lmplot(x='Mode Age', y='Alcohol Consumption', data=df, fit_reg=False)<0x0A>ModeAge.set(ylim=(0, None))<0x0A>ModeAge.set(xlim=(0, None))<0x0A>ModeAge.set(ylim=(0, None))<0x0A>ModeAge.set(xlabel='Mode Age', ylabel='Alcohol Consumption')<0x0A>ModeAge.set(ylabel='Alcohol Consumption')<0x0A>ModeAge.set(xlim=(0, None))<0x0A>ModeAge.set(ylim=(0, None))<0x0A>ModeAge.set(xlabel='Mode Age', ylabel='Alcohol Consumption')<0x0A>ModeAge.set(ylabel='Alcohol Consumption')<0x0A>ModeAge.set(xlabel='Mode Age', ylabel='Alcohol Consumption')<0x0A>ModeAge.set(ylabel='Alcohol Consumption')<0x0A>ModeAge.set(ylabel='Alcohol Consumption')<0x0A>ModeAge.set(ylabel='Alcohol Consumption')<0x0A>ModeAge.set(ylabel='Alcohol Consumption')<0x0A>ModeAge.set(ylabel='Alcohol Consumption')<0x0A>ModeAge.set(ylabel='Alcohol Consumption')<0x0A>ModeAge.set(ylabel='Alcohol Consumption')<0x0A>ModeAge.set(ylabel='Alcohol Consumption')<0x0A>ModeAge.set(ylabel='Alcohol Consumption')<0x0A>ModeAge.set(ylabel='Alcohol Consumption')<0x0A>ModeAge.set(ylabel='Alcohol Consumption')<0x0A>ModeAge.set(ylabel='Alcohol Consumption')<0x0A>ModeAge.set(ylabel='Alcohol Consumption')<0x0A>ModeAge.set(ylabel='Al
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7000}, {'x': 'Dog', 'y': 6000}, {'x': 'Male', 'y': 4100}, {'x': 'Rock', 'y': 7000}, {'x': 'Sedan', 'y': 4100}, {'x': 'USA', 'y': 4100}, {'x': 'Rock', 'y': 7000}, {'x': 'Sedan', 'y': 4100}, {'x': 'USA', 'y': 7000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Dog', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1000}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
[31mgrouped_df = pd.DataFrame(data=train_df, columns=['USN', 'USA'])<0x0A><0x0A>f, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A>grouped_df.plot(kind='bar', ax=ax)<0x0A><0x0A>f.tight_layout()<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 152.17}, {'x': 'USA', 'y': 152.17}, {'x': 'Red', 'y': 152.17}, {'x': 'USA', 'y': 152.17}, {'x': 'Red', 'y': 152.17}, {'x': 'USA', 'y': 152.17}, {'x': 'Red', 'y': 152.17}, {'x': 'USA', 'y': 152.17}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.12}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.33}, {'x': 'Nike', 'y': 12.12}, {'x': 'Apple', 'y': 8.33}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255, 'y': 60.3}, {'x': 57.9, 'y': 60.3}, {'x': 59.6, 'y': 60.3}, {'x': 59.6, 'y': 60.3}, {'x': 59.6, 'y': 60.3}, {'x': 59.6, 'y': 60.3}, {'x': 59.6, 'y': 60.3}, {'x': 59.6, 'y': 60.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6, 'y': 199.99}, {'x': 22, 'y': 199.99}, {'x': 11, 'y': 119.99}, {'x': 22, 'y': 199.99}, {'x': 4, 'y': 222.39}, {'x': 5, 'y': 199.99}, {'x': 6, 'y': 199.99}, {'x': 4, 'y': 199.99}, {'x': 7, 'y': 199.99}, {'x': 8, 'y': 199.99}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 191.99}, {'x': 1920, 'y': 192.99}, {'x': 1925, 'y': 192.99}, {'x': 1930, 'y': 34.3}, {'x': 1930, 'y': 34.3}, {'x': 1930, 'y': 34.3}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 29.01}, {'x': 1816, 'y': 29.01}, {'x': 1818, 'y': 70.01}, {'x': 1820, 'y': 18.01}, {'x': 1822, 'y': 80.01}, {'x': 1822, 'y': 80.01}, {'x': 1822, 'y': 29.01}, {'x': 1822, 'y': 70.01}, {'x': 1822, 'y': 70.01}, {'x': 1822, 'y': 29.01}, {'x': 1822, 'y': 70.01}, {'x': 1822, 'y': 70.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.33}, {'x': 1870, 'y': 108.63}, {'x': 1880, 'y': 263.33}, {'x': 1880, 'y': 253.33}, {'x': 1880, 'y': 263.33}, {'x': 1880, 'y': 263.33}, {'x': 1880, 'y': 263.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 64.1, 'y': 63.24}, {'x': 64.1, 'y': 63.24}, {'x': 64.1, 'y': 63.24}, {'x': 64.1, 'y': 63.24}, {'x': 64.1, 'y': 63.24}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Oy Age Distribution In Population In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 600}, {'x': 1813, 'y': 120}, {'x': 1831, 'y': 120}, {'x': 1841, 'y': 301}, {'x': 1851, 'y': 310}, {'x': 1860, 'y': 140}, {'x': 1867, 'y': 140}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1100, 'y': 61.75}, {'x': 1100, 'y': 61.75}, {'x': 1100, 'y': 61.75}, {'x': 1100, 'y': 61.75}, {'x': 1100, 'y': 61.75}, {'x': 1100, 'y': 61.75}, {'x': 1100, 'y': 61.75}, {'x': 1100, 'y': 61.75}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'quantitative'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2880}, {'x': 1920, 'y': 2880}, {'x': 1920, 'y': 2880}, {'x': 1920, 'y': 2880}, {'x': 1920, 'y': 2880}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1500, 'y': 380.30}, {'x': 1500, 'y': 380.30}, {'x': 1500, 'y': 380.30}, {'x': 1500, 'y': 380.30}, {'x': 1500, 'y': 380.30}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2950}, {'x': 'USA', 'y': 1450}, {'x': 'Dog', 'y': 885}, {'x': 'Nike', 'y': 1450}, {'x': 'Red', 'y': 2950}, {'x': 'USA', 'y': 1450}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'nominal'}, 'y': {'field': 'Dreamland', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4278}, {'x': 1804, 'y': 4086}, {'x': 1806, 'y': 3628}, {'x': 1808, 'y': 3628}, {'x': 1812, 'y': 5878}, {'x': 1814, 'y': 5878}, {'x': 1814, 'y': 5878}, {'x': 1814, 'y': 5878}, {'x': 1814, 'y': 5878}, {'x': 1814, 'y': 5878}, {'x': 1814, 'y': 5878}, {'x': 1814, 'y': 5878}, {'x': 1814, 'y': 5878}, {'x': 1814, 'y': 587
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
[31mfacet = {'x': [1825, 1830, 1840], 'y': [3400, 2000, 1835, 1845], 'data': {'x': [1825, 1830, 1840], 'y': [3400, 2000, 1835, 1845]}<0x0A>fig, ax = plt.subplots(figsize=(12,12))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.xaxis.set_ticks_position('none')<0x0A>ax.yaxis.set_ticks_position('none')<0x0A><0x0A>ax.spines['left'].set_position(('data', None))<0x0A>ax.spines['bottom'].set_position(('data', None))<0x0A><0x0A>ax.spines['left'].set_position(('data', None))<0x0A><0x0A>ax.yaxis.set_ticks_position('none')<0x0A>ax.spines['bottom'].set_position(('data', None))<0x0A><0x0A>ax.xaxis.set_ticks_position('none')<0x0A>ax.spines['left'].set_position(('data', None))<0x0A><0x0A>ax.spines['bottom'].set_position(('data', None))<0x0A><0x0A>ax.spines['left'].set_position(('data', None))<0x0A><0x0A>ax.spines['left'].set_position(('data', None))<0x0A><0x0A>ax.spines['left'].set_
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Epoch Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1130, 'y': 570, 'type': 'quantitative'}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.7 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.94 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|


















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:00<00:00,  6.01s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.set_title('Damage caused due to forest depletion in Belgium')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Coal (total $\Gas$ of GW)')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a line plot of unemployment rate by year<0x0A><0x0A># Create a title and axis labels<0x0A><0x0A># Create a title and axis labels<0x0A><0x0A># Set the figure size<0x0A>plt.rcParams["figure.figsize"] = (25,15)<0x0A><0x0A># Create a title<0x0A><0x0A># Set the figure size<0x0A>plt.rcParams["figure.figsize"] = (25,15)<0x0A><0x0A># Create a title<0x0A><0x0A># Set the axis labels<0x0A><0x0A><0x0A># Create a title<0x0A><0x0A># Set the axis labels<0x0A><0x0A><0x0A># Set the title<0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A># Set the x-axis label<0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A># Set the title<0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A># Set the title<0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual Freshwater Withdrawals (% of Ihilomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'type': 'quantitative'}]}}, 'y': {'x': 'Year', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plot the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plot the graph<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plot the graph<0x0A><0x0A>ax.set_title('Arable land (hectares) in Seychelles', fontsize=20)<0x0A><0x0A># Plot the graph<0x0A><0x0A>ax.set_xlabel('Year', fontsize=20)<0x0A>ax.set_ylabel('Ave of land (hectares)', fontsize=20)<0x0A><0x0A># Plot the graph<0x0A><0x0A>ax.plot(df['Year'], df['Arable land'], '-', color='black')<0x0A><0x0A># Plot the graph<0x0A><0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption in Brazil as a percentage of production'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mfig = plt.figure(figsize=(25,25))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.set_title('Time required to register a property in Sanos')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of Days')<0x0A><0x0A>ax.plot(df_sanos['Year'], df_sanos['Number of Days'], color='black', linewidth=1)<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>ax.set_xlim(0, 2000)<0x0A>ax.set_ylim(0, 160)<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>ax.set_ylabel('Number of Days')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of Days')<0x0A><0x0A>ax.set_ylim(0, 160)<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(cost_comm_lebanon['Year'], cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'], color='blue')<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Cost Of communications and computers with respect to service imports of Lebanon')<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A><0x0A>g = sns.catplot(x="Year", y="Net_BILATERAL_FLOW", data=net_bilateral_flow, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=20)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='black')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_198
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31m# Create a bar chart<0x0A><0x0A># Create a bar plot<0x0A>plt.figure(figsize=(20,10))<0x0A><0x0A># Create a bar plot<0x0A>ax = plt.subplot(111)<0x0A><0x0A># Create a bar plot<0x0A>ax.bar(df_sri_lanka.Year, df_sri_lanka.Survived, color='#111111', edgecolor='#111111')<0x0A><0x0A># Create a title<0x0A>ax.set_title('Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A><0x0A># Add the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Add the y-axis label<0x0A>ax.set_ylabel('5-1/poverty lines')<0x0A><0x0A># Display the plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(customs_import_duties, 'Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m# Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the figure size<0x0A>plt.rcParams['figure.figsize'] = (25, 15)<0x0A><0x0A># Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the graph<0x0A><0x0A># Setting up the axes<0x0A><0x0A># Setting up the title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig = plt.figure(figsize=(20,15))<0x0A>ax = fig.add_subplot(111)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in number texts')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A>ax.set_ylim(0, 11000)<0x0A>ax.set_xticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.grid(True)<0x0A><0x0A>ax.scatter(df['Year'], df['Production in number texts'], color='#000000')<0x0A>ax.set_xticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Production in number texts'], color='#000000')<0x0A>ax.set_ylabel('Production in number texts')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in number texts')<0x0A>ax.set_ylim(0, 11000)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot the graph<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the graph<0x0A>ax.scatter(df['Year'], df['Score (demand for housing)'])<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (demand for housing)')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.scatter(df['Year'], df['Distance to Frontier score (on scale of 100)'])<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (demand for housing)')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A>ax.set_yticklabels(df['Distance to Frontier score (on scale of 100)'])<0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.scatter(df['Year'], df['Distance to Frontier score (on scale of 100)'])<0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A>ax.set_ylabel('Score (demand for housing)')<0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.set_ylim(0, 1000)<0x0A>ax.set_ylim(0, 1000)<0x0A><0x0A># Plot the graph<0x0A>ax.set_ylim(0, 1000)<0x0A>ax
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m#Plotting Percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting Percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>ax.scatter(df_srl['Year'], df_srl['Survived'], color='purple')<0x0A><0x0A># Setting title<0x0A>ax.set_title('Percentage of babies born with low-Birthweight in Sri Lanka')<0x0A><0x0A># Setting x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting y-axis label<0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A># Setting x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting y-axis label<0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A># Setting title<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting title<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting title<0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A># Setting x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting title<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting y-axis label<0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A># Setting title<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting title<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting x-
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m# Plotting the percentage of children ages 12-23 months who received DPT vaccinations in Denmark<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.scatter(x=df_DPT_vaccinations.Year, y=df_DPT_vaccinations.DPT_vaccinations, color='green')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of children who received DPT vaccines')<0x0A>ax.set_title('Percentage of children ages 12-23 months who received DPT vaccinations in Denmark')<0x0A>ax.set_xticklabels(df_DPT_vaccinations.Year, rotation='vertical')<0x0A>ax.set_yticklabels(df_DPT_vaccinations.Year, rotation='vertical')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m# Create a scatter plot of Percentage of households in Russian Federation that uses iodized salt<0x0A>sns.catplot(x="Year", y="Percentage of households in Russian Federation that uses iodized salt", data=df, height=15, aspect=1.5, palette="muted")<0x0A>plt.title("Percentage of households in Russian Federation that uses iodized salt")<0x0A>plt.xlabel("Year")<0x0A>plt.ylabel("% of households")<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.scatter(df_UK['Year'], df_UK['Consumption of/and capital (age % of CWD)'])<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of/and capital (age % of CWD)')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31mCountry_Plot(df, 'Year', 'Cost (in % of GW)', 'Damage caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m# Create a scatter plot of the ratings of Croatia<0x0A>fig, ax = plt.subplots(figsize=(20,15))<0x0A><0x0A># Create a scatter plot of the ratings of Croatia<0x0A>sns.stripplot(data=df, x='Year', y='Strength rating (12+1000)', color='green', ax=ax[0])<0x0A><0x0A># Add a title<0x0A>ax[0].set_title('Rating regarding strength of legal rights index in Croatia')<0x0A><0x0A># Add a grid<0x0A>ax[0].grid(True)<0x0A><0x0A># Add a legend<0x0A>ax[0].legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a grid<0x0A>ax[0].grid(True)<0x0A><0x0A># Add a legend<0x0A>ax[0].legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax[0].legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a grid<0x0A>ax[0].grid(False)<0x0A><0x0A># Add a legend<0x0A>ax[0].legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax[0].legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax[0].legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]



















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:33<00:00,  4.70s/it]
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.95 [35m|[39m [36m[1mY-NAME[39m[22m : 0.95 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2000, 'y': 2100}, {'x': 2000, 'y': 2100}, {'x': 2000, 'y': 2100}, {'x': 2000, 'y': 2100}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7000}, {'x': 'Dog', 'y': 6000}, {'x': 'Male', 'y': 4100}, {'x': 'Rock', 'y': 7000}, {'x': 'Sedan', 'y': 4100}, {'x': 'USA', 'y': 4100}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Dog', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1000}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.61}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 43.61}, {'x': 'Nike', 'y': 43.61}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 43.61}, {'x': 'Nike', 'y': 191.11}, {'x': 'Red', 'y': 191.11}, {'x': 'Nike', 'y': 43.61}, {'x': 'Nike', 'y': 43.61}, {'x': 'Red', 'y': 191.11}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 152.52}, {'x': 'USA', 'y': 152.52}, {'x': 'Red', 'y': 152.52}, {'x': 'USA', 'y': 152.52}, {'x': 'Red', 'y': 152.52}, {'x': 'USA', 'y': 152.52}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.17}, {'x': 'USA', 'y': 8.37}, {'x': 'Dog', 'y': 8.37}, {'x': 'Nike', 'y': 12.17}, {'x': 'Apple', 'y': 3.67}, {'x': 'Dog', 'y': 8.37}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255, 'y': 60.3}, {'x': 57.5, 'y': 60.3}, {'x': 57.5, 'y': 60.3}, {'x': 57.5, 'y': 60.3}, {'x': 57.5, 'y': 60.3}, {'x': 57.5, 'y': 60.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 650, 'y': 115.5}, {'x': 2250, 'y': 365.5}, {'x': 2150, 'y': 365.5}, {'x': 2150, 'y': 365.5}, {'x': 2150, 'y': 365.5}, {'x': 2150, 'y': 365.5}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200}, {'x': 1915, 'y': 180}, {'x': 1920, 'y': 180}, {'x': 1920, 'y': 34}, {'x': 1920, 'y': 180}, {'x': 1920, 'y': 34}, {'x': 1920, 'y': 180}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 29.06}, {'x': 1816, 'y': 28.06}, {'x': 1818, 'y': 70.06}, {'x': 1820, 'y': 18.06}, {'x': 1822, 'y': 80.06}, {'x': 1822, 'y': 80.06}, {'x': 1822, 'y': 28.06}, {'x': 1822, 'y': 28.06}, {'x': 1822, 'y': 28.06}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.1}, {'x': 1860, 'y': 253.1}, {'x': 1860, 'y': 253.1}, {'x': 1860, 'y': 253.1}, {'x': 1860, 'y': 253.1}, {'x': 1860, 'y': 253.1}, {'x': 1860, 'y': 253.1}, {'x': 1860, 'y': 253.1}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 600}, {'x': 1821, 'y': 126}, {'x': 1831, 'y': 126}, {'x': 1841, 'y': 109}, {'x': 1851, 'y': 310}, {'x': 1861, 'y': 156}, {'x': 1871, 'y': 310}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4500, 'y': 61.59}, {'x': 4500, 'y': 55.00}, {'x': 4500, 'y': 61.59}, {'x': 4500, 'y': 55.00}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 111.11, 'y': 37.91}, {'x': 111.11, 'y': 37.91}, {'x': 111.11, 'y': 37.91}, {'x': 111.11, 'y': 37.91}, {'x': 111.11, 'y': 37.91}, {'x': 111.11, 'y': 37.91}, {'x': 111.11, 'y': 37.91}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2929}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2929}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dreamtime', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1806, 'y': 3848}, {'x': 1808, 'y': 3626}, {'x': 1812, 'y': 4888}, {'x': 1813, 'y': 5848}, {'x': 1814, 'y': 5848}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Expon Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1130, 'y': 565.1}, {'x': 1130, 'y': 525.1}, {'x': 1130, 'y': 525.1}, {'x': 1130, 'y': 525.1}, {'x': 1130, 'y': 525.1}, {'x': 1130, 'y': 525.1}, {'x': 1130, 'y': 525.1}, {'x': 1130, 'y': 525.1}, {'x': 1130, 'y': 525.1}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.95 [35m|[39m [36m[1mY-NAME[39m[22m : 0.95 [35m|



















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:02<00:00,  6.12s/it]
[35m|[39m JSON to Vega conversion error rate: [31m90.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.86 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.set_title('Damage caused due to forest depletion in Belgium')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Coal (total $\Gas$ of GW)')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a line plot of unemployment rate by year<0x0A><0x0A># Create a title and axis labels<0x0A><0x0A># Create a title and axis labels<0x0A><0x0A># Set the figure size<0x0A>plt.rcParams["figure.figsize"] = (25,15)<0x0A><0x0A># Create a title<0x0A><0x0A># Set the figure size<0x0A>plt.rcParams["figure.figsize"] = (25,15)<0x0A><0x0A># Create a title<0x0A><0x0A># Set the axis labels<0x0A><0x0A><0x0A># Create a title<0x0A><0x0A># Set the axis labels<0x0A><0x0A><0x0A># Set the title<0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A># Set the x-axis label<0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A># Set the title<0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A># Set the y-axis label<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual Freshwater Withdrawals (% of Ihilomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 55.33}, {'x': 'field', 'y': 55.33}, {'x': 'field', 'y': 55.33}, {'x': 'field', 'y': 55.33}, {'x': 'field', 'y': 55.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plot the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plot the graph<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plot the graph<0x0A><0x0A>ax.set_title('Arable land (hectares) in Seychelles', fontsize=20)<0x0A><0x0A># Plot the graph<0x0A><0x0A>ax.set_xlabel('Year', fontsize=20)<0x0A>ax.set_ylabel('Ave of land (hectares)', fontsize=20)<0x0A><0x0A># Plot the graph<0x0A><0x0A>ax.plot(df['Year'], df['Arable land'], '-', color='black')<0x0A><0x0A># Plot the graph<0x0A><0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption in Brazil as a percentage of production'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(25, 25))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of Days')<0x0A>ax.set_title('Time required to register a property in Sanos')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Number of Days'])
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(cost_comm_lebanon['Year'], cost_comm_lebanon['Cost_of_commune_imports_imports'], color='blue')<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Cost Of communications imports (Imports)')<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A><0x0A>g = sns.catplot(x="Year", y="Net_BILATERAL_FLOW", data=net_bilateral_flow, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=20)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m# Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the figure size<0x0A>plt.rcParams['figure.figsize'] = (25, 15)<0x0A><0x0A># Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the graph<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig = plt.figure(figsize=(20,15))<0x0A>ax = fig.add_subplot(111)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in number texts')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A>ax.set_ylim(0, 11000)<0x0A>ax.set_xticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A><0x0A>ax.scatter(df['Year'], df['Production in number texts'], color='#000000')<0x0A>ax.set_xticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Production in number texts'], color='#000000')<0x0A>ax.set_ylabel('Production in number texts')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in number texts')<0x0A>ax.set_ylim(0, 11000)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.grid(True)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot the graph<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the graph<0x0A>ax.scatter(df['Year'], df['Score (demand for housing)'])<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (demand for housing)')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.scatter(df['Year'], df['Distance to Frontier score (on scale of 100)'])<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (demand for housing)')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A>ax.set_yticklabels(df['Distance to Frontier score (on scale of 100)'])<0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.scatter(df['Year'], df['Distance to Frontier score (on scale of 100)'])<0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A>ax.set_ylabel('Score (demand for housing)')<0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.scatter(df['Year'], df['Distance to Frontier score (on scale of 100)'])<0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.set
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m# Plot the percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>ax.scatter(data_srl['Year'], data_srl['Birth Weight'], color='purple')<0x0A>ax.set_title('Percentage of babies born with low-Birthweight in Sri Lanka')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xticklabels([''] + labels)<0x0A>ax.set_yticklabels([''] + labels)<0x0A><0x0A># Plot the percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>ax.set_xticklabels([''] + labels)<0x0A>ax.set_yticklabels([''] + labels)<0x0A><0x0A># Plot the percentage of babies born with low-Birthweight in Sri Lanka<0x0A><0x0A>ax.set_xlim(0, 20)<0x0A>ax.set_ylim(0, 20)<0x0A><0x0A># Plot the percentage of babies born with low-Birthweight in Sri Lanka<0x0A><0x0A>ax.set_xticklabels([''] + labels)<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A># Plot the percentage of babies born with low-Birthweight in Sri Lanka<0x0A><0x0A>ax.set_ylim(0, 20)<0x0A>ax.set_xlim(0, 20)<0x0A><0x0A># Plot the percentage of babies born with low-Birthweight in Sri Lanka<0x0A><0x0A>ax.set_ylim(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.5}, {'x': 'Year', 'y': 18.5}, {'x': 'Year', 'y': 18.5}, {'x': 'Year', 'y': 18.5}, {'x': 'Year', 'y': 18.5}, {'x': 'Year', 'y': 18.5}, {'x': 'Year', 'y': 18.5}, {'x': 'Year', 'y': 18.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m# Create a scatter plot of Percentage of households in Russian Federation that uses iodized salt<0x0A>sns.catplot(x="Year", y="Percentage of households in Russian Federation that uses iodized salt", data=df, height=15, aspect=1.5, palette="muted")<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.scatter(df_UK['Year'], df_UK['Consumption of/and capital (age % of CWD)'])<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of/and capital (age % of CWD)')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31mCountry_Plot(df, 'Year', 'Cost (in % of GW)', 'Damage caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m# Create a scatter plot of the ratings of Croatia<0x0A>fig, ax = plt.subplots(figsize=(20,15))<0x0A><0x0A># Create a scatter plot of the ratings of Croatia<0x0A>scatter_plot = df.plot(kind='scatter', x='Year', y='Strength rating (12 ± 10000)', color='green', ax=ax)<0x0A><0x0A># Add a title<0x0A>scatter_plot.set_title('Rating regarding strength of legal rights index in Croatia')<0x0A><0x0A># Add a legend<0x0A>scatter_plot.legend(loc='upper left', bbox_to_anchor=(1, 1), ncol=1)<0x0A><0x0A># Display the plot<0x0A>plt.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.86 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------























model.safetensors: 100%|███████████████████████████████████████████████████████████████████████████████████████████| 1.13G/1.13G [00:45<00:00, 24.8MB/s]
[36m[1mEpoch :[39m[22m 5 [32m[1m | Loss :[39m[22m 2.0557210445404053



















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:28<00:00,  4.40s/it]
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.95 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2000, 'y': 2100}, {'x': 2000, 'y': 2100}, {'x': 4000, 'y': 2100}, {'x': 5000, 'y': 4100}, {'x': 6000, 'y': 2100}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7000}, {'x': 'Dog', 'y': 6300}, {'x': 'Nike', 'y': 4100}, {'x': 'Apple', 'y': 6300}, {'x': 'Male', 'y': 6300}, {'x': 'Rock', 'y': 6300}, {'x': 'Sedan', 'y': 4100}, {'x': 'USA', 'y': 4100}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Dog', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1000}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 47.69}, {'x': 'Nike', 'y': 47.69}, {'x': 'Rock', 'y': 23.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 47.69}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 152.52}, {'x': 'USA', 'y': 152.52}, {'x': 'Red', 'y': 152.52}, {'x': 'USA', 'y': 152.52}, {'x': 'Red', 'y': 152.52}, {'x': 'USA', 'y': 152.52}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.17}, {'x': 'USA', 'y': 8.37}, {'x': 'Dog', 'y': 8.37}, {'x': 'Nike', 'y': 12.17}, {'x': 'Apple', 'y': 3.67}, {'x': 'Nike', 'y': 12.17}, {'x': 'Red', 'y': 12.17}, {'x': 'USA', 'y': 8.37}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255, 'y': 60.3}, {'x': 57.5, 'y': 60.3}, {'x': 57.5, 'y': 60.3}, {'x': 125, 'y': 12.3}, {'x': 150, 'y': 57.3}, {'x': 150, 'y': 60.3}, {'x': 125, 'y': 60.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 650, 'y': 114.1}, {'x': 2250, 'y': 365.6}, {'x': 1500, 'y': 365.6}, {'x': 1500, 'y': 365.6}, {'x': 2250, 'y': 365.6}, {'x': 550, 'y': 225.6}, {'x': 1500, 'y': 365.6}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200}, {'x': 1915, 'y': 180}, {'x': 1920, 'y': 180}, {'x': 1925, 'y': 180}, {'x': 1925, 'y': 180}, {'x': 1925, 'y': 34}, {'x': 1925, 'y': 180}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 28.52}, {'x': 1816, 'y': 28.52}, {'x': 1817, 'y': 70.2}, {'x': 1818, 'y': 70.2}, {'x': 1819, 'y': 70.2}, {'x': 1820, 'y': 18.22}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.1}, {'x': 1868, 'y': 110.8}, {'x': 1870, 'y': 108.6}, {'x': 1871, 'y': 263.1}, {'x': 1872, 'y': 253.1}, {'x': 1873, 'y': 253.1}, {'x': 1874, 'y': 253.1}, {'x': 1875, 'y': 253.1}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 600}, {'x': 1821, 'y': 126}, {'x': 1831, 'y': 26}, {'x': 1841, 'y': 108}, {'x': 1851, 'y': 310}, {'x': 1861, 'y': 156}, {'x': 1871, 'y': 310}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4500, 'y': 58.14}, {'x': 4500, 'y': 58.14}, {'x': 4500, 'y': 58.14}, {'x': 4500, 'y': 58.14}, {'x': 4500, 'y': 58.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 288}, {'x': 1926, 'y': 288}, {'x': 1929, 'y': 288}, {'x': 1930, 'y': 288}, {'x': 1931, 'y': 288}, {'x': 1932, 'y': 288}, {'x': 1932, 'y': 288}, {'x': 1932, 'y': 288}, {'x': 1932, 'y': 288}, {'x': 1932, 'y': 288}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1500, 'y': 38.64}, {'x': 1500, 'y': 42.54}, {'x': 1500, 'y': 38.64}, {'x': 1500, 'y': 38.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dreamted Analysis Of Yearly Weather In Normalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1806, 'y': 3818}, {'x': 1808, 'y': 3626}, {'x': 1812, 'y': 4886}, {'x': 1813, 'y': 5848}, {'x': 1814, 'y': 5848}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 2000}, {'x': 1840, 'y': 3400}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Expon Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1130, 'y': 565.1}, {'x': 1130, 'y': 527.6}, {'x': 1130, 'y': 527.6}, {'x': 1130, 'y': 527.6}, {'x': 1130, 'y': 527.6}, {'x': 1130, 'y': 527.6}, {'x': 1130, 'y': 527.6}, {'x': 1130, 'y': 527.6}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.95 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|



















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:57<00:00,  5.88s/it]
README.md: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████| 5.18k/5.18k [00:00<00:00, 14.8MB/s]
[35m|[39m JSON to Vega conversion error rate: [31m90.0[39m [31m%[39m [35m|
error
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.87 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(25, 25))<0x0A><0x0A># Create a line plot of the total unemployed youth population of Colombia<0x0A>ax.plot(unemployed_pop_col_col_df.index, unemployed_pop_col_col_df.Total_unemployed_youth_population_of_Colombia, '-', color='#11A6D9')<0x0A><0x0A># Set the title and labels<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Unemployed youth % of total labor force were %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %em
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) of Hitomonal Resources'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 30.33}, {'x': 'field', 'y': 55.33}, {'x': 'field', 'y': 55.33}, {'x': 'field', 'y': 55.33}, {'x': 'field', 'y': 55.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_title('Arable land (hectares) in Seychelles', fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xlabel('Year', fontsize=20)<0x0A>ax.set_ylabel('Ave of land (hectares)', fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.plot(df['Year'], df['Arable land'], '-', color='black')<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption in Brazil as a percentage of production'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(25, 25))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of Days')<0x0A>ax.set_title('Time required to register a property in Sanos')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left']
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(cost_comm_lebanon['Year'], cost_comm_lebanon['Cost_of_commune_imports_imports'], color='blue')<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Cost Of communications imports (S)')<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A><0x0A>g = sns.catplot(x="Year", y="Net_BILATERAL_FLOW", data=net_bilateral_flow, kind="bar", palette="ch:.25", ci=None, )<0x0A>g.fig.set_size_inches(20, 20)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=16)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3, hspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m# Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the figure size<0x0A>plt.rcParams['figure.figsize'] = (25, 15)<0x0A><0x0A># Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the graph<0x0A><0x0A><0x0A># Setting up the graph<0x0A><0x0A><0x0A># Setting up the graph<0x0A><0x0A><0x0A># Setting up the graph<0x0A><0x0A><0x0A><0x0A># Setting up the graph<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot a scatter plot for each category<0x0A><0x0A># Create a horizontal bar plot<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a horizontal bar plot<0x0A>scatter_plot = ax.scatter(df['Year'], df['Score (demand for housing)'], s=100)<0x0A><0x0A># Add a title<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A># Add a x-label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Add a y-label<0x0A>ax.set_ylabel('Score (demand for housing)')<0x0A><0x0A># Add a grid<0x0A>ax.grid(False)<0x0A><0x0A># Save the figure<0x0A>plt.savefig('distance_to_frontier_score_100_of_Armenia.png', dpi=300)<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m# Plot the percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>g = sns.catplot(x="Year", y="Survived", data=df, height=15, aspect=1.5, palette="mako")<0x0A>g.set_axis_labels("Year", "S% of babies")<0x0A>g.set_title("Percentage of babies born with low-Birthweight in Sri Lanka")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("Images/Percentage of babies born with low-Birthweight in Sri Lanka.png")
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 14.3}, {'x': 'Year', 'y': 14.3}, {'x': 'field', 'y': 14.3}, {'x': 'field', 'y': 14.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m# Create a scatter plot of Percentage of households in Russian Federation that uses iodized salt<0x0A>sns.catplot(x="Year", y="Percentage of households in Russian Federation that uses iodized salt", data=df, height=15, aspect=1.5, palette="muted")<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.scatter(df_UK['Year'], df_UK['Consumption of/and capital (age % of CWD)'])<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of/and capital (age % of CWD)')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31mCountry_Plot(df, 'Year', 'Cost (in % of GW)', 'Damage caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A><0x0A>df = pd.read_csv('C:/Users/Alexandria/Documents/Data/Data_Processing/Data_Processing/Data_Processing_Year.csv')<0x0A>df = df.drop(['Year'], axis=1)<0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.87 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------

























model.safetensors: 100%|███████████████████████████████████████████████████████████████████████████████████████████| 1.13G/1.13G [00:48<00:00, 23.1MB/s]
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]



















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:27<00:00,  4.37s/it]
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.95 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2000, 'y': 860}, {'x': 2000, 'y': 2100}, {'x': 4000, 'y': 2100}, {'x': 5000, 'y': 4200}, {'x': 6000, 'y': 2100}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7000}, {'x': 'USA', 'y': 4200}, {'x': 'Dog', 'y': 6300}, {'x': 'Nike', 'y': 4190}, {'x': 'Apple', 'y': 6300}, {'x': 'Male', 'y': 6300}, {'x': 'Rock', 'y': 6300}, {'x': 'Sedan', 'y': 4200}, {'x': 'USA', 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Dog', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1000}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 47.69}, {'x': 'Apple', 'y': 47.69}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 23.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 47.69}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 130.67}, {'x': 'USA', 'y': 152.57}, {'x': 'Red', 'y': 152.57}, {'x': 'USA', 'y': 152.57}, {'x': 'Red', 'y': 130.67}, {'x': 'USA', 'y': 152.57}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.17}, {'x': 'USA', 'y': 8.37}, {'x': 'Dog', 'y': 8.37}, {'x': 'Nike', 'y': 12.17}, {'x': 'Apple', 'y': 3.67}, {'x': 'Nike', 'y': 12.17}, {'x': 'Red', 'y': 12.17}, {'x': 'USA', 'y': 8.37}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255, 'y': 60.3}, {'x': 57.5, 'y': 60.3}, {'x': 57.5, 'y': 60.3}, {'x': 125, 'y': 13.3}, {'x': 150, 'y': 57.3}, {'x': 150, 'y': 60.3}, {'x': 255, 'y': 13.3}, {'x': 255, 'y': 60.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6650, 'y': 44}, {'x': 6650, 'y': 114}, {'x': 6650, 'y': 364}, {'x': 6650, 'y': 364}, {'x': 6650, 'y': 364}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200}, {'x': 1915, 'y': 180}, {'x': 1920, 'y': 180}, {'x': 1925, 'y': 180}, {'x': 1925, 'y': 180}, {'x': 1925, 'y': 34}, {'x': 1925, 'y': 180}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 80.2}, {'x': 1816, 'y': 28.5}, {'x': 1817, 'y': 70.2}, {'x': 1818, 'y': 70.2}, {'x': 1819, 'y': 80.2}, {'x': 1820, 'y': 80.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.14}, {'x': 1868, 'y': 110.84}, {'x': 1870, 'y': 108.14}, {'x': 1878, 'y': 268.14}, {'x': 1880, 'y': 268.14}, {'x': 1883, 'y': 268.14}, {'x': 1886, 'y': 268.14}, {'x': 1889, 'y': 268.14}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 718.11, 'y': 63.14}, {'x': 718.11, 'y': 63.14}, {'x': 718.11, 'y': 63.14}, {'x': 718.11, 'y': 63.14}, {'x': 718.11, 'y': 63.14}, {'x': 718.11, 'y': 63.14}, {'x': 718.11, 'y': 63.14}, {'x': 718.11, 'y': 63.14}, {'x': 718.11, 'y': 63.14}, {'x': 718.11, 'y': 63.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 600}, {'x': 1821, 'y': 126}, {'x': 1828, 'y': 26}, {'x': 1837, 'y': 126}, {'x': 1841, 'y': 108}, {'x': 1848, 'y': 311}, {'x': 1851, 'y': 311}, {'x': 1859, 'y': 146}, {'x': 1860, 'y': 146}, {'x': 1869, 'y': 146}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4500, 'y': 58.14}, {'x': 4500, 'y': 58.14}, {'x': 4500, 'y': 58.14}, {'x': 4500, 'y': 58.14}, {'x': 4500, 'y': 58.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2880}, {'x': 1926, 'y': 2880}, {'x': 1929, 'y': 2880}, {'x': 1930, 'y': 2880}, {'x': 1931, 'y': 2880}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1500, 'y': 38.64}, {'x': 1500, 'y': 43.64}, {'x': 1500, 'y': 38.64}, {'x': 1500, 'y': 38.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dreamted Analysis Of Yearly Weather In Normalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1806, 'y': 3812}, {'x': 1808, 'y': 3626}, {'x': 1812, 'y': 4886}, {'x': 1813, 'y': 5758}, {'x': 1814, 'y': 5848}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 2000}, {'x': 1840, 'y': 3400}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Expent Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1000, 'y': 565.69}, {'x': 1000, 'y': 527.69}, {'x': 3000, 'y': 622.69}, {'x': 3000, 'y': 527.69}, {'x': 4000, 'y': 622.69}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.95 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------



















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:56<00:00,  5.80s/it]
[35m|[39m JSON to Vega conversion error rate: [31m95.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.87 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(25, 25))<0x0A><0x0A># Create a line plot of the total unemployed youth population of Colombia<0x0A>ax.plot(unemployed_pop_col_col_df.index, unemployed_pop_col_col_df.Total_Unemployed_Youth_Population_Colombia, '-', color='#11a000')<0x0A><0x0A># Set the title and labels<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Unemployed youth % of total labor force were %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %em
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) of Hitomonal Resources'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field': 'Annual freshwater withdrawals (%) of Hitomonal Resources'}}}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_title('Arable land (hectares) in Seychelles', fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xlabel('Year', fontsize=20)<0x0A>ax.set_ylabel('Ave of land (hectares)', fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption in Brazil as a percentage of production'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(20,10))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.set_title('Time required to register a property in Sanos')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of Days')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Cost Of communications imports (%)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.plot(cost_comm_lebanon['Year'], cost_comm_lebanon['Cost'], color='blue')<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A><0x0A>g = sns.catplot(x="Year", y="Net_BILATERAL_FLOW", data=net_bilateral_flow, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=16)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m# Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the figure size<0x0A>plt.rcParams['figure.figsize'] = (25, 15)<0x0A><0x0A># Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the graph<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot a scatter plot for each category<0x0A><0x0A># Create a horizontal bar plot<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a horizontal bar plot<0x0A>scatter_plot = ax.scatter(df['Year'], df['Score (demand for housing)'], s=100)<0x0A><0x0A># Add a title<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A># Add a x-label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Add a y-label<0x0A>ax.set_ylabel('Score (demand for housing)')<0x0A><0x0A># Add a grid<0x0A>ax.grid(False)<0x0A><0x0A># Save the figure<0x0A>plt.savefig('distance_to_frontier_score_100_of_Armenia.png', dpi=300)<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m# Plot the percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>g = sns.catplot(x="Year", y="Survived", data=df, height=15, aspect=1.5, palette="mako")<0x0A>g.set_axis_labels("Year", "S% of babies")<0x0A>g.set_title("Percentage of babies born with low-Birthweight in Sri Lanka")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("Images/Percentage of babies born with low-Birthweight in Sri Lanka.png")<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 14.33}, {'x': 'field', 'y': 14.33}, {'x': 'field', 'y': 14.33}, {'x': 'field', 'y': 14.33}, {'x': 'field', 'y': 14.33}, {'x': 'field', 'y': 14.33}, {'x': 'field', 'y': 14.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m# Create a scatter plot of Percentage of households in Russian Federation that uses iodized salt<0x0A>sns.catplot(x="Year", y="Percentage of households in Russian Federation that uses iodized salt", data=df, height=15, aspect=1.5, palette="muted")<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.scatter(df_UK['Year'], df_UK['Consumption of / and capital (less % of CWD)'])<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of / and capital (less % of CWD)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31mCountry_name = 'South Asia'<0x0A>Country_axis = 'Year'<0x0A><0x0A># Create a DataFrame with the Damage Data<0x0A>Country_df = DataFrame(Country_axis, columns = Country_name)<0x0A><0x0A># Plot the Damage Data<0x0A>Country_df = Country_df.sort_values(by = 'Cost (per 1000)', ascending = False)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.sort_values(by = 'Cost (per 1000)', ascending = False)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A><0x0A>df = pd.read_csv('C:/Users/Alexandria/Documents/Data/Data_Processing/Data_Processing/Data_Processing_Year.csv')<0x0A>df = df.drop(['Year'], axis=1)<0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1)<0x0A><0x0A>df = df.drop(['Year'], axis=1
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.87 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]



















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:35<00:00,  4.79s/it]
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2000, 'y': 860}, {'x': 2000, 'y': 4190}, {'x': 4000, 'y': 2130}, {'x': 5000, 'y': 2980}, {'x': 4000, 'y': 2980}, {'x': 5000, 'y': 4190}, {'x': 2000, 'y': 2130}, {'x': 5000, 'y': 2980}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7000}, {'x': 'USA', 'y': 4200}, {'x': 'Dog', 'y': 6300}, {'x': 'Nike', 'y': 4190}, {'x': 'Apple', 'y': 6300}, {'x': 'Male', 'y': 6300}, {'x': 'Rock', 'y': 6300}, {'x': 'Sedan', 'y': 4200}, {'x': 'USA', 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1000}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 47.69}, {'x': 'Apple', 'y': 47.69}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 23.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 47.69}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 130.67}, {'x': 'USA', 'y': 152.57}, {'x': 'Red', 'y': 152.57}, {'x': 'USA', 'y': 152.57}, {'x': 'Red', 'y': 130.67}, {'x': 'USA', 'y': 152.57}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.17}, {'x': 'USA', 'y': 8.37}, {'x': 'Dog', 'y': 8.37}, {'x': 'Nike', 'y': 12.17}, {'x': 'Apple', 'y': 3.66}, {'x': 'Nike', 'y': 12.17}, {'x': 'Red', 'y': 12.17}, {'x': 'USA', 'y': 8.37}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255, 'y': 60.3}, {'x': 55, 'y': 60.3}, {'x': 125, 'y': 57.6}, {'x': 150, 'y': 60.3}, {'x': 255, 'y': 13.3}, {'x': 55, 'y': 60.3}, {'x': 255, 'y': 60.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6620, 'y': 42.56}, {'x': 6620, 'y': 112.56}, {'x': 8620, 'y': 112.56}, {'x': 8620, 'y': 365.56}, {'x': 6620, 'y': 224.56}, {'x': 8620, 'y': 365.56}, {'x': 8620, 'y': 365.56}, {'x': 8620, 'y': 365.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200}, {'x': 1916, 'y': 18}, {'x': 1921, 'y': 18}, {'x': 1928, 'y': 18}, {'x': 1929, 'y': 34}, {'x': 1931, 'y': 34}, {'x': 1932, 'y': 34}, {'x': 1932, 'y': 18}, {'x': 1932, 'y': 34}, {'x': 1932, 'y': 18}, {'x': 1932, 'y': 34}, {'x': 1932, 'y': 18}, {'x': 1932, 'y': 34}, {'x': 1932, 'y': 34}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 80.2}, {'x': 1816, 'y': 28.5}, {'x': 1817, 'y': 70.2}, {'x': 1818, 'y': 70.2}, {'x': 1819, 'y': 80.2}, {'x': 1820, 'y': 80.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.14}, {'x': 1868, 'y': 110.84}, {'x': 1871, 'y': 108.14}, {'x': 1878, 'y': 268.14}, {'x': 1881, 'y': 268.14}, {'x': 1886, 'y': 268.14}, {'x': 1889, 'y': 268.14}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788, 'y': 63.59}, {'x': 788, 'y': 63.59}, {'x': 788, 'y': 63.59}, {'x': 788, 'y': 63.59}, {'x': 788, 'y': 63.59}, {'x': 788, 'y': 63.59}, {'x': 788, 'y': 63.59}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 600.01}, {'x': 1821, 'y': 128.01}, {'x': 1828, 'y': 20.01}, {'x': 1831, 'y': 128.01}, {'x': 1838, 'y': 128.01}, {'x': 1841, 'y': 108.01}, {'x': 1847, 'y': 308.01}, {'x': 1851, 'y': 310.01}, {'x': 1858, 'y': 148.01}, {'x': 1865, 'y': 148.01}, {'x': 1865, 'y': 148.01}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4500, 'y': 58.14}, {'x': 1100, 'y': 58.14}, {'x': 2200, 'y': 58.14}, {'x': 3000, 'y': 61.74}, {'x': 4500, 'y': 58.14}, {'x': 5500, 'y': 58.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2880}, {'x': 1926, 'y': 2880}, {'x': 1929, 'y': 2880}, {'x': 1930, 'y': 2880}, {'x': 1935, 'y': 2880}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1500, 'y': 38.64}, {'x': 1500, 'y': 42.56}, {'x': 1500, 'y': 38.64}, {'x': 1500, 'y': 42.56}, {'x': 1500, 'y': 38.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather In Normalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1806, 'y': 3626}, {'x': 1808, 'y': 3626}, {'x': 1812, 'y': 4966}, {'x': 1814, 'y': 5748}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 2000}, {'x': 1840, 'y': 3400}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 3400}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Expent Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1000, 'y': 565.6}, {'x': 1000, 'y': 527.6}, {'x': 3000, 'y': 622.6}, {'x': 3000, 'y': 527.6}, {'x': 4000, 'y': 622.6}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|



















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:53<00:00,  5.66s/it]
[35m|[39m JSON to Vega conversion error rate: [31m95.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.87 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(25, 25))<0x0A><0x0A># Create a line plot of the total unemployed youth population of Colombia<0x0A>ax.plot(unemployed_pop_col_col_df.index, unemployed_pop_col_col_df.Total_Unemployed_Youth_Population_Colombia, '-', color='#11a000')<0x0A><0x0A># Set the title and labels<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Unemployed youth % of total labor force were %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %em
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) of Hitomonal Resources'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field': 'Annual freshwater withdrawals (%) of Hitomonal Resources'}}, 'y': 55.33}, {'x': 'field': 'Year', 'type': 'quantitative'}]}}, 'y': {'x': 'field': 'Annual freshwater withdrawals (%) of Hitomonal Resources'}}, 'x': 'field': 'Annual freshwater withdrawals (%) of Hitomonal Resources'}}, 'y': 55.33}, {'x': 'field': 'Year', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_title('Arable land (hectares) in Seychelles', fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xlabel('Year', fontsize=20)<0x0A>ax.set_ylabel('Ave. (Claims from Placement)', fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption in Brazil as a percentage of production'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(20,10))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.set_title('Time required to register a property in Sanos')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of Days')<0x0A>ax.set_ylim(0, 15)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Cost Of communications imports (%)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.plot(cost_comm_lebanon['Year'], cost_comm_lebanon['Cost'], color='blue')<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A><0x0A>g = sns.catplot(x="Year", y="Net_BILATERAL_FLOW", data=net_bilateral_flow, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=16)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.95, wspace=0.2)<0x0A>g.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m# Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the figure size<0x0A>plt.rcParams['figure.figsize'] = (25, 15)<0x0A><0x0A># Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the graph<0x0A><0x0A><0x0A># Setting up the graph<0x0A><0x0A><0x0A># Setting up the graph<0x0A><0x0A><0x0A># Setting up the graph<0x0A><0x0A><0x0A><0x0A># Setting up the graph<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot a scatter plot for each category<0x0A><0x0A># Create a horizontal bar plot<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a horizontal bar plot<0x0A>scatter_plot = ax.scatter(df['Year'], df['Score (demand for housing)'], s=100)<0x0A><0x0A># Add a title<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a title<0x0A>ax.set_ylabel('Score (demand for housing)')<0x0A><0x0A># Add a label to the plot<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Display the plot<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m# Plot the percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>g = sns.catplot(x="Year", y="Survived", data=df, height=15, aspect=1.5, palette="mako")<0x0A>g.set_axis_labels("Year", "S% of babies")<0x0A>g.set_title("Percentage of babies born with low-Birthweight in Sri Lanka")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("Images/Percentage of babies born with low-Birthweight in Sri Lanka.png")
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 14.67}, {'x': 'field', 'y': 14.67}, {'x': 'field', 'y': 14.67}, {'x': 'field', 'y': 14.67}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m# Create a scatter plot of Percentage of households in Russian Federation that uses iodized salt<0x0A>sns.catplot(x="Year", y="Percentage of households in Russian Federation that uses iodized salt", data=df, height=15, aspect=1.5, palette="muted")<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atmospheric Air and Capital (less % of CMV)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atmospheric Air and Capital (less % of CMV)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31mCountry_Plot(df, 'Year', 'Cost (in % of GW)', 'Damage caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia', 'Damaged caused due to forest depletion in South Asia')
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A><0x0A>df = pd.read_csv('C:/Users/Alexandria/Documents/Data/Data_Processing/Data_Processing/Data_Processing_Year.csv')<0x0A>df = df.drop(['Year', 'Country'], axis=1)<0x0A>df = df.drop(['Year', 'Country'], axis=1)<0x0A>df = df.drop(['Year', 'Country'], axis=1)<0x0A>df = df.drop(['Year', 'Country'], axis=1)<0x0A>df = df.drop(['Year', 'Country'], axis=1)<0x0A>df = df.drop(['Year', 'Country'], axis=1)<0x0A>df = df.drop(['Year', 'Country'], axis=1)<0x0A>df = df.drop(['Year', 'Country'], axis=1)<0x0A>df = df.drop(['Year', 'Country'], axis=1)<0x0A>df = df.drop(['Year', 'Country'], axis=1)<0x0A>df = df.drop(['Year', 'Country'], axis=1)<0x0A>df = df.drop(['Year', 'Country'], axis=1)<0x0A>df = df.drop(['Year', 'Country'], axis=1)<0x0A>df = df.drop(['Year', 'Country'], axis=1)<0x0A>df = df.drop(['Year', 'Country'], axis=1)<0x0A>df = df.drop(['Year', 'Country'], axis=1)<0x0A>df = df.drop(['Year', 'Country'], axis=1)<0x0A>df = 
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.87 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 8 [32m[1m | Loss :[39m[22m 2.6992082595825195



















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:40<00:00,  5.05s/it]
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2000, 'y': 865}, {'x': 2000, 'y': 4190}, {'x': 4000, 'y': 2130}, {'x': 5000, 'y': 2960}, {'x': 4000, 'y': 2960}, {'x': 5000, 'y': 4190}, {'x': 4000, 'y': 2130}, {'x': 5000, 'y': 2960}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7000}, {'x': 'USA', 'y': 4200}, {'x': 'Dog', 'y': 6300}, {'x': 'Nike', 'y': 4190}, {'x': 'Apple', 'y': 6300}, {'x': 'Male', 'y': 6300}, {'x': 'Rock', 'y': 6300}, {'x': 'Sedan', 'y': 4200}, {'x': 'USA', 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1000}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 47.69}, {'x': 'Apple', 'y': 47.69}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 23.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 47.69}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 130.67}, {'x': 'USA', 'y': 152.57}, {'x': 'Red', 'y': 152.57}, {'x': 'USA', 'y': 152.57}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.12}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.33}, {'x': 'Nike', 'y': 12.12}, {'x': 'Apple', 'y': 3.91}, {'x': 'Nike', 'y': 12.12}, {'x': 'Red', 'y': 12.12}, {'x': 'USA', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 60.3}, {'x': 55.3, 'y': 60.3}, {'x': 110.7, 'y': 57.6}, {'x': 150.7, 'y': 57.6}, {'x': 150.7, 'y': 60.3}, {'x': 255.3, 'y': 13.3}, {'x': 255.3, 'y': 60.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6620, 'y': 42.56}, {'x': 8750, 'y': 111.59}, {'x': 8750, 'y': 111.59}, {'x': 6620, 'y': 42.56}, {'x': 8750, 'y': 111.59}, {'x': 6620, 'y': 42.56}, {'x': 8750, 'y': 365.56}, {'x': 6620, 'y': 365.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200}, {'x': 1919, 'y': 16}, {'x': 1921, 'y': 16}, {'x': 1926, 'y': 16}, {'x': 1929, 'y': 34}, {'x': 1931, 'y': 34}, {'x': 1932, 'y': 16}, {'x': 1934, 'y': 34}, {'x': 1936, 'y': 16}, {'x': 1937, 'y': 34}, {'x': 1938, 'y': 34}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.69}, {'x': 1816, 'y': 28.54}, {'x': 1817, 'y': 79.69}, {'x': 1818, 'y': 79.69}, {'x': 1819, 'y': 80.02}, {'x': 1820, 'y': 80.02}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.14}, {'x': 1868, 'y': 253.14}, {'x': 1871, 'y': 108.14}, {'x': 1878, 'y': 268.14}, {'x': 1881, 'y': 268.14}, {'x': 1886, 'y': 268.14}, {'x': 1889, 'y': 268.14}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 600.01}, {'x': 1821, 'y': 128.01}, {'x': 1828, 'y': 23.01}, {'x': 1831, 'y': 23.01}, {'x': 1838, 'y': 128.01}, {'x': 1841, 'y': 108.01}, {'x': 1848, 'y': 310.01}, {'x': 1851, 'y': 308.01}, {'x': 1858, 'y': 148.01}, {'x': 1861, 'y': 150.01}, {'x': 1868, 'y': 148.01}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4500, 'y': 58.14}, {'x': 1100, 'y': 58.14}, {'x': 2200, 'y': 58.14}, {'x': 3000, 'y': 61.74}, {'x': 4500, 'y': 58.14}, {'x': 5500, 'y': 58.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2880}, {'x': 1926, 'y': 2880}, {'x': 1929, 'y': 2880}, {'x': 1930, 'y': 2880}, {'x': 1932, 'y': 2880}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.11}, {'x': 1570, 'y': 42.11}, {'x': 1570, 'y': 38.11}, {'x': 1570, 'y': 38.11}, {'x': 1570, 'y': 38.11}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1806, 'y': 3626}, {'x': 1808, 'y': 3626}, {'x': 1812, 'y': 4966}, {'x': 1814, 'y': 5748}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 2000}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 2000}, {'x': 1847, 'y': 3400}, {'x': 1849, 'y': 2000}, {'x': 1850, 'y': 4900}, {'x': 1851, 'y': 3400}, {'x': 1852, 'y': 3400}, {'x': 1853, 'y': 2000}, {'x': 1857, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Expent Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1000, 'y': 565.6}, {'x': 1000, 'y': 527.6}, {'x': 3000, 'y': 622.6}, {'x': 3000, 'y': 527.6}, {'x': 4000, 'y': 622.6}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|




















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:49<00:00,  5.47s/it]
[35m|[39m JSON to Vega conversion error rate: [31m95.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.87 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis $\per GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a line plot of the total unemployed youth population of Colombia<0x0A>ax.plot(unemployed_pop_col_col_df.index, unemployed_pop_col_col_df.Total_Unemployed_Youth_Population_Colombia, '-', color='#11a000')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Unemployed youth % of total labor force were %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) of Hitomonal Resources', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field': 'Annual freshwater withdrawals (%) of Hitomonal Resources', 'type': 'quantitative'}]}}, 'data': {'x': 'Year', 'y': 55.33}, {'x': 'field': 'Annual freshwater withdrawals (%) of Hitomonal Resources', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.plot(df['Year'], df['Arable land (hectares) in Seychelles'], '-', color='black')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Arable land (hectares) in Seychelles')<0x0A>ax.set_title('Arable land (hectares) in Seychelles')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption in Brazil as a percentage of production'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>g = grupo_bairro.plot(x='Year', y='Number of Days', kind='line', title='Time required to register a property in Sanos', color='black', <0x0A>                                      linewidth=5, figsize=(25, 25))<0x0A><0x0A>g.set_xlabel('Year')<0x0A>g.set_ylabel('Number of Days')<0x0A><0x0A>g.set_title('Time required to register a property in Sanos')<0x0A>g.set_xticklabels(['Year', 'Year'])<0x0A>g.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'field', 'y': 37.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A><0x0A>g = sns.catplot(x="Year", y="Net_BILATERAL_FLOW", data=net_bilateral_flow, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("Net AID flow (AID from Development Assistance Committee")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="Net_BILATERAL_FLOW", data=net_bilateral_flow, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("Net AID flow (AID from Development Assistance Committee")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="Net_B
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m# Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the figure size<0x0A>plt.rcParams['figure.figsize'] = (25, 15)<0x0A><0x0A># Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the graph<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import os<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot a scatter plot for each category<0x0A><0x0A># Create a horizontal bar plot<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a horizontal bar plot<0x0A>scatter_plot = ax.scatter(df['Year'], df['Score (demand for housing)'], s=100)<0x0A><0x0A># Add a title<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a title<0x0A>ax.set_ylabel('Score (demand for housing)')<0x0A><0x0A># Add a label to the plot<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Display the plot<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m# Plot the percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>g = sns.catplot(x="Year", y="Survived", data=df, height=15, aspect=1.5, palette="mako")<0x0A>g.set_axis_labels("Year", "S% of babies")<0x0A>g.set_title("Percentage of babies born with low-Birthweight in Sri Lanka")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("Images/Percentage of babies born with low-Birthweight in Sri Lanka.png")
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 14.67}, {'x': 'field', 'y': 14.67}, {'x': 'field', 'y': 14.67}, {'x': 'field', 'y': 14.67}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m# Create a scatter plot of Percentage of households in Russian Federation that uses iodized salt<0x0A>sns.catplot(x="Year", y="Percentage of households in Russian Federation that uses iodized salt", data=df, height=15, aspect=1.5, palette="muted")<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atmospheric Air and Capital (less % of CMV)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atmospheric Air and Capital (less % of CMV)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31mCountry_name = 'South Asia'<0x0A>Country_axis = 'Year'<0x0A><0x0A># Create a DataFrame with the Damage Data<0x0A>Country_df = DataFrame(Country_axis, columns = Country_name)<0x0A><0x0A># Plot the Damage Data<0x0A>Country_df = Country_df.sort_values(by = 'Cost (per 1000)', ascending = False)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.sort_values(by = 'Cost (per 1000)', ascending = False)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C = {'x': {'field': 'Year', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 1000}, {'x': 'field': 'Year', 'type': 'quantitative'}]}}, 'y': {'x': 'field': 'Strength index (C = {'x': 'Year', 'type': 'quantitative'}]}}}}, 'y': {'x': 'field': 'Strength index (C = {'x': 'Year', 'type': 'quantitative'}]}}}}}}}}<0x0A>}<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A>ax = sns.stripplot(x='Year', y='Strength index (C = {'x': 'Year', 'type': 'quantitative'}], data=df, jitter=True, color='white', edgecolor='gray', linewidth=1.5, edgecolor='gray', linewidth=1.5, alpha=0.8)<0x0A>ax.set_title('Rating regarding strength of legal rights index in Croatia')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.87 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]



















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:39<00:00,  4.98s/it]
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4380, 'y': 2980}, {'x': 4380, 'y': 3340}, {'x': 5380, 'y': 4210}, {'x': 4380, 'y': 2980}, {'x': 4380, 'y': 2980}, {'x': 5380, 'y': 2980}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4200}, {'x': 'Dog', 'y': 6900}, {'x': 'Nike', 'y': 4190}, {'x': 'Apple', 'y': 6300}, {'x': 'Male', 'y': 6900}, {'x': 'Rock', 'y': 6900}, {'x': 'Sedan', 'y': 4200}, {'x': 'USA', 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 47.61}, {'x': 'Apple', 'y': 47.61}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 23.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 47.61}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.62}, {'x': 'Red', 'y': 152.62}, {'x': 'USA', 'y': 152.62}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.12}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.12}, {'x': 'Apple', 'y': 3.91}, {'x': 'Nike', 'y': 12.12}, {'x': 'Red', 'y': 12.12}, {'x': 'USA', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255, 'y': 60.3}, {'x': 255, 'y': 60.3}, {'x': 55, 'y': 60.3}, {'x': 125, 'y': 57.6}, {'x': 150, 'y': 60.3}, {'x': 255, 'y': 13.3}, {'x': 255, 'y': 60.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6620, 'y': 42.56}, {'x': 8750, 'y': 112.56}, {'x': 6620, 'y': 112.56}, {'x': 8750, 'y': 364.56}, {'x': 6620, 'y': 42.56}, {'x': 8750, 'y': 364.56}, {'x': 6620, 'y': 112.56}, {'x': 8750, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200}, {'x': 1919, 'y': 16}, {'x': 1921, 'y': 16}, {'x': 1926, 'y': 16}, {'x': 1929, 'y': 34}, {'x': 1931, 'y': 34}, {'x': 1932, 'y': 16}, {'x': 1934, 'y': 34}, {'x': 1936, 'y': 16}, {'x': 1937, 'y': 34}, {'x': 1938, 'y': 34}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.14}, {'x': 1816, 'y': 28.52}, {'x': 1817, 'y': 79.14}, {'x': 1818, 'y': 79.14}, {'x': 1819, 'y': 79.14}, {'x': 1820, 'y': 80.2}, {'x': 1822, 'y': 8.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.14}, {'x': 1868, 'y': 253.14}, {'x': 1871, 'y': 108.14}, {'x': 1878, 'y': 268.14}, {'x': 1881, 'y': 268.14}, {'x': 1886, 'y': 268.14}, {'x': 1889, 'y': 268.14}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 600.01}, {'x': 1821, 'y': 128.01}, {'x': 1828, 'y': 26.01}, {'x': 1831, 'y': 26.01}, {'x': 1838, 'y': 128.01}, {'x': 1841, 'y': 108.01}, {'x': 1848, 'y': 310.01}, {'x': 1851, 'y': 310.01}, {'x': 1858, 'y': 148.01}, {'x': 1861, 'y': 150.01}, {'x': 1868, 'y': 148.01}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4500, 'y': 58.14}, {'x': 1100, 'y': 58.14}, {'x': 2200, 'y': 58.14}, {'x': 3000, 'y': 61.74}, {'x': 4500, 'y': 58.14}, {'x': 5500, 'y': 58.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1926, 'y': 2888}, {'x': 1929, 'y': 2888}, {'x': 1930, 'y': 2888}, {'x': 1932, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.11}, {'x': 1570, 'y': 42.11}, {'x': 1570, 'y': 38.11}, {'x': 1570, 'y': 42.11}, {'x': 1570, 'y': 38.11}, {'x': 1570, 'y': 38.11}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1465}, {'x': 'Nike', 'y': 1465}, {'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1806, 'y': 3626}, {'x': 1808, 'y': 3626}, {'x': 1812, 'y': 4916}, {'x': 1814, 'y': 5748}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 2000}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 2000}, {'x': 1847, 'y': 3400}, {'x': 1850, 'y': 2000}, {'x': 1855, 'y': 4900}, {'x': 1857, 'y': 3400}, {'x': 1860, 'y': 1900}, {'x': 1870, 'y': 1900}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Expent Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1080, 'y': 565.69}, {'x': 1080, 'y': 527.69}, {'x': 3000, 'y': 621.69}, {'x': 3000, 'y': 527.69}, {'x': 3000, 'y': 527.69}, {'x': 4000, 'y': 621.69}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|




















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:59<00:00,  5.95s/it]
[35m|[39m JSON to Vega conversion error rate: [31m95.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.91 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis $\per GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field': 'Year', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a line plot of the total unemployed youth population of Colombia<0x0A>ax.plot(unemployed_pop_col_col_col_list, unemployed_pop_col_col_list, color='#008888')<0x0A><0x0A># Set the title and labels<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Unemployed youth % of total labor force were %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %em
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) of Hitomonal Resources', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field': 'Annual freshwater withdrawals (%) of Hitomonal Resources', 'type': 'quantitative'}]}}, 'data': {'x': 'Year', 'y': 55.33}, {'x': 'field': 'Annual freshwater withdrawals (%) of Hitomonal Resources', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.plot(<0x0A>    'Year', 'Arable land (hectares) in Seychelles', <0x0A>    color='black', <0x0A>    linewidth=2,<0x0A>    marker='o',<0x0A>    markerfacecolor='black',<0x0A>    markeredgecolor='black',<0x0A>    markersize=10,<0x0A>    markeredgewidth=1,<0x0A>    markerfacecolor='black',<0x0A>    markeredgewidth=1,<0x0A>    markeredgecolor='black',<0x0A>    markeredgewidth=1,<0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption in Brazil as a percentage of production'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>g = grupo_bairro.plot(x='Year', y='Number of Days', kind='line', title='Time required to register a property in Sanos', color='#11A6E6', figsize=(25, 25))<0x0A>g.set_xlabel('Year')<0x0A>g.set_ylabel('Number of Days')<0x0A>g.set_xticklabels(['Year', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'field', 'y': 37.66}, {'x': 'variable': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the bar graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A># Plotting the bar graph<0x0A>g1 = sns.barplot(x='Year', y='Average Avg. Avg. Avg. US$', data=df_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_grenad_g
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m# Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the figure size<0x0A>plt.rcParams['figure.figsize'] = (25, 15)<0x0A><0x0A># Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the graph<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import os<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot a scatter plot for each category<0x0A><0x0A># Create a horizontal bar plot<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a horizontal bar plot<0x0A>scatter_plot = ax.scatter(df['Year'], df['Score ((thousands of thousand)/yr)'])<0x0A><0x0A># Add a title<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a title<0x0A>ax.set_ylabel('Score (thousands of thousand)')<0x0A><0x0A># Add a title<0x0A>ax.set_ylabel('Score (thousands of thousand)')<0x0A><0x0A># Display the plot<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size().reset_index()<0x0A>percentage_sr_lanka = percentage_sr_lanka.pivot(index='Year', columns='Country', values='Survived')<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by='Survived', ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.set_title('Percentage of babies born with low-Birthweight in Sri Lanka')<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_xticks([0, 20, 40, 60])<0x0A>ax.set_yticks([0, 20, 60, 70])<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 14.67}, {'x': 'field', 'y': 14.67}, {'x': 'field', 'y': 14.67}, {'x': 'field', 'y': 14.67}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atmospheric Air and Capital (less % of CMV)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atmospheric Air and Capital (less % of CMV)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m{'margin-top': {'x': {'x': {'y': {'x': {'x': {'y': {'x': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'y': {'x': {'y': {'y': {'x': {'y': {'y': {'x': {'y': {'y': {'y': {'y': {'y': {'y': }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C-10000)'}, 'type': {'field': 'quantitative'}}, 'type': {'field': 'quantitative'}}}} }<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>df_plot = df_clean.groupby(['Year']).mean()<0x0A>df_plot.plot(kind='scatter', x='Year', y='Strength index (C-10000)', ax=ax, color='green')<0x0A>ax.set_ylim([0, 10000])<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Strength index (C-10000)')<0x0A>ax.set_title('Rating regarding strength of legal rights index in Croatia')<0x0A>ax.grid(False)<0x0A><0x0A>fig.savefig('images/rating_strength_of_legal_rights_index.png')<0x0A>plt.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.91 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------




























model.safetensors: 100%|███████████████████████████████████████████████████████████████████████████████████████████| 1.13G/1.13G [00:53<00:00, 21.0MB/s]
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]



















 95%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:36<00:05,  5.60s/it]
[35m|[39m JSON to Vega conversion error rate: [31m10.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4386, 'y': 2980}, {'x': 4386, 'y': 2980}, {'x': 5320, 'y': 4210}, {'x': 4386, 'y': 2980}, {'x': 5320, 'y': 2980}, {'x': 4386, 'y': 2980}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4200}, {'x': 'Dog', 'y': 6900}, {'x': 'Nike', 'y': 4200}, {'x': 'Apple', 'y': 6300}, {'x': 'Male', 'y': 6900}, {'x': 'Rock', 'y': 6900}, {'x': 'Sedan', 'y': 4200}, {'x': 'USA', 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:40<00:00,  5.04s/it]
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 47.64}, {'x': 'Apple', 'y': 47.64}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 23.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 47.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.65}, {'x': 'Red', 'y': 152.65}, {'x': 'USA', 'y': 152.65}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.12}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.12}, {'x': 'Apple', 'y': 3.91}, {'x': 'Nike', 'y': 12.12}, {'x': 'Red', 'y': 12.12}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255, 'y': 60.2}, {'x': 255, 'y': 60.2}, {'x': 55, 'y': 60.2}, {'x': 155, 'y': 57.7}, {'x': 255, 'y': 60.2}, {'x': 255, 'y': 60.2}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6950, 'y': 42}, {'x': 8700, 'y': 112}, {'x': 6950, 'y': 112}, {'x': 8700, 'y': 364}, {'x': 6950, 'y': 42}, {'x': 8700, 'y': 112}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200}, {'x': 1919, 'y': 16}, {'x': 1921, 'y': 16}, {'x': 1926, 'y': 16}, {'x': 1929, 'y': 34}, {'x': 1931, 'y': 34}, {'x': 1932, 'y': 16}, {'x': 1934, 'y': 34}, {'x': 1936, 'y': 16}, {'x': 1937, 'y': 34}, {'x': 1938, 'y': 16}, {'x': 1940, 'y': 16}, {'x': 1941, 'y': 16}, {'x': 1942, 'y': 16}, {'x': 1944, 'y': 16}, {'x': 1
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.69}, {'x': 1816, 'y': 28.54}, {'x': 1817, 'y': 79.69}, {'x': 1818, 'y': 79.69}, {'x': 1819, 'y': 80.02}, {'x': 1820, 'y': 80.02}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.14}, {'x': 1868, 'y': 253.14}, {'x': 1871, 'y': 108.14}, {'x': 1878, 'y': 268.44}, {'x': 1881, 'y': 268.44}, {'x': 1886, 'y': 268.44}, {'x': 1889, 'y': 268.44}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 24.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.1
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.14}, {'x': 1821, 'y': 128.74}, {'x': 1828, 'y': 26.64}, {'x': 1831, 'y': 26.64}, {'x': 1838, 'y': 128.74}, {'x': 1841, 'y': 108.64}, {'x': 1847, 'y': 311.14}, {'x': 1854, 'y': 311.14}, {'x': 1859, 'y': 148.64}, {'x': 1864, 'y': 150.08}, {'x': 1869, 'y': 148.08}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4500, 'y': 58.14}, {'x': 1100, 'y': 58.14}, {'x': 2200, 'y': 78.24}, {'x': 3000, 'y': 61.38}, {'x': 4500, 'y': 58.14}, {'x': 5500, 'y': 58.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1926, 'y': 2888}, {'x': 1929, 'y': 2888}, {'x': 1930, 'y': 2888}, {'x': 1932, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 37.54}, {'x': 1570, 'y': 43.54}, {'x': 1570, 'y': 365.54}, {'x': 1570, 'y': 37.54}, {'x': 1570, 'y': 43.54}, {'x': 1570, 'y': 365.54}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1465}, {'x': 'Nike', 'y': 1465}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1805, 'y': 3626}, {'x': 1806, 'y': 3812}, {'x': 1807, 'y': 3626}, {'x': 1808, 'y': 3626}, {'x': 1809, 'y': 4266}, {'x': 1810, 'y': 4966}, {'x': 1812, 'y': 5850}, {'x': 1813, 'y': 5850}, {'x': 1814, 'y': 5850}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 1900}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 1900}, {'x': 1847, 'y': 3400}, {'x': 1850, 'y': 2000}, {'x': 1857, 'y': 4900}, {'x': 1860, 'y': 1900}, {'x': 1870, 'y': 1900}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Expent Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1080, 'y': 565.69}, {'x': 1080, 'y': 527.69}, {'x': 3000, 'y': 622.69}, {'x': 3000, 'y': 527.69}, {'x': 3000, 'y': 527.69}, {'x': 4000, 'y': 622.69}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|



















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:55<00:00,  5.78s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis $\per GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field': 'Year', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a line plot of the total unemployed youth population of Colombia<0x0A>ax.plot(unemployed_pop_col_col_col_list, unemployed_pop_col_col_list, color='#008888')<0x0A><0x0A># Set the title and labels<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Unemployed youth % of total labor force were %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %em
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (% of trillemmonial households)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field': 'Annual freshwater withdrawals (% of trillemmonial households)', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(30, 30))<0x0A><0x0A>sns.set(style="whitegrid")<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True, right=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption in Brazil as a percentage of production'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>g = grupo_bairro.plot(x='Year', y='Number of Days', kind='line', title='Time required to register a property in Sanos', color='#11A6E6', figsize=(25, 25))<0x0A>g.set_xlabel('Year')<0x0A>g.set_ylabel('Number of Days')<0x0A><0x0A>g = grupo_bairro.sort_values('Year', ascending=False)<0x0A>g = grupo_bairro.plot(x='Year', y='Number of Days', kind='line', color='#11A6E6', figsize=(25, 25))<0x0A>g.set_xlabel('Year')<0x0A>g.set_ylabel('Number of Days')<0x0A>g.set_title('Time required to register a property in Sanos')<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'field', 'y': 37.66}, {'x': 'variable': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the bar graph<0x0A><0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=df, kind="bar", palette="ch:.25", ci=None, )<0x0A>g.fig.set_size_inches(20, 20)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.05, fontsize=16)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3, hspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m# Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the figure size<0x0A>plt.rcParams['figure.figsize'] = (25, 15)<0x0A><0x0A># Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the graph<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import os<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((demand for housing) & (demand for housing)), 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 100}, {'x': 'field', 'y': 100}, {'x': 'field', 'y': 100}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size().reset_index()<0x0A>percentage_sr_lanka = percentage_sr_lanka.pivot(index='Year', columns='Country', values='Survived')<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by='Survived', ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.scatter(percentage_sr_lanka['Year'], percentage_sr_lanka['Survived'], color='purple')<0x0A>ax.set_title('Percentage of babies born with low-Birthweight in Sri Lanka')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xticklabels([''] + percentage_sr_lanka['Country'].unique(), rotation=90)<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.set_ylim(0, 23)<0x0A>ax.set_xticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_xticks([0, 1
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable': 'Year', 'type': 'quantitative'}]}}, 'data': {'x': 'variable': 'Value', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable': 'Value', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable': 'Value', 'y': 7.5}, {'x': 'variable': 'Value', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atmospheric Air and Capital (less % of CMV)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atmospheric Air and Capital (less % of CMV)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m{'margin-top': {'x': {'x': {'y': {'x': {'x': {'y': {'x': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'y': {'x': {'y': {'y': {'x': {'y': {'y': {'x': {'y': {'y': {'y': {'y': {'y': }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C: {'value': {'value': {'type': 'quantitative'}}, 'type': 'quantitative'}}}}}}}}}}}}<0x0A>       }: {'mark': {'x': {'field': 'Year', 'type': 'quantitative'}}}}}}}}}}<0x0A>       }: {'x': {'field': 'Year', 'type': 'quantitative'}}}}}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]



















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:31<00:00,  4.56s/it]
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4380, 'y': 2960}, {'x': 5320, 'y': 4210}, {'x': 1280, 'y': 838}, {'x': 4380, 'y': 2960}, {'x': 4380, 'y': 2960}, {'x': 5320, 'y': 4210}, {'x': 4380, 'y': 2960}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4200}, {'x': 'Dog', 'y': 6900}, {'x': 'Nike', 'y': 4200}, {'x': 'Apple', 'y': 6300}, {'x': 'Male', 'y': 7080}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4200}, {'x': 'USA', 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 47.64}, {'x': 'Apple', 'y': 47.64}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 23.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 47.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.65}, {'x': 'Red', 'y': 152.65}, {'x': 'USA', 'y': 152.65}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.12}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.12}, {'x': 'Apple', 'y': 3.91}, {'x': 'Nike', 'y': 12.12}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 13.3}, {'x': 55.3, 'y': 60.3}, {'x': 155.3, 'y': 57.6}, {'x': 255.3, 'y': 60.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6980, 'y': 42.56}, {'x': 8750, 'y': 112.56}, {'x': 6980, 'y': 364.56}, {'x': 8750, 'y': 364.56}, {'x': 6980, 'y': 42.56}, {'x': 8750, 'y': 112.56}, {'x': 6980, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200.03}, {'x': 1920, 'y': 16.56}, {'x': 1925, 'y': 16.56}, {'x': 1930, 'y': 35.01}, {'x': 1931, 'y': 35.01}, {'x': 1932, 'y': 16.56}, {'x': 1934, 'y': 35.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.54}, {'x': 1817, 'y': 79.99}, {'x': 1818, 'y': 80.24}, {'x': 1820, 'y': 8.24}, {'x': 1822, 'y': 8.24}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.14}, {'x': 1868, 'y': 253.14}, {'x': 1871, 'y': 108.14}, {'x': 1878, 'y': 268.44}, {'x': 1881, 'y': 268.44}, {'x': 1886, 'y': 268.44}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788.11, 'y': 63.64}, {'x': 687.11, 'y': 56.14}, {'x': 241.48, 'y': 23.74}, {'x': 577.43, 'y': 63.64}, {'x': 687.11, 'y': 56.14}, {'x': 687.11, 'y': 63.64}, {'x': 687.11, 'y': 23.74}, {'x': 687.11, 'y': 63.64}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.14}, {'x': 1821, 'y': 128.74}, {'x': 1828, 'y': 26.64}, {'x': 1831, 'y': 26.64}, {'x': 1838, 'y': 128.74}, {'x': 1841, 'y': 108.64}, {'x': 1847, 'y': 311.44}, {'x': 1854, 'y': 311.44}, {'x': 1859, 'y': 148.64}, {'x': 1865, 'y': 150.08}, {'x': 1869, 'y': 148.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4500, 'y': 58.14}, {'x': 1100, 'y': 58.14}, {'x': 2200, 'y': 78.24}, {'x': 3000, 'y': 61.38}, {'x': 4500, 'y': 58.14}, {'x': 5500, 'y': 58.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1926, 'y': 2888}, {'x': 1929, 'y': 2888}, {'x': 1930, 'y': 2888}, {'x': 1932, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.14}, {'x': 1570, 'y': 42.14}, {'x': 1570, 'y': 365.64}, {'x': 1570, 'y': 42.14}, {'x': 1570, 'y': 365.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1805, 'y': 3626}, {'x': 1806, 'y': 3812}, {'x': 1807, 'y': 3626}, {'x': 1808, 'y': 3626}, {'x': 1809, 'y': 4266}, {'x': 1810, 'y': 4966}, {'x': 1812, 'y': 5750}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 1900}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 1900}, {'x': 1847, 'y': 3400}, {'x': 1850, 'y': 1900}, {'x': 1855, 'y': 4900}, {'x': 1860, 'y': 1900}, {'x': 1870, 'y': 1900}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Expent Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1230, 'y': 565.69}, {'x': 328, 'y': 624.1}, {'x': 328, 'y': 527.6}, {'x': 328, 'y': 527.6}, {'x': 328, 'y': 527.6}, {'x': 328, 'y': 527.6}, {'x': 328, 'y': 527.6}, {'x': 328, 'y': 527.6}, {'x': 328, 'y': 527.6}, {'x': 328, 'y': 527.6}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|



















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:09<00:00,  6.49s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis $\per GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': {'x': 'field', 'y': 0.01}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': {'x': 'field', 'y': 0.01}, {'x': 'field': 'Value', 'y': 0.01}, {'x': 'field': 'Value', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a bar plot of the total unemployed youth population of Colombia<0x0A>ax.bar(x=col_df.index, height=col_df['Total unemployed youth population of Colombia'])<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Unemployed youth % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (% of trillemmonial dispersions)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field': 'Annual freshwater withdrawals (% of trillemmonial dispersions)', 'y': 55.33}, {'x': 'field': 'Year', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.set_style("whitegrid")<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption in Brazil as a percentage of production'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'field', 'y': 37.66}, {'x': 'variable': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(g.get_xticklabels(), rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(g.get_xticklabels(), rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Red
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m# Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the figure size<0x0A>plt.rcParams['figure.figsize'] = (25, 15)<0x0A><0x0A># Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the graph<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import os<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/Rockhopper)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 100}, {'x': 'field', 'y': 100}, {'x': 'variable': 'Year', 'type': 'quantitative'}]}}, 'data': {'x': 'variable': 'Value', 'y': 100}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size().reset_index()<0x0A>percentage_sr_lanka = percentage_sr_lanka.pivot(index='Year', columns='Country', values='Survived')<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by='Survived', ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'data': {'x': 'Year', 'type': 'quantitative'}]}}, 'y': {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'y': 7.5}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atmospheric Air and Capital (less % of CMV)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atmospheric Air and Capital (less % of CMV)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m{'margin-top': {'x': {'x': {'y': {'x': {'x': {'y': {'x': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'y': {'x': {'y': {'y': {'x': {'y': {'y': {'x': {'y': {'y': {'y': {'y': }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]




















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:45<00:00,  5.25s/it]
[35m|[39m JSON to Vega conversion error rate: [31m5.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4380, 'y': 2960}, {'x': 5320, 'y': 4210}, {'x': 1280, 'y': 838}, {'x': 4380, 'y': 2960}, {'x': 4380, 'y': 2960}, {'x': 5320, 'y': 4210}, {'x': 4380, 'y': 2960}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 7080}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 47.64}, {'x': 'Apple', 'y': 47.64}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 23.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 47.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.65}, {'x': 'Red', 'y': 152.65}, {'x': 'USA', 'y': 152.65}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.12}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.12}, {'x': 'Apple', 'y': 3.91}, {'x': 'Nike', 'y': 12.12}, {'x': 'Red', 'y': 12.12}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 13.3}, {'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 60.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7556, 'y': 364.56}, {'x': 6756, 'y': 41.56}, {'x': 8756, 'y': 112.11}, {'x': 6756, 'y': 364.56}, {'x': 8756, 'y': 364.56}, {'x': 6756, 'y': 112.11}, {'x': 8756, 'y': 364.56}, {'x': 6756, 'y': 41.56}, {'x': 6756, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200}, {'x': 1919, 'y': 18}, {'x': 1921, 'y': 16}, {'x': 1926, 'y': 16}, {'x': 1929, 'y': 36}, {'x': 1931, 'y': 36}, {'x': 1932, 'y': 16}, {'x': 1933, 'y': 36}, {'x': 1934, 'y': 16}, {'x': 1936, 'y': 16}, {'x': 1937, 'y': 36}, {'x': 1938, 'y': 16}, {'x': 1939, 'y': 36}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.54}, {'x': 1817, 'y': 79.99}, {'x': 1818, 'y': 80.2}, {'x': 1820, 'y': 8.5}, {'x': 1822, 'y': 8.5}, {'x': 1823, 'y': 8.5}, {'x': 1824, 'y': 28.54}, {'x': 1825, 'y': 8.5}, {'x': 1826, 'y': 28.54}, {'x': 1827, 'y': 8.5}, {'x': 1829, 'y': 8.5}, {'x': 1830, 'y': 28.5}, {'x': 1831, 'y': 
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.14}, {'x': 1866, 'y': 253.14}, {'x': 1870, 'y': 108.14}, {'x': 1876, 'y': 253.14}, {'x': 1880, 'y': 269.44}, {'x': 1886, 'y': 269.44}, {'x': 1890, 'y': 269.44}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788.11, 'y': 63.64}, {'x': 686.44, 'y': 56.14}, {'x': 686.44, 'y': 63.64}, {'x': 241.48, 'y': 23.78}, {'x': 577.44, 'y': 63.64}, {'x': 686.44, 'y': 56.14}, {'x': 686.44, 'y': 63.64}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.01}, {'x': 1821, 'y': 135.69}, {'x': 1828, 'y': 26.44}, {'x': 1834, 'y': 26.44}, {'x': 1839, 'y': 108.64}, {'x': 1846, 'y': 311.14}, {'x': 1852, 'y': 311.14}, {'x': 1859, 'y': 148.01}, {'x': 1865, 'y': 150.01}, {'x': 1869, 'y': 148.01}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 55.01}, {'x': 4488, 'y': 61.53}, {'x': 3288, 'y': 58.14}, {'x': 1288, 'y': 55.01}, {'x': 2288, 'y': 78.64}, {'x': 3288, 'y': 61.53}, {'x': 4488, 'y': 55.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1926, 'y': 2888}, {'x': 1929, 'y': 2888}, {'x': 1930, 'y': 2888}, {'x': 1932, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.14}, {'x': 1570, 'y': 42.14}, {'x': 1570, 'y': 365.6}, {'x': 1570, 'y': 42.14}, {'x': 1570, 'y': 365.6}, {'x': 1570, 'y': 365.6}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1805, 'y': 3620}, {'x': 1806, 'y': 3812}, {'x': 1807, 'y': 3620}, {'x': 1808, 'y': 3620}, {'x': 1809, 'y': 4266}, {'x': 1810, 'y': 4960}, {'x': 1812, 'y': 5750}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 1900}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 1900}, {'x': 1847, 'y': 3400}, {'x': 1850, 'y': 4900}, {'x': 1857, 'y': 3400}, {'x': 1860, 'y': 1900}, {'x': 1870, 'y': 1900}, {'x': 1875, 'y': 3400}, {'x': 1880, 'y': 1900}, {'x': 1885, 'y': 4900}, {'x': 1890, 'y': 1900}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Expent Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1230, 'y': 530}, {'x': 3200, 'y': 625}, {'x': 3200, 'y': 530}, {'x': 1230, 'y': 565}, {'x': 3200, 'y': 625}, {'x': 4200, 'y': 625}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------



















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:05<00:00,  6.63s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a bar plot of the total unemployed youth population of Colombia<0x0A>ax.bar(x=df_col_unemployed['Year'], height=df_col_unemployed['Unemployed Youth'], color='skyblue')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Unemployed youth population of Colombia')<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A><0x0A># Set the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the title<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the title<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the title<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (% of trillemmonial dispersions)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field': 'Annual freshwater withdrawals (% of trillemmonial dispersions)', 'y': 55.33}, {'x': 'field': 'Year', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.set_style("whitegrid")<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption in Brazil as a percentage of production'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>g = grupo_bairro.plot(x='Year', y='Number of Days', kind='line', title='Time required to register a property in Sanos', color='#11A6E6', figsize=(20,15))<0x0A>g.set_xlabel('Year')<0x0A>g.set_ylabel('Number of Days')<0x0A><0x0A>g = grupo_bairro.sort_values('Year', ascending=False)<0x0A>g = grupo_bairro.plot(x='Year', y='Number of Days', kind='line', color='#11A6E6', figsize=(20,15))<0x0A>g.set_xlabel('Year')<0x0A>g.set_ylabel('Number of Days')<0x0A>g.set_title('Time required to register a property in Sanos')<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'field', 'y': 37.66}, {'x': 'variable': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(g.get_xticklabels(), rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(g.get_xticklabels(), rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Red
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_count = df.groupby(['Year', 'Country']).size()<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import os<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/Rockhopper)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 100}, {'x': 'field', 'y': 100}, {'x': 'variable': 'Year', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size().reset_index()<0x0A>percentage_sr_lanka = percentage_sr_lanka.pivot(index='Year', columns='Country', values='Survived')<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by='Survived', ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'data': {'x': 'Year', 'type': 'quantitative'}}, 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'y': 7.5}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'y': 7.5}, {'x': 'variable': 'Percentage of children
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atmospheric Air and Capital (less % of CMV)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atmospheric Air and Capital (less % of CMV)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m{'margin-top': {'x': {'x': {'y': {'x': {'x': {'y': {'x': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'y': {'x': {'y': {'y': {'x': {'y': {'y': {'x': {'y': {'y': {'y': }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|

100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:05<00:00,  6.30s/it]
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]



















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:43<00:00,  5.16s/it]
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m10.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4380, 'y': 2960}, {'x': 5320, 'y': 4210}, {'x': 1280, 'y': 838}, {'x': 4380, 'y': 2960}, {'x': 4380, 'y': 2960}, {'x': 5320, 'y': 4210}, {'x': 4380, 'y': 2960}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 7080}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 47.64}, {'x': 'Apple', 'y': 47.64}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 23.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 47.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.65}, {'x': 'Red', 'y': 152.65}, {'x': 'USA', 'y': 152.65}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.07}, {'x': 'USA', 'y': 8.38}, {'x': 'Dog', 'y': 8.38}, {'x': 'Nike', 'y': 12.07}, {'x': 'Apple', 'y': 3.86}, {'x': 'Nike', 'y': 12.07}, {'x': 'Red', 'y': 12.07}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.8}, {'x': 255.3, 'y': 13.3}, {'x': 255.3, 'y': 60.8}, {'x': 255.3, 'y': 60.8}, {'x': 255.3, 'y': 60.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6950, 'y': 42}, {'x': 8700, 'y': 112}, {'x': 6950, 'y': 364}, {'x': 2250, 'y': 364}, {'x': 6950, 'y': 364}, {'x': 8700, 'y': 364}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200}, {'x': 1920, 'y': 16}, {'x': 1925, 'y': 16}, {'x': 1930, 'y': 36}, {'x': 1935, 'y': 16}, {'x': 1940, 'y': 16}, {'x': 1945, 'y': 16}, {'x': 1950, 'y': 36}, {'x': 1956, 'y': 16}, {'x': 1960, 'y': 16}, {'x': 1965, 'y': 16}, {'x': 1970, 'y': 16}, {'x': 1975, 'y': 16}, {'x': 1980, 'y': 16}, {'x': 1985, 'y': 16}, {'x': 1
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.5}, {'x': 1817, 'y': 79.99}, {'x': 1818, 'y': 80.2}, {'x': 1820, 'y': 8.5}, {'x': 1822, 'y': 8.5}, {'x': 1823, 'y': 8.5}, {'x': 1824, 'y': 28.5}, {'x': 1825, 'y': 8.5}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.1}, {'x': 1866, 'y': 253.1}, {'x': 1870, 'y': 108.1}, {'x': 1876, 'y': 268.4}, {'x': 1880, 'y': 268.4}, {'x': 1886, 'y': 268.4}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788.11, 'y': 63.64}, {'x': 686.44, 'y': 56.14}, {'x': 686.44, 'y': 63.64}, {'x': 686.44, 'y': 24.1}, {'x': 686.44, 'y': 16.14}, {'x': 686.44, 'y': 52.14}, {'x': 686.44, 'y': 63.64}, {'x': 686.44, 'y': 56.14}, {'x': 686.44, 'y': 63.64}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.14}, {'x': 1821, 'y': 135.64}, {'x': 1828, 'y': 26.84}, {'x': 1834, 'y': 26.84}, {'x': 1839, 'y': 108.14}, {'x': 1846, 'y': 311.14}, {'x': 1854, 'y': 311.14}, {'x': 1859, 'y': 148.14}, {'x': 1865, 'y': 150.08}, {'x': 1869, 'y': 148.14}, {'x': 1871, 'y': 584.14}, {'x': 1877, 'y': 584.14}, {'x': 1877, 'y': 584.14}, {
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 61.53}, {'x': 4488, 'y': 55.03}, {'x': 3288, 'y': 61.53}, {'x': 1288, 'y': 55.03}, {'x': 2288, 'y': 78.64}, {'x': 3288, 'y': 61.53}, {'x': 4488, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1926, 'y': 2888}, {'x': 1929, 'y': 2888}, {'x': 1933, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.1}, {'x': 1570, 'y': 40.1}, {'x': 1570, 'y': 365.8}, {'x': 1570, 'y': 40.1}, {'x': 1570, 'y': 365.8}, {'x': 1570, 'y': 365.8}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4276}, {'x': 1804, 'y': 4086}, {'x': 1805, 'y': 3618}, {'x': 1806, 'y': 3812}, {'x': 1807, 'y': 3618}, {'x': 1808, 'y': 3618}, {'x': 1810, 'y': 4960}, {'x': 1812, 'y': 5758}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 1900}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 1900}, {'x': 1850, 'y': 3400}, {'x': 1855, 'y': 4900}, {'x': 1860, 'y': 1900}, {'x': 1870, 'y': 1900}, {'x': 1875, 'y': 3400}, {'x': 1880, 'y': 1900}, {'x': 1885, 'y': 1900}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Expent Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1886, 'y': 565.69}, {'x': 3286, 'y': 624.1}, {'x': 3286, 'y': 527.6}, {'x': 3286, 'y': 527.6}, {'x': 3286, 'y': 527.6}, {'x': 3286, 'y': 527.6}, {'x': 3286, 'y': 527.6}, {'x': 3286, 'y': 527.6}, {'x': 3286, 'y': 527.6}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|



















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:05<00:00,  6.30s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_unemployed['Year'], df_unemployed['Unemployed'], color='#008888')<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_unemployed['Year'], df_unemployed['Unemployed'], color='#008888')<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_unemployed['Year'], df_unemployed['Unemployed'], color='#008888')<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_unemployed['Year'], df_unemployed['Unemployed'], color='#008888')<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_unemployed['Year'], df_unemployed['Unemployed'], color='#008888')<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_unemployed['Year'], df_unemployed['Unemployed'], color='#008888')<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_unemployed['Year'], df_unemployed['Unemployed'], color='#008888')<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_unemployed['Year'], df_unemployed['Unemployed'], color='#008888')<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_unemployed['Year'], df_unemployed['Unemployed'], color='#008888')<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_unemployed['Year'],
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (% of trillemmonial dispersions)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.14}, {'x': 'field': 'Annual freshwater withdrawals (% of trillemmonial dispersions)', 'y': 55.14}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 55.14}, {'x': 'field': 'Year', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(30, 30))<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df['Year'], df['fertilizer consumption'])<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df['Year'], df['fertilizer consumption'])<0x0A><0x0A># Adding a title<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A># Labelling the x-axis<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Labelling the y-axis<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Displaying the plot<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>g = grupo_bairro.plot(x='Year', y='Number of Days', kind='line', title='Time required to register a property in Sanos', color='#11A6E6', figsize=(20,15))<0x0A>g.set_xlabel('Year')<0x0A>g.set_ylabel('Number of Days')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'field', 'y': 37.66}, {'x': 'variable': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(g.get_xticklabels(), rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(g.get_xticklabels(), rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Red
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, x, y, ylabel, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_count = df.groupby(['Year', 'Country']).size()<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import os<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/rockhopper)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 100}, {'x': 'field', 'y': 100}, {'x': 'variable': 'Year', 'type': 'quantitative'}]}}, 'data': {'x': 'variable': 'Value', 'y': 100}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size().reset_index()<0x0A>percentage_sr_lanka = percentage_sr_lanka.pivot(index='Year', columns='Country', values='Survived')<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by='Survived', ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(18, 20))<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'data': {'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'y': 7.5}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'y': 7.5}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'y': 7.5}, {'x': 'variable
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atmospheric Air and Capital (set % of CWD)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atmospheric Air and Capital (set % of CWD)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m{'margin-top': {'x': {'x': {'y': {'x': {'x': {'y': {'x': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'x': {'y': {'y': {'x': {'y': {'y': {'x': {'y': {'y': {'x': {'y': {'y': {'y': {'y': }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&}};&
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 14 [32m[1m | Loss :[39m[22m 1.8322248458862305



















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:32<00:00,  4.63s/it]
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m5.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5380, 'y': 4210}, {'x': 1280, 'y': 838}, {'x': 4880, 'y': 2960}, {'x': 4880, 'y': 2960}, {'x': 5380, 'y': 4210}, {'x': 2280, 'y': 2110}, {'x': 4880, 'y': 2110}, {'x': 5380, 'y': 4210}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 7080}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 47.64}, {'x': 'Apple', 'y': 47.64}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 23.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 47.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.65}, {'x': 'Red', 'y': 152.65}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.07}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.07}, {'x': 'Apple', 'y': 3.86}, {'x': 'Nike', 'y': 12.07}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 13.3}, {'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 60.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 364.56}, {'x': 6750, 'y': 41.56}, {'x': 8750, 'y': 112.56}, {'x': 6750, 'y': 364.56}, {'x': 2250, 'y': 364.56}, {'x': 2250, 'y': 364.56}, {'x': 6750, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200}, {'x': 1920, 'y': 16}, {'x': 1925, 'y': 16}, {'x': 1930, 'y': 36}, {'x': 1935, 'y': 16}, {'x': 1940, 'y': 16}, {'x': 1945, 'y': 16}, {'x': 1950, 'y': 16}, {'x': 1956, 'y': 16}, {'x': 1960, 'y': 16}, {'x': 1965, 'y': 16}, {'x': 1970, 'y': 36}, {'x': 1975, 'y': 16}, {'x': 1980, 'y': 16}, {'x': 1985, 'y': 16}, {'x': 1
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.86}, {'x': 1816, 'y': 28.52}, {'x': 1817, 'y': 79.86}, {'x': 1818, 'y': 80.02}, {'x': 1820, 'y': 8.52}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.1}, {'x': 1866, 'y': 253.1}, {'x': 1870, 'y': 110.8}, {'x': 1876, 'y': 268.6}, {'x': 1880, 'y': 268.6}, {'x': 1886, 'y': 268.6}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788.11, 'y': 63.64}, {'x': 676.44, 'y': 56.14}, {'x': 676.44, 'y': 63.64}, {'x': 241.48, 'y': 23.88}, {'x': 576.44, 'y': 63.64}, {'x': 676.44, 'y': 56.14}, {'x': 676.44, 'y': 63.64}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.01}, {'x': 1821, 'y': 135.64}, {'x': 1828, 'y': 26.84}, {'x': 1836, 'y': 26.84}, {'x': 1840, 'y': 108.64}, {'x': 1848, 'y': 311.14}, {'x': 1854, 'y': 311.14}, {'x': 1860, 'y': 148.64}, {'x': 1868, 'y': 150.01}, {'x': 1870, 'y': 584.01}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 61.53}, {'x': 3248, 'y': 55.03}, {'x': 1488, 'y': 55.03}, {'x': 2488, 'y': 78.64}, {'x': 3248, 'y': 61.53}, {'x': 4488, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1924, 'y': 2888}, {'x': 1927, 'y': 2888}, {'x': 1929, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.1}, {'x': 1570, 'y': 40.1}, {'x': 2200, 'y': 365.8}, {'x': 1570, 'y': 365.8}, {'x': 1570, 'y': 75.8}, {'x': 1570, 'y': 38.1}, {'x': 2200, 'y': 365.8}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1804, 'y': 4086}, {'x': 1806, 'y': 3618}, {'x': 1808, 'y': 3618}, {'x': 1812, 'y': 4914}, {'x': 1814, 'y': 5760}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 1900}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 4900}, {'x': 1850, 'y': 1900}, {'x': 1860, 'y': 3400}, {'x': 1870, 'y': 1900}, {'x': 1880, 'y': 1900}, {'x': 1890, 'y': 1900}, {'x': 1895, 'y': 3400}, {'x': 1897, 'y': 4900}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Expent Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1880, 'y': 565.69}, {'x': 3280, 'y': 624.1}, {'x': 3280, 'y': 527.6}, {'x': 3280, 'y': 527.6}, {'x': 3280, 'y': 527.6}, {'x': 3280, 'y': 527.6}, {'x': 3280, 'y': 527.6}, {'x': 3280, 'y': 527.6}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|




















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:54<00:00,  5.72s/it]
[35m|[39m JSON to Vega conversion error rate: [31m90.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.76 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_unemployed['Year'], df_unemployed['Unemployed'], color='#006688')<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_unemployed['Year'], df_unemployed['Unemployed'], color='#006688')<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_unemployed['Year'], df_unemployed['Unemployed'], color='#006688')<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_unemployed['Year'], df_unemployed['Unemployed'], color='#006688')<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_unemployed['Year'], df_unemployed['Unemployed'], color='#006688')<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_unemployed['Year'], df_unemployed['Unemployed'], color='#006688')<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_unemployed['Year'], df_unemployed['Unemployed'], color='#006688')<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_unemployed['Year'], df_unemployed['Unemployed'], color='#006688')<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_unemployed['Year'], df_unemployed['Unemployed'], color='#006688')<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_unemployed['Year'],
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (% of trillemmonal discharges)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.2}, {'x': 'field', 'y': 30.2}, {'x': 'variable': 'Value', 'type': 'quantitative'}}, 'data': {'x': 'field', 'y': 55.2}, {'x': 'variable': 'Value', 'y': 30.2}, {'x': 'field', 'y': 55.2}, {'x': 'variable': 'Value', 'y': 30.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(30, 30))<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df['Year'], df['fertilizer consumption'])<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df['Year'], df['fertilizer consumption'])<0x0A><0x0A># Adding a title<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A># Labelling the x-axis<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Labelling the y-axis<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Displaying the plot<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>g = grupo_bairro.plot(x='Year', y='Number of Days', kind='line', title='Time required to register a property in Sanos', color='#15A6E6', figsize=(20, 20))<0x0A>g.set_xlabel('Year')<0x0A>g.set_ylabel('Number of Days')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 14.66}, {'x': 'field', 'y': 37.66}, {'x': 'variable', 'y': 47.66}, {'x': 'field', 'y': 14.66}, {'x': 'variable', 'y': 14.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(g.get_xticklabels(), rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(g.get_xticklabels(), rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sn
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, x, y, ylabel, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_df = grupo_df.sort_values('Year', ascending=False)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import os<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/rockhopper)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 100}, {'x': 'field', 'y': 100}, {'x': 'variable', 'type': 'quantitative'}}, 'data': {'x': 'variable', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size().reset_index()<0x0A>percentage_sr_lanka = percentage_sr_lanka.pivot(index='Year', columns='Country', values='Survived')<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by='Survived', ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(18, 20))<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'data': {'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atmospheric Air and Capital (less % of CMV)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atmospheric Air and Capital (less % of CMV)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.76 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]



















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:30<00:00,  4.50s/it]
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m5.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4380, 'y': 2960}, {'x': 5320, 'y': 4210}, {'x': 1280, 'y': 838}, {'x': 4380, 'y': 2960}, {'x': 4380, 'y': 2960}, {'x': 5320, 'y': 4210}, {'x': 4380, 'y': 2960}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 708}, {'x': 'Rock', 'y': 708}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 47.64}, {'x': 'Apple', 'y': 47.64}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 23.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 47.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.42}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.07}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.07}, {'x': 'Apple', 'y': 3.86}, {'x': 'Nike', 'y': 12.07}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 13.3}, {'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 60.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 364.56}, {'x': 6750, 'y': 41.56}, {'x': 8750, 'y': 112.56}, {'x': 6750, 'y': 364.56}, {'x': 2250, 'y': 364.56}, {'x': 2250, 'y': 364.56}, {'x': 6750, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200}, {'x': 1920, 'y': 16}, {'x': 1925, 'y': 16}, {'x': 1930, 'y': 36}, {'x': 1935, 'y': 16}, {'x': 1940, 'y': 16}, {'x': 1945, 'y': 16}, {'x': 1950, 'y': 16}, {'x': 1956, 'y': 16}, {'x': 1959, 'y': 36}, {'x': 1960, 'y': 16}, {'x': 1965, 'y': 16}, {'x': 1970, 'y': 16}, {'x': 1975, 'y': 16}, {'x': 1975, 'y': 16}, {'x': 1
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.98}, {'x': 1816, 'y': 28.52}, {'x': 1817, 'y': 69.98}, {'x': 1818, 'y': 79.98}, {'x': 1820, 'y': 80.2}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 252.56}, {'x': 1866, 'y': 252.56}, {'x': 1870, 'y': 110.66}, {'x': 1876, 'y': 268.56}, {'x': 1879, 'y': 268.56}, {'x': 1882, 'y': 268.56}, {'x': 1889, 'y': 268.56}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 63.53}, {'x': 676, 'y': 24.12}, {'x': 676, 'y': 56.12}, {'x': 712, 'y': 63.53}, {'x': 712, 'y': 63.53}, {'x': 676, 'y': 23.88}, {'x': 712, 'y': 63.53}, {'x': 712, 'y': 63.53}, {'x': 712, 'y': 63.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.01}, {'x': 1821, 'y': 139.69}, {'x': 1828, 'y': 26.44}, {'x': 1835, 'y': 26.44}, {'x': 1841, 'y': 108.64}, {'x': 1849, 'y': 311.44}, {'x': 1855, 'y': 311.44}, {'x': 1861, 'y': 148.01}, {'x': 1867, 'y': 150.01}, {'x': 1871, 'y': 584.01}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 61.53}, {'x': 3248, 'y': 55.03}, {'x': 1488, 'y': 55.03}, {'x': 2488, 'y': 78.64}, {'x': 3248, 'y': 61.53}, {'x': 4488, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1924, 'y': 2888}, {'x': 1927, 'y': 2888}, {'x': 1929, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 37.54}, {'x': 1570, 'y': 40.14}, {'x': 1570, 'y': 365.84}, {'x': 1570, 'y': 40.14}, {'x': 1570, 'y': 365.84}, {'x': 1570, 'y': 365.84}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1805, 'y': 3812}, {'x': 1806, 'y': 3618}, {'x': 1807, 'y': 3618}, {'x': 1808, 'y': 3618}, {'x': 1810, 'y': 4960}, {'x': 1812, 'y': 5758}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 1970}, {'x': 1835, 'y': 1970}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 1970}, {'x': 1850, 'y': 3400}, {'x': 1855, 'y': 4880}, {'x': 1860, 'y': 1970}, {'x': 1870, 'y': 1970}, {'x': 1880, 'y': 1970}, {'x': 1885, 'y': 1970}, {'x': 1890, 'y': 1970}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Expent Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1230, 'y': 530}, {'x': 3200, 'y': 625}, {'x': 3200, 'y': 530}, {'x': 1230, 'y': 565}, {'x': 3200, 'y': 625}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|




















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:42<00:00,  5.13s/it]
[35m|[39m JSON to Vega conversion error rate: [31m90.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.75 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31mCountry_Country_plot(df, 'Total unemployed youth population of Colombia', 'Total unemployed youth population of Colombia', 'Total unemployed youth population of Colombia')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmial Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field': 'Annual freshwater withdrawals (%) (% of Idhemmial Resources)', 'type': 'quantitative'}}, 'data': {'x': 'Year', 'y': 30.33}, {'x': 'field': 'Annual freshwater withdrawals (%) (% of Idhemmial Resources)', 'y': 55.33}, {'x': 'field': 'Year', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.barplot(x='Year', y='Average land (hectares)', data=df_sy)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Saving the graph<0x0A>plt.savefig('graph.png')<0x0A><0x0A># Displaying the graph<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_brazil['Year'], df_brazil['fertilizer_consumption_Brazil'])<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_brazil['Year'], df_brazil['fertilizer_consumption_Brazil'])<0x0A><0x0A># Adding a title<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A># Labelling the x-axis<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Labelling the y-axis<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Displaying the plot<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>g = grupo_bairro.plot(x='Year', y='Number of Days', kind='line', title='Time required to register a property in Sanos', color='#15A6E6', figsize=(20, 20))<0x0A>g.set_xlabel('Year')<0x0A>g.set_ylabel('Number of Days')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'field', 'y': 37.66}, {'x': 'variable', 'y': 47.66}, {'x': 'variable', 'y': 37.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 47.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, x, y, ylabel, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of tax revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Import duties', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Import duties', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='#111111', ax=ax)<0x0A><0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('% of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A>ax.set_ylim(0, 7)<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A><0x0A>ax.set_yticklabels(['Year', '% of tax revenue'])<0x0A><0x0A>ax.set_yticklabels(['Year', '% of tax revenue'])<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of tax revenue')<0x0A><0x0A>ax.set_yticklabels(['Year', '% of tax revenue'])<0x0A><0x0A>ax.set_ylim(0, 7)<0x0A><0x0A>ax.set_yticklabels(['Year', '% of
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_df = grupo_df.sort_values('Year', ascending=False)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import os<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/rockhopper)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 100}, {'x': 'field', 'y': 100}, {'x': 'variable', 'type': 'quantitative'}}, 'data': {'x': 'variable', 'type': 'quantitative'}}, 'y': 100}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_birth_year = df_birth_year.groupby(['Year', 'Country']).size()<0x0A>percentage_birth_year.unstack().plot(kind='bar', title='Percentage of babies born with low-Birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=360)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'data': {'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atmospheric Air and Capital (set % of CWD)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atmospheric Air and Capital (set % of CWD)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.75 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]




















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:22<00:00,  4.12s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5556, 'y': 4210}, {'x': 1280, 'y': 838}, {'x': 4622, 'y': 2960}, {'x': 4622, 'y': 2960}, {'x': 5556, 'y': 4210}, {'x': 1280, 'y': 838}, {'x': 4622, 'y': 2960}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 697}, {'x': 'Rock', 'y': 697}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 47.64}, {'x': 'Apple', 'y': 47.64}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 23.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 47.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.42}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.07}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.07}, {'x': 'Apple', 'y': 3.86}, {'x': 'Nike', 'y': 12.07}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.8}, {'x': 255.3, 'y': 13.3}, {'x': 255.3, 'y': 60.8}, {'x': 54.44, 'y': 60.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 364.56}, {'x': 6750, 'y': 41.56}, {'x': 8750, 'y': 112.56}, {'x': 6750, 'y': 364.56}, {'x': 2250, 'y': 364.56}, {'x': 2250, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200}, {'x': 1920, 'y': 16}, {'x': 1925, 'y': 16}, {'x': 1930, 'y': 36}, {'x': 1935, 'y': 16}, {'x': 1940, 'y': 16}, {'x': 1945, 'y': 16}, {'x': 1950, 'y': 16}, {'x': 1959, 'y': 36}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.98}, {'x': 1816, 'y': 28.52}, {'x': 1817, 'y': 68.52}, {'x': 1818, 'y': 79.98}, {'x': 1820, 'y': 80.2}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 252.5}, {'x': 1866, 'y': 252.5}, {'x': 1870, 'y': 110.6}, {'x': 1876, 'y': 268.4}, {'x': 1879, 'y': 268.4}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 63.53}, {'x': 676, 'y': 24.12}, {'x': 676, 'y': 56.12}, {'x': 712, 'y': 63.53}, {'x': 712, 'y': 63.53}, {'x': 676, 'y': 23.88}, {'x': 712, 'y': 16.38}, {'x': 712, 'y': 63.53}, {'x': 712, 'y': 63.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.01}, {'x': 1821, 'y': 139.69}, {'x': 1828, 'y': 26.44}, {'x': 1835, 'y': 26.44}, {'x': 1840, 'y': 108.44}, {'x': 1849, 'y': 311.44}, {'x': 1855, 'y': 311.44}, {'x': 1860, 'y': 148.01}, {'x': 1865, 'y': 150.01}, {'x': 1870, 'y': 584.01}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1880, 'y': 58.14}, {'x': 4880, 'y': 55.03}, {'x': 2480, 'y': 61.38}, {'x': 3280, 'y': 61.38}, {'x': 4880, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2890}, {'x': 1924, 'y': 2890}, {'x': 1928, 'y': 2890}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 37.55}, {'x': 1570, 'y': 37.55}, {'x': 2200, 'y': 365.5}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1805, 'y': 3812}, {'x': 1806, 'y': 3618}, {'x': 1807, 'y': 3618}, {'x': 1808, 'y': 3618}, {'x': 1810, 'y': 4964}, {'x': 1812, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 1970}, {'x': 1835, 'y': 1970}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 1970}, {'x': 1850, 'y': 3400}, {'x': 1855, 'y': 4880}, {'x': 1860, 'y': 1970}, {'x': 1870, 'y': 1970}, {'x': 1880, 'y': 1970}, {'x': 1885, 'y': 3400}, {'x': 1890, 'y': 1970}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Exponential Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1430, 'y': 530}, {'x': 3240, 'y': 625}, {'x': 3240, 'y': 530}, {'x': 1430, 'y': 565}, {'x': 3240, 'y': 625}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------


















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:31<00:00,  4.59s/it]
[35m|[39m JSON to Vega conversion error rate: [31m90.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.76 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'data': {'x': 'field', 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.55}, {'x': 'field': 'Year', 'y': 18.55}, {'x': 'field': 'Year', 'y': 18.55}, {'x': 'variable': 'Value', 'y': 18.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (% of trillemmals in Skookucsos)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field': 'Annual freshwater withdrawals (% of trillemmals in Skookucsos)', 'y': 55.33}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 55.33}, {'x': 'field': 'Year', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.barplot(x='Year', y='Average land (hectares)', data=df_sy)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Saving the graph<0x0A>plt.savefig('graph.png')<0x0A><0x0A># Displaying the graph<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_brazil['Year'], df_brazil['fertilizer_consumption_Brazil'])<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_brazil['Year'], df_brazil['fertilizer_consumption_Brazil'])<0x0A><0x0A># Adding a title<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A># Labelling the x-axis<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Labelling the y-axis<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Displaying the plot<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>g = grupo_bairro.plot(x='Year', y='Number of Days', kind='line', title='Time required to register a property in Sanos', color='#15A6E6', figsize=(15,15))<0x0A>g.set_xlabel('Year')<0x0A>g.set_ylabel('Number of Days')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 14.66}, {'x': 'field', 'y': 37.66}, {'x': 'variable', 'y': 49.66}, {'x': 'field', 'y': 14.66}, {'x': 'variable', 'y': 14.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A># Save Figure<0x0A>plt.savefig("net_bil_grenada_net_bilateral_aid_flow_Grenada_from_development_assistance_committee.png", bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, x, y, ylabel, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_df = grupo_df.sort_values('Year', ascending=False)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import os<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/rockhopper)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 100}, {'x': 'field', 'y': 100}, {'x': 'variable', 'type': 'quantitative'}}, 'data': {'x': 'variable', 'y': 100}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_birth_year = df_birth_year.groupby(['Year', 'Country']).size()<0x0A>percentage_birth_year.unstack().plot(kind='bar', title='Percentage of babies born with low-Birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=360)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'data': {'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atmospheric Air and Capital (set % of GW)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atmospheric Air and Capital (set % of GW)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.76 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]



















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:30<00:00,  4.50s/it]
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5556, 'y': 4210}, {'x': 1280, 'y': 838}, {'x': 4320, 'y': 2960}, {'x': 5556, 'y': 4210}, {'x': 1280, 'y': 838}, {'x': 4320, 'y': 2960}, {'x': 5556, 'y': 4210}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 697}, {'x': 'Rock', 'y': 697}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 47.64}, {'x': 'Apple', 'y': 47.64}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 23.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 47.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.65}, {'x': 'Red', 'y': 152.65}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.07}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.07}, {'x': 'Apple', 'y': 3.86}, {'x': 'Nike', 'y': 12.07}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.8}, {'x': 275.3, 'y': 13.34}, {'x': 54.44, 'y': 60.8}, {'x': 157.54, 'y': 60.8}, {'x': 225.8, 'y': 60.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 364.56}, {'x': 6750, 'y': 41.59}, {'x': 8550, 'y': 112.51}, {'x': 6750, 'y': 364.56}, {'x': 2750, 'y': 364.56}, {'x': 6750, 'y': 364.56}, {'x': 6750, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200}, {'x': 1920, 'y': 16}, {'x': 1925, 'y': 16}, {'x': 1930, 'y': 36}, {'x': 1935, 'y': 16}, {'x': 1940, 'y': 16}, {'x': 1945, 'y': 16}, {'x': 1950, 'y': 36}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.52}, {'x': 1817, 'y': 69.99}, {'x': 1818, 'y': 79.99}, {'x': 1820, 'y': 80.2}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 252.5}, {'x': 1866, 'y': 252.5}, {'x': 1870, 'y': 110.69}, {'x': 1876, 'y': 268.69}, {'x': 1879, 'y': 268.69}, {'x': 1882, 'y': 268.69}, {'x': 1889, 'y': 268.69}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 63.59}, {'x': 676, 'y': 24.14}, {'x': 676, 'y': 56.14}, {'x': 712, 'y': 63.59}, {'x': 676, 'y': 56.14}, {'x': 712, 'y': 63.59}, {'x': 676, 'y': 24.14}, {'x': 712, 'y': 63.59}, {'x': 676, 'y': 63.59}, {'x': 676, 'y': 23.88}, {'x': 712, 'y': 63.59}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.01}, {'x': 1821, 'y': 139.69}, {'x': 1828, 'y': 26.44}, {'x': 1835, 'y': 26.44}, {'x': 1840, 'y': 108.64}, {'x': 1847, 'y': 311.44}, {'x': 1855, 'y': 311.44}, {'x': 1860, 'y': 148.64}, {'x': 1865, 'y': 150.05}, {'x': 1870, 'y': 584.01}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 61.53}, {'x': 3248, 'y': 55.03}, {'x': 1488, 'y': 55.03}, {'x': 3248, 'y': 61.53}, {'x': 4488, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2890}, {'x': 1924, 'y': 2890}, {'x': 1928, 'y': 2890}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 37.55}, {'x': 1570, 'y': 37.55}, {'x': 2200, 'y': 365.5}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1805, 'y': 3812}, {'x': 1806, 'y': 3612}, {'x': 1807, 'y': 3612}, {'x': 1808, 'y': 3612}, {'x': 1810, 'y': 4960}, {'x': 1812, 'y': 5758}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 1970}, {'x': 1835, 'y': 4900}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 1970}, {'x': 1850, 'y': 3400}, {'x': 1855, 'y': 4900}, {'x': 1860, 'y': 1970}, {'x': 1870, 'y': 1970}, {'x': 1880, 'y': 1970}, {'x': 1890, 'y': 1970}, {'x': 1895, 'y': 3400}, {'x': 1897, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Expent Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1430, 'y': 530}, {'x': 3240, 'y': 625}, {'x': 3240, 'y': 530}, {'x': 1430, 'y': 565}, {'x': 3240, 'y': 625}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|




















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:48<00:00,  5.44s/it]
[35m|[39m JSON to Vega conversion error rate: [31m80.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.71 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.03}, {'x': 'field': 'Year', 'y': 0.03}, {'x': 'field': 'Value', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.55}, {'x': 'field', 'y': 18.55}, {'x': 'variable', 'y': 18.55}, {'x': 'field', 'y': 18.55}, {'x': 'variable', 'y': 18.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (% of trillemmals in Skookucose)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.53}, {'x': 'field', 'y': 30.2}, {'x': 'field', 'y': 55.53}, {'x': 'variable': 'Value', 'type': 'quantitative'}}, 'data': {'x': 'variable': 'Value', 'y': 30.2}, {'x': 'field', 'y': 55.53}, {'x': 'field', 'y': 30.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(25,25))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.barplot(x='Year', y='Average land (hectares)', data=df_sy)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Saving the graph<0x0A>plt.savefig('graph.png')<0x0A><0x0A># Displaying the graph<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df['Year'], df['fertilizer consumption in Brazil as a percentage of production'])<0x0A><0x0A># Add a title<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A># Add a x label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Add a y label<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Display the graph<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143.14}, {'x': 'field', 'y': 143.14}, {'x': 'variable': 'Year', 'type': 'quantitative'}}, 'data': {'x': 'variable': 'Value', 'y': 143.14}, {'x': 'field', 'y': 143.14}, {'x': 'variable': 'Value', 'y': 143.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 47.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A># Save Figure<0x0A>plt.savefig("net_bil_grenada_net_bilateral_aid_flow_Grenada_from_development_assistance_committee.png", bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, x, y, ylabel, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># 1. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 2. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 3. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 4. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 5. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 6. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 7. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 8. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 9. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 10. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 11. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 12. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 13. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 14. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 15. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 16. Custom and other import duties (as % of revenue)<0x0A># 17. Custom and other import duties (as % of revenue)<0x0A># 18. Custom and other import duties (as % of revenue)<0x0A># 19.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_df = grupo_df.sort_values('Year', ascending=False)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import os<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/movement)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 100}, {'x': 'field', 'y': 100}, {'x': 'variable', 'type': 'quantitative'}}, 'data': {'x': 'variable', 'y': 100}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size().reset_index()<0x0A>percentage_sr_lanka = percentage_sr_lanka.pivot(index='Year', columns='Country', values='Survived')<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by='Survived', ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'variable', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atmospheric Air and Capital (set % of GW)', figsize=(20,20), color='g')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atmospheric Air and Capital (set % of GW)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2. weak (2
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.71 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]



















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:27<00:00,  4.38s/it]
  0%|                                                                                                                            | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4210}, {'x': 1280, 'y': 838}, {'x': 4320, 'y': 2960}, {'x': 5580, 'y': 4210}, {'x': 1280, 'y': 838}, {'x': 5580, 'y': 4210}, {'x': 4320, 'y': 2960}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 708}, {'x': 'Rock', 'y': 708}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.21}, {'x': 'Nike', 'y': 48.14}, {'x': 'Apple', 'y': 48.14}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 23.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 48.14}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.65}, {'x': 'Red', 'y': 152.65}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.07}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.07}, {'x': 'Apple', 'y': 3.86}, {'x': 'Nike', 'y': 12.07}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.8}, {'x': 270.8, 'y': 13.3}, {'x': 270.8, 'y': 60.8}, {'x': 54.44, 'y': 60.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 364.56}, {'x': 6750, 'y': 41.59}, {'x': 8550, 'y': 112.51}, {'x': 6750, 'y': 364.56}, {'x': 2750, 'y': 364.56}, {'x': 6750, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 200}, {'x': 1918, 'y': 198}, {'x': 1921, 'y': 16}, {'x': 1925, 'y': 16}, {'x': 1929, 'y': 36}, {'x': 1931, 'y': 36}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.53}, {'x': 1817, 'y': 62.74}, {'x': 1818, 'y': 79.99}, {'x': 1820, 'y': 80.2}, {'x': 1822, 'y': 8.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.5}, {'x': 1866, 'y': 252.5}, {'x': 1869, 'y': 268.5}, {'x': 1873, 'y': 110.69}, {'x': 1879, 'y': 268.5}, {'x': 1882, 'y': 268.5}, {'x': 1887, 'y': 268.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 63.59}, {'x': 676, 'y': 56.14}, {'x': 712, 'y': 63.59}, {'x': 676, 'y': 24.14}, {'x': 712, 'y': 63.59}, {'x': 676, 'y': 56.14}, {'x': 712, 'y': 63.59}, {'x': 712, 'y': 24.14}, {'x': 712, 'y': 63.59}, {'x': 712, 'y': 63.59}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.01}, {'x': 1821, 'y': 139.99}, {'x': 1828, 'y': 26.44}, {'x': 1835, 'y': 26.44}, {'x': 1840, 'y': 108.64}, {'x': 1849, 'y': 311.44}, {'x': 1856, 'y': 311.44}, {'x': 1865, 'y': 148.64}, {'x': 1870, 'y': 584.01}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 61.53}, {'x': 3248, 'y': 55.03}, {'x': 1488, 'y': 55.03}, {'x': 3248, 'y': 61.53}, {'x': 4488, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2890}, {'x': 1924, 'y': 2890}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.14}, {'x': 1570, 'y': 40.1}, {'x': 1570, 'y': 365.8}, {'x': 1570, 'y': 40.1}, {'x': 1570, 'y': 365.8}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1805, 'y': 3628}, {'x': 1808, 'y': 3628}, {'x': 1810, 'y': 4928}, {'x': 1812, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 1970}, {'x': 1835, 'y': 4900}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 1970}, {'x': 1850, 'y': 3400}, {'x': 1855, 'y': 4900}, {'x': 1860, 'y': 1970}, {'x': 1870, 'y': 3400}, {'x': 1875, 'y': 3400}, {'x': 1880, 'y': 1970}, {'x': 1885, 'y': 1970}, {'x': 1890, 'y': 1970}, {'x': 1895, 'y': 1970}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1430, 'y': 530}, {'x': 3240, 'y': 625}, {'x': 1430, 'y': 565}, {'x': 3240, 'y': 625}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|




















100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:44<00:00,  5.22s/it]
[35m|[39m JSON to Vega conversion error rate: [31m70.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.71 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'y': 0.03}, {'x': 'field': 'Value', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.55}, {'x': 'field', 'y': 18.55}, {'x': 'variable', 'y': 18.55}, {'x': 'field', 'y': 18.55}, {'x': 'variable', 'y': 18.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (% of trillemmals in Skookucose)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.53}, {'x': 'field', 'y': 30.2}, {'x': 'field', 'y': 55.53}, {'x': 'variable', 'type': 'quantitative'}}, 'data': {'x': 'variable', 'y': 30.2}, {'x': 'field', 'y': 55.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(25,25))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.barplot(x='Year', y='Average land (hectares)', data=df_sy)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Saving the graph<0x0A>plt.savefig('graph.png')<0x0A><0x0A># Displaying the graph<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_brazil['Year'], df_brazil['fertilizer consumption'])<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_brazil['Year'], df_brazil['fertilizer consumption'])<0x0A><0x0A># Adding labels<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A># Saving the figure<0x0A>ax.set_facecolor('white')<0x0A><0x0A># Saving the figure<0x0A>ax.set_facecolor('white')<0x0A><0x0A># Saving the figure<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Saving the figure<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A># Saving the figure<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Saving the figure<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Saving the figure<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Saving the figure<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Saving the figure<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Saving the figure<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Saving the figure<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Saving the figure<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Saving the figure<0x0A>ax.set_ylabel('% of fertilizer production
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'field', 'y': 143}, {'x': 'variable', 'y': 143}, {'x': 'variable', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.66}, {'x': 'field', 'y': 47.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red')<0x0A>Country_1981.plot(kind='bar'
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, xlabel, ylabel, title, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># 1. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 2. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 3. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 4. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 5. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 6. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 7. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 8. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 9. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 10. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 11. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 12. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 13. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 14. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 15. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 16. Custom and other import duties (as % of revenue)<0x0A># 17. Custom and other import duties (as % of revenue)<0x0A># 18. Custom and other import duties (as % of revenue)<0x0A># 19.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro = (<0x0A>    pd.crosstab(df_congo_republic["Year"], df_congo_republic["Amount"], normalize = "index")<0x0A>   .div(<0x0A>        df_congo_republic["Amount"], <0x0A>        df_congo_republic["Amount"], <0x0A>         margins = True, <0x0A>        )<0x0A>    )<0x0A><0x0A>g = grupo_bairro.sort_values(ascending = False)<0x0A><0x0A>g = grupo_bairro.head(10)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import os<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/rockhopper)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 100}, {'x': 'field', 'y': 100}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A>percentage_sr_lanka.plot(kind='bar', title='Percentage of babies born with low-Birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'variable', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(20, 20))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A>grupos = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A>grupos.plot(kind='scatter', x='Year', y='ConvertedCompensationofAllandCapital(Net$ % of GWO)', color='#135555', figsize=(15,15))<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Allied Capital (Net $ % of GWO)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'variable', 'y': 18.64}, {'x': 'variable', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C. weak (2e (0000)'), 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.01}, {'x': 'field', 'y': 2.01}, {'x': 'variable': 'Rating regarding strength of legal rights index in Croatia', 'type': 'quantitative'}}, 'data': {'x': 'variable': 'Rating regarding strength of legal rights index in Croatia', 'y': 1.01}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.71 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 19 [32m[1m | Loss :[39m[22m 1.7592509984970093



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:38<00:00,  4.93s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4210}, {'x': 1994, 'y': 860}, {'x': 4640, 'y': 2960}, {'x': 5580, 'y': 4210}, {'x': 2280, 'y': 2110}, {'x': 4640, 'y': 2110}, {'x': 5580, 'y': 4210}, {'x': 4640, 'y': 2960}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 697}, {'x': 'Rock', 'y': 697}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.21}, {'x': 'Nike', 'y': 48.14}, {'x': 'Apple', 'y': 48.14}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 23.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 48.14}, {'x': 'USA', 'y': 23.11}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.45}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.07}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.07}, {'x': 'Apple', 'y': 3.86}, {'x': 'Nike', 'y': 12.07}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 13.33}, {'x': 270.3, 'y': 60.5}, {'x': 157.5, 'y': 60.5}, {'x': 270.3, 'y': 60.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 364.56}, {'x': 6750, 'y': 41.59}, {'x': 6750, 'y': 114.14}, {'x': 2750, 'y': 364.56}, {'x': 6750, 'y': 364.56}, {'x': 6750, 'y': 364.56}, {'x': 6750, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 198.52}, {'x': 1919, 'y': 198.52}, {'x': 1924, 'y': 17.52}, {'x': 1928, 'y': 17.52}, {'x': 1929, 'y': 36.52}, {'x': 1930, 'y': 36.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.53}, {'x': 1818, 'y': 69.99}, {'x': 1819, 'y': 80.2}, {'x': 1820, 'y': 9.2}, {'x': 1822, 'y': 8.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.5}, {'x': 1866, 'y': 252.5}, {'x': 1869, 'y': 268.47}, {'x': 1873, 'y': 110.69}, {'x': 1879, 'y': 268.47}, {'x': 1882, 'y': 268.47}, {'x': 1886, 'y': 268.47}, {'x': 1887, 'y': 268.47}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 63.59}, {'x': 676, 'y': 24.09}, {'x': 712, 'y': 56.14}, {'x': 676, 'y': 63.59}, {'x': 712, 'y': 23.88}, {'x': 712, 'y': 63.59}, {'x': 676, 'y': 56.14}, {'x': 712, 'y': 63.59}, {'x': 676, 'y': 23.88}, {'x': 712, 'y': 63.59}, {'x': 676, 'y': 63.59}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.01}, {'x': 1818, 'y': 148.64}, {'x': 1825, 'y': 25.04}, {'x': 1831, 'y': 25.04}, {'x': 1838, 'y': 25.04}, {'x': 1845, 'y': 311.44}, {'x': 1854, 'y': 311.44}, {'x': 1865, 'y': 148.64}, {'x': 1869, 'y': 150.25}, {'x': 1875, 'y': 584.01}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 61.53}, {'x': 3248, 'y': 55.03}, {'x': 4488, 'y': 55.03}, {'x': 3248, 'y': 61.53}, {'x': 4488, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2890}, {'x': 1924, 'y': 2890}, {'x': 1928, 'y': 2890}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.14}, {'x': 1570, 'y': 38.14}, {'x': 22000, 'y': 365.8}, {'x': 1570, 'y': 42.85}, {'x': 1570, 'y': 365.8}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1805, 'y': 3812}, {'x': 1806, 'y': 3612}, {'x': 1807, 'y': 3612}, {'x': 1808, 'y': 3612}, {'x': 1810, 'y': 4928}, {'x': 1812, 'y': 4928}, {'x': 1813, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3396}, {'x': 1830, 'y': 1970}, {'x': 1835, 'y': 1970}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 4880}, {'x': 1850, 'y': 3400}, {'x': 1855, 'y': 4880}, {'x': 1860, 'y': 1970}, {'x': 1870, 'y': 1970}, {'x': 1880, 'y': 1970}, {'x': 1890, 'y': 1970}, {'x': 1895, 'y': 3400}, {'x': 1897, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Expert Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1730, 'y': 530}, {'x': 3280, 'y': 625}, {'x': 3280, 'y': 530}, {'x': 3280, 'y': 625}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:11<00:00,  6.59s/it]
[35m|[39m JSON to Vega conversion error rate: [31m75.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.19 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.76 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'data': {'x': 'field', 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.55}, {'x': 'field', 'y': 18.55}, {'x': 'variable', 'y': 18.55}, {'x': 'field', 'y': 18.55}, {'x': 'variable', 'y': 18.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihlomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 30.2}, {'x': 'variable', 'type': 'quantitative'}}, 'data': {'x': 'variable', 'y': 55.33}, {'x': 'field', 'y': 30.2}, {'x': 'variable', 'y': 55.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(25,25))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.barplot(x='Year', y='Average land (hectares)', data=df_soy)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Saving the graph<0x0A>plt.savefig('graph.png')<0x0A><0x0A># Displaying the graph<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_brasil.Year, df_brasil.Amount, color='#11A8C8')<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_brasil.Year, df_brasil.Amount, color='#11A8C8')<0x0A><0x0A># Adding the axes<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A># Saving the figure<0x0A>ax.set_facecolor('white')<0x0A><0x0A># Saving the figure<0x0A>ax.set_facecolor('white')<0x0A><0x0A># Saving the figure<0x0A>ax.set_facecolor('white')<0x0A><0x0A># Saving the figure<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Saving the figure<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Saving the figure<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Saving the figure<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A># Saving the figure<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Saving the figure<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Saving the figure<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Saving the figure<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Saving the figure<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Saving the figure<0x0A>ax.set_xlabel('Year'
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'field', 'y': 143}, {'x': 'variable', 'y': 143}, {'x': 'variable', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per hectare')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, xlabel, ylabel, title, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># 1. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 2. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 3. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 4. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 5. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 6. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 7. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 8. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 9. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 10. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 11. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 12. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 13. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 14. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 15. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 16. Custom and other import duties (as % of revenue)<0x0A># 17. Custom and other import duties (as % of revenue)<0x0A># 18. Custom and other import duties (as % of revenue)<0x0A># 19.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro = (<0x0A>    pd.crosstab(df_congo_building_year['Year'], df_congo_building_year['Building'], margins = True,<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import os<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/movement)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 100}, {'x': 'field', 'y': 20}, {'x': 'variable', 'type': 'quantitative'}}, 'data': {'x': 'variable', 'y': 20}, {'x': 'variable', 'y': 20}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A>percentage_sr_lanka.plot(kind='bar', title='Percentage of babies born with low-Birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'variable', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A>grupos = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A>grupos.plot(kind='scatter', x='Year', y='ConvertedConverted', color='green', figsize=(18, 20), title='Capital used up in the process of production in United Kingdom')<0x0A><0x0A>grupos.plot(kind='scatter', x='Year', y='ConvertedConverted', color='red', figsize=(18, 20), title='Capital used up in the process of production in United Kingdom')<0x0A><0x0A>grupos.plot(kind='scatter', x='Year', y='ConvertedConverted', color='blue', figsize=(18, 20), title='Capital used up in the process of production in United Kingdom')<0x0A><0x0A>grupos.plot(kind='scatter', x='Year', y='ConvertedConverted', color='red', figsize=(18, 20), title='Capital used up in the process of production in United Kingdom')<0x0A><0x0A>grupos.plot(kind='scatter', x='Year', y='ConvertedConverted', color='red', figsize=(18, 20), title='Capital used up in the process of production in United Kingdom')<0x0A><0x0A>grupos.plot(kind='scatter', x='Year', y='ConvertedConverted', color='red', figsize=(18, 20), title='Capital used up in the process of production
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C. weak (2e (0000)'), 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.01}, {'x': 'field', 'y': 2.01}, {'x': 'variable': 'Rating regarding strength of legal rights index in Croatia', 'type': 'quantitative'}}, 'data': {'x': 'variable': 'Rating regarding strength of legal rights index in Croatia', 'y': 1.01}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.19 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.76 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 20 [32m[1m | Loss :[39m[22m 1.9788910150527954



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:44<00:00,  5.23s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4210}, {'x': 1994, 'y': 860}, {'x': 4640, 'y': 2960}, {'x': 5580, 'y': 4210}, {'x': 1994, 'y': 2960}, {'x': 5580, 'y': 4210}, {'x': 2280, 'y': 2110}, {'x': 4640, 'y': 2110}, {'x': 5580, 'y': 2960}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 697}, {'x': 'Rock', 'y': 697}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.74}, {'x': 'Nike', 'y': 48.14}, {'x': 'Apple', 'y': 48.14}, {'x': 'Male', 'y': 24.11}, {'x': 'Rock', 'y': 24.11}, {'x': 'Sedan', 'y': 24.11}, {'x': 'Spanish', 'y': 48.14}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.62}, {'x': 'USA', 'y': 152.65}, {'x': 'Red', 'y': 152.65}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.3}, {'x': 'Dog', 'y': 8.3}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.8}, {'x': 'Dog', 'y': 8.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 13.33}, {'x': 59.69, 'y': 60.63}, {'x': 157.54, 'y': 60.63}, {'x': 255.3, 'y': 60.63}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 364.56}, {'x': 6750, 'y': 41.59}, {'x': 6750, 'y': 364.56}, {'x': 2750, 'y': 364.56}, {'x': 6750, 'y': 114.11}, {'x': 6750, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 198.52}, {'x': 1919, 'y': 198.52}, {'x': 1924, 'y': 17.53}, {'x': 1928, 'y': 17.53}, {'x': 1929, 'y': 36.2}, {'x': 1930, 'y': 36.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.53}, {'x': 1818, 'y': 69.99}, {'x': 1819, 'y': 80.1}, {'x': 1820, 'y': 9.2}, {'x': 1822, 'y': 8.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.5}, {'x': 1866, 'y': 268.69}, {'x': 1869, 'y': 268.69}, {'x': 1873, 'y': 110.66}, {'x': 1877, 'y': 268.69}, {'x': 1879, 'y': 268.69}, {'x': 1882, 'y': 268.69}, {'x': 1885, 'y': 268.69}, {'x': 1888, 'y': 268.69}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 63.59}, {'x': 676, 'y': 24.09}, {'x': 712, 'y': 56.14}, {'x': 676, 'y': 63.59}, {'x': 712, 'y': 24.09}, {'x': 712, 'y': 63.59}, {'x': 676, 'y': 56.14}, {'x': 712, 'y': 63.59}, {'x': 676, 'y': 23.88}, {'x': 712, 'y': 16.22}, {'x': 712, 'y': 63.59}, {'x': 712, 'y': 63.59}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.01}, {'x': 1818, 'y': 148.64}, {'x': 1825, 'y': 25.44}, {'x': 1829, 'y': 25.44}, {'x': 1835, 'y': 25.44}, {'x': 1840, 'y': 108.64}, {'x': 1847, 'y': 311.44}, {'x': 1853, 'y': 311.44}, {'x': 1859, 'y': 148.64}, {'x': 1865, 'y': 150.25}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 61.53}, {'x': 3248, 'y': 55.03}, {'x': 1488, 'y': 55.03}, {'x': 3248, 'y': 61.53}, {'x': 4488, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2890}, {'x': 1924, 'y': 2890}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 37.55}, {'x': 1570, 'y': 37.55}, {'x': 2200, 'y': 365.5}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1805, 'y': 3618}, {'x': 1806, 'y': 3618}, {'x': 1807, 'y': 3618}, {'x': 1810, 'y': 4924}, {'x': 1812, 'y': 4924}, {'x': 1814, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 3396}, {'x': 1833, 'y': 1910}, {'x': 1840, 'y': 3400}, {'x': 1846, 'y': 3400}, {'x': 1854, 'y': 4884}, {'x': 1874, 'y': 3400}, {'x': 1884, 'y': 1910}, {'x': 1894, 'y': 1910}, {'x': 1898, 'y': 3400}, {'x': 1899, 'y': 4884}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Expert Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1430, 'y': 530}, {'x': 3240, 'y': 625}, {'x': 1430, 'y': 565}, {'x': 3240, 'y': 625}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [02:01<00:06,  6.42s/it]
[35m|[39m JSON to Vega conversion error rate: [31m70.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.77 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': {'x': 'field', 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 12.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 12.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmili Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 30.2}, {'x': 'variable', 'y': 55.33}, {'x': 'field', 'y': 30.2}, {'x': 'variable', 'y': 55.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(25,25))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.barplot(x='Year', y='Average land (hectares)', data=df_soy)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Saving the graph<0x0A>plt.savefig('graph.png')<0x0A><0x0A># Displaying the graph<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production', 'Year', 'Performance of fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'field', 'y': 143}, {'x': 'variable', 'y': 143}, {'x': 'variable', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.66}, {'x': 'field', 'y': 47.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per householder')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, xlabel, ylabel, title, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># Custom and other import duties (as % of revenue)<0x0A># Custom and other import duties (as % of revenue)<0x0A># Custom and other import duties (as % of revenue)<0x0A># Custom and other import duties (as % of revenue)<0x0A># Custom and other import duties (as % of revenue)<0x0A># Custom and other import duties (as % of revenue)<0x0A># Custom and other import duties (as % of revenue)<0x0A># Custom and other import duties (as % of revenue)<0x0A># Custom and other import duties (as % of revenue)<0x0A># Custom and other import duties (as % of revenue)<0x0A># Custom and other import duties (as % of revenue)<0x0A># Custom and other import duties (as % of revenue)<0x0A># Custom and other import duties (as % of revenue)<0x0A># Custom and other import duties (as % of revenue)<0x0A>
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro = (<0x0A>    pd.crosstab(df_congo_building_year['Year'], df_congo_building_year['Building'], margins = True,<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import os<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/rockhopper)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 103.15}, {'x': 'field', 'y': 103.15}, {'x': 'variable', 'type': 'quantitative'}}, 'data': {'x': 'variable', 'y': 103.15}, {'x': 'field', 'y': 103.15}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_birth_year = df_birth_year.groupby(['Year', 'Country']).size()<0x0A>percentage_birth_year.unstack().plot(kind='bar', title='Percentage of babies born with low-birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.ylim(0, 24)<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'variable', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(15,15))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A>grupos = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A>grupos.plot(kind='scatter', x='Year', y='ConvertedConverted', color='green', figsize=(18, 20), title='Capital used up in the process of production in United Kingdom')<0x0A><0x0A>grupos.plot(kind='scatter', x='Year', y='ConvertedConverted', color='red', figsize=(18, 20), title='Capital used up in the process of production in United Kingdom')<0x0A><0x0A>grupos.plot(kind='scatter', x='Year', y='ConvertedConverted', color='blue', figsize=(18, 20), title='Capital used up in the process of production in United Kingdom')<0x0A><0x0A>grupos.plot(kind='scatter', x='Year', y='ConvertedConverted', color='red', figsize=(18, 20), title='Capital used up in the process of production in United Kingdom')<0x0A><0x0A>grupos.plot(kind='scatter', x='Year', y='ConvertedConverted', color='red', figsize=(18, 20), title='Capital used up in the process of production in United Kingdom')<0x0A><0x0A>grupos.plot(kind='scatter', x='Year', y='ConvertedConverted', color='red', figsize=(18, 20), title='Capital used up in the process of production
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C. weak (2e (0000)'), 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.01}, {'x': 'field', 'y': 2.01}, {'x': 'variable': 'Rating regarding strength of legal rights index in Croatia', 'type': 'quantitative'}}, 'data': {'x': 'variable': 'Rating regarding strength of legal rights index in Croatia', 'y': 1.01}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.77 [35m|

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:05<00:00,  6.26s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:37<00:04,  4.92s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4210}, {'x': 1994, 'y': 860}, {'x': 4640, 'y': 2960}, {'x': 5580, 'y': 4210}, {'x': 2280, 'y': 2110}, {'x': 4640, 'y': 2110}, {'x': 5580, 'y': 4210}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 708}, {'x': 'Rock', 'y': 708}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.21}, {'x': 'Nike', 'y': 48.11}, {'x': 'Apple', 'y': 48.11}, {'x': 'Male', 'y': 24.11}, {'x': 'Rock', 'y': 24.11}, {'x': 'Sedan', 'y': 24.11}, {'x': 'Spanish', 'y': 48.11}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.42}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.02}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.02}, {'x': 'Apple', 'y': 3.86}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 13.33}, {'x': 270.2, 'y': 60.5}, {'x': 59.69, 'y': 60.5}, {'x': 157.55, 'y': 60.5}, {'x': 255.3, 'y': 60.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 364.56}, {'x': 6750, 'y': 41.59}, {'x': 2750, 'y': 364.56}, {'x': 6750, 'y': 114.11}, {'x': 6750, 'y': 364.56}, {'x': 3750, 'y': 364.56}, {'x': 6750, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 200}, {'x': 1919, 'y': 194}, {'x': 1923, 'y': 16}, {'x': 1928, 'y': 16}, {'x': 1929, 'y': 36}, {'x': 1932, 'y': 36}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 69.99}, {'x': 1820, 'y': 80.2}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.5}, {'x': 1866, 'y': 268.69}, {'x': 1869, 'y': 268.69}, {'x': 1873, 'y': 110.66}, {'x': 1877, 'y': 268.69}, {'x': 1879, 'y': 268.69}, {'x': 1882, 'y': 268.69}, {'x': 1885, 'y': 268.69}, {'x': 1891, 'y': 268.69}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 63.84}, {'x': 676, 'y': 24.09}, {'x': 712, 'y': 56.12}, {'x': 712, 'y': 63.84}, {'x': 676, 'y': 56.12}, {'x': 712, 'y': 23.84}, {'x': 496, 'y': 16.22}, {'x': 676, 'y': 63.84}, {'x': 676, 'y': 63.84}, {'x': 676, 'y': 63.84}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1809, 'y': 584}, {'x': 1813, 'y': 148}, {'x': 1821, 'y': 138}, {'x': 1826, 'y': 28}, {'x': 1831, 'y': 28}, {'x': 1838, 'y': 148}, {'x': 1845, 'y': 312}, {'x': 1854, 'y': 312}, {'x': 1863, 'y': 150}, {'x': 1869, 'y': 150}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4480, 'y': 61.53}, {'x': 3240, 'y': 55.03}, {'x': 4480, 'y': 55.03}, {'x': 3240, 'y': 61.53}, {'x': 2480, 'y': 78.64}, {'x': 3240, 'y': 61.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2890}, {'x': 1927, 'y': 2890}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.14}, {'x': 1570, 'y': 38.14}, {'x': 22000, 'y': 365.8}, {'x': 720, 'y': 121.89}, {'x': 1570, 'y': 40.1}, {'x': 1570, 'y': 365.8}, {'x': 1570, 'y': 72.8}, {'x': 1570, 'y': 38.14}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1805, 'y': 3618}, {'x': 1808, 'y': 3618}, {'x': 1810, 'y': 4924}, {'x': 1812, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:41<00:00,  5.06s/it]




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:02<00:00,  6.15s/it]
[35m|[39m JSON to Vega conversion error rate: [31m75.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.19 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.76 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cosul (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.03}, {'x': 'field': 'Year', 'y': 0.03}, {'x': 'field': 'Value', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 12.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 12.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihlomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 30.23}, {'x': 'field', 'y': 55.33}, {'x': 'variable', 'type': 'quantitative'}}, 'data': {'x': 'variable', 'y': 30.23}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(25, 25))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.barplot(x='Year', y='Average land (hectares)', data=df_soy)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Saving the graph<0x0A>plt.savefig('graph.png')<0x0A><0x0A># Displaying the graph<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'field', 'y': 143}, {'x': 'variable', 'y': 143}, {'x': 'variable', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.66}, {'x': 'field', 'y': 47.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A><0x0A>g = sns.catplot(x="Year", y="Net bilateral aid flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(20, 15)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Gren
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per household income')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, xlabel, ylabel, title, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># 1. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 2. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 3. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 4. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 5. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 6. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 7. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 8. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 9. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 10. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 11. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 12. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 13. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 14. Custom and other import duties (as % of revenue)<0x0A># 15. Custom and other import duties (as % of revenue)<0x0A># 16. Custom and other import duties (as % of revenue)<0x0A># 17. Custom and other import duties (as % of revenue)<0x0A># 18. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro = (<0x0A>    pd.crosstab(df_congo_building_year['Year'], df_congo_building_year['Building'], margins = True,<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import os<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/rockhopper)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.03}, {'x': 'field', 'y': 5.03}, {'x': 'variable', 'type': 'quantitative'}}, 'data': {'x': 'variable', 'y': 5.03}, {'x': 'field', 'y': 10.8}, {'x': 'variable', 'y': 10.8}, {'x': 'variable', 'y': 10.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_birth_year = df_birth_year.groupby(['Year', 'Country']).size()<0x0A>percentage_birth_year.unstack().plot(kind='bar', title='Percentage of babies born with low-birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=360)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 7.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 7.55}, {'x': 'field', 'y': 7.55}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A>grupos = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A>grupos.plot(kind='scatter', x='Year', y='ConvertedCompensationofAllandCapital(Net$ % of GWO)', color='#135555', figsize=(15,15))<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Allied Capital (Net $ % of GWO)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C. weak (2e (0000)'), 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.01}, {'x': 'field', 'y': 2.01}, {'x': 'variable': 'Rating regarding strength of legal rights index in Croatia', 'type': 'quantitative'}}, 'data': {'x': 'variable': 'Rating regarding strength of legal rights index in Croatia', 'y': 1.01}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.19 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.76 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:42<00:05,  5.56s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4210}, {'x': 1844, 'y': 838}, {'x': 4676, 'y': 2956}, {'x': 5580, 'y': 4210}, {'x': 2288, 'y': 2104}, {'x': 4676, 'y': 2956}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 708}, {'x': 'Rock', 'y': 708}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 24.1}, {'x': 'Dog', 'y': 120.7}, {'x': 'Nike', 'y': 48.14}, {'x': 'Apple', 'y': 48.14}, {'x': 'Male', 'y': 24.1}, {'x': 'Rock', 'y': 24.1}, {'x': 'Sedan', 'y': 24.1}, {'x': 'Spanish', 'y': 48.1}, {'x': 'USA', 'y': 24.1}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.62}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.3}, {'x': 'Dog', 'y': 8.3}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.8}, {'x': 'Dog', 'y': 8.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 13.33}, {'x': 270.2, 'y': 60.5}, {'x': 157.55, 'y': 60.5}, {'x': 270.2, 'y': 60.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 364.56}, {'x': 6750, 'y': 41.59}, {'x': 2750, 'y': 364.56}, {'x': 6750, 'y': 114.11}, {'x': 6750, 'y': 364.56}, {'x': 4750, 'y': 227.0}, {'x': 6750, 'y': 122.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 198.51}, {'x': 1919, 'y': 198.51}, {'x': 1925, 'y': 198.51}, {'x': 1929, 'y': 198.51}, {'x': 1932, 'y': 36.2}, {'x': 1936, 'y': 198.51}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.5}, {'x': 1818, 'y': 69.99}, {'x': 1819, 'y': 80.2}, {'x': 1820, 'y': 9.2}, {'x': 1822, 'y': 8.5}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.5}, {'x': 1866, 'y': 268.69}, {'x': 1869, 'y': 268.69}, {'x': 1873, 'y': 110.66}, {'x': 1878, 'y': 268.69}, {'x': 1881, 'y': 268.69}, {'x': 1886, 'y': 268.69}, {'x': 1889, 'y': 268.69}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 710, 'y': 63.84}, {'x': 670, 'y': 24.09}, {'x': 590, 'y': 63.84}, {'x': 670, 'y': 56.1}, {'x': 710, 'y': 23.84}, {'x': 590, 'y': 63.84}, {'x': 670, 'y': 56.1}, {'x': 670, 'y': 23.84}, {'x': 590, 'y': 63.84}, {'x': 670, 'y': 16.22}, {'x': 670, 'y': 16.22}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.01}, {'x': 1821, 'y': 139.99}, {'x': 1828, 'y': 26.44}, {'x': 1835, 'y': 26.44}, {'x': 1841, 'y': 108.61}, {'x': 1849, 'y': 311.42}, {'x': 1856, 'y': 148.48}, {'x': 1865, 'y': 150.22}, {'x': 1870, 'y': 584.01}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4410, 'y': 61.53}, {'x': 3290, 'y': 55.03}, {'x': 4410, 'y': 55.03}, {'x': 3290, 'y': 61.53}, {'x': 4410, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2890}, {'x': 1926, 'y': 2890}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.14}, {'x': 1570, 'y': 38.14}, {'x': 22000, 'y': 365.8}, {'x': 720, 'y': 121.89}, {'x': 1570, 'y': 75.78}, {'x': 1570, 'y': 37.58}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1805, 'y': 3618}, {'x': 1806, 'y': 3618}, {'x': 1807, 'y': 3618}, {'x': 1810, 'y': 4924}, {'x': 1812, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4870}, {'x': 1833, 'y': 3388}, {'x': 1840, 'y': 3404}, {'x': 1846, 'y': 1910}, {'x': 1854, 'y': 4870}, {'x': 1864, 'y': 1910}, {'x': 1874, 'y': 3404}, {'x': 1884, 'y': 1910}, {'x': 1894, 'y': 1910}, {'x': 1898, 'y': 3404}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1430, 'y': 530}, {'x': 3240, 'y': 625}, {'x': 3240, 'y': 530}, {'x': 1430, 'y': 565}, {'x': 3240, 'y': 625}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:46<00:00,  5.32s/it]




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:15<00:00,  6.75s/it]
[35m|[39m JSON to Vega conversion error rate: [31m65.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.18 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.8 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cosul (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'type': 'quantitative'}}, 'data': {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 12.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 12.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (% of trillemmals in Skookucsos)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.53}, {'x': 'field', 'y': 30.2}, {'x': 'variable', 'y': 36.03}, {'x': 'field', 'y': 55.53}, {'x': 'variable', 'y': 36.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(25,25))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="ch:2.5,-.25", ci=None, hue="Year", palette="ch:2.5", alpha=.9, linewidth=.5, height=15, aspect=2.5)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, hue="Year", palette="ch:2.5,-.25", ci=None, hue="Year", palette="ch:2.5", alpha=.9, linewidth=.5, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'year', 'y': 324.14}, {'x': 'field', 'y': 108.65}, {'x': 'field', 'y': 324.14}, {'x': 'variable', 'y': 127.65}, {'x': 'variable', 'y': 324.14}, {'x': 'field', 'y': 324.14}, {'x': 'variable', 'y': 324.14}, {'x': 'variable', 'y': 324.14}, {'x': 'variable', 'y': 324.14}, {'x': 'variable', 'y': 324.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'field', 'y': 143}, {'x': 'variable', 'y': 143}, {'x': 'variable', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 12.66}, {'x': 'field', 'y': 37.66}, {'x': 'variable', 'y': 49.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 12.66}, {'x': 'variable', 'y': 49.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="Net bilateral aid flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(18, 18)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set(xlabel='Year', ylabel='Net aid flow', title='Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("../Images/net_bil_grenada_net_aid_flow_Grenada.png", bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per household income')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, x, y, ylabel, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as %
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'building', 'type', 'type', 'building_type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type',
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/normalized)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.03}, {'x': 'field', 'y': 5.03}, {'x': 'variable', 'type': 'quantitative'}}, 'data': {'x': 'variable', 'y': 18.15}, {'x': 'field', 'y': 5.03}, {'x': 'variable', 'y': 18.15}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A>percentage_sr_lanka.plot(kind='bar', title='Percentage of babies born with low-birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'variable', 'y': 7.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A>grupos = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A>grupos.plot(kind='scatter', x='Year', y='ConvertedCompensationOfAllAndCapital(Per$ % of GTV)', color='#133666', figsize=(15,15))<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Allied Capital (Per $ % of GTV)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs weak (2e kpop)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.01}, {'x': 'field', 'y': 2.01}, {'x': 'variable', 'type': 'quantitative'}}, 'data': {'x': 'value', 'y': 1.01}, {'x': 'field', 'y': 1.01}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.18 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.8 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 23 [32m[1m | Loss :[39m[22m 1.4791947603225708




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:47<00:00,  5.36s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4210}, {'x': 1844, 'y': 838}, {'x': 4676, 'y': 2954}, {'x': 2288, 'y': 2104}, {'x': 4676, 'y': 2954}, {'x': 5580, 'y': 4210}, {'x': 3360, 'y': 3785}, {'x': 4676, 'y': 2104}, {'x': 5580, 'y': 4210}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 708}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 24.1}, {'x': 'Dog', 'y': 120.3}, {'x': 'Nike', 'y': 48.14}, {'x': 'Apple', 'y': 48.14}, {'x': 'Male', 'y': 24.1}, {'x': 'Rock', 'y': 24.1}, {'x': 'Sedan', 'y': 24.1}, {'x': 'Spanish', 'y': 48.1}, {'x': 'USA', 'y': 24.1}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.86}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 13.33}, {'x': 59.69, 'y': 60.63}, {'x': 151.57, 'y': 60.63}, {'x': 255.3, 'y': 60.63}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 364.01}, {'x': 6750, 'y': 41.15}, {'x': 2750, 'y': 364.01}, {'x': 6750, 'y': 114.11}, {'x': 6750, 'y': 364.01}, {'x': 3750, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 198.51}, {'x': 1919, 'y': 198.51}, {'x': 1924, 'y': 17.21}, {'x': 1928, 'y': 17.21}, {'x': 1930, 'y': 36.21}, {'x': 1931, 'y': 36.21}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.53}, {'x': 1818, 'y': 69.99}, {'x': 1820, 'y': 80.2}, {'x': 1822, 'y': 8.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.5}, {'x': 1866, 'y': 268.62}, {'x': 1871, 'y': 110.66}, {'x': 1875, 'y': 268.62}, {'x': 1879, 'y': 268.62}, {'x': 1883, 'y': 268.62}, {'x': 1889, 'y': 268.62}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 63.84}, {'x': 676, 'y': 24.09}, {'x': 596, 'y': 63.84}, {'x': 676, 'y': 56.12}, {'x': 712, 'y': 23.88}, {'x': 596, 'y': 63.84}, {'x': 676, 'y': 56.12}, {'x': 712, 'y': 63.84}, {'x': 676, 'y': 23.88}, {'x': 712, 'y': 63.84}, {'x': 676, 'y': 63.84}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 585.11}, {'x': 1813, 'y': 148.64}, {'x': 1821, 'y': 139.64}, {'x': 1828, 'y': 27.94}, {'x': 1835, 'y': 27.94}, {'x': 1841, 'y': 108.64}, {'x': 1849, 'y': 310.24}, {'x': 1857, 'y': 308.44}, {'x': 1865, 'y': 148.64}, {'x': 1872, 'y': 576.88}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4410, 'y': 61.53}, {'x': 3290, 'y': 55.03}, {'x': 4410, 'y': 55.03}, {'x': 3290, 'y': 61.53}, {'x': 1444, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2890}, {'x': 1927, 'y': 2890}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.01}, {'x': 1570, 'y': 37.01}, {'x': 22000, 'y': 365.85}, {'x': 720, 'y': 121.51}, {'x': 1570, 'y': 40.01}, {'x': 1570, 'y': 365.85}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2938}, {'x': 'USA', 'y': 1474}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1474}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1805, 'y': 3618}, {'x': 1806, 'y': 3618}, {'x': 1807, 'y': 3618}, {'x': 1810, 'y': 4924}, {'x': 1812, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4888}, {'x': 1833, 'y': 3386}, {'x': 1840, 'y': 3402}, {'x': 1846, 'y': 1910}, {'x': 1856, 'y': 4888}, {'x': 1872, 'y': 1910}, {'x': 1889, 'y': 1910}, {'x': 1897, 'y': 3402}, {'x': 1899, 'y': 3402}, {'x': 1845, 'y': 4888}, {'x': 1878, 'y': 3402}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1430, 'y': 529.89}, {'x': 3280, 'y': 624.89}, {'x': 3280, 'y': 529.89}, {'x': 3280, 'y': 529.89}, {'x': 3280, 'y': 624.89}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:14<00:00,  6.73s/it]
[35m|[39m JSON to Vega conversion error rate: [31m70.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.2 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.8 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'type': 'quantitative'}}, 'data': {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 12.55}, {'x': 'field', 'y': 12.55}, {'x': 'variable', 'y': 12.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmān Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 30.23}, {'x': 'field', 'y': 55.33}, {'x': 'variable', 'type': 'quantitative'}}, 'data': {'x': 'variable', 'y': 30.23}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(25, 25))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="ch:2.5,-.25", ci=None, hue="Year", palette="ch:2.5", alpha=.9, linewidth=.5, height=15, aspect=2.5)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, hue="Year", palette="ch:2.5,-.25", ci=None, hue="Year", palette="ch:2.5", alpha=.9, linewidth=.5, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.16}, {'x': 'field', 'y': 324.16}, {'x': 'field', 'y': 324.16}, {'x': 'variable', 'y': 324.16}, {'x': 'variable', 'y': 324.16}, {'x': 'variable', 'y': 324.16}, {'x': 'variable', 'y': 324.16}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'field', 'y': 143}, {'x': 'variable', 'y': 143}, {'x': 'variable', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 12.66}, {'x': 'field', 'y': 37.06}, {'x': 'variable', 'y': 49.66}, {'x': 'field', 'y': 12.66}, {'x': 'variable', 'y': 47.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A><0x0A>g = sns.catplot(x="Year", y="Net bilateral aid flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(15, 15)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per household income')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, x, y, ylabel, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'location', 'building_type', 'type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type'
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/movement)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.03}, {'x': 'field', 'y': 5.03}, {'x': 'variable', 'type': 'quantitative'}}, 'data': {'x': 'variable', 'y': 18.15}, {'x': 'field', 'y': 5.03}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A>percentage_sr_lanka.plot(kind='bar', title='Percentage of babies born with low-birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 7.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 7.55}, {'x': 'field', 'y': 7.55}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A>grupos = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A>grupos.plot(kind='scatter', x='Year', y='ConvertedCompensationofAllandCapitai(Per$ % of GWO)', color='#133666', figsize=(15,15))<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Allied Capital (Per $ % of GWO)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs weak (2e kpop)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.01}, {'x': 'field', 'y': 2.01}, {'x': 'variable', 'type': 'quantitative'}}, 'data': {'x': 'value', 'y': 1.01}, {'x': 'field', 'y': 1.01}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.2 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.8 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:48<00:00,  5.43s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4210}, {'x': 1844, 'y': 838}, {'x': 4672, 'y': 2956}, {'x': 2288, 'y': 2104}, {'x': 4672, 'y': 2956}, {'x': 5580, 'y': 4210}, {'x': 4672, 'y': 2956}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 691}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.2}, {'x': 'Nike', 'y': 48.11}, {'x': 'Apple', 'y': 48.11}, {'x': 'Male', 'y': 24.11}, {'x': 'Rock', 'y': 24.11}, {'x': 'Sedan', 'y': 24.11}, {'x': 'Spanish', 'y': 48.11}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.86}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 13.43}, {'x': 59.25, 'y': 60.66}, {'x': 255.3, 'y': 60.66}, {'x': 151.51, 'y': 60.66}, {'x': 255.15, 'y': 60.66}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 364.01}, {'x': 6750, 'y': 41.19}, {'x': 3750, 'y': 364.01}, {'x': 6750, 'y': 114.19}, {'x': 3750, 'y': 364.01}, {'x': 6750, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 198.51}, {'x': 1919, 'y': 198.51}, {'x': 1925, 'y': 19.51}, {'x': 1929, 'y': 36.01}, {'x': 1932, 'y': 36.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.53}, {'x': 1818, 'y': 69.99}, {'x': 1819, 'y': 80.2}, {'x': 1820, 'y': 9.2}, {'x': 1822, 'y': 8.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.5}, {'x': 1866, 'y': 268.69}, {'x': 1871, 'y': 110.66}, {'x': 1875, 'y': 268.69}, {'x': 1879, 'y': 268.69}, {'x': 1883, 'y': 268.69}, {'x': 1887, 'y': 268.69}, {'x': 1891, 'y': 268.69}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56.11}, {'x': 676, 'y': 32.1}, {'x': 712, 'y': 64.1}, {'x': 570, 'y': 16.21}, {'x': 676, 'y': 56.11}, {'x': 712, 'y': 64.11}, {'x': 570, 'y': 16.21}, {'x': 676, 'y': 32.1}, {'x': 676, 'y': 56.11}, {'x': 712, 'y': 24.14}, {'x': 496, 'y': 16.21}, {'x': 676, 'y': 64.11}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1810, 'y': 585.12}, {'x': 1817, 'y': 148.62}, {'x': 1824, 'y': 27.94}, {'x': 1828, 'y': 27.94}, {'x': 1832, 'y': 27.94}, {'x': 1838, 'y': 148.62}, {'x': 1844, 'y': 310.24}, {'x': 1852, 'y': 308.42}, {'x': 1858, 'y': 150.24}, {'x': 1865, 'y': 148.62}, {'x': 1872, 'y': 585.12}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4410, 'y': 61.53}, {'x': 3290, 'y': 55.03}, {'x': 4410, 'y': 55.03}, {'x': 3290, 'y': 61.53}, {'x': 1444, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1926, 'y': 2888}, {'x': 1930, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.01}, {'x': 1570, 'y': 38.01}, {'x': 22000, 'y': 365.85}, {'x': 720, 'y': 121.51}, {'x': 1570, 'y': 75.75}, {'x': 1570, 'y': 37.01}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1805, 'y': 3618}, {'x': 1806, 'y': 3618}, {'x': 1807, 'y': 3618}, {'x': 1810, 'y': 4924}, {'x': 1812, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4870}, {'x': 1833, 'y': 3385}, {'x': 1840, 'y': 3400}, {'x': 1846, 'y': 1900}, {'x': 1856, 'y': 4870}, {'x': 1864, 'y': 3400}, {'x': 1874, 'y': 3400}, {'x': 1884, 'y': 1900}, {'x': 1890, 'y': 1900}, {'x': 1897, 'y': 3400}, {'x': 1899, 'y': 4870}, {'x': 1899, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1430, 'y': 529.89}, {'x': 3280, 'y': 624.89}, {'x': 3280, 'y': 529.89}, {'x': 3280, 'y': 529.89}, {'x': 3280, 'y': 529.89}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:11<00:00,  6.58s/it]
[35m|[39m JSON to Vega conversion error rate: [31m70.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.71 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'data': {'x': 'field', 'y': 0.03}, {'x': 'field': 'Value', 'y': 0.03}, {'x': 'field': 'Value', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 750}, {'x': 'variable', 'y': 125}, {'x': 'field', 'y': 750}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 30.29}, {'x': 'field', 'y': 55.33}, {'x': 'variable', 'type': 'quantitative'}}, 'data': {'x': 'variable', 'y': 30.29}, {'x': 'field', 'y': 55.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(25,25))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df,
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'field', 'y': 143}, {'x': 'variable', 'y': 143}, {'x': 'variable', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.06}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 12.06}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 12.06}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 12.06}, {'x': 'variable', 'y': 47.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. $/kg$)")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("./Images/net_bil_flow_Grenada.png")<0x0A><0x0A># Show plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per householder')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, x, y, ylabel, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'building', 'type', 'building_type', 'type', 'building_type', 'type', 'type', 'building_type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 'type', 
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/rockhopper)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.03}, {'x': 'field', 'y': 5.03}, {'x': 'variable', 'y': 10.85}, {'x': 'field', 'y': 10.85}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_birth_year = df_birth_year.groupby(['Year', 'Country']).size()<0x0A>percentage_birth_year.unstack().plot(kind='bar', title='Percentage of babies born with low-birthweight in Sri Lanka', colormap='tab20', figsize=(15,15))<0x0A>plt.ylabel('$% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'variable', 'y': 7.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country'] == 'UK') & (grupo['Year'] > '2016-11')]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_xticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs weak (2e kpopi)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.01}, {'x': 'field', 'y': 2.01}, {'x': 'variable': 'Rating regarding strength of legal rights index in Croatia', 'type': 'quantitative'}}, 'data': {'x': 'field', 'y': 1.01}, {'x': 'variable': 'Rating regarding strength of legal rights index in Croatia', 'y': 1.01}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.71 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:50<00:00,  5.51s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4210}, {'x': 1844, 'y': 838}, {'x': 4672, 'y': 2954}, {'x': 2288, 'y': 2104}, {'x': 4672, 'y': 2954}, {'x': 5580, 'y': 4210}, {'x': 3696, 'y': 3785}, {'x': 4672, 'y': 2104}, {'x': 5580, 'y': 4210}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 708}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 24.1}, {'x': 'Dog', 'y': 120.2}, {'x': 'Nike', 'y': 48.06}, {'x': 'Apple', 'y': 48.06}, {'x': 'Male', 'y': 24.1}, {'x': 'Rock', 'y': 239.74}, {'x': 'Sedan', 'y': 24.1}, {'x': 'Spanish', 'y': 48.06}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.86}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 13.43}, {'x': 151.57, 'y': 60.66}, {'x': 273.8, 'y': 60.66}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 364.01}, {'x': 6750, 'y': 41.15}, {'x': 2750, 'y': 364.01}, {'x': 6750, 'y': 114.11}, {'x': 4750, 'y': 227.01}, {'x': 755, 'y': 364.01}, {'x': 3750, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 200}, {'x': 1919, 'y': 194}, {'x': 1924, 'y': 16}, {'x': 1928, 'y': 16}, {'x': 1929, 'y': 36}, {'x': 1932, 'y': 36}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 79.99}, {'x': 1816, 'y': 28.53}, {'x': 1817, 'y': 62.66}, {'x': 1818, 'y': 79.99}, {'x': 1820, 'y': 80.2}, {'x': 1822, 'y': 8.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.5}, {'x': 1866, 'y': 268.69}, {'x': 1871, 'y': 110.66}, {'x': 1875, 'y': 268.69}, {'x': 1879, 'y': 268.69}, {'x': 1883, 'y': 268.69}, {'x': 1889, 'y': 268.69}, {'x': 1895, 'y': 268.69}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56.11}, {'x': 676, 'y': 32.1}, {'x': 712, 'y': 64.1}, {'x': 570, 'y': 16.21}, {'x': 570, 'y': 64.11}, {'x': 676, 'y': 56.11}, {'x': 712, 'y': 24.01}, {'x': 496, 'y': 16.21}, {'x': 676, 'y': 52.85}, {'x': 712, 'y': 64.11}, {'x': 576, 'y': 64.11}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.01}, {'x': 1814, 'y': 148.64}, {'x': 1821, 'y': 138.64}, {'x': 1828, 'y': 27.01}, {'x': 1835, 'y': 27.01}, {'x': 1840, 'y': 108.64}, {'x': 1849, 'y': 310.24}, {'x': 1856, 'y': 308.44}, {'x': 1865, 'y': 148.64}, {'x': 1872, 'y': 584.01}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4410, 'y': 61.53}, {'x': 3448, 'y': 55.03}, {'x': 1844, 'y': 58.13}, {'x': 3448, 'y': 61.53}, {'x': 3448, 'y': 61.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1926, 'y': 2888}, {'x': 1930, 'y': 2888}, {'x': 1936, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.01}, {'x': 1576, 'y': 37.01}, {'x': 726, 'y': 121.51}, {'x': 1576, 'y': 37.01}, {'x': 1576, 'y': 40.2}, {'x': 1576, 'y': 364.51}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4286}, {'x': 1806, 'y': 3612}, {'x': 1809, 'y': 3612}, {'x': 1810, 'y': 4924}, {'x': 1813, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4870}, {'x': 1833, 'y': 3385}, {'x': 1840, 'y': 3400}, {'x': 1846, 'y': 1900}, {'x': 1856, 'y': 4870}, {'x': 1864, 'y': 3400}, {'x': 1874, 'y': 1900}, {'x': 1884, 'y': 1900}, {'x': 1894, 'y': 1900}, {'x': 1898, 'y': 3400}, {'x': 1899, 'y': 4870}, {'x': 1907, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1716, 'y': 529.89}, {'x': 3856, 'y': 624.66}, {'x': 1716, 'y': 564.66}, {'x': 3856, 'y': 529.89}, {'x': 3856, 'y': 624.66}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:18<00:00,  6.91s/it]
[35m|[39m JSON to Vega conversion error rate: [31m65.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.18 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.81 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'data': {'x': 'field', 'y': 0.03}, {'x': 'field': 'Value', 'y': 0.03}, {'x': 'field': 'Value', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.85}, {'x': 'field', 'y': 7.85}, {'x': 'variable', 'y': 12.85}, {'x': 'field', 'y': 7.85}, {'x': 'variable', 'y': 12.85}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.2}, {'x': 'field', 'y': 90.2}, {'x': 'variable', 'y': 55.2}, {'x': 'field', 'y': 30.2}, {'x': 'variable', 'y': 55.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(25,25))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df,
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.16}, {'x': 'field', 'y': 108.65}, {'x': 'field', 'y': 324.16}, {'x': 'variable', 'y': 127.05}, {'x': 'variable', 'y': 324.16}, {'x': 'field', 'y': 324.16}, {'x': 'variable', 'y': 324.16}, {'x': 'variable', 'y': 324.16}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'field', 'y': 143}, {'x': 'variable', 'y': 143}, {'x': 'variable', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.06}, {'x': 'field', 'y': 49.56}, {'x': 'variable', 'y': 19.56}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 19.56}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A><0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(15, 15)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set(xlabel='Year', ylabel='AID flow', title='Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A><0x0A># Save the figure<0x0A>plt.savefig("net_bil_grenada_net_bilateral_aid_flow_Grenada.png", dpi=300, bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per householder')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, x, y, ylabel, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'location', 'building_type', 'type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type'
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/movement)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.03}, {'x': 'field', 'y': 5.03}, {'x': 'variable', 'type': 'quantitative'}}, 'data': {'x': 'variable', 'y': 18.15}, {'x': 'field', 'y': 5.03}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A>percentage_sr_lanka.plot(kind='bar', title='Percentage of babies born with low-birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'variable', 'y': 7.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country'] == 'UK') & (grupo['Type'] == 'Output')]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of / and Capital (set % of GTV)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_xticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs weak (2e kpop)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.01}, {'x': 'field', 'y': 2.01}, {'x': 'variable', 'type': 'quantitative'}}, 'data': {'x': 'value', 'y': 1.25}, {'x': 'field', 'y': 1.25}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.18 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.81 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:43<00:00,  5.19s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4210}, {'x': 1844, 'y': 838}, {'x': 4672, 'y': 2956}, {'x': 1844, 'y': 2956}, {'x': 5580, 'y': 4210}, {'x': 2288, 'y': 2100}, {'x': 4672, 'y': 2100}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 708}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 24.1}, {'x': 'Dog', 'y': 120.3}, {'x': 'Nike', 'y': 48.06}, {'x': 'Apple', 'y': 48.06}, {'x': 'Male', 'y': 24.1}, {'x': 'Rock', 'y': 24.1}, {'x': 'Sedan', 'y': 24.1}, {'x': 'Spanish', 'y': 48.06}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.86}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 13.43}, {'x': 59.67, 'y': 60.63}, {'x': 255.67, 'y': 60.63}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 364.01}, {'x': 6755, 'y': 41.15}, {'x': 3755, 'y': 364.01}, {'x': 6755, 'y': 114.11}, {'x': 6755, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 200}, {'x': 1919, 'y': 194}, {'x': 1924, 'y': 16}, {'x': 1928, 'y': 16}, {'x': 1929, 'y': 36}, {'x': 1932, 'y': 36}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 79.99}, {'x': 1820, 'y': 80.2}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.51}, {'x': 1866, 'y': 268.68}, {'x': 1870, 'y': 268.68}, {'x': 1873, 'y': 110.66}, {'x': 1877, 'y': 268.68}, {'x': 1882, 'y': 268.68}, {'x': 1886, 'y': 268.68}, {'x': 1890, 'y': 268.68}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56.11}, {'x': 676, 'y': 32.1}, {'x': 676, 'y': 64.1}, {'x': 472, 'y': 16.21}, {'x': 570, 'y': 64.1}, {'x': 676, 'y': 56.11}, {'x': 472, 'y': 16.21}, {'x': 676, 'y': 52.85}, {'x': 676, 'y': 52.1}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 585.17}, {'x': 1814, 'y': 148.44}, {'x': 1821, 'y': 138.64}, {'x': 1826, 'y': 27.94}, {'x': 1835, 'y': 27.94}, {'x': 1838, 'y': 108.64}, {'x': 1845, 'y': 310.24}, {'x': 1853, 'y': 308.44}, {'x': 1859, 'y': 148.44}, {'x': 1867, 'y': 150.24}, {'x': 1872, 'y': 576.89}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4410, 'y': 61.53}, {'x': 3448, 'y': 55.03}, {'x': 1844, 'y': 58.13}, {'x': 3448, 'y': 61.53}, {'x': 1844, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1926, 'y': 2888}, {'x': 1930, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.01}, {'x': 726, 'y': 122.01}, {'x': 1576, 'y': 40.01}, {'x': 1576, 'y': 365.85}, {'x': 1576, 'y': 40.01}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2938}, {'x': 'USA', 'y': 1474}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1474}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4296}, {'x': 1805, 'y': 3618}, {'x': 1806, 'y': 3618}, {'x': 1807, 'y': 3618}, {'x': 1810, 'y': 4924}, {'x': 1812, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4870}, {'x': 1833, 'y': 3385}, {'x': 1840, 'y': 3400}, {'x': 1846, 'y': 1900}, {'x': 1856, 'y': 4870}, {'x': 1864, 'y': 3400}, {'x': 1874, 'y': 3400}, {'x': 1884, 'y': 1900}, {'x': 1890, 'y': 1900}, {'x': 1897, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1310, 'y': 529.89}, {'x': 3980, 'y': 624.89}, {'x': 3980, 'y': 529.89}, {'x': 1310, 'y': 564.64}, {'x': 3980, 'y': 624.89}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:15<00:00,  6.78s/it]
[35m|[39m JSON to Vega conversion error rate: [31m55.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.63 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'type': 'quantitative'}}, 'data': {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'variable', 'y': 605}, {'x': 'field', 'y': 605}, {'x': 'variable', 'y': 605}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 90.2}, {'x': 'variable', 'y': 55.33}, {'x': 'field', 'y': 90.2}, {'x': 'variable', 'y': 55.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(25,25))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="ch:2.5,-.25", ci=None, hue="Year", palette="ch:2.5", alpha=.9, linewidth=.5, height=15, aspect=2.5)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, hue="Year", palette="ch:2.5,-.25", ci=None, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.16}, {'x': 'field', 'y': 324.16}, {'x': 'variable', 'y': 324.16}, {'x': 'field', 'y': 324.16}, {'x': 'variable', 'y': 324.16}, {'x': 'field', 'y': 324.16}, {'x': 'variable', 'y': 324.16}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'field', 'y': 143}, {'x': 'variable', 'y': 143}, {'x': 'variable', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 16.66}, {'x': 'field', 'y': 37.06}, {'x': 'variable', 'y': 16.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 16.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="Net bilateral aid flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(18, 18)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set(xlabel='Year', ylabel='Net aid flow', title='Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("../Images/net_bil_grenada_net_aid_flow_Grenada.png", bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per household income')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, x, y, ylabel, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'location', 'building_type', 'type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type'
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/normalized)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.03}, {'x': 'field', 'y': 5.03}, {'x': 'variable', 'y': 18.15}, {'x': 'field', 'y': 18.15}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_birth_year = df_birth_year.groupby(['Year', 'Country']).size()<0x0A>percentage_birth_year.unstack().plot(kind='bar', title='Percentage of babies born with low-birthweight in Sri Lanka', colormap='tab20', figsize=(15,15))<0x0A>plt.ylabel('% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 7.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 7.55}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country/Region'] == 'UK') & (grupo['Value'] > 0.05)]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year', 'Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Consumption of Ánd Capital (A$ % of GND)', 'Year'])<0x0A>ax.set_ylim(0, 16)<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(grupos['Year'], grupo_2, color='black')<0x0A>ax.set_ylim(0, 16)<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(grupos['Year'], grupo_2, color='red')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_ylim(0, 16)<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(grupos['Year'], grupo
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.06}, {'x': 'field', 'y': 2.06}, {'x': 'variable', 'y': 1.25}, {'x': 'field', 'y': 1.25}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.63 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:49<00:00,  5.49s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4210}, {'x': 1844, 'y': 838}, {'x': 4672, 'y': 2954}, {'x': 2288, 'y': 2104}, {'x': 4672, 'y': 2954}, {'x': 5580, 'y': 4210}, {'x': 3696, 'y': 3785}, {'x': 4672, 'y': 2104}, {'x': 5580, 'y': 4210}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 708}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.3}, {'x': 'Nike', 'y': 48.06}, {'x': 'Apple', 'y': 48.06}, {'x': 'Male', 'y': 24.11}, {'x': 'Rock', 'y': 24.11}, {'x': 'Sedan', 'y': 24.11}, {'x': 'Spanish', 'y': 48.06}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.86}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 258.14, 'y': 13.43}, {'x': 53.88, 'y': 60.66}, {'x': 271.33, 'y': 60.66}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7150, 'y': 364.01}, {'x': 6750, 'y': 41.15}, {'x': 3920, 'y': 364.01}, {'x': 6750, 'y': 114.11}, {'x': 3920, 'y': 364.01}, {'x': 6750, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 198.51}, {'x': 1919, 'y': 19.51}, {'x': 1925, 'y': 19.51}, {'x': 1929, 'y': 19.51}, {'x': 1932, 'y': 36.01}, {'x': 1936, 'y': 36.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 79.99}, {'x': 1816, 'y': 28.53}, {'x': 1817, 'y': 62.69}, {'x': 1818, 'y': 79.99}, {'x': 1820, 'y': 80.5}, {'x': 1822, 'y': 8.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.5}, {'x': 1866, 'y': 268.64}, {'x': 1870, 'y': 268.64}, {'x': 1873, 'y': 110.66}, {'x': 1877, 'y': 268.64}, {'x': 1882, 'y': 268.64}, {'x': 1886, 'y': 268.64}, {'x': 1890, 'y': 268.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56.11}, {'x': 676, 'y': 32.1}, {'x': 712, 'y': 64.1}, {'x': 492, 'y': 16.21}, {'x': 676, 'y': 56.11}, {'x': 712, 'y': 24.01}, {'x': 492, 'y': 16.21}, {'x': 676, 'y': 64.11}, {'x': 676, 'y': 56.11}, {'x': 676, 'y': 24.01}, {'x': 492, 'y': 16.21}, {'x': 676, 'y': 64.11}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.01}, {'x': 1814, 'y': 148.64}, {'x': 1821, 'y': 138.64}, {'x': 1826, 'y': 27.01}, {'x': 1835, 'y': 27.01}, {'x': 1838, 'y': 310.14}, {'x': 1846, 'y': 308.44}, {'x': 1852, 'y': 308.44}, {'x': 1859, 'y': 148.64}, {'x': 1868, 'y': 150.28}, {'x': 1872, 'y': 576.85}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1999, 'y': 61.22}, {'x': 4772, 'y': 55.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1926, 'y': 2888}, {'x': 1930, 'y': 2888}, {'x': 1936, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.01}, {'x': 726, 'y': 122.01}, {'x': 1576, 'y': 37.01}, {'x': 1576, 'y': 37.01}, {'x': 2202, 'y': 364.5}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 3612}, {'x': 1809, 'y': 3612}, {'x': 1810, 'y': 4944}, {'x': 1813, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4870}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4870}, {'x': 1840, 'y': 3385}, {'x': 1844, 'y': 3400}, {'x': 1848, 'y': 1910}, {'x': 1856, 'y': 4870}, {'x': 1864, 'y': 3400}, {'x': 1874, 'y': 3385}, {'x': 1881, 'y': 1910}, {'x': 1889, 'y': 1910}, {'x': 1895, 'y': 4870}, {'x': 1899, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1716, 'y': 527.7}, {'x': 3856, 'y': 624.63}, {'x': 3856, 'y': 527.7}, {'x': 1716, 'y': 527.7}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:30<00:00,  7.51s/it]
[35m|[39m JSON to Vega conversion error rate: [31m65.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.18 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.69 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'type': 'quantitative'}}, 'data': {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 750}, {'x': 'variable', 'y': 125}, {'x': 'field', 'y': 750}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 91.18}, {'x': 'field', 'y': 55.33}, {'x': 'variable', 'type': 'quantitative'}}, 'data': {'x': 'variable', 'y': 91.18}, {'x': 'field', 'y': 55.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(25,25))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="ch:2.5,-.25", ci=None, hue="Year", palette="ch:2.5", alpha=.9, linewidth=.5, height=15, aspect=2.5)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares) in Seychelles", data=df, kind="line", ci=None, height=15, aspect=2.5, hue="Year", palette="ch:2.5,-.25", ci=None, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue="Year", palette="ch:2.5", alpha=.9, hue
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.14}, {'x': 'field', 'y': 108.65}, {'x': 'field', 'y': 324.14}, {'x': 'variable', 'y': 126.68}, {'x': 'variable', 'y': 324.14}, {'x': 'field', 'y': 324.14}, {'x': 'variable', 'y': 324.14}, {'x': 'variable', 'y': 324.14}, {'x': 'variable', 'y': 324.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'field', 'y': 143}, {'x': 'variable', 'y': 143}, {'x': 'variable', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.06}, {'x': 'field', 'y': 49.56}, {'x': 'variable', 'y': 37.06}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 19.56}, {'x': 'field', 'y': 49.56}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="Net bilateral aid flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(18, 18)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set(xlabel='Year', ylabel='Net aid flow', title='Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("../Images/net_bil_grenada_net_aid_flow_Grenada.png", bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per household income')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, x, y, ylabel, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue) of Indonesia<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of revenue)<0x0A># Customs and other import duties (as % of import)<0x0A># Customs and other import duties (as % of import)<0x0A># Customs and other import duties (as % of import)<0x0A># Customs and other import duties (as % of import)<0x0A># Customs and other import duties (as % of import
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'location', 'building_type', 'type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type'
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/normalized)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.03}, {'x': 'field', 'y': 5.03}, {'x': 'variable', 'y': 10.85}, {'x': 'field', 'y': 10.85}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_birth_year = df_birth.groupby(['Year', 'Country']).size()<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(in
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country/Region'] == 'UK') & (grupo['Value'] > 0.05)]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year', 'Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Consumption of Ánd Capital (A$ % of GND)', 'Year'])<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ %
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs weak (2e k/2000)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.01}, {'x': 'field', 'y': 2.01}, {'x': 'variable': 'Rating regarding strength of legal rights index in Croatia', 'type': 'quantitative'}}, 'data': {'x': 'field', 'y': 1.28}, {'x': 'variable': 'Rating regarding strength of legal rights index in Croatia', 'y': 1.28}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.18 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.69 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:44<00:00,  5.22s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4210}, {'x': 2088, 'y': 2104}, {'x': 4672, 'y': 2960}, {'x': 5580, 'y': 4210}, {'x': 2088, 'y': 2104}, {'x': 5580, 'y': 4210}, {'x': 3696, 'y': 3785}, {'x': 4672, 'y': 2104}, {'x': 5580, 'y': 2960}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 708}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.24}, {'x': 'Nike', 'y': 48.08}, {'x': 'Apple', 'y': 48.08}, {'x': 'Male', 'y': 24.11}, {'x': 'Rock', 'y': 24.11}, {'x': 'Sedan', 'y': 24.11}, {'x': 'Spanish', 'y': 48.08}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 258.14, 'y': 13.43}, {'x': 273.29, 'y': 60.56}, {'x': 273.29, 'y': 60.56}, {'x': 273.29, 'y': 60.56}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 364.01}, {'x': 3550, 'y': 364.01}, {'x': 6755, 'y': 41.59}, {'x': 6755, 'y': 114.11}, {'x': 3550, 'y': 364.01}, {'x': 755, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 198.51}, {'x': 1919, 'y': 19.51}, {'x': 1925, 'y': 19.51}, {'x': 1929, 'y': 19.51}, {'x': 1932, 'y': 36.01}, {'x': 1936, 'y': 19.51}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 59.11}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 79.98}, {'x': 1820, 'y': 80.24}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.5}, {'x': 1866, 'y': 268.62}, {'x': 1870, 'y': 268.62}, {'x': 1873, 'y': 110.66}, {'x': 1877, 'y': 268.62}, {'x': 1879, 'y': 268.62}, {'x': 1883, 'y': 268.62}, {'x': 1887, 'y': 268.62}, {'x': 1889, 'y': 268.62}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 710, 'y': 56.11}, {'x': 670, 'y': 32.1}, {'x': 570, 'y': 64.0}, {'x': 570, 'y': 16.2}, {'x': 710, 'y': 56.11}, {'x': 570, 'y': 64.0}, {'x': 710, 'y': 24.0}, {'x': 570, 'y': 16.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584}, {'x': 1821, 'y': 145}, {'x': 1828, 'y': 28}, {'x': 1835, 'y': 28}, {'x': 1840, 'y': 108}, {'x': 1849, 'y': 310}, {'x': 1856, 'y': 145}, {'x': 1865, 'y': 150}, {'x': 1870, 'y': 584}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1975, 'y': 55.03}, {'x': 4750, 'y': 61.18}, {'x': 3350, 'y': 61.18}, {'x': 3750, 'y': 78.6}, {'x': 4750, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1926, 'y': 2888}, {'x': 1930, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.01}, {'x': 726, 'y': 122.01}, {'x': 1576, 'y': 37.01}, {'x': 1576, 'y': 37.01}, {'x': 2202, 'y': 365.8}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 3610}, {'x': 1809, 'y': 3610}, {'x': 1812, 'y': 4924}, {'x': 1815, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4870}, {'x': 1833, 'y': 3385}, {'x': 1840, 'y': 1900}, {'x': 1846, 'y': 3385}, {'x': 1856, 'y': 4870}, {'x': 1864, 'y': 3385}, {'x': 1874, 'y': 3385}, {'x': 1881, 'y': 1900}, {'x': 1889, 'y': 4870}, {'x': 1895, 'y': 1900}, {'x': 1899, 'y': 4870}, {'x': 1903, 'y': 3385}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1716, 'y': 529.8}, {'x': 3710, 'y': 624.8}, {'x': 3710, 'y': 529.8}, {'x': 3710, 'y': 529.8}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:20<00:00,  7.03s/it]
[35m|[39m JSON to Vega conversion error rate: [31m60.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.68 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'type': 'quantitative'}}, 'data': {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'variable', 'y': 18}, {'x': 'field', 'y': 180}, {'x': 'variable', 'y': 180}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 91.18}, {'x': 'field', 'y': 55.33}, {'x': 'variable', 'type': 'quantitative'}}, 'data': {'x': 'variable', 'y': 91.18}, {'x': 'field', 'y': 55.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(25,25))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="ch:2.5,-.25")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="ch:2.5,-.25")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="ch:2.5,-.25")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="ch:2.5,-.25")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="ch:2.5,-.25")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.16}, {'x': 'field', 'y': 324.16}, {'x': 'variable', 'y': 324.16}, {'x': 'field', 'y': 324.16}, {'x': 'variable', 'y': 324.16}, {'x': 'variable', 'y': 324.16}, {'x': 'variable', 'y': 324.16}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'field', 'y': 143}, {'x': 'variable', 'y': 143}, {'x': 'variable', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.06}, {'x': 'field', 'y': 47.66}, {'x': 'field', 'y': 37.06}, {'x': 'variable', 'y': 46.66}, {'x': 'variable', 'y': 12.06}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 12.06}, {'x': 'variable', 'y': 46.66}, {'x': 'variable', 'y': 12.06}, {'x': 'variable', 'y': 47.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="Net bilateral aid flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(18, 18)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set(xlabel='Year', ylabel='Net aid flow from Development Assistance Committee', title='Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("net_bil_grenada_net_aid_flow_Grenada.png", dpi=300, bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per household income')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, xlabel, ylabel, title, title, ylabel, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='#111111', ax=ax)<0x0A><0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'building_type', 'type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/normalized)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.05}, {'x': 'field', 'y': 5.05}, {'x': 'variable', 'y': 108.65}, {'x': 'field', 'y': 108.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A>percentage_sr_lanka.plot(kind='bar', title='Percentage of babies born with low-birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'field', 'y': 75.05}, {'x': 'field', 'y': 75.05}, {'x': 'variable', 'y': 75.05}, {'x': 'field', 'y': 75.05}, {'x': 'variable', 'y': 75.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country/Region'] == 'UK') & (grupo['Value'] > 0.05)]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of / and Capital (set % of GVG)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year', 'Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Consumption of / and Capital (set % of GVG)', 'Year'])<0x0A>ax.set_ylim(0, 16)<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of / and Capital (set % of GVG)')<0x0A>ax.set_ylim(0, 16)<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of / and Capital (set % of GVG)')<0x0A>ax.set_ylim(0, 16)<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs weak (2e kpopi)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.01}, {'x': 'field', 'y': 2.01}, {'x': 'variable', 'y': 1.28}, {'x': 'field', 'y': 1.28}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.68 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 29 [32m[1m | Loss :[39m[22m 1.253218173980713



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:37<00:04,  4.89s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5510, 'y': 4210}, {'x': 2010, 'y': 837}, {'x': 4622, 'y': 2952}, {'x': 4622, 'y': 2952}, {'x': 5510, 'y': 4210}, {'x': 2010, 'y': 2104}, {'x': 5510, 'y': 4210}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 708}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.33}, {'x': 'Nike', 'y': 48.08}, {'x': 'Apple', 'y': 48.08}, {'x': 'Male', 'y': 24.11}, {'x': 'Rock', 'y': 24.11}, {'x': 'Sedan', 'y': 24.11}, {'x': 'Spanish', 'y': 48.08}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.85}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 259.23, 'y': 13.43}, {'x': 53.82, 'y': 60.66}, {'x': 151.59, 'y': 60.66}, {'x': 259.23, 'y': 60.66}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7150, 'y': 363.55}, {'x': 3920, 'y': 363.55}, {'x': 6750, 'y': 41.59}, {'x': 6750, 'y': 113.25}, {'x': 3920, 'y': 363.55}, {'x': 3920, 'y': 363.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 201.86}, {'x': 1919, 'y': 194.06}, {'x': 1925, 'y': 17.53}, {'x': 1929, 'y': 17.53}, {'x': 1932, 'y': 36.06}, {'x': 1936, 'y': 194.06}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 79.99}, {'x': 1820, 'y': 80.2}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.51}, {'x': 1866, 'y': 268.68}, {'x': 1871, 'y': 110.66}, {'x': 1875, 'y': 268.68}, {'x': 1879, 'y': 268.68}, {'x': 1883, 'y': 268.68}, {'x': 1889, 'y': 268.68}, {'x': 1895, 'y': 268.68}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56.11}, {'x': 676, 'y': 32.1}, {'x': 570, 'y': 64.0}, {'x': 676, 'y': 56.11}, {'x': 466, 'y': 16.22}, {'x': 466, 'y': 16.22}, {'x': 712, 'y': 64.0}, {'x': 466, 'y': 16.22}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.01}, {'x': 1814, 'y': 148.44}, {'x': 1821, 'y': 138.64}, {'x': 1826, 'y': 25.84}, {'x': 1835, 'y': 28.01}, {'x': 1840, 'y': 108.64}, {'x': 1848, 'y': 310.24}, {'x': 1858, 'y': 308.04}, {'x': 1865, 'y': 148.44}, {'x': 1872, 'y': 577.73}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4530, 'y': 61.53}, {'x': 3440, 'y': 55.03}, {'x': 3440, 'y': 61.53}, {'x': 1848, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1927, 'y': 2885}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.01}, {'x': 726, 'y': 122.01}, {'x': 1576, 'y': 37.01}, {'x': 1576, 'y': 37.01}, {'x': 2202, 'y': 365.8}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2938}, {'x': 'USA', 'y': 1474}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1474}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 3612}, {'x': 1809, 'y': 3612}, {'x': 1812, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4870}, {'x': 1831, 'y': 1900}, {'x': 1837, 'y': 4870}, {'x': 1841, 'y': 3400}, {'x': 1843, 'y': 3400}, {'x': 1846, 'y': 1900}, {'x': 1851, 'y': 3400}, {'x': 1856, 'y': 3400}, {'x': 1864, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1716, 'y': 529.8}, {'x': 3856, 'y': 624.89}, {'x': 3856, 'y': 529.89}, {'x': 1716, 'y': 564.64}, {'x': 3856, 'y': 624.89}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:41<00:00,  5.09s/it]



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [02:20<00:06,  6.80s/it]
[35m|[39m JSON to Vega conversion error rate: [31m65.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.18 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.69 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'type': 'quantitative'}}, 'data': {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'variable', 'y': 180}, {'x': 'field', 'y': 1800}, {'x': 'variable', 'y': 6050}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 91.18}, {'x': 'field', 'y': 55.33}, {'x': 'variable', 'type': 'quantitative'}}, 'data': {'x': 'variable', 'y': 91.18}, {'x': 'field', 'y': 91.18}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(25,25))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df,
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.86}, {'x': 'field', 'y': 107.25}, {'x': 'variable', 'y': 126.05}, {'x': 'field', 'y': 324.86}, {'x': 'variable', 'y': 324.86}, {'x': 'field', 'y': 324.86}, {'x': 'variable', 'y': 324.86}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'field', 'y': 143}, {'x': 'variable', 'y': 143}, {'x': 'variable', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.06}, {'x': 'field', 'y': 49.56}, {'x': 'variable', 'y': 37.06}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 19.56}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(15,15)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set(xlabel='Year', ylabel='AID flow', title='Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("net_bil_grenada_net_bilateral_aid_flow_Grenada.png", dpi=300)
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country']).mean()['Yield for per person/laboratory']).sort_values(by='Yield for per person/laboratory', ascending=False)<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, xlabel, ylabel, title, title, ylabel, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Import duties', 'Customs and other import duties (as % of revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Import duties', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='#111111', ax=ax)<0x0A><0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'building_type', 'type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/normalized)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.05}, {'x': 'field', 'y': 5.05}, {'x': 'variable', 'y': 18.15}, {'x': 'field', 'y': 18.15}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_birth_year = df_srilanka.groupby(['Year','Country'])['Value'].sum()<0x0A>percentage_birth_year = percentage_birth_year.reset_index()<0x0A>percentage_birth_year.columns = ['Year','Country']<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year = percentage_birth_year.sort_values(by='Percentage of babies born with low-birthweight in Sri Lanka',ascending=False)<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birth
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.8}, {'x': 'field', 'y': 78}, {'x': 'variable', 'y': 78}, {'x': 'field', 'y': 78}, {'x': 'variable', 'y': 78}, {'x': 'variable', 'y': 78}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country/Region'] == 'UK') & (grupo['Value'] > 0.05)]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of / and Capital (set % of GVG)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year', 'Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Consumption of / and Capital (set % of GVG)', 'Year'])<0x0A>ax.set_ylim(0, 16)<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of / and Capital (set % of GVG)')<0x0A>ax.set_ylim(0, 16)<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of / and Capital (set % of GVG)')<0x0A>ax.set_ylim(0, 16)<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'Field', 'y': 2.08}, {'x': 'x': 'Year', 'y': 2.08}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.18 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.69 [35m|

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:23<00:00,  7.17s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:43<00:00,  5.17s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4210}, {'x': 1844, 'y': 838}, {'x': 4672, 'y': 2954}, {'x': 2288, 'y': 2104}, {'x': 4672, 'y': 2954}, {'x': 5580, 'y': 4210}, {'x': 3696, 'y': 3785}, {'x': 4672, 'y': 2104}, {'x': 5580, 'y': 4210}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 708}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.3}, {'x': 'Nike', 'y': 48.06}, {'x': 'Apple', 'y': 48.06}, {'x': 'Male', 'y': 24.11}, {'x': 'Rock', 'y': 24.11}, {'x': 'Sedan', 'y': 24.11}, {'x': 'Spanish', 'y': 48.06}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.3, 'y': 13.43}, {'x': 59.84, 'y': 60.61}, {'x': 265.24, 'y': 60.61}, {'x': 265.24, 'y': 60.61}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7150, 'y': 364.01}, {'x': 3850, 'y': 364.01}, {'x': 6750, 'y': 42.01}, {'x': 6750, 'y': 114.23}, {'x': 3850, 'y': 364.01}, {'x': 7150, 'y': 364.01}, {'x': 6750, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 198.55}, {'x': 1919, 'y': 19.55}, {'x': 1924, 'y': 17.28}, {'x': 1928, 'y': 17.28}, {'x': 1930, 'y': 36.28}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 79.99}, {'x': 1816, 'y': 28.52}, {'x': 1817, 'y': 61.52}, {'x': 1818, 'y': 79.99}, {'x': 1820, 'y': 80.2}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1862, 'y': 252.59}, {'x': 1866, 'y': 268.66}, {'x': 1870, 'y': 268.66}, {'x': 1869, 'y': 110.29}, {'x': 1876, 'y': 268.66}, {'x': 1878, 'y': 268.66}, {'x': 1882, 'y': 268.66}, {'x': 1886, 'y': 268.66}, {'x': 1890, 'y': 268.66}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 606, 'y': 32}, {'x': 596, 'y': 640}, {'x': 712, 'y': 640}, {'x': 466, 'y': 16}, {'x': 596, 'y': 640}, {'x': 712, 'y': 5600}, {'x': 606, 'y': 320}, {'x': 712, 'y': 5600}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584}, {'x': 1814, 'y': 146}, {'x': 1821, 'y': 25}, {'x': 1826, 'y': 25}, {'x': 1834, 'y': 25}, {'x': 1838, 'y': 146}, {'x': 1847, 'y': 311}, {'x': 1852, 'y': 308}, {'x': 1858, 'y': 150}, {'x': 1867, 'y': 150}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4550, 'y': 61.52}, {'x': 3250, 'y': 78.63}, {'x': 3000, 'y': 61.52}, {'x': 4000, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2886}, {'x': 1926, 'y': 2886}, {'x': 1930, 'y': 2886}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.01}, {'x': 726, 'y': 122.01}, {'x': 1576, 'y': 37.01}, {'x': 1576, 'y': 37.01}, {'x': 2202, 'y': 365.8}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 3612}, {'x': 1809, 'y': 3612}, {'x': 1812, 'y': 5768}, {'x': 1815, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4890}, {'x': 1833, 'y': 3385}, {'x': 1840, 'y': 3385}, {'x': 1846, 'y': 1900}, {'x': 1856, 'y': 4890}, {'x': 1864, 'y': 3385}, {'x': 1874, 'y': 3385}, {'x': 1881, 'y': 1900}, {'x': 1890, 'y': 1900}, {'x': 1897, 'y': 4890}, {'x': 1907, 'y': 3385}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1716, 'y': 529.89}, {'x': 3856, 'y': 624.96}, {'x': 3856, 'y': 529.89}, {'x': 1716, 'y': 529.89}, {'x': 3856, 'y': 624.96}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:58<00:00,  5.90s/it]
[35m|[39m JSON to Vega conversion error rate: [31m50.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.71 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable', 'y': 0.03}, {'x': 'field', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'variable', 'y': 185}, {'x': 'field', 'y': 705}, {'x': 'variable', 'y': 705}, {'x': 'variable', 'y': 605}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 91.18}, {'x': 'field', 'y': 55.33}, {'x': 'variable', 'y': 91.18}, {'x': 'variable', 'y': 91.18}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(25,25))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average Land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average Land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average Land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average Land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average Land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average Land (hectares)", data=df,
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.16}, {'x': 'field', 'y': 109.85}, {'x': 'variable', 'y': 126.05}, {'x': 'field', 'y': 324.16}, {'x': 'variable', 'y': 324.16}, {'x': 'variable', 'y': 324.16}, {'x': 'variable', 'y': 324.16}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'Field', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Field', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.06}, {'x': 'field', 'y': 49.06}, {'x': 'variable', 'y': 37.06}, {'x': 'field', 'y': 47.06}, {'x': 'variable', 'y': 15.86}, {'x': 'field', 'y': 15.86}, {'x': 'variable', 'y': 37.06}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="pastel", ci=None, height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(15,15)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set(xlabel='Year', ylabel='AID flow', title='Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("net_bil_grenada_net_bilateral_aid_flow_Grenada.png", dpi=300, bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country']).mean()['Yield for per person/laboratory']).sort_values(by='Yield for per person/laboratory', ascending=False)<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, xlabel, ylabel, title, title, ylabel, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='#111111', ax=ax)<0x0A><0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'building_type', 'type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/normalized)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.05}, {'x': 'field', 'y': 5.05}, {'x': 'variable', 'y': 12.05}, {'x': 'field', 'y': 12.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of babies', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 17.54}, {'x': 'field', 'y': 20.24}, {'x': 'type': 'quantitative'}}, 'y': 20.24}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country/Region'] == 'UK') & (grupo['Value'] > 0.05)]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of / and Capital (set % of GVG)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year', 'Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Consumption of / and Capital (set % of GVG)', 'Year'])<0x0A>ax.set_ylim(0, 16)<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of / and Capital (set % of GVG)')<0x0A>ax.set_ylim(0, 16)<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of / and Capital (set % of GVG)')<0x0A>ax.set_ylim(0, 16)<0x0A><0x0A># Plotting the graph<0x0A>ax.spines['right
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs weak (2e k/sq0)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.06}, {'x': 'field', 'y': 2.06}, {'x': 'variable', 'y': 1.25}, {'x': 'field', 'y': 1.25}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.71 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:26<00:00,  4.30s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4210}, {'x': 2088, 'y': 838}, {'x': 4672, 'y': 2954}, {'x': 4672, 'y': 2954}, {'x': 5580, 'y': 4210}, {'x': 2088, 'y': 2104}, {'x': 4672, 'y': 2954}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 708}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.17}, {'x': 'USA', 'y': 24.1}, {'x': 'Dog', 'y': 120.3}, {'x': 'Nike', 'y': 48.08}, {'x': 'Apple', 'y': 48.08}, {'x': 'Male', 'y': 24.1}, {'x': 'Rock', 'y': 24.1}, {'x': 'Sedan', 'y': 24.1}, {'x': 'Spanish', 'y': 48.08}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 258.14, 'y': 13.43}, {'x': 273.84, 'y': 60.56}, {'x': 54.59, 'y': 60.56}, {'x': 221.39, 'y': 60.56}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7150, 'y': 364.01}, {'x': 3850, 'y': 364.01}, {'x': 6750, 'y': 41.75}, {'x': 6750, 'y': 113.25}, {'x': 3850, 'y': 364.01}, {'x': 6750, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 198.55}, {'x': 1918, 'y': 19.55}, {'x': 1921, 'y': 16.53}, {'x': 1925, 'y': 16.53}, {'x': 1929, 'y': 36.09}, {'x': 1933, 'y': 36.09}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 79.99}, {'x': 1816, 'y': 28.52}, {'x': 1817, 'y': 61.52}, {'x': 1818, 'y': 79.99}, {'x': 1820, 'y': 80.52}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.5}, {'x': 1866, 'y': 268.62}, {'x': 1870, 'y': 268.62}, {'x': 1872, 'y': 110.66}, {'x': 1876, 'y': 268.62}, {'x': 1882, 'y': 268.62}, {'x': 1886, 'y': 101.01}, {'x': 1892, 'y': 268.62}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56.11}, {'x': 676, 'y': 32.1}, {'x': 570, 'y': 64.0}, {'x': 466, 'y': 16.2}, {'x': 570, 'y': 64.0}, {'x': 676, 'y': 56.11}, {'x': 466, 'y': 16.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 180, 'y': 584.09}, {'x': 181, 'y': 147.46}, {'x': 182, 'y': 26.09}, {'x': 183, 'y': 26.09}, {'x': 184, 'y': 310.84}, {'x': 185, 'y': 308.4}, {'x': 186, 'y': 147.46}, {'x': 187, 'y': 584.09}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1975, 'y': 61.12}, {'x': 4790, 'y': 55.00}, {'x': 3440, 'y': 61.12}, {'x': 3440, 'y': 55.00}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.01}, {'x': 726, 'y': 122.01}, {'x': 1576, 'y': 37.01}, {'x': 1576, 'y': 37.01}, {'x': 2202, 'y': 365.81}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4296}, {'x': 1806, 'y': 3610}, {'x': 1809, 'y': 3610}, {'x': 1813, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4890}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4890}, {'x': 1840, 'y': 3385}, {'x': 1846, 'y': 1910}, {'x': 1854, 'y': 3385}, {'x': 1858, 'y': 4890}, {'x': 1864, 'y': 3385}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1836, 'y': 530}, {'x': 3846, 'y': 625}, {'x': 1836, 'y': 565}, {'x': 3846, 'y': 625}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [02:03<00:05,  5.50s/it]
[35m|[39m JSON to Vega conversion error rate: [31m60.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.71 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'type': 'quantitative'}}, 'data': {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'variable', 'y': 605}, {'x': 'field', 'y': 605}, {'x': 'variable', 'y': 605}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 91.81}, {'x': 'field', 'y': 55.33}, {'x': 'variable', 'y': 91.81}, {'x': 'field', 'y': 91.81}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 30))<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.14}, {'x': 'field', 'y': 107.65}, {'x': 'variable', 'y': 126.05}, {'x': 'field', 'y': 324.14}, {'x': 'variable', 'y': 324.14}, {'x': 'variable', 'y': 324.14}, {'x': 'variable', 'y': 324.14}, {'x': 'variable', 'y': 324.14}, {'x': 'variable', 'y': 324.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'Field', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Field', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 16.66}, {'x': 'field', 'y': 37.06}, {'x': 'variable', 'y': 16.66}, {'x': 'field', 'y': 47.06}, {'x': 'variable', 'y': 16.66}, {'x': 'variable', 'y': 37.06}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="Net", data=net, kind="bar", palette="pastel", ci=None, height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(18, 18)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set(xlabel='Year', ylabel='Net aid flow from Development Assistance Committee', title='Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("net_bilateral_aid_flow_Grenada_from_development_assistance_committee.png", dpi=300, bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country']).mean()['Yield for per person/laboratory']).sort_values(by='Yield for per person/laboratory', ascending=False)<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, xlabel, ylabel, title, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='#111111', ax=ax)<0x0A><0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'building_type', 'type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/normalized)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.05}, {'x': 'field', 'y': 5.05}, {'x': 'variable', 'y': 12.05}, {'x': 'field', 'y': 12.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of babies', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 17.54}, {'x': 'field', 'y': 20.24}, {'x': 'type': 'quantitative'}}, 'y': 20.24}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 75}, {'x': 'variable', 'y': 75}, {'x': 'field', 'y': 75}, {'x': 'variable', 'y': 75}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country/Region'] == 'UK') & (grupo['Value'] > 0.05)]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (as % of GVG)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Countries used up in the process of production'])<0x0A><0x0A># Adding a legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 0.5))<0x0A><0x0A># Displaying the graph<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'Field', 'y': 2.08}, {'x': 'x': 'Year', 'y': 2.08}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.71 [35m|

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:07<00:00,  6.35s/it]
[36m[1mEpoch :[39m[22m 32 [32m[1m | Loss :[39m[22m 1.1395047903060913



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:34<00:00,  4.72s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5550, 'y': 4210}, {'x': 1844, 'y': 2950}, {'x': 4880, 'y': 2950}, {'x': 2018, 'y': 2104}, {'x': 4880, 'y': 2104}, {'x': 5550, 'y': 4210}, {'x': 2018, 'y': 2104}, {'x': 555, 'y': 4210}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 708}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.33}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.33}, {'x': 'Nike', 'y': 48.09}, {'x': 'Apple', 'y': 48.09}, {'x': 'Male', 'y': 24.11}, {'x': 'Rock', 'y': 24.11}, {'x': 'Sedan', 'y': 24.11}, {'x': 'Spanish', 'y': 48.09}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 267.3, 'y': 13.43}, {'x': 53.84, 'y': 60.61}, {'x': 151.57, 'y': 60.61}, {'x': 267.1, 'y': 60.61}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7150, 'y': 364.01}, {'x': 6750, 'y': 41.15}, {'x': 3925, 'y': 364.01}, {'x': 6750, 'y': 113.25}, {'x': 3925, 'y': 227.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 200.8}, {'x': 1919, 'y': 195.62}, {'x': 1924, 'y': 17.24}, {'x': 1928, 'y': 17.24}, {'x': 1930, 'y': 36.06}, {'x': 1931, 'y': 18.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 59.15}, {'x': 1816, 'y': 28.5}, {'x': 1818, 'y': 79.99}, {'x': 1820, 'y': 80.24}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.59}, {'x': 1866, 'y': 267.66}, {'x': 1871, 'y': 110.29}, {'x': 1875, 'y': 267.66}, {'x': 1879, 'y': 267.66}, {'x': 1883, 'y': 267.66}, {'x': 1889, 'y': 267.66}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 710, 'y': 56}, {'x': 606, 'y': 32}, {'x': 592, 'y': 64}, {'x': 606, 'y': 56}, {'x': 464, 'y': 16}, {'x': 592, 'y': 64}, {'x': 606, 'y': 32}, {'x': 606, 'y': 5600}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.42}, {'x': 1815, 'y': 147.42}, {'x': 1821, 'y': 25.84}, {'x': 1828, 'y': 25.84}, {'x': 1835, 'y': 25.84}, {'x': 1840, 'y': 109.43}, {'x': 1849, 'y': 310.82}, {'x': 1857, 'y': 308.42}, {'x': 1865, 'y': 147.42}, {'x': 1872, 'y': 576.89}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4550, 'y': 61.55}, {'x': 3440, 'y': 55.01}, {'x': 3000, 'y': 61.55}, {'x': 4000, 'y': 55.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.09}, {'x': 676, 'y': 122.15}, {'x': 1576, 'y': 75.75}, {'x': 1576, 'y': 37.09}, {'x': 1576, 'y': 37.09}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 3610}, {'x': 1809, 'y': 3610}, {'x': 1812, 'y': 4914}, {'x': 1815, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4890}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4890}, {'x': 1840, 'y': 3385}, {'x': 1846, 'y': 1910}, {'x': 1854, 'y': 3385}, {'x': 1858, 'y': 4890}, {'x': 1864, 'y': 3385}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1716, 'y': 529.79}, {'x': 3856, 'y': 624.96}, {'x': 3856, 'y': 529.79}, {'x': 1716, 'y': 564.96}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:55<00:05,  5.98s/it]
[35m|[39m JSON to Vega conversion error rate: [31m55.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.7 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'type': 'quantitative'}}, 'data': {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'variable', 'y': 605}, {'x': 'field', 'y': 605}, {'x': 'variable', 'y': 605}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 99.89}, {'x': 'field', 'y': 55.33}, {'x': 'variable', 'y': 99.89}, {'x': 'field', 'y': 30.25}, {'x': 'variable', 'y': 30.25}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(ar_data, 'Year', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.15}, {'x': 'field', 'y': 324.15}, {'x': 'variable', 'y': 125.65}, {'x': 'field', 'y': 324.15}, {'x': 'variable', 'y': 324.15}, {'x': 'variable', 'y': 324.15}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'Field', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Field', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.06}, {'x': 'field', 'y': 47.66}, {'x': 'field', 'y': 37.06}, {'x': 'variable', 'y': 12.06}, {'x': 'variable', 'y': 47.66}, {'x': 'field', 'y': 7.25}, {'x': 'variable', 'y': 12.06}, {'x': 'variable', 'y': 47.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="pastel", ci=None, height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(18, 18)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set(xlabel='Year', ylabel='AID flow', title='Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("net_bil_grenada_net_bilateral_aid_flow_Grenada.png", dpi=300, bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country']).mean()['Yield for per person/laboratory']).sort_values(by='Yield for per person/laboratory', ascending=False)<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, x, y, ylabel, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='#111111', ax=ax)<0x0A><0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/normalized)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.05}, {'x': 'field', 'y': 5.05}, {'x': 'variable', 'y': 12.05}, {'x': 'field', 'y': 12.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Country', 'Year']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A>percentage_sr_lanka.plot(kind='bar', title='Percentage of babies born with low-birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.ylabel('Percentage of babies born with low-birthweight in Sri Lanka')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country/Region'] == 'UK') & (grupo['Value'] > 0.05)]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Countries used up in the process of production'])<0x0A><0x0A># Adding a legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 0.5))<0x0A><0x0A># Saving the figure<0x0A>fig.savefig('Output/Output_2.png')<0x0A><0x0A># Display the graph<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs weak (2e k/2000)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.06}, {'x': 'field', 'y': 2.06}, {'x': 'variable', 'y': 1.25}, {'x': 'field', 'y': 1.25}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.7 [35m|

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:58<00:00,  5.93s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:33<00:04,  4.58s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5556, 'y': 4218}, {'x': 1844, 'y': 831}, {'x': 4622, 'y': 2954}, {'x': 2212, 'y': 2104}, {'x': 4622, 'y': 2954}, {'x': 5556, 'y': 4218}, {'x': 3628, 'y': 3785}, {'x': 4622, 'y': 2104}, {'x': 5556, 'y': 4218}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 708}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.3}, {'x': 'Nike', 'y': 48.08}, {'x': 'Apple', 'y': 48.08}, {'x': 'Male', 'y': 24.11}, {'x': 'Rock', 'y': 24.11}, {'x': 'Sedan', 'y': 24.11}, {'x': 'Spanish', 'y': 48.08}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 259.23, 'y': 13.43}, {'x': 53.88, 'y': 60.63}, {'x': 151.57, 'y': 60.63}, {'x': 271.33, 'y': 13.43}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7551, 'y': 114.12}, {'x': 3854, 'y': 364.56}, {'x': 6750, 'y': 41.09}, {'x': 6750, 'y': 123.85}, {'x': 3854, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 201.86}, {'x': 1918, 'y': 195.52}, {'x': 1921, 'y': 16.53}, {'x': 1925, 'y': 16.53}, {'x': 1929, 'y': 16.53}, {'x': 1933, 'y': 36.06}, {'x': 1936, 'y': 195.0}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 79.99}, {'x': 1816, 'y': 28.52}, {'x': 1817, 'y': 61.12}, {'x': 1818, 'y': 79.99}, {'x': 1820, 'y': 80.24}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.59}, {'x': 1866, 'y': 268.65}, {'x': 1870, 'y': 268.65}, {'x': 1872, 'y': 108.55}, {'x': 1876, 'y': 268.65}, {'x': 1882, 'y': 268.65}, {'x': 1886, 'y': 268.65}, {'x': 1890, 'y': 268.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56.11}, {'x': 676, 'y': 32.1}, {'x': 570, 'y': 64.0}, {'x': 570, 'y': 16.22}, {'x': 712, 'y': 56.11}, {'x': 570, 'y': 64.0}, {'x': 234, 'y': 24}, {'x': 466, 'y': 16.22}, {'x': 676, 'y': 56.11}, {'x': 712, 'y': 64.0}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.01}, {'x': 1821, 'y': 145.34}, {'x': 1828, 'y': 27.01}, {'x': 1835, 'y': 27.01}, {'x': 1840, 'y': 108.64}, {'x': 1849, 'y': 310.24}, {'x': 1856, 'y': 147.34}, {'x': 1865, 'y': 150.05}, {'x': 1870, 'y': 577.73}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4530, 'y': 61.55}, {'x': 3344, 'y': 61.55}, {'x': 1844, 'y': 55.00}, {'x': 3848, 'y': 78.63}, {'x': 1844, 'y': 61.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1930, 'y': 2885}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.01}, {'x': 726, 'y': 122.01}, {'x': 1576, 'y': 37.01}, {'x': 1576, 'y': 37.01}, {'x': 2202, 'y': 365.81}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4296}, {'x': 1806, 'y': 3610}, {'x': 1807, 'y': 3610}, {'x': 1812, 'y': 4914}, {'x': 1814, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4890}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4890}, {'x': 1840, 'y': 3385}, {'x': 1846, 'y': 1910}, {'x': 1854, 'y': 3385}, {'x': 1858, 'y': 4890}, {'x': 1864, 'y': 3385}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1276, 'y': 530}, {'x': 3246, 'y': 625}, {'x': 3246, 'y': 530}, {'x': 1276, 'y': 567}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:36<00:00,  4.84s/it]




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:58<00:00,  5.94s/it]
[35m|[39m JSON to Vega conversion error rate: [31m50.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.7 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable', 'y': 0.03}, {'x': 'field', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'variable', 'y': 605}, {'x': 'field', 'y': 605}, {'x': 'variable', 'y': 605}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 30.25}, {'x': 'field', 'y': 55.33}, {'x': 'variable', 'y': 95.2}, {'x': 'field', 'y': 30.25}, {'x': 'variable', 'y': 30.25}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(train_df, 'Year', 'Arable land (hectares) in Seychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.16}, {'x': 'field', 'y': 125.66}, {'x': 'variable', 'y': 324.16}, {'x': 'field', 'y': 324.16}, {'x': 'variable', 'y': 324.16}, {'x': 'variable', 'y': 324.16}, {'x': 'variable', 'y': 324.16}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'Field', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Field', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.06}, {'x': 'field', 'y': 49.56}, {'x': 'variable', 'y': 37.06}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 15.85}, {'x': 'field', 'y': 15.85}, {'x': 'variable', 'y': 47.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="pastel", ci=None, height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(15,15)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set(xlabel='Year', ylabel='AID flow', title='Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("net_bil_grenada_net_bilateral_aid_flow_Grenada.png", dpi=300, bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country']).mean()['Yield for per person/laboratory']).sort_values(by='Yield for per person/laboratory', ascending=False)<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, xlabel, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='#111111', ax=ax)<0x0A><0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'building_type', 'type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/normalized)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.05}, {'x': 'field', 'y': 5.05}, {'x': 'variable', 'y': 12.05}, {'x': 'field', 'y': 12.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Country','Year','2018']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A>percentage_sr_lanka.plot(kind='bar', title='Percentage of babies born with low-birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.ylabel('Percentage of babies born with low-birthweight in Sri Lanka')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'field', 'y': 75.85}, {'x': 'field', 'y': 75.85}, {'x': 'variable', 'y': 75.85}, {'x': 'field', 'y': 75.85}, {'x': 'variable', 'y': 75.85}, {'x': 'field', 'y': 75.85}, {'x': 'variable', 'y': 75.85}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country/Region'] == 'UK') & (grupo['Value'] > 0.05)]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Country/Region', 'Year'])<0x0A><0x0A># Adding a legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 0.5))<0x0A><0x0A># Displaying the graph<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C = %0.0f)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'field', 'y': 2.08}, {'x': 'variable', 'y': 1.25}, {'x': 'field', 'y': 1.25}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.7 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 34 [32m[1m | Loss :[39m[22m 1.270430088043213



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:34<00:04,  4.82s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4216}, {'x': 1844, 'y': 2954}, {'x': 2888, 'y': 2104}, {'x': 4890, 'y': 2954}, {'x': 5580, 'y': 4216}, {'x': 2888, 'y': 2104}, {'x': 4890, 'y': 2954}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 708}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.33}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.33}, {'x': 'Nike', 'y': 48.09}, {'x': 'Apple', 'y': 48.09}, {'x': 'Male', 'y': 24.11}, {'x': 'Rock', 'y': 24.11}, {'x': 'Sedan', 'y': 24.11}, {'x': 'Spanish', 'y': 48.09}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 190.11, 'y': 60.73}, {'x': 267.29, 'y': 13.48}, {'x': 267.29, 'y': 60.73}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7510, 'y': 114.12}, {'x': 1488, 'y': 364.56}, {'x': 6782, 'y': 41.09}, {'x': 3988, 'y': 364.56}, {'x': 751, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 201.86}, {'x': 1918, 'y': 194.06}, {'x': 1921, 'y': 17.46}, {'x': 1925, 'y': 17.46}, {'x': 1929, 'y': 17.46}, {'x': 1933, 'y': 36.06}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 79.99}, {'x': 1816, 'y': 28.52}, {'x': 1817, 'y': 61.52}, {'x': 1818, 'y': 79.99}, {'x': 1820, 'y': 80.52}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.5}, {'x': 1866, 'y': 268.74}, {'x': 1871, 'y': 110.67}, {'x': 1875, 'y': 268.74}, {'x': 1879, 'y': 268.74}, {'x': 1883, 'y': 268.74}, {'x': 1889, 'y': 268.74}, {'x': 1893, 'y': 268.74}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 676, 'y': 32}, {'x': 570, 'y': 64}, {'x': 462, 'y': 16}, {'x': 570, 'y': 64}, {'x': 676, 'y': 56}, {'x': 462, 'y': 16}, {'x': 712, 'y': 5600}, {'x': 712, 'y': 64}, {'x': 462, 'y': 160}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584}, {'x': 1814, 'y': 146}, {'x': 1821, 'y': 25}, {'x': 1826, 'y': 25}, {'x': 1834, 'y': 25}, {'x': 1838, 'y': 146}, {'x': 1847, 'y': 310}, {'x': 1852, 'y': 308}, {'x': 1858, 'y': 150}, {'x': 1868, 'y': 150}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1975, 'y': 61.22}, {'x': 4790, 'y': 55.00}, {'x': 3444, 'y': 61.22}, {'x': 3138, 'y': 78.63}, {'x': 4790, 'y': 61.22}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1927, 'y': 2885}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.09}, {'x': 726, 'y': 122.09}, {'x': 1576, 'y': 37.09}, {'x': 1576, 'y': 37.09}, {'x': 726, 'y': 122.09}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4296}, {'x': 1806, 'y': 361}, {'x': 1809, 'y': 3616}, {'x': 1814, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4890}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4890}, {'x': 1840, 'y': 3385}, {'x': 1846, 'y': 1910}, {'x': 1854, 'y': 3385}, {'x': 1858, 'y': 4890}, {'x': 1864, 'y': 3385}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1716, 'y': 530}, {'x': 3488, 'y': 625}, {'x': 3488, 'y': 530}, {'x': 1716, 'y': 567}, {'x': 3488, 'y': 625}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:38<00:00,  4.92s/it]




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:09<00:00,  6.49s/it]
[35m|[39m JSON to Vega conversion error rate: [31m50.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.67 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable', 'y': 0.03}, {'x': 'field', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'variable', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'variable', 'y': 6050}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmān Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 99.86}, {'x': 'field', 'y': 55.33}, {'x': 'variable', 'y': 99.86}, {'x': 'field', 'y': 30.25}, {'x': 'variable', 'y': 55.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mArable land (hectares) in Seychelles.plot(kind='bar', figsize=(30,30), color='#006699')<0x0A>plt.title('Arable land (hectares) in Seychelles', fontsize=20)<0x0A>plt.xlabel('Year', fontsize=16)<0x0A>plt.ylabel('Ave.Claim.(inhabitants)', fontsize=16)<0x0A>plt.xticks(rotation=0, fontsize=16)<0x0A>plt.yticks(fontsize=16)<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.16}, {'x': 'field', 'y': 107.65}, {'x': 'variable', 'y': 127.26}, {'x': 'field', 'y': 324.16}, {'x': 'variable', 'y': 324.16}, {'x': 'field', 'y': 324.16}, {'x': 'variable', 'y': 324.16}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'Field', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Field', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.06}, {'x': 'field', 'y': 47.66}, {'x': 'field', 'y': 37.06}, {'x': 'variable', 'y': 12.06}, {'x': 'variable', 'y': 47.66}, {'x': 'field', 'y': 7.21}, {'x': 'variable', 'y': 12.06}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 12.06}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="pastel", ci=None, height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(18, 18)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set(xlabel='Year', ylabel='AID flow', title='Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("net_bil_grenada_net_bilateral_aid_flow_Grenada.png", dpi=300, bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country']).mean()['Yield for per person/laboratory']).sort_values(by='Yield for per person/laboratory', ascending=False)<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, xlabel, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='#111111', ax=ax)<0x0A><0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'building_type', 'type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['top'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(2)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/normalized)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.05}, {'x': 'Field', 'y': 5.05}, {'x': 'Year', 'y': 103.85}, {'x': 'Field', 'y': 103.85}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of babies born with low-birthweight in Sri Lanka', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 17.54}, {'x': 'Field', 'y': 20.03}, {'x': 'Year', 'y': 20.03}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 75}, {'x': 'variable', 'y': 75}, {'x': 'field', 'y': 75}, {'x': 'variable', 'y': 75}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country/Region'] == 'United Kingdom') & (grupo['Province/State'] == 'Kent')]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Asset Capital (Average GDP)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year', 'Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Consumption of Asset Capital (Average GDP (%)', 'Year', 'Year'])<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Asset Capital (Average GDP (%)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of Asset Capital (Average GDP
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 54.05}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 54.05}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 54.05}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'Field', 'y': 2.08}, {'x': 'x', 'y': 2.08}, {'x': 'y': 'Value', 'type': 'quantitative'}}, 'data': {'x': 'Field', 'y': 2.08}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.67 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 35 [32m[1m | Loss :[39m[22m 1.1394762992858887




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:39<00:00,  4.99s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5510, 'y': 4218}, {'x': 2068, 'y': 2104}, {'x': 4622, 'y': 2961}, {'x': 4622, 'y': 2961}, {'x': 2068, 'y': 2104}, {'x': 5510, 'y': 4218}, {'x': 3344, 'y': 3785}, {'x': 4622, 'y': 2104}, {'x': 5510, 'y': 4218}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 708}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.33}, {'x': 'USA', 'y': 24.12}, {'x': 'Dog', 'y': 120.33}, {'x': 'Nike', 'y': 48.08}, {'x': 'Apple', 'y': 48.08}, {'x': 'Male', 'y': 24.12}, {'x': 'Rock', 'y': 24.12}, {'x': 'Sedan', 'y': 24.12}, {'x': 'Spanish', 'y': 48.08}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 267.3, 'y': 13.43}, {'x': 53.88, 'y': 60.63}, {'x': 151.57, 'y': 60.63}, {'x': 267.1, 'y': 60.63}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7150, 'y': 114.12}, {'x': 3525, 'y': 364.16}, {'x': 6755, 'y': 41.09}, {'x': 6755, 'y': 364.16}, {'x': 3525, 'y': 364.16}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 201.86}, {'x': 1918, 'y': 195.52}, {'x': 1923, 'y': 17.24}, {'x': 1928, 'y': 17.24}, {'x': 1930, 'y': 36.06}, {'x': 1932, 'y': 18.28}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 79.99}, {'x': 1819, 'y': 80.24}, {'x': 1820, 'y': 48.52}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.59}, {'x': 1866, 'y': 268.65}, {'x': 1870, 'y': 268.65}, {'x': 1872, 'y': 110.59}, {'x': 1876, 'y': 268.65}, {'x': 1882, 'y': 268.65}, {'x': 1886, 'y': 101.01}, {'x': 1892, 'y': 268.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 606, 'y': 32}, {'x': 464, 'y': 64}, {'x': 560, 'y': 16}, {'x': 234, 'y': 24}, {'x': 560, 'y': 64}, {'x': 606, 'y': 56}, {'x': 712, 'y': 56}, {'x': 464, 'y': 16}, {'x': 606, 'y': 5600}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.01}, {'x': 1815, 'y': 147.48}, {'x': 1821, 'y': 25.84}, {'x': 1828, 'y': 25.84}, {'x': 1835, 'y': 28.01}, {'x': 1840, 'y': 108.64}, {'x': 1849, 'y': 310.14}, {'x': 1857, 'y': 147.48}, {'x': 1865, 'y': 150.22}, {'x': 1872, 'y': 577.71}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4550, 'y': 61.12}, {'x': 3108, 'y': 61.12}, {'x': 4090, 'y': 55.009}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 780, 'y': 121.99}, {'x': 1540, 'y': 38.09}, {'x': 1540, 'y': 39.09}, {'x': 1540, 'y': 39.09}, {'x': 22000, 'y': 366.6}, {'x': 780, 'y': 121.99}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4303}, {'x': 1806, 'y': 3612}, {'x': 1809, 'y': 3612}, {'x': 1814, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4890}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4890}, {'x': 1840, 'y': 3385}, {'x': 1846, 'y': 1910}, {'x': 1854, 'y': 3385}, {'x': 1858, 'y': 4890}, {'x': 1864, 'y': 3385}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1276, 'y': 530}, {'x': 3444, 'y': 625}, {'x': 3444, 'y': 530}, {'x': 1276, 'y': 567}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:49<00:00,  5.48s/it]
[35m|[39m JSON to Vega conversion error rate: [31m45.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.16 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.69 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cosul (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.02}, {'x': 'field', 'y': 0.02}, {'x': 'field', 'y': 0.02}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'variable', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'variable', 'y': 6050}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 91.18}, {'x': 'field', 'y': 55.33}, {'x': 'variable', 'y': 91.18}, {'x': 'field', 'y': 91.18}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(df, 'Year', 'Arable land (hectares) in Seychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.16}, {'x': 'field', 'y': 125.66}, {'x': 'variable', 'y': 324.16}, {'x': 'field', 'y': 324.16}, {'x': 'variable', 'y': 324.16}, {'x': 'variable', 'y': 324.16}, {'x': 'variable', 'y': 324.16}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'Field', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Field', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.06}, {'x': 'field', 'y': 47.66}, {'x': 'field', 'y': 37.06}, {'x': 'variable', 'y': 46.06}, {'x': 'field', 'y': 7.06}, {'x': 'variable', 'y': 46.06}, {'x': 'field', 'y': 7.06}, {'x': 'variable', 'y': 46.06}, {'x': 'variable', 'y': 12.06}, {'x': 'field', 'y': 47.06}, {'x': 'variable', 'y': 12.06}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="pastel", ci=None, height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(15,15)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set(xlabel='Year', ylabel='AID flow', title='Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("net_bil_grenada_net_bilateral_aid_flow_Grenada.png", dpi=300)
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country']).mean()['Yield for per person/laboratory', 'Yield for per person/laboratory'].sum())<0x0A>Country_1981.sort_values(by='Yield for per person/laboratory', ascending=False, inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.head(10)
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, xlabel, ylabel, title, title, ylabel, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Customs and other import duties (as % of tax revenue) of Indonesia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 9.5}, {'x': 'Field', 'y': 7.0}, {'x': 'Nominal', 'y': 7.0}, {'x': 'Nominal', 'y': 7.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'building_type', 'type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/normalized)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.05}, {'x': 'Field', 'y': 5.05}, {'x': 'Year', 'y': 105.68}, {'x': 'Field', 'y': 105.68}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of babies', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 17.54}, {'x': 'Field', 'y': 20.03}, {'x': 'Year', 'y': 20.03}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 75}, {'x': 'variable', 'y': 75}, {'x': 'field', 'y': 75}, {'x': 'variable', 'y': 75}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year'])['Year'].count().reset_index()<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt', xlim=(0, 30), xlabel='Year', ylabel='% of households', title='Percentage of households in Russian Federation that uses iodized salt')
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country'] == 'UK') & (grupo['Type'] == 'Output')]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Consumption of Ánd Capital (A$ % of GND)', '0'])<0x0A><0x0A># Setting the axes labels and displaying the plot<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A><0x0A># Setting the title of the graph<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05))<0x0A><0x0A># Saving the graph<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A># Saving the graph<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'Field', 'y': 2.08}, {'x': 'x': 'Year', 'y': 2.08}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.16 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.69 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 36 [32m[1m | Loss :[39m[22m 1.1736891269683838



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:36<00:04,  4.74s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5510, 'y': 4218}, {'x': 1844, 'y': 2956}, {'x': 3936, 'y': 3775}, {'x': 5510, 'y': 2956}, {'x': 2068, 'y': 2104}, {'x': 4638, 'y': 2104}, {'x': 5510, 'y': 4218}, {'x': 3936, 'y': 2104}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7100}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 690}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6400}, {'x': 'Male', 'y': 690}, {'x': 'Rock', 'y': 7100}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.37}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.3}, {'x': 'Nike', 'y': 48.08}, {'x': 'Apple', 'y': 48.08}, {'x': 'Male', 'y': 24.11}, {'x': 'Rock', 'y': 24.11}, {'x': 'Sedan', 'y': 24.11}, {'x': 'Spanish', 'y': 48.08}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.31}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 267.3, 'y': 13.43}, {'x': 53.88, 'y': 60.63}, {'x': 151.57, 'y': 60.63}, {'x': 267.1, 'y': 60.63}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7154, 'y': 114.12}, {'x': 3586, 'y': 364.56}, {'x': 6752, 'y': 41.09}, {'x': 7154, 'y': 364.56}, {'x': 3586, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 201.86}, {'x': 1918, 'y': 16.46}, {'x': 1921, 'y': 16.46}, {'x': 1925, 'y': 16.46}, {'x': 1929, 'y': 16.46}, {'x': 1933, 'y': 36.06}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 79.99}, {'x': 1819, 'y': 80.28}, {'x': 1820, 'y': 48.52}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.59}, {'x': 1866, 'y': 268.94}, {'x': 1871, 'y': 110.59}, {'x': 1875, 'y': 268.94}, {'x': 1879, 'y': 268.94}, {'x': 1883, 'y': 268.94}, {'x': 1889, 'y': 268.94}, {'x': 1895, 'y': 268.94}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 676, 'y': 32}, {'x': 562, 'y': 64}, {'x': 562, 'y': 16}, {'x': 712, 'y': 56}, {'x': 464, 'y': 16}, {'x': 562, 'y': 64}, {'x': 712, 'y': 24}, {'x': 464, 'y': 16}, {'x': 712, 'y': 56}, {'x': 676, 'y': 56}, {'x': 712, 'y': 64}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.87}, {'x': 1815, 'y': 147.48}, {'x': 1821, 'y': 25.92}, {'x': 1828, 'y': 25.92}, {'x': 1835, 'y': 28.09}, {'x': 1840, 'y': 108.64}, {'x': 1849, 'y': 310.42}, {'x': 1857, 'y': 308.42}, {'x': 1865, 'y': 147.48}, {'x': 1872, 'y': 577.79}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4530, 'y': 61.55}, {'x': 3344, 'y': 61.55}, {'x': 1944, 'y': 55.009}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.09}, {'x': 676, 'y': 122.09}, {'x': 1576, 'y': 37.09}, {'x': 1576, 'y': 40.25}, {'x': 2205, 'y': 365.85}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2935}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentled Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4303}, {'x': 1806, 'y': 3612}, {'x': 1809, 'y': 3612}, {'x': 1814, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4890}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4890}, {'x': 1840, 'y': 3385}, {'x': 1846, 'y': 1910}, {'x': 1854, 'y': 3385}, {'x': 1858, 'y': 4890}, {'x': 1864, 'y': 3385}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1716, 'y': 530.25}, {'x': 3752, 'y': 625.78}, {'x': 3752, 'y': 564.55}, {'x': 1716, 'y': 527.78}, {'x': 3752, 'y': 625.78}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:40<00:00,  5.03s/it]


















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:36<00:04,  4.95s/it]
[35m|[39m JSON to Vega conversion error rate: [31m35.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.64 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cosul (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.02}, {'x': 'field', 'y': 0.02}, {'x': 'field', 'y': 0.02}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'variable', 'y': 18}, {'x': 'field', 'y': 1805}, {'x': 'variable', 'y': 1805}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 91.81}, {'x': 'field', 'y': 55.33}, {'x': 'variable', 'y': 91.81}, {'x': 'field', 'y': 91.81}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(train_df, 'Year', 'Arable land (hectares) in Seychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.16}, {'x': 'field', 'y': 324.16}, {'x': 'variable', 'y': 126.06}, {'x': 'field', 'y': 324.16}, {'x': 'variable', 'y': 324.16}, {'x': 'field', 'y': 324.16}, {'x': 'variable', 'y': 324.16}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.06}, {'x': 'field', 'y': 49.56}, {'x': 'variable', 'y': 37.06}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 15.85}, {'x': 'field', 'y': 15.85}, {'x': 'variable', 'y': 47.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="Net", data=net, kind="bar", palette="pastel", ci=None, height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(18, 18)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set(xlabel='Year', ylabel='Net aid flow from Development Assistance Committee', title='Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("net_bilateral_aid_flow_Grenada_from_development_assistance_committee.png", dpi=300, bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country']).mean()['Yield for per person/laboratory', 'Yield for per person/laboratory'].sum())<0x0A>Country_1981.sort_values(by='Yield for per person/laboratory', ascending=False, inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.head(10)
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, xlabel, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'S$% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.85}, {'x': 'Field', 'y': 7.85}, {'x': 'Nominal', 'y': 7.85}, {'x': 'Nominal', 'y': 7.85}, {'x': 'Field', 'y': 7.85}, {'x': 'Nominal', 'y': 7.85}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'building_type', 'type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Producer in production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 10300}, {'x': 'y', 'y': 7200}, {'x': 'x', 'y': 12800}, {'x': 'y', 'y': 12800}, {'x': 'x', 'y': 7200}, {'x': 'y', 'y': 11400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/normalized)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.09}, {'x': 'Field', 'y': 5.09}, {'x': 'Year', 'y': 12.05}, {'x': 'Field', 'y': 12.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of babies born with low-birthweight in Sri Lanka', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 20.55}, {'x': 'Field', 'y': 17.55}, {'x': 'Year', 'y': 20.55}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'Field', 'y': 75}, {'x': 'Year', 'y': 75}, {'x': 'Field', 'y': 75}, {'x': 'variable', 'y': 75}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country/Region'] == 'UK') & (grupo['Value'] > 0.05)]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Country/Region', 'Year'])<0x0A><0x0A># Adding a legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 0.5))<0x0A><0x0A># Display the graph<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'Field', 'y': 2.08}, {'x': 'x', 'y': 2.08}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.64 [35m|

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:39<00:00,  4.96s/it]
[36m[1mEpoch :[39m[22m 37 [32m[1m | Loss :[39m[22m 1.1979856491088867




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:41<00:00,  5.06s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5510, 'y': 4218}, {'x': 1844, 'y': 2956}, {'x': 3924, 'y': 3775}, {'x': 5510, 'y': 2956}, {'x': 1844, 'y': 2104}, {'x': 3924, 'y': 2104}, {'x': 5510, 'y': 4218}, {'x': 1844, 'y': 2956}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.33}, {'x': 'USA', 'y': 24.12}, {'x': 'Dog', 'y': 120.33}, {'x': 'Nike', 'y': 48.08}, {'x': 'Apple', 'y': 48.08}, {'x': 'Male', 'y': 24.12}, {'x': 'Rock', 'y': 24.12}, {'x': 'Sedan', 'y': 24.12}, {'x': 'Spanish', 'y': 48.08}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.31}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 267.4, 'y': 13.43}, {'x': 53.88, 'y': 60.63}, {'x': 151.57, 'y': 60.63}, {'x': 267.09, 'y': 60.63}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7154, 'y': 364.01}, {'x': 6752, 'y': 41.15}, {'x': 3598, 'y': 364.01}, {'x': 6752, 'y': 113.27}, {'x': 3598, 'y': 227.1}, {'x': 7154, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 201.86}, {'x': 1918, 'y': 16.46}, {'x': 1921, 'y': 16.46}, {'x': 1925, 'y': 16.46}, {'x': 1929, 'y': 16.46}, {'x': 1933, 'y': 36.48}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 79.99}, {'x': 1819, 'y': 80.28}, {'x': 1820, 'y': 80.28}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.59}, {'x': 1864, 'y': 268.79}, {'x': 1869, 'y': 268.79}, {'x': 1873, 'y': 110.67}, {'x': 1877, 'y': 268.79}, {'x': 1879, 'y': 268.79}, {'x': 1883, 'y': 268.79}, {'x': 1887, 'y': 268.79}, {'x': 1891, 'y': 268.79}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 570, 'y': 640}, {'x': 570, 'y': 32}, {'x': 660, 'y': 24}, {'x': 460, 'y': 16}, {'x': 460, 'y': 16}, {'x': 660, 'y': 5600}, {'x': 712, 'y': 640}, {'x': 460, 'y': 160}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584}, {'x': 1815, 'y': 146}, {'x': 1821, 'y': 25}, {'x': 1828, 'y': 25}, {'x': 1832, 'y': 25}, {'x': 1838, 'y': 310}, {'x': 1847, 'y': 308}, {'x': 1852, 'y': 308}, {'x': 1859, 'y': 146}, {'x': 1868, 'y': 150}, {'x': 1872, 'y': 578}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4530, 'y': 61.55}, {'x': 3344, 'y': 61.55}, {'x': 1948, 'y': 55.00}, {'x': 3848, 'y': 78.63}, {'x': 1948, 'y': 61.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1927, 'y': 2885}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 780, 'y': 121.99}, {'x': 1540, 'y': 38.09}, {'x': 1540, 'y': 37.46}, {'x': 1540, 'y': 37.46}, {'x': 22000, 'y': 365.8}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 361}, {'x': 1809, 'y': 3616}, {'x': 1812, 'y': 4914}, {'x': 1815, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4890}, {'x': 1830, 'y': 1904}, {'x': 1836, 'y': 4890}, {'x': 1840, 'y': 3404}, {'x': 1846, 'y': 3404}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1275, 'y': 530}, {'x': 3440, 'y': 625}, {'x': 3440, 'y': 530}, {'x': 1275, 'y': 567}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:42<00:06,  6.05s/it]
[35m|[39m JSON to Vega conversion error rate: [31m40.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.65 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cosul (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.02}, {'x': 'field', 'y': 0.02}, {'x': 'field', 'y': 0.02}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'variable', 'y': 180}, {'x': 'field', 'y': 700}, {'x': 'variable', 'y': 1800}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 91.18}, {'x': 'field', 'y': 55.33}, {'x': 'variable', 'y': 91.18}, {'x': 'field', 'y': 91.18}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(train_df, 'Year', 'Arable land (hectares) in Seychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.14}, {'x': 'field', 'y': 107.65}, {'x': 'variable', 'y': 126.05}, {'x': 'field', 'y': 324.14}, {'x': 'variable', 'y': 324.14}, {'x': 'variable', 'y': 324.14}, {'x': 'variable', 'y': 324.14}, {'x': 'variable', 'y': 324.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'Field', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Field', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.06}, {'x': 'field', 'y': 47.88}, {'x': 'variable', 'y': 7.06}, {'x': 'field', 'y': 47.88}, {'x': 'variable', 'y': 37.06}, {'x': 'field', 'y': 49.56}, {'x': 'variable', 'y': 37.06}, {'x': 'variable', 'y': 47.06}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="Net", data=net, kind="bar", palette="pastel", ci=None, height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(18, 18)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set(xlabel='Year', ylabel='Net aid flow from Development Assistance Committee', title='Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("net_bilateral_aid_flow_Grenada.png", dpi=300, bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country']).mean()['Yield for per person/laboratory', 'Yield for per person/laboratory'].sum())<0x0A>Country_1981.sort_values(by='Yield for per person/laboratory', ascending=False, inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.head(10)
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, x, y, ylabel, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Customs and other import duties (as % of tax revenue) of Indonesia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 9.5}, {'x': 'Field', 'y': 7.0}, {'x': 'Nominal', 'y': 7.0}, {'x': 'Nominal', 'y': 7.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(18, 18))<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['top'].set_color('none')<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_linewidth(2)<0x0A><0x0A>ax.
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/normalized)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.05}, {'x': 'Field', 'y': 5.05}, {'x': 'Year', 'y': 103.85}, {'x': 'Field', 'y': 103.85}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of babies born with low-birthweight in Sri Lanka', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 20.15}, {'x': 'Field', 'y': 17.55}, {'x': 'Year', 'y': 20.15}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'Field', 'y': 75}, {'x': 'Year', 'y': 75}, {'x': 'Field', 'y': 75}, {'x': 'Year', 'y': 75}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year'])<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', ax=ax)<0x0A><0x0A>ax.set_title('Percentage of households in Russian Federation that uses iodized salt', fontsize=16)<0x0A>ax.set_xlabel('Year', fontsize=14)<0x0A>ax.set_ylabel('% of households', fontsize=14)<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country/Region'] == 'UK') & (grupo['Value'] > 0.05)]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Asset Capital (Net $ of G2M)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A># Adding a legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 0.5))<0x0A><0x0A># Display the graph<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (in  % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs weak (2 ± %0.0000)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.04}, {'x': 'field', 'y': 2.04}, {'x': 'variable', 'y': 1.25}, {'x': 'field', 'y': 1.25}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.65 [35m|

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:46<00:00,  5.33s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:42<00:00,  5.10s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5510, 'y': 4218}, {'x': 1844, 'y': 2954}, {'x': 2884, 'y': 2108}, {'x': 4630, 'y': 2954}, {'x': 5510, 'y': 4218}, {'x': 3344, 'y': 3785}, {'x': 4630, 'y': 2108}, {'x': 1844, 'y': 2954}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 708}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.33}, {'x': 'USA', 'y': 24.12}, {'x': 'Dog', 'y': 120.33}, {'x': 'Nike', 'y': 48.09}, {'x': 'Apple', 'y': 48.09}, {'x': 'Male', 'y': 24.12}, {'x': 'Rock', 'y': 24.12}, {'x': 'Sedan', 'y': 24.12}, {'x': 'Spanish', 'y': 48.09}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 275.1, 'y': 13.43}, {'x': 54.57, 'y': 60.63}, {'x': 151.28, 'y': 60.63}, {'x': 275.11, 'y': 13.43}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7154, 'y': 114.12}, {'x': 6752, 'y': 42.01}, {'x': 3598, 'y': 364.2}, {'x': 6752, 'y': 123.89}, {'x': 3598, 'y': 364.2}, {'x': 7154, 'y': 123.89}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 201.86}, {'x': 1918, 'y': 195.52}, {'x': 1923, 'y': 17.24}, {'x': 1928, 'y': 17.24}, {'x': 1930, 'y': 37.01}, {'x': 1932, 'y': 18.28}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 79.99}, {'x': 1820, 'y': 80.29}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.59}, {'x': 1866, 'y': 268.94}, {'x': 1871, 'y': 110.57}, {'x': 1875, 'y': 268.94}, {'x': 1879, 'y': 268.94}, {'x': 1883, 'y': 268.94}, {'x': 1889, 'y': 268.94}, {'x': 1895, 'y': 268.94}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 676, 'y': 32}, {'x': 570, 'y': 64}, {'x': 462, 'y': 16}, {'x': 570, 'y': 16}, {'x': 676, 'y': 56}, {'x': 462, 'y': 16}, {'x': 234, 'y': 24}, {'x': 462, 'y': 16}, {'x': 712, 'y': 56}, {'x': 676, 'y': 56}, {'x': 712, 'y': 64}, {'x': 152, 'y': 16}, {'x': 676, 'y': 32}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.33}, {'x': 1815, 'y': 147.78}, {'x': 1824, 'y': 27.09}, {'x': 1830, 'y': 27.09}, {'x': 1836, 'y': 310.81}, {'x': 1844, 'y': 308.11}, {'x': 1852, 'y': 147.78}, {'x': 1859, 'y': 308.11}, {'x': 1868, 'y': 150.25}, {'x': 1874, 'y': 577.79}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4530, 'y': 61.55}, {'x': 3344, 'y': 61.55}, {'x': 1940, 'y': 55.00}, {'x': 3848, 'y': 61.55}, {'x': 1940, 'y': 55.00}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.09}, {'x': 676, 'y': 122.15}, {'x': 1576, 'y': 75.75}, {'x': 1576, 'y': 37.15}, {'x': 2208, 'y': 365.85}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4303}, {'x': 1806, 'y': 360}, {'x': 1809, 'y': 3603}, {'x': 1812, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4890}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4890}, {'x': 1840, 'y': 3385}, {'x': 1846, 'y': 1910}, {'x': 1854, 'y': 3385}, {'x': 1858, 'y': 4890}, {'x': 1864, 'y': 3385}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1276, 'y': 530}, {'x': 3444, 'y': 625}, {'x': 3444, 'y': 530}, {'x': 1276, 'y': 567}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:45<00:05,  5.12s/it]
[35m|[39m JSON to Vega conversion error rate: [31m40.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.6 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable', 'y': 0.01}, {'x': 'field', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed Youth Population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 12.04}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 12.04}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 91.81}, {'x': 'field', 'y': 55.33}, {'x': 'variable', 'y': 91.81}, {'x': 'field', 'y': 91.81}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mArable land (hectares) in Seychelles.plot(kind='bar', figsize=(30,30), color='black')<0x0A>plt.title('Arable land (hectares) in Seychelles', fontsize=20)<0x0A>plt.xlabel('Year', fontsize=15)<0x0A>plt.ylabel('Arable land (hectares)', fontsize=15)<0x0A>plt.xticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.14}, {'x': 'field', 'y': 324.14}, {'x': 'variable', 'y': 126.06}, {'x': 'field', 'y': 324.14}, {'x': 'variable', 'y': 324.14}, {'x': 'field', 'y': 324.14}, {'x': 'variable', 'y': 324.14}, {'x': 'variable', 'y': 324.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 15.85}, {'x': 'field', 'y': 37.05}, {'x': 'variable', 'y': 49.56}, {'x': 'field', 'y': 15.85}, {'x': 'variable', 'y': 47.66}, {'x': 'field', 'y': 7.25}, {'x': 'variable', 'y': 37.05}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="Net", data=net, kind="bar", palette="pastel", ci=None, height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(15,15)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set(xlabel='Year', ylabel='Net aid flow from Development Assistance Committee', title='Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("net_bilateral_aid_flow_Grenada.png")<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country']).mean()['Yield for per person/laboratory', 'Yield for per person/laboratory'].sum())<0x0A>Country_1981.sort_values(by='Yield for per person/laboratory', ascending=False, inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.head(10)
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, x, y, ylabel, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Customs and other import duties (as % of tax revenue) of Indonesia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 9.5}, {'x': 'Field', 'y': 7.0}, {'x': 'Nominal', 'y': 7.0}, {'x': 'Nominal', 'y': 50.89}, {'x': 'Field', 'y': 7.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'building_type', 'type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(18, 18))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/normalized)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.85}, {'x': 'Field', 'y': 5.85}, {'x': 'Year', 'y': 105.85}, {'x': 'Field', 'y': 105.85}, {'x': 'Year', 'y': 55.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of babies born with low-birthweight in Sri Lanka', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 17.54}, {'x': 'Field', 'y': 20.34}, {'x': 'Year', 'y': 20.34}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'Field', 'y': 75}, {'x': 'Year', 'y': 75}, {'x': 'Field', 'y': 75}, {'x': 'variable', 'y': 75}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country/Region'] == 'UK') & (grupo['Value'] > 0.05)]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Country/Region', 'Year'])<0x0A><0x0A># Adding a legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 0.5))<0x0A><0x0A># Display the graph<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (in  % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'Field', 'y': 2.08}, {'x': 'x', 'y': 2.08}, {'x': 'Field', 'y': 2.08}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.6 [35m|

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:50<00:00,  5.52s/it]
[36m[1mEpoch :[39m[22m 39 [32m[1m | Loss :[39m[22m 0.7770844101905823



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:38<00:04,  4.92s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5554, 'y': 4218}, {'x': 1844, 'y': 2956}, {'x': 3912, 'y': 3774}, {'x': 5554, 'y': 4218}, {'x': 2680, 'y': 2108}, {'x': 4638, 'y': 2956}, {'x': 1844, 'y': 835}, {'x': 3912, 'y': 3774}, {'x': 5554, 'y': 4218}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.33}, {'x': 'USA', 'y': 24.12}, {'x': 'Dog', 'y': 120.33}, {'x': 'Nike', 'y': 48.08}, {'x': 'Apple', 'y': 48.08}, {'x': 'Male', 'y': 24.12}, {'x': 'Rock', 'y': 24.12}, {'x': 'Sedan', 'y': 24.12}, {'x': 'Spanish', 'y': 48.08}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 267.3, 'y': 13.43}, {'x': 53.07, 'y': 60.63}, {'x': 151.57, 'y': 60.63}, {'x': 267.09, 'y': 60.63}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7350, 'y': 114.12}, {'x': 5755, 'y': 227.1}, {'x': 3935, 'y': 364.24}, {'x': 7355, 'y': 364.24}, {'x': 3935, 'y': 364.24}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 201.86}, {'x': 1918, 'y': 195.86}, {'x': 1921, 'y': 16.55}, {'x': 1925, 'y': 16.55}, {'x': 1929, 'y': 36.03}, {'x': 1933, 'y': 36.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 79.99}, {'x': 1816, 'y': 28.52}, {'x': 1819, 'y': 79.99}, {'x': 1820, 'y': 80.29}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.59}, {'x': 1864, 'y': 268.94}, {'x': 1869, 'y': 268.94}, {'x': 1873, 'y': 268.94}, {'x': 1877, 'y': 108.55}, {'x': 1881, 'y': 268.94}, {'x': 1885, 'y': 268.94}, {'x': 1888, 'y': 100.2}, {'x': 1891, 'y': 268.94}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 676, 'y': 32}, {'x': 564, 'y': 64}, {'x': 234, 'y': 24}, {'x': 560, 'y': 64}, {'x': 712, 'y': 56}, {'x': 676, 'y': 24}, {'x': 464, 'y': 16}, {'x': 464, 'y': 16}, {'x': 632, 'y': 64}, {'x': 234, 'y': 24}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584}, {'x': 1815, 'y': 146}, {'x': 1824, 'y': 28}, {'x': 1828, 'y': 28}, {'x': 1834, 'y': 28}, {'x': 1838, 'y': 146}, {'x': 1847, 'y': 311}, {'x': 1854, 'y': 308}, {'x': 1859, 'y': 150}, {'x': 1866, 'y': 150}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4530, 'y': 61.33}, {'x': 3108, 'y': 61.33}, {'x': 4530, 'y': 55.00}, {'x': 3108, 'y': 61.33}, {'x': 2872, 'y': 78.63}, {'x': 3690, 'y': 61.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1925, 'y': 2885}, {'x': 1930, 'y': 2885}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.09}, {'x': 676, 'y': 122.15}, {'x': 1576, 'y': 75.75}, {'x': 1576, 'y': 37.09}, {'x': 2205, 'y': 365.85}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4296}, {'x': 1806, 'y': 361}, {'x': 1809, 'y': 3616}, {'x': 1812, 'y': 4914}, {'x': 1816, 'y': 5760}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4890}, {'x': 1830, 'y': 1904}, {'x': 1836, 'y': 4890}, {'x': 1840, 'y': 3404}, {'x': 1846, 'y': 3404}, {'x': 1852, 'y': 3404}, {'x': 1858, 'y': 4890}, {'x': 1864, 'y': 3404}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1716, 'y': 529.89}, {'x': 3890, 'y': 624.96}, {'x': 3890, 'y': 529.89}, {'x': 1716, 'y': 529.89}, {'x': 3890, 'y': 529.89}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:42<00:00,  5.15s/it]



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:41<00:05,  5.21s/it]
[35m|[39m JSON to Vega conversion error rate: [31m35.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.63 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable', 'y': 0.01}, {'x': 'field', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed Youth Population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 12.04}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 12.04}, {'x': 'field', 'y': 7.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 91.18}, {'x': 'field', 'y': 55.33}, {'x': 'variable', 'y': 91.18}, {'x': 'field', 'y': 91.18}, {'x': 'variable', 'y': 91.18}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(train_df, 'Year', 'Arable land (hectares) in Seychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.16}, {'x': 'field', 'y': 324.16}, {'x': 'variable', 'y': 125.65}, {'x': 'field', 'y': 324.16}, {'x': 'variable', 'y': 324.16}, {'x': 'variable', 'y': 324.16}, {'x': 'variable', 'y': 324.16}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'Field', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Field', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.06}, {'x': 'field', 'y': 49.56}, {'x': 'variable', 'y': 37.06}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 15.85}, {'x': 'field', 'y': 52.05}, {'x': 'variable', 'y': 15.85}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="Net", data=net, kind="bar", palette="pastel", ci=None, height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(18, 18)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set(xlabel='Year', ylabel='Net aid flow from Development Assistance Committee', title='Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("net_bilateral_aid_flow_Grenada.png", dpi=300, bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country']).mean()['Yield for per person/laboratory']).sort_values(by='Yield for per person/laboratory', ascending=False)<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A> grupo_df.plot(kind='bar', figsize=(15,15), color='#115555', title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A>plt.ylabel('5% / poverty lines')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Customs and other import duties (as % of tax revenue) of Indonesia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.07}, {'x': 'Field', 'y': 7.07}, {'x': 'Nominal', 'y': 7.07}, {'x': 'Nominal', 'y': 7.07}, {'x': 'Field', 'y': 7.07}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'building_type', 'type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Producer in production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 10316}, {'x': 'y', 'y': 7266}, {'x': 'x', 'y': 12642}, {'x': 'y', 'y': 11442}, {'x': 'x', 'y': 10316}, {'x': 'y', 'y': 7266}, {'x': 'x', 'y': 11442}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/normalized)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.45}, {'x': 'field', 'y': 55.78}, {'x': 'variable', 'y': 12.05}, {'x': 'field', 'y': 105.65}, {'x': 'variable', 'y': 55.78}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Silence', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 17.55}, {'x': 'Field', 'y': 20.03}, {'x': 'Year', 'y': 20.03}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 75}, {'x': 'variable', 'y': 75}, {'x': 'field', 'y': 75}, {'x': 'variable', 'y': 75}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country/Region'] == 'UK') & (grupo['Value'] > 0.05)]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Country/Region', 'Year'])<0x0A><0x0A># Adding a legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 0.5))<0x0A><0x0A># Display the graph<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (in  % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs weak (2e k/2000)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'field', 'y': 2.08}, {'x': 'variable', 'y': 1.25}, {'x': 'field', 'y': 1.25}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.63 [35m|

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:45<00:00,  5.27s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:06<02:03,  6.48s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:14<02:14,  7.45s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:17<01:32,  5.47s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:23<01:32,  5.77s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:26<01:09,  4.63s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:31<01:05,  4.67s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:35<00:58,  4.47s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:39<00:50,  4.22s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:44<00:50,  4.63s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:49<00:46,  4.63s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:58<00:53,  5.93s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:04<00:48,  6.09s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:11<00:44,  6.30s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:14<00:32,  5.40s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:17<00:23,  4.67s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:21<00:18,  4.54s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:25<00:12,  4.19s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:29<00:08,  4.21s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:33<00:04,  4.14s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:38<00:00,  4.93s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:38<00:00,  4.93s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5554, 'y': 4218}, {'x': 1844, 'y': 2956}, {'x': 3924, 'y': 3775}, {'x': 5554, 'y': 2956}, {'x': 1844, 'y': 4218}, {'x': 2680, 'y': 2104}, {'x': 4638, 'y': 2956}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7100}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 690}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6400}, {'x': 'Male', 'y': 690}, {'x': 'Rock', 'y': 7100}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.33}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.33}, {'x': 'Nike', 'y': 48.08}, {'x': 'Apple', 'y': 48.08}, {'x': 'Male', 'y': 23.86}, {'x': 'Rock', 'y': 238.67}, {'x': 'Sedan', 'y': 23.86}, {'x': 'Spanish', 'y': 48.08}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.31}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 275.18, 'y': 13.43}, {'x': 53.08, 'y': 60.61}, {'x': 275.29, 'y': 60.61}, {'x': 151.35, 'y': 60.61}, {'x': 275.29, 'y': 13.43}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7154, 'y': 364.01}, {'x': 6752, 'y': 42.01}, {'x': 3938, 'y': 364.01}, {'x': 6752, 'y': 113.11}, {'x': 4638, 'y': 227.28}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 201.86}, {'x': 1918, 'y': 195.52}, {'x': 1921, 'y': 16.46}, {'x': 1925, 'y': 16.46}, {'x': 1929, 'y': 16.46}, {'x': 1933, 'y': 36.48}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 59.15}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 79.99}, {'x': 1820, 'y': 80.29}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.59}, {'x': 1866, 'y': 268.94}, {'x': 1871, 'y': 268.94}, {'x': 1875, 'y': 108.55}, {'x': 1879, 'y': 268.94}, {'x': 1883, 'y': 268.94}, {'x': 1889, 'y': 268.94}, {'x': 1893, 'y': 268.94}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 570, 'y': 640}, {'x': 570, 'y': 32}, {'x': 660, 'y': 5600}, {'x': 460, 'y': 16}, {'x': 460, 'y': 16}, {'x': 660, 'y': 5600}, {'x': 660, 'y': 32}, {'x': 712, 'y': 5600}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.33}, {'x': 1821, 'y': 147.75}, {'x': 1828, 'y': 27.09}, {'x': 1835, 'y': 27.09}, {'x': 1842, 'y': 310.89}, {'x': 1849, 'y': 308.11}, {'x': 1856, 'y': 147.75}, {'x': 1865, 'y': 150.25}, {'x': 1872, 'y': 577.95}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4830, 'y': 61.33}, {'x': 3176, 'y': 61.33}, {'x': 4830, 'y': 55.009}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1925, 'y': 2885}, {'x': 1930, 'y': 2885}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1836, 'y': 38.09}, {'x': 696, 'y': 122.15}, {'x': 1836, 'y': 75.71}, {'x': 1836, 'y': 365.85}, {'x': 696, 'y': 122.15}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4296}, {'x': 1806, 'y': 361}, {'x': 1809, 'y': 3616}, {'x': 1814, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4890}, {'x': 1830, 'y': 1904}, {'x': 1836, 'y': 1904}, {'x': 1840, 'y': 3404}, {'x': 1846, 'y': 3404}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1716, 'y': 530.25}, {'x': 3586, 'y': 624.64}, {'x': 3586, 'y': 564.55}, {'x': 1716, 'y': 527.63}, {'x': 3586, 'y': 564.55}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:05<01:48,  5.69s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:10<01:37,  5.42s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:14<01:20,  4.71s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:17<01:04,  4.00s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:23<01:09,  4.61s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:27<01:01,  4.36s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:34<01:10,  5.39s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:40<01:04,  5.40s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:43<00:52,  4.80s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:49<00:52,  5.21s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:55<00:47,  5.28s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:04<00:52,  6.56s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:09<00:42,  6.03s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:13<00:31,  5.31s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:15<00:22,  4.55s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:19<00:17,  4.34s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:22<00:11,  3.89s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:28<00:08,  4.32s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:35<00:05,  5.42s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:41<00:00,  5.07s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:41<00:00,  5.07s/it]
[35m|[39m JSON to Vega conversion error rate: [31m45.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.13 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.7 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable', 'y': 0.01}, {'x': 'field', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'Field', 'y': 6050}, {'x': 'Year', 'y': 6050}, {'x': 'Field', 'y': 6050}, {'x': 'variable': 'Value', 'y': 6050}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 91.81}, {'x': 'field', 'y': 55.33}, {'x': 'field', 'y': 30.25}, {'x': 'variable', 'y': 91.81}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mArable land (hectares) in Seychelles.plot(kind='bar', figsize=(30,30), color='black')<0x0A>plt.title('Arable land (hectares) in Seychelles', fontsize=20)<0x0A>plt.xlabel('Year', fontsize=15)<0x0A>plt.ylabel('Arable land (hectares)', fontsize=15)<0x0A>plt.xticks(rotation=0)<0x0A>plt.yticks(fontsize=15)<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.15}, {'x': 'field', 'y': 125.65}, {'x': 'variable', 'y': 324.15}, {'x': 'field', 'y': 324.15}, {'x': 'variable', 'y': 324.15}, {'x': 'variable', 'y': 324.15}, {'x': 'variable', 'y': 324.15}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 16.66}, {'x': 'field', 'y': 37.06}, {'x': 'variable', 'y': 49.56}, {'x': 'field', 'y': 7.25}, {'x': 'variable', 'y': 16.66}, {'x': 'variable', 'y': 7.25}, {'x': 'variable', 'y': 47.66}, {'x': 'variable', 'y': 37.06}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="Net", data=net, kind="bar", palette="pastel", ci=None, height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(18, 18)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set(xlabel='Year', ylabel='Net aid flow from Development Assistance Committee', title='Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("net_bilateral_aid_flow_Grenada_from_development_assistance_committee.png", dpi=300)
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country']).mean()['Yield for per person/laboratory', 'Yield for per person/laboratory'].sum())<0x0A>Country_1981.sort_values(by='Yield for per person/laboratory', ascending=False, inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.head(10)
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A> grupo_df.plot(kind='bar', figsize=(15,15), color='#11A659', fontsize=15)<0x0A>plt.title('Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka', fontsize=15)<0x0A>plt.ylabel('5% / poverty lines', fontsize=15)<0x0A>plt.xlabel('Year', fontsize=15)<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(fontsize=15)<0x0A>plt.ylabel('5% / poverty lines', fontsize=15)<0x0A>plt.ylim(0, 1)<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'S$% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.05}, {'x': 'Field', 'y': 7.05}, {'x': 'Nominal', 'y': 7.05}, {'x': 'Nominal', 'y': 7.05}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'building_type', 'type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Producer in production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 10316}, {'x': 'y', 'y': 7266}, {'x': 'x', 'y': 12642}, {'x': 'y', 'y': 11442}, {'x': 'x', 'y': 7266}, {'x': 'y', 'y': 11442}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/normalized)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.45}, {'x': 'Field', 'y': 55.85}, {'x': 'Year', 'y': 103.85}, {'x': 'Field', 'y': 103.85}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Silence', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 17.55}, {'x': 'Year', 'y': 20.24}, {'x': 'Field', 'y': 20.24}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'Field', 'y': 75}, {'x': 'Year', 'y': 75}, {'x': 'Field', 'y': 75}, {'x': 'variable', 'y': 75}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country/Region'] == 'UK') & (grupo['Value'] > 0.05)]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Country/Region', 'Year'])<0x0A><0x0A># Adding a legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 0.5))<0x0A><0x0A># Displaying the graph<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (in  % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'Field', 'y': 2.08}, {'x': 'x', 'y': 2.08}, {'x': 'y': 2.08}, {'x': 'Field', 'y': 2.08}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.13 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.7 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:05<01:38,  5.16s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:10<01:38,  5.46s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:14<01:15,  4.44s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:22<01:34,  5.88s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:25<01:15,  5.02s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:30<01:09,  4.97s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:33<00:58,  4.48s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:38<00:53,  4.50s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:43<00:50,  4.57s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:48<00:46,  4.69s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:54<00:45,  5.05s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:01<00:45,  5.71s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:10<00:48,  6.88s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:15<00:37,  6.18s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:17<00:25,  5.09s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:22<00:19,  4.91s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:25<00:13,  4.47s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:30<00:09,  4.54s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:34<00:04,  4.39s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:34<00:04,  4.39s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5510, 'y': 4218}, {'x': 1844, 'y': 2956}, {'x': 3936, 'y': 3774}, {'x': 5510, 'y': 2956}, {'x': 2316, 'y': 2104}, {'x': 4890, 'y': 2956}, {'x': 2316, 'y': 2104}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 708}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.33}, {'x': 'USA', 'y': 24.12}, {'x': 'Dog', 'y': 120.33}, {'x': 'Nike', 'y': 48.33}, {'x': 'Apple', 'y': 48.33}, {'x': 'Male', 'y': 24.12}, {'x': 'Rock', 'y': 24.12}, {'x': 'Sedan', 'y': 24.12}, {'x': 'Spanish', 'y': 48.33}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 278.11, 'y': 13.43}, {'x': 54.58, 'y': 60.63}, {'x': 151.38, 'y': 60.63}, {'x': 278.11, 'y': 13.43}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7154, 'y': 114.12}, {'x': 6752, 'y': 42.18}, {'x': 3598, 'y': 364.2}, {'x': 6752, 'y': 123.87}, {'x': 3598, 'y': 364.2}, {'x': 7154, 'y': 123.87}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 200}, {'x': 1918, 'y': 194.33}, {'x': 1921, 'y': 16.53}, {'x': 1925, 'y': 16.53}, {'x': 1929, 'y': 36.06}, {'x': 1933, 'y': 36.06}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 59.12}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 79.89}, {'x': 1819, 'y': 80.03}, {'x': 1820, 'y': 47.52}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.5}, {'x': 1866, 'y': 268.74}, {'x': 1871, 'y': 268.74}, {'x': 1875, 'y': 110.67}, {'x': 1879, 'y': 268.74}, {'x': 1883, 'y': 268.74}, {'x': 1889, 'y': 268.74}, {'x': 1893, 'y': 268.74}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 606, 'y': 32}, {'x': 462, 'y': 64}, {'x': 234, 'y': 24}, {'x': 560, 'y': 64}, {'x': 296, 'y': 16}, {'x': 696, 'y': 5600}, {'x': 712, 'y': 640}, {'x': 696, 'y': 32}, {'x': 712, 'y': 5600}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584}, {'x': 1815, 'y': 146}, {'x': 1824, 'y': 28}, {'x': 1828, 'y': 28}, {'x': 1834, 'y': 28}, {'x': 1838, 'y': 146}, {'x': 1847, 'y': 311}, {'x': 1854, 'y': 308}, {'x': 1859, 'y': 146}, {'x': 1866, 'y': 151}, {'x': 1872, 'y': 578}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4830, 'y': 61.18}, {'x': 3176, 'y': 61.18}, {'x': 3176, 'y': 55.009}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1925, 'y': 2885}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1834, 'y': 38.09}, {'x': 696, 'y': 122.15}, {'x': 1834, 'y': 75.7}, {'x': 1834, 'y': 365.85}, {'x': 2240, 'y': 365.85}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2931}, {'x': 'USA', 'y': 1474}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1474}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4296}, {'x': 1806, 'y': 3611}, {'x': 1808, 'y': 3611}, {'x': 1812, 'y': 4944}, {'x': 1814, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4890}, {'x': 1828, 'y': 3384}, {'x': 1835, 'y': 1913}, {'x': 1842, 'y': 3384}, {'x': 1838, 'y': 489}, {'x': 1842, 'y': 3384}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1716, 'y': 530.22}, {'x': 3536, 'y': 624.98}, {'x': 3536, 'y': 567.52}, {'x': 1716, 'y': 527.6}, {'x': 3536, 'y': 567.52}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:04<01:20,  4.26s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:08<01:14,  4.16s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:12<01:12,  4.29s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:13<00:47,  2.98s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:20<01:03,  4.25s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:26<01:09,  4.95s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:32<01:08,  5.25s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:37<01:01,  5.12s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:41<00:52,  4.75s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:43<00:41,  4.13s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:46<00:33,  3.77s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [00:57<00:45,  5.74s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:01<00:37,  5.33s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:05<00:29,  4.88s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:09<00:22,  4.49s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:14<00:19,  4.86s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:18<00:13,  4.48s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:23<00:09,  4.57s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:28<00:04,  4.91s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:32<00:00,  4.62s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:32<00:00,  4.62s/it]
[35m|[39m JSON to Vega conversion error rate: [31m40.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.63 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable', 'y': 0.01}, {'x': 'field', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'Field', 'y': 6050}, {'x': 'Year', 'y': 6050}, {'x': 'Field', 'y': 6050}, {'x': 'variable', 'y': 6050}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'Field', 'y': 36.06}, {'x': 'Year', 'y': 36.06}, {'x': 'Field', 'y': 55.33}, {'x': 'Value', 'y': 36.06}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(train_df, 'Year', 'Arable land (hectares) in Seychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.16}, {'x': 'field', 'y': 125.65}, {'x': 'variable', 'y': 324.16}, {'x': 'field', 'y': 324.16}, {'x': 'variable', 'y': 324.16}, {'x': 'variable', 'y': 324.16}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 162}, {'x': 'Year', 'y': 162}, {'x': 'Year', 'y': 162}, {'x': 'Year', 'y': 162}, {'x': 'Year', 'y': 162}, {'x': 'Year', 'y': 162}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.04}, {'x': 'field', 'y': 49.56}, {'x': 'variable', 'y': 37.04}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 15.85}, {'x': 'variable', 'y': 15.85}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="Net", data=net, kind="bar", palette="pastel", ci=None, height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(18, 18)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set(xlabel='Year', ylabel='Net aid flow from Development Assistance Committee', title='Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("net_bilateral_aid_flow_Grenada_from_development_assistance_committee.png", dpi=300)
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country']).mean()['Yield for per person/laboratory', 'Yield for per person/laboratory'].sum())<0x0A>Country_1981.sort_values(by='Yield for per person/laboratory', ascending=False, inplace=True)<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', figsize=(15,15), color='green')<0x0A>plt.xlabel('Country')<0x0A>plt.ylabel('Yield for per person/laboratory')<0x0A>plt.title('Cereal yield in different countries as per the survey of 1981')<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A> grupo_df.plot(kind='bar', figsize=(15,15), color='#133333', edgecolor='white', title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A>plt.ylabel('5$/poverty lines')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Customs and other import duties (as % of tax revenue) of Indonesia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7}, {'x': 'Field', 'y': 68}, {'x': 'Nominal', 'y': 68}, {'x': 'Nominal', 'y': 7}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Producer in production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 10316}, {'x': 'y', 'y': 7266}, {'x': 'x', 'y': 12642}, {'x': 'y', 'y': 11442}, {'x': 'x', 'y': 10316}, {'x': 'y', 'y': 7266}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/normalized)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.45}, {'x': 'Field', 'y': 55.78}, {'x': 'Year', 'y': 103.95}, {'x': 'Field', 'y': 103.95}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Silence', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 17.55}, {'x': 'Year', 'y': 20.24}, {'x': 'Field', 'y': 20.24}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 79}, {'x': 'Field', 'y': 79}, {'x': 'Year', 'y': 79}, {'x': 'Field', 'y': 79}, {'x': 'variable', 'y': 111}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country/Region'] == 'UK') & (grupo['Value'] > 0.05)]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Country/Region', 'Year'])<0x0A><0x0A># Adding a legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 0.5))<0x0A><0x0A># Display the graph<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (in  % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'Field', 'y': 2.08}, {'x': 'x', 'y': 2.08}, {'x': 'y': 'Value', 'y': 2.08}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.63 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:06<01:57,  6.18s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:14<02:13,  7.41s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:17<01:34,  5.53s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:24<01:34,  5.88s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:26<01:10,  4.68s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:31<01:03,  4.56s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:34<00:55,  4.29s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:39<00:54,  4.57s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:45<00:54,  4.95s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:50<00:47,  4.78s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:58<00:53,  5.95s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:07<00:53,  6.74s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:14<00:47,  6.82s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:17<00:33,  5.62s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:20<00:25,  5.01s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:25<00:19,  4.79s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:28<00:13,  4.46s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:32<00:08,  4.32s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:42<00:05,  5.84s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:42<00:05,  5.84s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5554, 'y': 4218}, {'x': 1844, 'y': 2956}, {'x': 3840, 'y': 3785}, {'x': 4590, 'y': 2956}, {'x': 5554, 'y': 4218}, {'x': 2075, 'y': 835}, {'x': 4590, 'y': 2104}, {'x': 2075, 'y': 2104}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.33}, {'x': 'USA', 'y': 24.12}, {'x': 'Dog', 'y': 120.33}, {'x': 'Nike', 'y': 48.08}, {'x': 'Apple', 'y': 48.08}, {'x': 'Male', 'y': 24.12}, {'x': 'Rock', 'y': 24.12}, {'x': 'Sedan', 'y': 24.12}, {'x': 'Spanish', 'y': 48.08}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 275.3, 'y': 13.43}, {'x': 53.82, 'y': 60.63}, {'x': 190.07, 'y': 60.63}, {'x': 275.29, 'y': 60.63}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7342, 'y': 364.01}, {'x': 6786, 'y': 42.18}, {'x': 3881, 'y': 364.01}, {'x': 7342, 'y': 364.01}, {'x': 622, 'y': 113.27}, {'x': 7342, 'y': 227.1}, {'x': 3881, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 200.8}, {'x': 1918, 'y': 195.52}, {'x': 1921, 'y': 16.46}, {'x': 1925, 'y': 16.46}, {'x': 1929, 'y': 16.46}, {'x': 1933, 'y': 36.06}, {'x': 1936, 'y': 195.0}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 59.15}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 79.98}, {'x': 1820, 'y': 80.24}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.59}, {'x': 1866, 'y': 268.79}, {'x': 1871, 'y': 268.79}, {'x': 1875, 'y': 110.59}, {'x': 1879, 'y': 268.79}, {'x': 1883, 'y': 268.79}, {'x': 1889, 'y': 268.79}, {'x': 1893, 'y': 268.79}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 606, 'y': 24}, {'x': 462, 'y': 64}, {'x': 560, 'y': 16}, {'x': 462, 'y': 16}, {'x': 606, 'y': 32}, {'x': 712, 'y': 56}, {'x': 234, 'y': 24}, {'x': 462, 'y': 16}, {'x': 712, 'y': 56}, {'x': 606, 'y': 5600}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.33}, {'x': 1821, 'y': 147.75}, {'x': 1828, 'y': 27.09}, {'x': 1835, 'y': 27.09}, {'x': 1842, 'y': 310.89}, {'x': 1849, 'y': 308.11}, {'x': 1856, 'y': 147.75}, {'x': 1865, 'y': 150.38}, {'x': 1872, 'y': 577.95}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4880, 'y': 61.33}, {'x': 3244, 'y': 61.33}, {'x': 4880, 'y': 55.009}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2886}, {'x': 1925, 'y': 2886}, {'x': 1930, 'y': 2886}, {'x': 1939, 'y': 2886}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1734, 'y': 38.09}, {'x': 696, 'y': 122.15}, {'x': 1734, 'y': 75.75}, {'x': 1586, 'y': 39.09}, {'x': 1734, 'y': 37.09}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2931}, {'x': 'USA', 'y': 1474}, {'x': 'Dog', 'y': 877}, {'x': 'Nike', 'y': 1474}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4296}, {'x': 1806, 'y': 3611}, {'x': 1809, 'y': 3611}, {'x': 1814, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4890}, {'x': 1830, 'y': 1904}, {'x': 1836, 'y': 4890}, {'x': 1840, 'y': 3387}, {'x': 1846, 'y': 3387}, {'x': 1852, 'y': 3387}, {'x': 1858, 'y': 4890}, {'x': 1877, 'y': 3387}, {'x': 1884, 'y': 1911}, {'x': 1892, 'y': 1911}, {'x': 1898, 'y': 4890}, {'x': 1899, 'y': 3387}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1275, 'y': 529.89}, {'x': 3840, 'y': 624.96}, {'x': 384, 'y': 529.89}, {'x': 3840, 'y': 529.89}, {'x': 1275, 'y': 529.89}, {'x': 3840, 'y': 529.89}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:04<01:19,  4.16s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:08<01:17,  4.29s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:14<01:22,  4.84s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:15<00:53,  3.32s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:19<00:57,  3.85s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:23<00:54,  3.91s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:29<00:59,  4.56s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:34<00:57,  4.78s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:38<00:47,  4.31s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:42<00:42,  4.29s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:47<00:40,  4.45s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [00:57<00:49,  6.25s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:06<00:49,  7.14s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:10<00:36,  6.13s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:13<00:25,  5.19s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:17<00:19,  4.85s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:20<00:13,  4.36s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:32<00:12,  6.50s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:41<00:07,  7.13s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:43<00:00,  5.20s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:43<00:00,  5.20s/it]
[35m|[39m JSON to Vega conversion error rate: [31m45.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.16 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.63 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable', 'y': 0.01}, {'x': 'field', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'Field', 'y': 6050}, {'x': 'Year', 'y': 700}, {'x': 'Field', 'y': 700}, {'x': 'variable', 'y': 165}, {'x': 'variable', 'y': 165}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 91.18}, {'x': 'field', 'y': 55.33}, {'x': 'field', 'y': 30.25}, {'x': 'variable', 'y': 91.18}, {'x': 'variable', 'y': 36.28}, {'x': 'field', 'y': 36.28}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(train_df, 'Year', 'Arable land (hectares) in Seychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.16}, {'x': 'field', 'y': 125.65}, {'x': 'variable', 'y': 324.16}, {'x': 'field', 'y': 324.16}, {'x': 'variable', 'y': 324.16}, {'x': 'variable', 'y': 324.16}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.06}, {'x': 'field', 'y': 49.56}, {'x': 'variable', 'y': 37.06}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 15.85}, {'x': 'variable', 'y': 15.85}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="Net", data=net, kind="bar", palette="pastel", ci=None, height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(18, 18)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set(xlabel='Year', ylabel='Net aid flow from Development Assistance Committee', title='Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("net_bilateral_aid_flow_Grenada_from_development_assistance_committee.png", dpi=300)
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country']).mean()['Yield for per person/laboratory']).sort_values(by='Yield for per person/laboratory', ascending=False)<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', figsize=(15,15), color='green')<0x0A>plt.xlabel('Country')<0x0A>plt.ylabel('Yield for per person/laboratory')<0x0A>plt.title('Cereal yield in different countries as per the survey of 1981')<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A> grupo_df.plot(kind='bar', figsize=(15,15), color='#133333', edgecolor='white', title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A>plt.ylabel('5% / poverty lines')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Customs and other import duties (as % of tax revenue) of Indonesia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7}, {'x': 'Field', 'y': 7}, {'x': 'Nominal', 'y': 7}, {'x': 'Nominal', 'y': 7}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'building_type', 'type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['top'].set_color('none')<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_linewidth
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/normalized)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.45}, {'x': 'Field', 'y': 55.78}, {'x': 'Year', 'y': 103.95}, {'x': 'Field', 'y': 103.95}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Silence', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 17.55}, {'x': 'Year', 'y': 20.03}, {'x': 'Field', 'y': 20.03}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'Field', 'y': 75}, {'x': 'Year', 'y': 75}, {'x': 'Field', 'y': 75}, {'x': 'variable', 'y': 75}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country/Region'] == 'UK') & (grupo['Value'] > 0.05)]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.tick_params(bottom=False, top=True, left=False, right=False)<0x0A>ax.tick_params(top=False, bottom=False, left=False, right=False)<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.tick_params(bottom=False, top=True, left=False, right=False)<0x0A><0x0A># Plotting the graph<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (in  % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5}, {'x': 'Field', 'y': quantitative'}}, 'data': {'x': 'Year', 'y': 5}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.16 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.63 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:05<01:44,  5.49s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:10<01:38,  5.47s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:13<01:14,  4.36s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:20<01:21,  5.10s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:23<01:04,  4.29s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:26<00:57,  4.14s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:32<00:58,  4.49s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:39<01:05,  5.44s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:44<00:57,  5.19s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:48<00:50,  5.00s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:54<00:47,  5.30s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:03<00:49,  6.24s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:10<00:45,  6.56s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:14<00:34,  5.76s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:17<00:24,  4.90s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:23<00:21,  5.35s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:28<00:15,  5.23s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:33<00:10,  5.05s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:38<00:04,  4.99s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:38<00:04,  4.99s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5554, 'y': 4218}, {'x': 1844, 'y': 2954}, {'x': 3132, 'y': 3776}, {'x': 4590, 'y': 2954}, {'x': 2310, 'y': 2104}, {'x': 4590, 'y': 2104}, {'x': 5554, 'y': 4218}, {'x': 2310, 'y': 2104}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.33}, {'x': 'USA', 'y': 24.12}, {'x': 'Dog', 'y': 120.33}, {'x': 'Nike', 'y': 48.08}, {'x': 'Apple', 'y': 48.08}, {'x': 'Male', 'y': 24.12}, {'x': 'Rock', 'y': 24.12}, {'x': 'Sedan', 'y': 24.12}, {'x': 'Spanish', 'y': 48.08}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.31}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 267.4, 'y': 13.43}, {'x': 53.08, 'y': 60.63}, {'x': 151.57, 'y': 60.63}, {'x': 267.04, 'y': 60.63}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7342, 'y': 364.01}, {'x': 7342, 'y': 364.01}, {'x': 5768, 'y': 227.1}, {'x': 393, 'y': 364.01}, {'x': 7342, 'y': 364.01}, {'x': 7342, 'y': 113.27}, {'x': 7342, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 200.8}, {'x': 1918, 'y': 195.52}, {'x': 1921, 'y': 16.53}, {'x': 1925, 'y': 16.53}, {'x': 1929, 'y': 16.53}, {'x': 1933, 'y': 36.06}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.98}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 79.98}, {'x': 1820, 'y': 80.28}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.59}, {'x': 1866, 'y': 268.79}, {'x': 1871, 'y': 268.79}, {'x': 1875, 'y': 110.59}, {'x': 1879, 'y': 268.79}, {'x': 1883, 'y': 268.79}, {'x': 1889, 'y': 268.79}, {'x': 1893, 'y': 268.79}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 632, 'y': 32}, {'x': 462, 'y': 64}, {'x': 462, 'y': 16}, {'x': 234, 'y': 24}, {'x': 560, 'y': 64}, {'x': 632, 'y': 56}, {'x': 712, 'y': 64}, {'x': 234, 'y': 16}, {'x': 632, 'y': 56}, {'x': 712, 'y': 64}, {'x': 152, 'y': 16}, {'x': 632, 'y': 32}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.33}, {'x': 1821, 'y': 147.75}, {'x': 1828, 'y': 27.09}, {'x': 1835, 'y': 27.09}, {'x': 1842, 'y': 310.81}, {'x': 1849, 'y': 308.11}, {'x': 1856, 'y': 147.75}, {'x': 1865, 'y': 150.38}, {'x': 1872, 'y': 577.95}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4884, 'y': 61.33}, {'x': 3244, 'y': 61.33}, {'x': 1742, 'y': 55.00}, {'x': 4884, 'y': 55.00}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1925, 'y': 2885}, {'x': 1930, 'y': 2885}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.05}, {'x': 676, 'y': 122.15}, {'x': 1576, 'y': 75.05}, {'x': 1576, 'y': 37.15}, {'x': 22080, 'y': 365.85}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2931}, {'x': 'USA', 'y': 1474}, {'x': 'Dog', 'y': 877}, {'x': 'Nike', 'y': 1474}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4296}, {'x': 1806, 'y': 3611}, {'x': 1808, 'y': 3611}, {'x': 1812, 'y': 4913}, {'x': 1814, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4890}, {'x': 1827, 'y': 3385}, {'x': 1833, 'y': 1904}, {'x': 1836, 'y': 4894}, {'x': 1839, 'y': 3385}, {'x': 1840, 'y': 3412}, {'x': 1844, 'y': 3412}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1716, 'y': 529.89}, {'x': 3755, 'y': 624.96}, {'x': 3755, 'y': 564.86}, {'x': 1716, 'y': 529.89}, {'x': 3755, 'y': 624.96}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:04<01:19,  4.20s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:08<01:18,  4.34s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:13<01:19,  4.67s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:14<00:52,  3.25s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:20<01:01,  4.12s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:24<00:57,  4.14s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:33<01:13,  5.66s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:37<01:02,  5.24s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:47<01:12,  6.56s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:50<00:54,  5.42s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:53<00:43,  4.87s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:04<00:52,  6.53s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:07<00:39,  5.70s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:11<00:30,  5.14s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:15<00:23,  4.78s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:21<00:19,  4.97s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:24<00:13,  4.63s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:34<00:12,  6.21s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:41<00:06,  6.30s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:44<00:00,  5.22s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:44<00:00,  5.22s/it]
[35m|[39m JSON to Vega conversion error rate: [31m40.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.67 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable', 'y': 0.01}, {'x': 'field', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'Field', 'y': 6050}, {'x': 'Year', 'y': 700}, {'x': 'Field', 'y': 700}, {'x': 'variable', 'y': 180}, {'x': 'variable', 'y': 1800}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmili Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'Field', 'y': 36.09}, {'x': 'Year', 'y': 36.09}, {'x': 'Field', 'y': 55.33}, {'x': 'Value', 'y': 36.09}, {'x': 'Field', 'y': 36.09}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(train_df, 'Year', 'Arable land (hectares) in Seychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.16}, {'x': 'field', 'y': 125.65}, {'x': 'variable', 'y': 324.16}, {'x': 'field', 'y': 324.16}, {'x': 'variable', 'y': 324.16}, {'x': 'field', 'y': 324.16}, {'x': 'variable', 'y': 324.16}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.04}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.04}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 15.85}, {'x': 'variable', 'y': 15.85}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="Net", data=net, kind="bar", palette="pastel", ci=None, height=15, aspect=1.5)<0x0A>g.despine(left=True)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=16, y=1.01)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("net_bilateral_aid_flow_Grenada.png")<0x0A><0x0A># Show plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country']).mean()['Yield for per headcountry'].sort_values(ascending=False).head(10))<0x0A>Country_1981.index = Country_1981.index.map(int)<0x0A>Country_1981.sort_values(ascending=False).plot(kind='bar', figsize=(15,15), color='green')<0x0A>Country_1981.set_title('Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield for per headcountry')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A> grupo_df.plot(kind='bar', figsize=(15,15), color='#133333', edgecolor='white', title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A>plt.ylabel('5$/poverty lines')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'S$% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.05}, {'x': 'Field', 'y': 7.05}, {'x': 'Nominal', 'y': 7.05}, {'x': 'Nominal', 'y': 7.05}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'n_procedures', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type',
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Producer in production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'year', 'y': 10330}, {'x': 'field', 'y': 7660}, {'x': 'field', 'y': 12640}, {'x': 'field', 'y': 11480}, {'x': 'variable', 'y': 11480}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/normalized)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.45}, {'x': 'Field', 'y': 55.78}, {'x': 'Year', 'y': 103.85}, {'x': 'Field', 'y': 103.85}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Silence', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 17.55}, {'x': 'Year', 'y': 20.24}, {'x': 'Field', 'y': 20.24}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 79}, {'x': 'Field', 'y': 79}, {'x': 'Year', 'y': 79}, {'x': 'Field', 'y': 79}, {'x': 'variable', 'y': 79}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country/Region'] == 'UK') & (grupo['Value'] > 0.05)]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.tick_params(labelsize=16)<0x0A><0x0A># Plotting the graph<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A>ax.spines['left'].set_visible(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (in  % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C = {'value': {'median': {'median': {'type': 'quantitative'}}, 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'Field', 'y': 2.08}, {'x': 'Value', 'y': 2.08}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.67 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:06<02:11,  6.94s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:14<02:13,  7.44s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:18<01:36,  5.67s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:24<01:32,  5.80s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:26<01:08,  4.59s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:31<01:04,  4.57s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:34<00:55,  4.25s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:39<00:54,  4.52s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:45<00:52,  4.73s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:50<00:48,  4.90s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:59<00:54,  6.05s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:06<00:52,  6.51s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:12<00:45,  6.45s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:16<00:32,  5.44s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:19<00:23,  4.77s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:23<00:18,  4.65s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:27<00:12,  4.33s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:31<00:08,  4.44s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:37<00:04,  4.73s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5554, 'y': 4218}, {'x': 1844, 'y': 2954}, {'x': 5554, 'y': 4218}, {'x': 3344, 'y': 3785}, {'x': 4590, 'y': 2104}, {'x': 1844, 'y': 3375}, {'x': 2310, 'y': 2104}, {'x': 5554, 'y': 2104}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 708}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}, {'x': 'Red', 'y': 1010}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.33}, {'x': 'USA', 'y': 24.12}, {'x': 'Dog', 'y': 120.33}, {'x': 'Nike', 'y': 48.08}, {'x': 'Apple', 'y': 48.08}, {'x': 'Male', 'y': 24.12}, {'x': 'Rock', 'y': 24.12}, {'x': 'Sedan', 'y': 24.12}, {'x': 'Spanish', 'y': 48.08}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 278.07, 'y': 13.43}, {'x': 54.57, 'y': 60.76}, {'x': 151.59, 'y': 60.76}, {'x': 278.23, 'y': 60.76}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7342, 'y': 364.01}, {'x': 5786, 'y': 226.04}, {'x': 3881, 'y': 364.01}, {'x': 7342, 'y': 364.01}, {'x': 7342, 'y': 113.17}, {'x': 5786, 'y': 42.81}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 201.86}, {'x': 1918, 'y': 195.52}, {'x': 1921, 'y': 16.46}, {'x': 1925, 'y': 16.46}, {'x': 1929, 'y': 16.46}, {'x': 1933, 'y': 36.48}, {'x': 1936, 'y': 195.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 79.99}, {'x': 1819, 'y': 80.28}, {'x': 1820, 'y': 47.52}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.59}, {'x': 1866, 'y': 268.94}, {'x': 1871, 'y': 268.94}, {'x': 1875, 'y': 110.57}, {'x': 1879, 'y': 268.94}, {'x': 1883, 'y': 268.94}, {'x': 1889, 'y': 268.94}, {'x': 1893, 'y': 268.94}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 583.54, 'y': 638.08}, {'x': 676.2, 'y': 56.11}, {'x': 585.41, 'y': 16.22}, {'x': 527.68, 'y': 24}, {'x': 521.4, 'y': 16.22}, {'x': 520.06, 'y': 24}, {'x': 46.26, 'y': 16.22}, {'x': 555.41, 'y': 64.14}, {'x': 45.21, 'y': 16.22}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.33}, {'x': 1821, 'y': 147.75}, {'x': 1828, 'y': 27.09}, {'x': 1835, 'y': 27.09}, {'x': 1842, 'y': 310.86}, {'x': 1849, 'y': 308.11}, {'x': 1856, 'y': 147.75}, {'x': 1865, 'y': 150.38}, {'x': 1872, 'y': 577.95}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4880, 'y': 61.33}, {'x': 3712, 'y': 55.00}, {'x': 4880, 'y': 55.00}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1925, 'y': 2885}, {'x': 1930, 'y': 2885}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1734, 'y': 38.09}, {'x': 684, 'y': 122.15}, {'x': 1182, 'y': 75.03}, {'x': 1546, 'y': 39.09}, {'x': 1680, 'y': 39.09}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2931}, {'x': 'USA', 'y': 1474}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1474}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4296}, {'x': 1806, 'y': 3611}, {'x': 1808, 'y': 3611}, {'x': 1812, 'y': 4913}, {'x': 1814, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4890}, {'x': 1827, 'y': 3385}, {'x': 1832, 'y': 1904}, {'x': 1838, 'y': 1898}, {'x': 1841, 'y': 3407}, {'x': 1840, 'y': 3407}, {'x': 1838, 'y': 3904}, {'x': 1844, 'y': 3407}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1275, 'y': 529.79}, {'x': 3440, 'y': 624.96}, {'x': 3440, 'y': 564.6}, {'x': 1630, 'y': 527.6}, {'x': 3440, 'y': 529.79}, {'x': 1275, 'y': 564.6}, {'x': 3440, 'y': 529.79}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
  5%|█████▋                                                                                                            | 1/20 [00:05<01:48,  5.71s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:11<01:43,  5.75s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:17<00:58,  3.66s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:23<01:06,  4.41s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:26<00:58,  4.17s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:33<01:03,  4.90s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:43<01:18,  6.54s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:49<01:10,  6.43s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:53<00:55,  5.54s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:58<00:49,  5.50s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:08<00:54,  6.75s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:17<00:53,  7.61s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:22<00:39,  6.61s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:25<00:28,  5.62s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:29<00:20,  5.13s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:32<00:13,  4.53s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:46<00:14,  7.39s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:53<00:07,  7.18s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:53<00:07,  7.18s/it]
[35m|[39m JSON to Vega conversion error rate: [31m50.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.7 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable', 'y': 0.01}, {'x': 'field', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'Field', 'y': 6050}, {'x': 'Year', 'y': 6050}, {'x': 'Field', 'y': 6050}, {'x': 'variable': 'Value', 'y': 185}, {'x': 'variable': 'Value', 'y': 1850}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 95.2}, {'x': 'field', 'y': 55.33}, {'x': 'variable', 'y': 95.26}, {'x': 'field', 'y': 39.22}, {'x': 'variable', 'y': 39.22}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(ar_df, 'Year', 'Arable land (hectares) in Seychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.86}, {'x': 'field', 'y': 125.65}, {'x': 'variable', 'y': 324.86}, {'x': 'field', 'y': 324.86}, {'x': 'variable', 'y': 324.86}, {'x': 'field', 'y': 324.86}, {'x': 'variable', 'y': 324.86}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.04}, {'x': 'field', 'y': 49.56}, {'x': 'variable', 'y': 37.04}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 15.85}, {'x': 'field', 'y': 15.85}, {'x': 'variable', 'y': 47.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##############################################################################<0x0A>#################################################################################<0x0A>###################################################################################<0x0A>#################################################################################################<0x0A>#########################<0x0A>#########################<0x0A>#######################<0x0A>#######################<0x0A>#####################<0x0A>###################<0x0A>#################<0x0A>#################<0x0A>###############<0x0A>###############<0x0A>###############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>#
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country']).mean()['Yield for per person/laboratory', 'Yield for per person/laboratory'].sum())<0x0A>Country_1981.sort_values(by='Yield for per person/laboratory', ascending=False, inplace=True)<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.head()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A> grupo_df.plot(kind='bar', figsize=(15,15), color='#133333', edgecolor='white', title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A>plt.ylabel('5% / poverty lines')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'S$% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'Field', 'y': 7.55}, {'x': 'Nominal', 'y': 6.25}, {'x': 'Nominal', 'y': 7.55}, {'x': 'Field', 'y': 6.25}, {'x': 'Nominal', 'y': 7.55}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'n_procedures', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type',
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(18, 18))<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['top'].set_color('none')<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A><0x0A>ax.spines['bottom'].set_linewidth(3)<0x0A><0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_line
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/normalized)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.45}, {'x': 'Field', 'y': 55.78}, {'x': 'Year', 'y': 103.85}, {'x': 'Field', 'y': 103.85}, {'x': 'Year', 'y': 55.78}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Silence', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 17.54}, {'x': 'Field', 'y': 20.34}, {'x': 'Year', 'y': 20.34}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 75}, {'x': 'field', 'y': 75}, {'x': 'variable', 'y': 75}, {'x': 'field', 'y': 75}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country/Region'] == 'UK') & (grupo['Value'] > 0.05)]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.tick_params(bottom=False, top=True, left=False, right=False)<0x0A>ax.tick_params(top=False, bottom=False, left=False, right=False)<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.tick_params(bottom=False, top=True, left=False, right=False)<0x0A><0x0A># Plotting the graph<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (in  % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 54.05}, {'x': 'field', 'y': 18.25}, {'x': 'field', 'y': 18.25}, {'x': 'field', 'y': 54.05}, {'x': 'field', 'y': 18.25}, {'x': 'field', 'y': 18.25}, {'x': 'field', 'y': 18.25}, {'x': 'field', 'y': 18.25}, {'x': 'field', 'y': 18.25}, {'x': 'field', 'y': 18.25}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C = %0.0f)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'Field', 'y': quantitative}}]]} {'x': 'Year', 'y': 2.08}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.7 [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:56<00:00,  5.82s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:56<00:00,  5.82s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:05<01:52,  5.94s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:11<01:47,  5.95s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:15<01:21,  4.82s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:24<01:44,  6.53s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:27<01:19,  5.29s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:32<01:10,  5.04s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:35<00:58,  4.49s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:40<00:54,  4.50s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:45<00:51,  4.68s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:49<00:46,  4.65s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:55<00:45,  5.02s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:03<00:47,  5.99s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:14<00:50,  7.28s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:17<00:36,  6.05s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:20<00:25,  5.14s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:24<00:19,  4.97s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:28<00:13,  4.51s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:32<00:08,  4.38s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:37<00:04,  4.69s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:37<00:04,  4.69s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5554, 'y': 4218}, {'x': 1844, 'y': 2952}, {'x': 4590, 'y': 2952}, {'x': 2317, 'y': 2108}, {'x': 4590, 'y': 2108}, {'x': 2317, 'y': 2108}, {'x': 5554, 'y': 4218}, {'x': 4590, 'y': 2952}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 708}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.33}, {'x': 'USA', 'y': 24.12}, {'x': 'Dog', 'y': 120.33}, {'x': 'Nike', 'y': 48.08}, {'x': 'Apple', 'y': 48.08}, {'x': 'Male', 'y': 24.12}, {'x': 'Rock', 'y': 24.12}, {'x': 'Sedan', 'y': 24.12}, {'x': 'Spanish', 'y': 48.08}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 278.07, 'y': 13.43}, {'x': 54.41, 'y': 60.62}, {'x': 151.37, 'y': 60.62}, {'x': 278.29, 'y': 60.62}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7342, 'y': 114.12}, {'x': 5787, 'y': 226.08}, {'x': 3890, 'y': 364.2}, {'x': 6749, 'y': 42.81}, {'x': 7342, 'y': 364.2}, {'x': 1408, 'y': 364.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 201.86}, {'x': 1918, 'y': 195.52}, {'x': 1923, 'y': 17.24}, {'x': 1928, 'y': 17.24}, {'x': 1930, 'y': 36.24}, {'x': 1932, 'y': 18.48}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 59.15}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 79.98}, {'x': 1820, 'y': 80.24}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.59}, {'x': 1866, 'y': 268.94}, {'x': 1871, 'y': 268.94}, {'x': 1875, 'y': 110.57}, {'x': 1879, 'y': 268.94}, {'x': 1883, 'y': 268.94}, {'x': 1889, 'y': 268.94}, {'x': 1896, 'y': 268.94}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 583.54, 'y': 638.08}, {'x': 676.2, 'y': 56.11}, {'x': 585.29, 'y': 16.22}, {'x': 527.66, 'y': 24}, {'x': 521.4, 'y': 16.22}, {'x': 585.43, 'y': 63.68}, {'x': 521.41, 'y': 56.11}, {'x': 77.26, 'y': 63.98}, {'x': 712.63, 'y': 24}, {'x': 481.0, 'y': 16.22}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.33}, {'x': 1815, 'y': 147.75}, {'x': 1824, 'y': 27.09}, {'x': 1832, 'y': 27.09}, {'x': 1839, 'y': 310.15}, {'x': 1848, 'y': 309.1}, {'x': 1856, 'y': 147.75}, {'x': 1866, 'y': 150.38}, {'x': 1872, 'y': 577.95}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4884, 'y': 61.33}, {'x': 3176, 'y': 61.33}, {'x': 4884, 'y': 55.009}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1925, 'y': 2885}, {'x': 1930, 'y': 2885}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.05}, {'x': 676, 'y': 122.15}, {'x': 1576, 'y': 37.45}, {'x': 1576, 'y': 40.25}, {'x': 2208, 'y': 365.85}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2931}, {'x': 'USA', 'y': 1474}, {'x': 'Dog', 'y': 877}, {'x': 'Nike', 'y': 1474}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4296}, {'x': 1806, 'y': 3611}, {'x': 1809, 'y': 3611}, {'x': 1814, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4890}, {'x': 1827, 'y': 3385}, {'x': 1833, 'y': 1904}, {'x': 1837, 'y': 4890}, {'x': 1840, 'y': 3412}, {'x': 1844, 'y': 3412}, {'x': 1848, 'y': 1904}, {'x': 1856, 'y': 3412}, {'x': 1864, 'y': 3412}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1110, 'y': 529.89}, {'x': 3480, 'y': 624.96}, {'x': 3480, 'y': 564.6}, {'x': 1940, 'y': 527.6}, {'x': 3480, 'y': 564.96}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:04<01:18,  4.12s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:08<01:13,  4.11s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:13<01:20,  4.76s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:15<00:55,  3.45s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:23<01:16,  5.12s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:26<01:04,  4.62s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:32<01:06,  5.09s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:35<00:51,  4.30s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:40<00:49,  4.51s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:43<00:39,  3.95s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:47<00:35,  3.98s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [00:57<00:47,  5.95s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:02<00:39,  5.62s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:08<00:33,  5.55s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:12<00:25,  5.11s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:15<00:18,  4.69s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:18<00:12,  4.21s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:29<00:12,  6.04s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:35<00:06,  6.06s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:38<00:00,  4.93s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:38<00:00,  4.93s/it]
[35m|[39m JSON to Vega conversion error rate: [31m40.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.63 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable', 'y': 0.01}, {'x': 'field', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed Youth Population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'Field', 'y': 7.55}, {'x': 'Year', 'y': 7.55}, {'x': 'Field', 'y': 7.55}, {'x': 'Year', 'y': 7.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'Field', 'y': 36.06}, {'x': 'Year', 'y': 36.06}, {'x': 'Field', 'y': 55.33}, {'x': 'Value', 'y': 36.06}, {'x': 'Field', 'y': 36.06}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(ar_df, 'Year', 'Arable land (hectares) in Seychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 323.86}, {'x': 'field', 'y': 323.86}, {'x': 'variable', 'y': 125.65}, {'x': 'field', 'y': 323.86}, {'x': 'variable', 'y': 323.86}, {'x': 'field', 'y': 323.86}, {'x': 'variable', 'y': 323.86}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.04}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.04}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 15.85}, {'x': 'field', 'y': 15.85}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="Net", data=net, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.despine(left=True)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=16)
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country']).mean()['Yield for per person/laboratory', 'Yield for per person/laboratory'].sum())<0x0A>Country_1981.sort_values(by='Yield for per person/laboratory', ascending=False, inplace=True)<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.head()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A> grupo_df.plot(kind='bar', figsize=(15,15), color='#133333', edgecolor='white', title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A>plt.ylabel('5$/poverty lines')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Customs and other import duties (as % of tax revenue) of Indonesia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.07}, {'x': 'Field', 'y': 7.07}, {'x': 'Nominal', 'y': 6.26}, {'x': 'Nominal', 'y': 7.07}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'n_procedures', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type',
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Producer in production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 10316}, {'x': 'y', 'y': 7266}, {'x': 'x', 'y': 12642}, {'x': 'y', 'y': 12642}, {'x': 'x', 'y': 7266}, {'x': 'y', 'y': 62886}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/normalized)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.45}, {'x': 'Field', 'y': 55.78}, {'x': 'Year', 'y': 103.95}, {'x': 'Field', 'y': 103.95}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Silence', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 17.54}, {'x': 'Field', 'y': 20.34}, {'x': 'Year', 'y': 20.34}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'Field', 'y': 75}, {'x': 'Year', 'y': 75}, {'x': 'Field', 'y': 75}, {'x': 'variable', 'y': 75}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo["Country"] == "United Kingdom") & (grupo["Province"] == "England")]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos["Year"], grupo_2)<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(grupos["Year"], grupo_2, marker='o', color='black')<0x0A><0x0A># Setting the title<0x0A>ax.set_title("Capital used up in the process of production in United Kingdom")<0x0A>ax.set_xlabel("Year")<0x0A>ax.set_ylabel("Consumption of Ánd Capital (A$ % of GND)")<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels(grupos["Year"], rotation=90)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 0.5))<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 0.5))<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 0.5))<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 0.5))<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 0.5))<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 0.5))<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (in  % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C = %0.0f)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'Field', 'y': quantitative}}]]} {'x': 'Year', 'y': 2.08}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.63 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:05<01:46,  5.60s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:13<02:09,  7.21s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:17<01:34,  5.54s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:23<01:29,  5.58s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:25<01:08,  4.59s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:30<01:04,  4.62s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:33<00:54,  4.17s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:38<00:50,  4.24s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:43<00:51,  4.64s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:48<00:47,  4.70s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:56<00:52,  5.81s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:07<00:58,  7.25s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:14<00:50,  7.19s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:17<00:35,  5.97s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:21<00:26,  5.24s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:25<00:19,  5.00s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:29<00:13,  4.50s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:33<00:08,  4.43s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:39<00:05,  5.08s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:39<00:05,  5.08s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5554, 'y': 4218}, {'x': 1844, 'y': 2952}, {'x': 5554, 'y': 4218}, {'x': 3344, 'y': 3783}, {'x': 4638, 'y': 2952}, {'x': 2316, 'y': 2108}, {'x': 4638, 'y': 2952}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.33}, {'x': 'USA', 'y': 24.12}, {'x': 'Dog', 'y': 120.33}, {'x': 'Nike', 'y': 48.33}, {'x': 'Apple', 'y': 48.33}, {'x': 'Male', 'y': 24.12}, {'x': 'Rock', 'y': 24.12}, {'x': 'Sedan', 'y': 24.12}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 278.07, 'y': 13.43}, {'x': 54.41, 'y': 60.62}, {'x': 151.57, 'y': 60.62}, {'x': 278.29, 'y': 60.62}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7154, 'y': 364.01}, {'x': 6752, 'y': 42.96}, {'x': 3888, 'y': 364.01}, {'x': 7154, 'y': 364.01}, {'x': 6752, 'y': 113.17}, {'x': 4680, 'y': 227.18}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 200.8}, {'x': 1918, 'y': 198.64}, {'x': 1921, 'y': 16.54}, {'x': 1925, 'y': 16.54}, {'x': 1929, 'y': 16.54}, {'x': 1933, 'y': 36.07}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 59.15}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 79.98}, {'x': 1820, 'y': 80.24}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.59}, {'x': 1866, 'y': 268.79}, {'x': 1871, 'y': 268.79}, {'x': 1875, 'y': 110.19}, {'x': 1879, 'y': 268.79}, {'x': 1883, 'y': 268.79}, {'x': 1889, 'y': 268.79}, {'x': 1893, 'y': 268.79}, {'x': 1895, 'y': 268.79}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 608, 'y': 24}, {'x': 462, 'y': 64}, {'x': 462, 'y': 16}, {'x': 234, 'y': 24}, {'x': 564, 'y': 32}, {'x': 712, 'y': 56}, {'x': 234, 'y': 24}, {'x': 712, 'y': 64}, {'x': 154, 'y': 16}, {'x': 608, 'y': 32}, {'x': 712, 'y': 56}, {'x': 154, 'y': 24}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.33}, {'x': 1817, 'y': 147.78}, {'x': 1826, 'y': 25.79}, {'x': 1832, 'y': 28.13}, {'x': 1838, 'y': 310.11}, {'x': 1848, 'y': 309.1}, {'x': 1856, 'y': 147.78}, {'x': 1866, 'y': 150.38}, {'x': 1872, 'y': 577.79}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4884, 'y': 61.32}, {'x': 3737, 'y': 61.32}, {'x': 1780, 'y': 55.00}, {'x': 4884, 'y': 55.00}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2886}, {'x': 1925, 'y': 2886}, {'x': 1930, 'y': 2886}, {'x': 1936, 'y': 2886}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.05}, {'x': 676, 'y': 121.98}, {'x': 1576, 'y': 37.45}, {'x': 1576, 'y': 40.25}, {'x': 22080, 'y': 365.85}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2931}, {'x': 'USA', 'y': 1474}, {'x': 'Dog', 'y': 877}, {'x': 'Nike', 'y': 1474}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4296}, {'x': 1806, 'y': 360}, {'x': 1809, 'y': 3609}, {'x': 1814, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4890}, {'x': 1827, 'y': 3385}, {'x': 1833, 'y': 1904}, {'x': 1837, 'y': 4890}, {'x': 1840, 'y': 3385}, {'x': 1844, 'y': 3412}, {'x': 1848, 'y': 4890}, {'x': 1856, 'y': 3412}, {'x': 1864, 'y': 3412}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1716, 'y': 530.24}, {'x': 3586, 'y': 624.96}, {'x': 3586, 'y': 564.55}, {'x': 1716, 'y': 527.63}, {'x': 3586, 'y': 564.55}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:05<01:42,  5.37s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:12<01:51,  6.17s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:16<01:34,  5.55s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:17<00:59,  3.74s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:23<01:07,  4.52s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:28<01:03,  4.55s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:34<01:06,  5.10s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:38<00:56,  4.74s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:43<00:52,  4.82s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:46<00:42,  4.22s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:50<00:37,  4.14s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:04<00:56,  7.12s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:14<00:56,  8.08s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:24<00:50,  8.49s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:27<00:34,  6.86s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:31<00:24,  6.02s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:34<00:15,  5.19s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:46<00:14,  7.17s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:54<00:07,  7.44s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:54<00:07,  7.44s/it]
[35m|[39m JSON to Vega conversion error rate: [31m55.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.65 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable', 'y': 0.01}, {'x': 'field', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed Youth Population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'Field', 'y': 7.55}, {'x': 'Year', 'y': 7.55}, {'x': 'Field', 'y': 7.55}, {'x': 'variable': 'Value', 'y': 18.45}, {'x': 'field', 'y': 7.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Identities)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'Field', 'y': 36.09}, {'x': 'Year', 'y': 36.09}, {'x': 'Field', 'y': 55.33}, {'x': 'Value', 'y': 36.09}, {'x': 'Field', 'y': 36.09}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(ar_df, 'Year', 'Arable land (hectares) in Seychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.16}, {'x': 'field', 'y': 125.66}, {'x': 'variable', 'y': 324.16}, {'x': 'field', 'y': 324.16}, {'x': 'variable', 'y': 324.16}, {'x': 'field', 'y': 324.16}, {'x': 'variable', 'y': 324.16}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 162}, {'x': 'Field', 'y': 162}, {'x': 'Year', 'y': 162}, {'x': 'Field', 'y': 162}, {'x': 'Year', 'y': 162}, {'x': 'Field', 'y': 162}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 37.04}, {'x': 'field', 'y': 49.56}, {'x': 'variable', 'y': 37.04}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 15.85}, {'x': 'field', 'y': 15.85}, {'x': 'variable', 'y': 37.04}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="Net", data=net, kind="bar", palette="pastel", ci=None, height=15, aspect=1.5)<0x0A>g.despine(left=True)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=16, y=1.01)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("net_bilateral_aid_flow_Grenada.png")<0x0A><0x0A># Show plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country']).mean()['Yield for per person/laboratory', 'Yield for per person/laboratory'].sum())<0x0A>Country_1981.sort_values(by='Yield for per person/laboratory', ascending=False, inplace=True)<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.head()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A> grupo_df.plot(kind='bar', figsize=(15,15), color='#133333', title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A>plt.ylabel('5% / poverty lines')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Customs and other import duties (as % of tax revenue) of Indonesia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.8}, {'x': 'Field', 'y': 60.49}, {'x': 'Nominal', 'y': 7.8}, {'x': 'Nominal', 'y': 6.75}, {'x': 'Field', 'y': 7.8}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'n_procedures', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type',
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((integrated to
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Silence', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 17.54}, {'x': 'Field', 'y': 20.34}, {'x': 'Year', 'y': 20.34}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'Field', 'y': 75}, {'x': 'Year', 'y': 75}, {'x': 'Field', 'y': 75}, {'x': 'variable', 'y': 75}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country/Region'] == 'UK') & (grupo['Value'] > 0.05)]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(18, 24))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.tick_params(bottom=False, top=True, left=False, right=False)<0x0A>ax.tick_params(top=False, bottom=False, left=False, right=False)<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.tick_params(bottom=False, top=True, left=False, right=False)<0x0A><0x0A># Plotting the graph<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (in  % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5}, {'x': 'Field', 'y': quantitative'}}, 'data': {'x': 'Year', 'y': 5}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.65 [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:56<00:00,  5.84s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:56<00:00,  5.84s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:05<01:45,  5.53s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:11<01:43,  5.76s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:14<01:17,  4.55s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:20<01:19,  4.97s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:23<01:03,  4.20s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:27<01:02,  4.45s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:31<00:54,  4.15s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:35<00:49,  4.14s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:41<00:52,  4.77s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:48<00:53,  5.31s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:54<00:48,  5.44s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:01<00:48,  6.12s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:07<00:42,  6.08s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:11<00:31,  5.28s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:14<00:23,  4.67s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:18<00:18,  4.62s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:22<00:12,  4.21s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:26<00:08,  4.15s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:31<00:04,  4.49s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:31<00:04,  4.49s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5554, 'y': 4218}, {'x': 1842, 'y': 2954}, {'x': 3832, 'y': 3775}, {'x': 5554, 'y': 2954}, {'x': 1842, 'y': 4218}, {'x': 2680, 'y': 2108}, {'x': 4590, 'y': 2954}, {'x': 1842, 'y': 4218}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 708}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.33}, {'x': 'USA', 'y': 24.12}, {'x': 'Dog', 'y': 120.33}, {'x': 'Nike', 'y': 48.33}, {'x': 'Apple', 'y': 48.33}, {'x': 'Male', 'y': 24.12}, {'x': 'Rock', 'y': 24.12}, {'x': 'Sedan', 'y': 24.12}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.31}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 267.4, 'y': 13.43}, {'x': 53.95, 'y': 60.63}, {'x': 151.51, 'y': 60.63}, {'x': 267.04, 'y': 60.63}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7142, 'y': 364.01}, {'x': 5786, 'y': 226.06}, {'x': 3852, 'y': 364.01}, {'x': 7142, 'y': 113.27}, {'x': 3852, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 200}, {'x': 1918, 'y': 190}, {'x': 1921, 'y': 16}, {'x': 1925, 'y': 16}, {'x': 1929, 'y': 36}, {'x': 1933, 'y': 36}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 59.12}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 79.89}, {'x': 1820, 'y': 80.28}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.59}, {'x': 1866, 'y': 268.70}, {'x': 1871, 'y': 110.19}, {'x': 1875, 'y': 268.70}, {'x': 1879, 'y': 268.70}, {'x': 1883, 'y': 268.70}, {'x': 1889, 'y': 268.70}, {'x': 1893, 'y': 268.70}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 566.44, 'y': 56.16}, {'x': 536.81, 'y': 16.0}, {'x': 46.28, 'y': 64.0}, {'x': 239.09, 'y': 24}, {'x': 752.87, 'y': 64.0}, {'x': 666.06, 'y': 32.22}, {'x': 712.94, 'y': 56.16}, {'x': 283.68, 'y': 24}, {'x': 48.21, 'y': 16.0}, {'x': 712.44, 'y': 64.0}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 180, 'y': 584.35}, {'x': 181, 'y': 147.42}, {'x': 182, 'y': 26.02}, {'x': 183, 'y': 26.02}, {'x': 184, 'y': 310.81}, {'x': 185, 'y': 308.11}, {'x': 186, 'y': 147.42}, {'x': 187, 'y': 577.73}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4880, 'y': 61.33}, {'x': 3244, 'y': 61.33}, {'x': 1748, 'y': 55.00}, {'x': 4880, 'y': 55.00}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2886}, {'x': 1925, 'y': 2886}, {'x': 1930, 'y': 2886}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.05}, {'x': 676, 'y': 122.15}, {'x': 1576, 'y': 37.45}, {'x': 1576, 'y': 40.25}, {'x': 2259, 'y': 365.85}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2931}, {'x': 'USA', 'y': 1474}, {'x': 'Dog', 'y': 877}, {'x': 'Nike', 'y': 1474}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4296}, {'x': 1806, 'y': 3611}, {'x': 1809, 'y': 3611}, {'x': 1814, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4864}, {'x': 1827, 'y': 3384}, {'x': 1830, 'y': 1936}, {'x': 1833, 'y': 1898}, {'x': 1836, 'y': 4864}, {'x': 1839, 'y': 3384}, {'x': 1840, 'y': 3416}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:05<01:47,  5.68s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:09<01:26,  4.80s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:15<00:53,  3.32s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:21<01:03,  4.21s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:25<00:57,  4.12s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:31<01:01,  4.73s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:34<00:50,  4.17s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:44<01:06,  6.08s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:48<00:52,  5.25s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:52<00:43,  4.88s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:01<00:50,  6.37s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:06<00:40,  5.81s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:10<00:31,  5.27s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:13<00:23,  4.71s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:18<00:18,  4.57s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:22<00:13,  4.37s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:32<00:12,  6.35s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:42<00:07,  7.40s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:45<00:00,  5.30s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:45<00:00,  5.30s/it]
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m JSON to Vega conversion error rate: [31m55.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.12 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.72 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable', 'y': 0.01}, {'x': 'field', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed Youth Population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'Field', 'y': 7.55}, {'x': 'Year', 'y': 7.55}, {'x': 'Field', 'y': 7.55}, {'x': 'variable': 'Value', 'y': 165}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of withdrawal from Russian Federation)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'Field', 'y': 36.06}, {'x': 'Year', 'y': 36.06}, {'x': 'Field', 'y': 55.33}, {'x': 'Value', 'y': 91.25}, {'x': 'Field', 'y': 36.06}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(ar_df, 'Year', 'Arable land (hectares) in Seychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.86}, {'x': 'field', 'y': 125.68}, {'x': 'variable', 'y': 324.86}, {'x': 'field', 'y': 324.86}, {'x': 'variable', 'y': 324.86}, {'x': 'field', 'y': 324.86}, {'x': 'variable', 'y': 324.86}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 162}, {'x': 'Field', 'y': 162}, {'x': 'Year', 'y': 162}, {'x': 'Field', 'y': 162}, {'x': 'variable': 'Value', 'y': 162}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'field', 'y': 47.68}, {'x': 'variable', 'y': 37.04}, {'x': 'field', 'y': 47.68}, {'x': 'variable', 'y': 37.04}, {'x': 'field', 'y': 47.68}, {'x': 'variable', 'y': 15.85}, {'x': 'field', 'y': 15.85}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="Net", data=net, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.despine(left=True)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=16)
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country']).mean()['Yield for per person/laboratory', 'Yield for per person/laboratory'].sort_values(ascending=False).head(10))<0x0A>Country_1981.index = Country_1981.index.map(int)<0x0A>Country_1981.sort_values(by=['Yield for per person/laboratory'], ascending=False).head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='black')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A> grupo_df.plot(kind='bar', figsize=(15,15), color='#133333', title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A>plt.ylabel('5% / poverty lines')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'S$% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7}, {'x': 'Field', 'y': 7}, {'x': 'Nominal', 'y': 7}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'n_procedures', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type',
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Producer in production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 10316}, {'x': 'y', 'y': 7624}, {'x': 'x', 'y': 12642}, {'x': 'y', 'y': 7624}, {'x': 'x', 'y': 12642}, {'x': 'y', 'y': 6288}, {'x': 'x', 'y': 11522}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rochelle/Pronomorology)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.45}, {'x': 'Field', 'y': 55.78}, {'x': 'Year', 'y': 103.95}, {'x': 'Field', 'y': 103.95}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Silence', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 17.54}, {'x': 'Field', 'y': 20.34}, {'x': 'type': 'quantitative'}}, 'y': 20.34}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'Field', 'y': 75}, {'x': 'Year', 'y': 75}, {'x': 'Field', 'y': 75}, {'x': 'variable', 'y': 75}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df = grouped_df.sort_values(by='Year', ascending=False)<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df['Percentage of households in Russian Federation that uses iodized salt'].plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(16, 20))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country/Region'] == 'UK') & (grupo['Value'] > 0.05)]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.tick_params(bottom=False, top=True, left=False, right=False)<0x0A>ax.tick_params(top=False, bottom=False, left=False, right=False)<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.tick_params(bottom=False, top=True, left=False, right=False)<0x0A><0x0A># Plotting the graph<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (in  % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 19.23}, {'x': 'field', 'y': 19.23}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C = %0.4f)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.4}, {'x': 'Field', 'y': quantitative}}]]} {'x': 'Year', 'y': 5.4}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.12 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.72 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:05<01:48,  5.70s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:11<01:39,  5.51s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:14<01:19,  4.65s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:20<01:23,  5.24s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:24<01:08,  4.56s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:30<01:12,  5.19s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:35<01:04,  4.97s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:39<00:56,  4.67s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:44<00:54,  4.99s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:49<00:48,  4.89s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:55<00:46,  5.16s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:03<00:47,  5.95s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:09<00:41,  6.00s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:12<00:31,  5.28s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:16<00:23,  4.73s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:22<00:20,  5.16s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:25<00:14,  4.67s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:30<00:09,  4.53s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:35<00:04,  4.78s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:35<00:04,  4.78s/it]
[35m|[39m JSON to Vega conversion error rate: [31m5.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5554, 'y': 4218}, {'x': 1842, 'y': 2954}, {'x': 2318, 'y': 2108}, {'x': 4632, 'y': 2954}, {'x': 5554, 'y': 4218}, {'x': 3136, 'y': 3781}, {'x': 4632, 'y': 2108}, {'x': 2318, 'y': 2108}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 708}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1007}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.33}, {'x': 'USA', 'y': 24.12}, {'x': 'Dog', 'y': 120.33}, {'x': 'Nike', 'y': 48.33}, {'x': 'Apple', 'y': 48.33}, {'x': 'Male', 'y': 24.12}, {'x': 'Rock', 'y': 24.12}, {'x': 'Sedan', 'y': 24.12}, {'x': 'Spanish', 'y': 48.33}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.86}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.34}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.34}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 278.07, 'y': 13.43}, {'x': 55.07, 'y': 60.61}, {'x': 151.59, 'y': 60.61}, {'x': 278.99, 'y': 60.61}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7151, 'y': 114.12}, {'x': 6759, 'y': 42.71}, {'x': 3538, 'y': 364.24}, {'x': 6759, 'y': 123.}, {'x': 3538, 'y': 364.24}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 200.8}, {'x': 1919, 'y': 16.46}, {'x': 1924, 'y': 16.46}, {'x': 1928, 'y': 16.46}, {'x': 1929, 'y': 16.46}, {'x': 1932, 'y': 36.06}, {'x': 1936, 'y': 16.46}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.98}, {'x': 1816, 'y': 28.53}, {'x': 1818, 'y': 79.98}, {'x': 1820, 'y': 80.59}, {'x': 1822, 'y': 8.59}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.59}, {'x': 1866, 'y': 268.70}, {'x': 1871, 'y': 268.70}, {'x': 1875, 'y': 108.55}, {'x': 1879, 'y': 268.70}, {'x': 1883, 'y': 268.70}, {'x': 1889, 'y': 268.70}, {'x': 1893, 'y': 268.70}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 583.54, 'y': 638.28}, {'x': 669.28, 'y': 56.11}, {'x': 686.14, 'y': 24}, {'x': 510.04, 'y': 16.22}, {'x': 27.73, 'y': 24}, {'x': 569.28, 'y': 63.78}, {'x': 711.5, 'y': 56.11}, {'x': 711.5, 'y': 638.28}, {'x': 251.82, 'y': 16.22}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 180, 'y': 584.35}, {'x': 181, 'y': 147.45}, {'x': 182, 'y': 26.02}, {'x': 183, 'y': 26.02}, {'x': 184, 'y': 106.71}, {'x': 185, 'y': 310.15}, {'x': 186, 'y': 147.45}, {'x': 187, 'y': 577.73}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4880, 'y': 61.35}, {'x': 3715, 'y': 55.00}, {'x': 1787, 'y': 58.22}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2886}, {'x': 1925, 'y': 2886}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.05}, {'x': 676, 'y': 122.15}, {'x': 1576, 'y': 75.05}, {'x': 1576, 'y': 366.68}, {'x': 22090, 'y': 366.68}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2931}, {'x': 'USA', 'y': 1474}, {'x': 'Dog', 'y': 877}, {'x': 'Nike', 'y': 1474}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4296}, {'x': 1806, 'y': 3610}, {'x': 1809, 'y': 3610}, {'x': 1814, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4890}, {'x': 1827, 'y': 3385}, {'x': 1832, 'y': 1904}, {'x': 1838, 'y': 489}, {'x': 1842, 'y': 3385}, {'x': 1844, 'y': 3412}, {'x': 1838, 'y': 1904}, {'x': 1844, 'y': 3412}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1710, 'y': 530}, {'x': 3488, 'y': 624.63}, {'x': 3488, 'y': 564.86}, {'x': 1710, 'y': 527.8}, {'x': 3488, 'y': 624.86}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:03<01:15,  4.00s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:08<01:22,  4.58s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:14<01:24,  4.99s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:15<00:55,  3.48s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:22<01:09,  4.65s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:28<01:13,  5.23s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:35<01:16,  5.88s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:46<01:26,  7.22s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:50<01:09,  6.32s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:53<00:52,  5.25s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:58<00:47,  5.24s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:08<00:53,  6.74s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:17<00:50,  7.26s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:22<00:39,  6.66s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:25<00:28,  5.62s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:29<00:20,  5.06s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:34<00:14,  4.96s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:44<00:12,  6.49s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:51<00:06,  6.75s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:54<00:00,  5.70s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:54<00:00,  5.70s/it]
[35m|[39m JSON to Vega conversion error rate: [31m50.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.75 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable', 'y': 0.01}, {'x': 'field', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'Field', 'y': 6050}, {'x': 'Year', 'y': 780}, {'x': 'Field', 'y': 780}, {'x': 'variable': 'Value', 'y': 185}, {'x': 'variable': 'Value', 'y': 185}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of traditional households)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'Field', 'y': 36.06}, {'x': 'Year', 'y': 36.06}, {'x': 'Field', 'y': 55.33}, {'x': 'Value', 'y': 36.06}, {'x': 'Field', 'y': 36.06}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(ar_df, 'Year', 'Arable land (hectares) in Seychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.86}, {'x': 'field', 'y': 125.68}, {'x': 'variable', 'y': 324.86}, {'x': 'field', 'y': 324.86}, {'x': 'variable', 'y': 324.86}, {'x': 'field', 'y': 324.86}, {'x': 'variable', 'y': 324.86}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 162}, {'x': 'Year', 'y': 162}, {'x': 'Year', 'y': 162}, {'x': 'Year', 'y': 162}, {'x': 'Year', 'y': 162}, {'x': 'Year', 'y': 162}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'field', 'y': 47.68}, {'x': 'variable', 'y': 37.04}, {'x': 'field', 'y': 47.68}, {'x': 'variable', 'y': 37.04}, {'x': 'field', 'y': 47.68}, {'x': 'variable', 'y': 15.75}, {'x': 'field', 'y': 15.75}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##############################################################################<0x0A>#################################################################################<0x0A>###################################################################################<0x0A>#################################################################################################<0x0A>#########################<0x0A>#########################<0x0A>#######################<0x0A>#######################<0x0A>#####################<0x0A>###################<0x0A>#################<0x0A>#################<0x0A>###############<0x0A>###############<0x0A>###############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country']).mean()['Yield for per person/laboratory', 'Yield for per person/laboratory'].sum())<0x0A>Country_1981.sort_values(by='Yield for per person/laboratory', ascending=False, inplace=True)<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', figsize=(15,15), color='green')<0x0A>plt.xlabel('Country')<0x0A>plt.ylabel('Yield for per person/laboratory')<0x0A>plt.title('Cereal yield in different countries as per the survey of 1981')<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A> grupo_df.plot(kind='bar', figsize=(15,15), color='#133333', edgecolor='white', title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A>plt.ylabel('5$/poverty lines')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'S$% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.15}, {'x': 'Field', 'y': 7.15}, {'x': 'Nominal', 'y': 60.45}, {'x': 'Nominal', 'y': 7.15}, {'x': 'Field', 'y': 60.45}, {'x': 'Nominal', 'y': 7.15}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'n_procedures', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type',
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Producer in production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 10316}, {'x': 'y', 'y': 7624}, {'x': 'x', 'y': 12642}, {'x': 'y', 'y': 11442}, {'x': 'x', 'y': 10316}, {'x': 'y', 'y': 7624}, {'x': 'x', 'y': 6288}, {'x': 'y', 'y': 11442}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/movement)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 54.05}, {'x': 'Field', 'y': 54.05}, {'x': 'Year', 'y': 103.95}, {'x': 'Field', 'y': 54.05}, {'x': 'Year', 'y': 103.95}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Country','Year','2018']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A>percentage_sr_lanka.plot(kind='bar', title='Percentage of babies born with low-birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('$% of Babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.ylabel('$% of Babies')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 79}, {'x': 'Field', 'y': 68}, {'x': 'Year', 'y': 79}, {'x': 'Field', 'y': 68}, {'x': 'variable', 'y': 111}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year'])['Year'].count().reset_index()<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(16, 20), title='Percentage of households in Russian Federation that uses iodized salt', xlim=(0, 300000000), xlim=(0, 300000000), ylim=(0, 300000000), xticks=['Year', 'Year'], xlim=(0, 300000000), ylim=(0, 300000000), xlabel='Year', ylabel='% of households', title='Percentage of households in Russian Federation that uses iodized salt')
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo["Country"] == "United Kingdom") & (grupo["Province"] == "England")]<0x0A><0x0A># Plotting the graph<0x0A>fig = grupo_2.plot(x="Year", y="ConvertedCompensationofAllandCapitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All and Capitali (All Capita
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (in  % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 19.23}, {'x': 'field', 'y': 19.23}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C = %0.4f)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'Field', 'y': quantitative}}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.75 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:06<01:54,  6.02s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:10<01:33,  5.19s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:13<01:11,  4.19s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:19<01:20,  5.05s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:23<01:07,  4.49s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:28<01:03,  4.53s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:33<01:01,  4.72s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:39<01:04,  5.35s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:44<00:55,  5.03s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:48<00:47,  4.79s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:55<00:48,  5.34s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:03<00:49,  6.24s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:10<00:46,  6.57s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:13<00:32,  5.38s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:16<00:23,  4.74s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:21<00:19,  4.83s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:26<00:14,  4.81s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:32<00:10,  5.12s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:39<00:05,  5.63s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:39<00:05,  5.63s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5554, 'y': 4218}, {'x': 1842, 'y': 2954}, {'x': 3136, 'y': 3774}, {'x': 5554, 'y': 2954}, {'x': 3136, 'y': 2104}, {'x': 2310, 'y': 2104}, {'x': 4890, 'y': 2954}, {'x': 5554, 'y': 4218}, {'x': 4890, 'y': 2954}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1007}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.33}, {'x': 'USA', 'y': 24.12}, {'x': 'Dog', 'y': 120.3}, {'x': 'Nike', 'y': 48.08}, {'x': 'Apple', 'y': 48.08}, {'x': 'Male', 'y': 24.12}, {'x': 'Rock', 'y': 24.12}, {'x': 'Sedan', 'y': 24.12}, {'x': 'Spanish', 'y': 48.08}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.86}, {'x': 'USA', 'y': 152.67}, {'x': 'Green', 'y': 152.67}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.34}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.34}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 278.07, 'y': 13.43}, {'x': 54.57, 'y': 60.77}, {'x': 151.59, 'y': 60.77}, {'x': 278.23, 'y': 60.77}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7154, 'y': 364.01}, {'x': 5767, 'y': 226.04}, {'x': 3080, 'y': 364.01}, {'x': 7154, 'y': 113.17}, {'x': 3728, 'y': 364.01}, {'x': 7154, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 198.47}, {'x': 1919, 'y': 19.33}, {'x': 1925, 'y': 19.33}, {'x': 1928, 'y': 19.33}, {'x': 1931, 'y': 36.24}, {'x': 1933, 'y': 198.47}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 59.15}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 79.89}, {'x': 1820, 'y': 80.06}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.59}, {'x': 1864, 'y': 268.70}, {'x': 1869, 'y': 268.70}, {'x': 1873, 'y': 110.19}, {'x': 1877, 'y': 268.70}, {'x': 1879, 'y': 268.70}, {'x': 1883, 'y': 268.70}, {'x': 1887, 'y': 268.70}, {'x': 1891, 'y': 268.70}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 566.44, 'y': 56.19}, {'x': 521.7, 'y': 24}, {'x': 521.24, 'y': 64.0}, {'x': 637.3, 'y': 32.22}, {'x': 77.24, 'y': 64.0}, {'x': 24.84, 'y': 24}, {'x': 483.0, 'y': 16.22}, {'x': 25.98, 'y': 16.22}, {'x': 712.92, 'y': 56.19}, {'x': 284.39, 'y': 16.22}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.33}, {'x': 1816, 'y': 147.75}, {'x': 1825, 'y': 27.09}, {'x': 1832, 'y': 27.09}, {'x': 1839, 'y': 310.15}, {'x': 1848, 'y': 309.1}, {'x': 1856, 'y': 147.75}, {'x': 1866, 'y': 150.38}, {'x': 1872, 'y': 577.95}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4884, 'y': 61.34}, {'x': 3737, 'y': 55.00}, {'x': 1780, 'y': 58.16}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1925, 'y': 2885}, {'x': 1930, 'y': 2885}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1734, 'y': 38.09}, {'x': 684, 'y': 121.99}, {'x': 1734, 'y': 75.71}, {'x': 1586, 'y': 39.09}, {'x': 1182, 'y': 39.09}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2931}, {'x': 'USA', 'y': 1474}, {'x': 'Dog', 'y': 877}, {'x': 'Nike', 'y': 1474}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4296}, {'x': 1806, 'y': 3611}, {'x': 1809, 'y': 3611}, {'x': 1814, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4890}, {'x': 1827, 'y': 3385}, {'x': 1833, 'y': 1904}, {'x': 1837, 'y': 4890}, {'x': 1840, 'y': 3385}, {'x': 1844, 'y': 3412}, {'x': 1848, 'y': 4890}, {'x': 1856, 'y': 3412}, {'x': 1864, 'y': 1904}, {'x': 1872, 'y': 3385}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1710, 'y': 530}, {'x': 3488, 'y': 625}, {'x': 3488, 'y': 564.8}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:03<01:11,  3.78s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:07<01:09,  3.87s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:12<01:12,  4.25s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:13<00:47,  2.99s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:19<00:59,  3.97s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:23<00:55,  3.97s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:29<01:03,  4.88s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:42<01:28,  7.39s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:46<01:08,  6.27s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:49<00:51,  5.15s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:54<00:45,  5.09s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:03<00:52,  6.55s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:08<00:42,  6.05s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:12<00:32,  5.43s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:16<00:24,  4.89s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:22<00:20,  5.16s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:30<00:18,  6.22s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:36<00:11,  5.91s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:43<00:06,  6.21s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:46<00:00,  5.32s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:46<00:00,  5.32s/it]
[35m|[39m JSON to Vega conversion error rate: [31m40.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.12 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.63 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable', 'y': 0.01}, {'x': 'field', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed Youth Population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'Field', 'y': 7.55}, {'x': 'Year', 'y': 7.55}, {'x': 'Field', 'y': 7.55}, {'x': 'variable': 'Value', 'y': 165}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmial Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'Field', 'y': 36.06}, {'x': 'Year', 'y': 36.06}, {'x': 'Field', 'y': 55.33}, {'x': 'Value', 'y': 36.06}, {'x': 'Field', 'y': 36.06}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(ar_df, 'Year', 'Arable land (hectares) in Seychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.86}, {'x': 'field', 'y': 125.68}, {'x': 'variable', 'y': 324.86}, {'x': 'field', 'y': 324.86}, {'x': 'variable', 'y': 324.86}, {'x': 'field', 'y': 324.86}, {'x': 'variable', 'y': 324.86}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 164}, {'x': 'Year', 'y': 164}, {'x': 'Year', 'y': 164}, {'x': 'Year', 'y': 164}, {'x': 'Year', 'y': 164}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.46}, {'x': 'field', 'y': 47.68}, {'x': 'variable', 'y': 37.04}, {'x': 'field', 'y': 47.68}, {'x': 'variable', 'y': 37.04}, {'x': 'field', 'y': 47.68}, {'x': 'variable', 'y': 15.85}, {'x': 'field', 'y': 15.85}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##############################################################################<0x0A>#################################################################################<0x0A>###################################################################################<0x0A>#################################################################################################<0x0A>#########################<0x0A>#########################<0x0A>#######################<0x0A>#######################<0x0A>#####################<0x0A>###################<0x0A>#################<0x0A>#################<0x0A>###############<0x0A>###############<0x0A>###############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country'])['yield'].sum())<0x0A>Country_1981.index = Country_1981.index.map(int)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),color='green')<0x0A>plt.xlabel('Country')<0x0A>plt.ylabel('Yield by per householder')<0x0A>plt.title('Cereal yield in different countries as per the survey of 1981')<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A> grupo_df.plot(kind='bar', figsize=(15,15), color='#133333', title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A>plt.ylabel('5%/poverty lines')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Customs and other import duties (as % of tax revenue) of Indonesia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.07}, {'x': 'Field', 'y': 7.07}, {'x': 'Nominal', 'y': 6.26}, {'x': 'Nominal', 'y': 7.07}, {'x': 'Field', 'y': 6.26}, {'x': 'Nominal', 'y': 7.07}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'n_procedures', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type',
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Producer in production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 11432}, {'x': 'y', 'y': 7268}, {'x': 'x', 'y': 10316}, {'x': 'y', 'y': 11432}, {'x': 'x', 'y': 10316}, {'x': 'y', 'y': 7268}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rochelle/accumulation)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.45}, {'x': 'Field', 'y': 55.78}, {'x': 'Year', 'y': 103.95}, {'x': 'Field', 'y': 103.95}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Silence', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 17.54}, {'x': 'Field', 'y': 20.03}, {'x': 'Year', 'y': 20.03}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 79}, {'x': 'Field', 'y': 68}, {'x': 'Year', 'y': 79}, {'x': 'Field', 'y': 68}, {'x': 'variable', 'y': 111}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df = grouped_df.sort_values(by='Year', ascending=False)<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df['Percentage of households in Russian Federation that uses iodized salt'] = grouped_df['Percentage of households in Russian Federation that uses iodized salt'].astype(float)<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df['Percentage of households in Russian Federation that uses iodized salt'] = grouped_df['Percentage of households in Russian Federation that uses iodized salt'].astype(float)<0x0A>grouped_df['Percentage of households in Russian Federation that uses iodized salt'] = grouped_df['Percentage of households in Russian Federation that uses iodized salt'].astype(float)<0x0A>grouped_df['Percentage of households in Russian Federation that uses iodized salt'].plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(16, 20))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country/Region'] == 'UK') & (grupo['Value'] > 0.05)]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(18, 24))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GND)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Countries used up in the process of production'])<0x0A><0x0A># Adding a legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 0.5))<0x0A><0x0A># Displaying the graph<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (in  % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 19.23}, {'x': 'field', 'y': 19.23}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C- levels (C- %(KORE)})', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'Field', 'y': 2.08}, {'x': 'Value', 'y': 2.08}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.12 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.63 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:07<02:20,  7.41s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:14<02:13,  7.39s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:17<01:31,  5.40s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:24<01:31,  5.72s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:27<01:12,  4.83s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:31<01:06,  4.77s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:35<00:58,  4.47s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:39<00:51,  4.33s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:44<00:48,  4.41s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:49<00:45,  4.54s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:57<00:50,  5.62s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:08<00:59,  7.45s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:15<00:50,  7.18s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:19<00:36,  6.15s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:22<00:26,  5.27s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:26<00:19,  4.91s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:29<00:13,  4.38s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:33<00:08,  4.29s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:40<00:05,  5.05s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:44<00:00,  5.24s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:44<00:00,  5.24s/it]
[35m|[39m JSON to Vega conversion error rate: [31m5.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5554, 'y': 4218}, {'x': 1842, 'y': 2954}, {'x': 3170, 'y': 3774}, {'x': 5554, 'y': 2954}, {'x': 2312, 'y': 2108}, {'x': 4790, 'y': 2108}, {'x': 1842, 'y': 4218}, {'x': 5554, 'y': 2108}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 708}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.33}, {'x': 'USA', 'y': 24.12}, {'x': 'Dog', 'y': 120.33}, {'x': 'Nike', 'y': 48.08}, {'x': 'Apple', 'y': 48.08}, {'x': 'Male', 'y': 23.86}, {'x': 'Rock', 'y': 27.61}, {'x': 'Sedan', 'y': 24.12}, {'x': 'Spanish', 'y': 48.08}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.89}, {'x': 'USA', 'y': 152.67}, {'x': 'Green', 'y': 152.67}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.34}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.34}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 278.07, 'y': 13.43}, {'x': 54.09, 'y': 60.61}, {'x': 278.63, 'y': 60.61}, {'x': 151.59, 'y': 60.61}, {'x': 278.63, 'y': 13.43}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7142, 'y': 364.01}, {'x': 5786, 'y': 226.18}, {'x': 3052, 'y': 364.01}, {'x': 7142, 'y': 113.19}, {'x': 1846, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 198.55}, {'x': 1919, 'y': 19.12}, {'x': 1924, 'y': 17.53}, {'x': 1928, 'y': 17.53}, {'x': 1930, 'y': 36.22}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 59.15}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 79.98}, {'x': 1820, 'y': 80.06}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.59}, {'x': 1866, 'y': 268.70}, {'x': 1871, 'y': 268.70}, {'x': 1875, 'y': 110.19}, {'x': 1879, 'y': 268.70}, {'x': 1883, 'y': 268.70}, {'x': 1889, 'y': 268.70}, {'x': 1893, 'y': 268.70}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 566.44, 'y': 56}, {'x': 521.91, 'y': 24}, {'x': 521.91, 'y': 64}, {'x': 637.59, 'y': 32}, {'x': 77.88, 'y': 64}, {'x': 24.88, 'y': 24}, {'x': 715.56, 'y': 16}, {'x': 25.97, 'y': 16}, {'x': 715.56, 'y': 64}, {'x': 133.68, 'y': 16}, {'x': 486.45, 'y': 16}, {'x': 486.45, 'y': 16}, {'x': 615.45, 'y': 5600}, {'x': 715.45,
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.35}, {'x': 1821, 'y': 147.79}, {'x': 1828, 'y': 27.09}, {'x': 1835, 'y': 27.09}, {'x': 1842, 'y': 310.89}, {'x': 1849, 'y': 308.11}, {'x': 1856, 'y': 147.79}, {'x': 1865, 'y': 150.39}, {'x': 1872, 'y': 577.91}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4880, 'y': 61.35}, {'x': 3244, 'y': 61.35}, {'x': 1748, 'y': 55.00}, {'x': 4880, 'y': 55.00}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2886}, {'x': 1925, 'y': 2886}, {'x': 1930, 'y': 2886}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1734, 'y': 38.09}, {'x': 676, 'y': 121.99}, {'x': 1734, 'y': 75.71}, {'x': 1586, 'y': 39.09}, {'x': 1586, 'y': 39.09}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2931}, {'x': 'USA', 'y': 1472}, {'x': 'Dog', 'y': 877}, {'x': 'Nike', 'y': 1472}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4296}, {'x': 1806, 'y': 3611}, {'x': 1809, 'y': 3611}, {'x': 1814, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4890}, {'x': 1827, 'y': 3385}, {'x': 1832, 'y': 1904}, {'x': 1838, 'y': 4890}, {'x': 1842, 'y': 3385}, {'x': 1844, 'y': 3412}, {'x': 1848, 'y': 4890}, {'x': 1856, 'y': 3412}, {'x': 1864, 'y': 1904}, {'x': 1872, 'y': 3385}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1710, 'y': 530}, {'x': 3006, 'y': 625}, {'x': 3006, 'y': 530}, {'x': 1710, 'y': 567}, {'x': 3006, 'y': 625}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:05<01:50,  5.84s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:11<01:40,  5.58s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:15<01:24,  4.96s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:18<01:07,  4.19s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:24<01:11,  4.76s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:27<01:01,  4.41s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:32<00:58,  4.48s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:35<00:46,  3.87s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:38<00:41,  3.73s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:41<00:34,  3.43s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:44<00:31,  3.48s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [00:58<00:51,  6.48s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:03<00:42,  6.12s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:07<00:31,  5.31s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:16<00:32,  6.59s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:21<00:23,  5.99s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:28<00:19,  6.50s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:31<00:10,  5.30s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:40<00:06,  6.34s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:40<00:06,  6.34s/it]
[35m|[39m JSON to Vega conversion error rate: [31m50.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.72 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable', 'y': 0.01}, {'x': 'field', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed Youth Population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'Field', 'y': 7.55}, {'x': 'Year', 'y': 7.55}, {'x': 'Field', 'y': 7.55}, {'x': 'variable': 'Value', 'y': 12.05}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmial Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'Field', 'y': 36.06}, {'x': 'Year', 'y': 55.33}, {'x': 'Field', 'y': 36.06}, {'x': 'Value', 'y': 55.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mArable land (hectares) in Seychelles.plot(kind='bar', figsize=(30,40), color='#006699')<0x0A>plt.title('Arable land (hectares) in Seychelles', fontsize=20)<0x0A>plt.xlabel('Year', fontsize=16)<0x0A>plt.ylabel('Area (Client/ (hectares)%)', fontsize=16)<0x0A>plt.xticks(rotation=0)<0x0A>plt.yticks(fontsize=16)<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Percentage of Production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.05}, {'x': 'field', 'y': 125.66}, {'x': 'field', 'y': 324.05}, {'x': 'variable', 'y': 125.66}, {'x': 'field', 'y': 324.05}, {'x': 'variable', 'y': 324.05}, {'x': 'field', 'y': 324.05}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 164}, {'x': 'Year', 'y': 164}, {'x': 'Year', 'y': 164}, {'x': 'Year', 'y': 164}, {'x': 'Year', 'y': 164}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'Field', 'y': 47.68}, {'x': 'variable', 'y': 37.04}, {'x': 'variable', 'y': 46.56}, {'x': 'field', 'y': 47.68}, {'x': 'variable', 'y': 37.04}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="Net", data=net, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.despine(left=True)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=16)
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country']).mean()['Yield for per person/laboratory']).sort_values(by='Yield for per person/laboratory', ascending=False)<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', figsize=(15,15), color='green')<0x0A>plt.xlabel('Country')<0x0A>plt.ylabel('Yield for per person/laboratory')<0x0A>plt.title('Cereal yield in different countries as per the survey of 1981')<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A> grupo_df.plot(kind='bar', figsize=(15,15), color='#133333', title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A>plt.ylabel('5% / poverty lines')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'S$% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.07}, {'x': 'Field', 'y': 7.07}, {'x': 'Nominal', 'y': 7.07}, {'x': 'Nominal', 'y': 7.07}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'n_procedures', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type',
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Producer in production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 11200}, {'x': 'y', 'y': 7200}, {'x': 'x', 'y': 10300}, {'x': 'y', 'y': 7200}, {'x': 'x', 'y': 11200}, {'x': 'y', 'y': 10300}, {'x': 'x', 'y': 6200}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/movement)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.45}, {'x': 'Field', 'y': 55.78}, {'x': 'Year', 'y': 103.95}, {'x': 'Field', 'y': 103.95}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Country','Year','2018']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>percentage_sr_lanka.plot(kind='bar', ax=ax)<0x0A>ax.set_title('Percentage of babies born with low-birthweight in Sri Lanka')<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xlabel('')<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['right'].set
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 79}, {'x': 'Field', 'y': 68}, {'x': 'Year', 'y': 79}, {'x': 'Field', 'y': 68}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations in Denmark', 'y': 79}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df = grouped_df.sort_values(by='Year', ascending=False)<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df['Percentage of households in Russian Federation that uses iodized salt'] = grouped_df['Percentage of households in Russian Federation that uses iodized salt'].astype(float)<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df['Percentage of households in Russian Federation that uses iodized salt'] = grouped_df['Percentage of households in Russian Federation that uses iodized salt'].astype(float)<0x0A>grouped_df['Percentage of households in Russian Federation that uses iodized salt'] = grouped_df['Percentage of households in Russian Federation that uses iodized salt'].astype(float)<0x0A>grouped_df['Percentage of households in Russian Federation that uses iodized salt'].plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(16, 20))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo["Country"] == "United Kingdom") & (grupo["Province"] == "England")]<0x0A><0x0A># Plotting the graph<0x0A>fig = grupo_2.plot(x="Year", y="ConvertedCompensationofAllandCapitali (de % of GVG)", kind="scatter", figsize=(18, 20), color="darkblue", title="Capital used up in the process of production in United Kingdom")<0x0A>fig.axis(ymin=0, ymax=1)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (in  % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 19.23}, {'x': 'field', 'y': 19.23}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C- levels (C- %(KORE)})', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'Field', 'y': 2.08}, {'x': 'Value', 'y': 2.08}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.72 [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:44<00:00,  5.25s/it]
  0%|                                                                                                                         | 0/100 [00:00<?, ?it/s]
  1%|█▏                                                                                                               | 1/100 [00:05<09:22,  5.68s/it]
  2%|██▎                                                                                                              | 2/100 [00:08<06:55,  4.24s/it]
  3%|███▍                                                                                                             | 3/100 [00:12<06:26,  3.98s/it]
  4%|████▌                                                                                                            | 4/100 [00:18<07:17,  4.56s/it]
  5%|█████▋                                                                                                           | 5/100 [00:22<07:02,  4.45s/it]
  6%|██████▊                                                                                                          | 6/100 [00:26<06:45,  4.32s/it]
  7%|███████▉                                                                                                         | 7/100 [00:30<06:36,  4.26s/it]
  8%|█████████                                                                                                        | 8/100 [00:42<10:06,  6.59s/it]
  9%|██████████▏                                                                                                      | 9/100 [00:51<11:11,  7.38s/it]
 10%|███████████▏                                                                                                    | 10/100 [00:55<09:33,  6.38s/it]
 11%|████████████▎                                                                                                   | 11/100 [01:01<09:33,  6.44s/it]
 12%|█████████████▍                                                                                                  | 12/100 [01:04<07:51,  5.35s/it]
 13%|██████████████▌                                                                                                 | 13/100 [01:09<07:21,  5.08s/it]
 15%|████████████████▊                                                                                               | 15/100 [01:12<04:45,  3.36s/it]
 16%|█████████████████▉                                                                                              | 16/100 [01:16<04:40,  3.34s/it]
 17%|███████████████████                                                                                             | 17/100 [01:26<07:26,  5.37s/it]
 18%|████████████████████▏                                                                                           | 18/100 [01:31<07:21,  5.38s/it]
 19%|█████████████████████▎                                                                                          | 19/100 [01:36<07:12,  5.34s/it]
 20%|██████████████████████▍                                                                                         | 20/100 [01:48<09:30,  7.13s/it]
 21%|███████████████████████▌                                                                                        | 21/100 [01:53<08:45,  6.65s/it]
 22%|████████████████████████▋                                                                                       | 22/100 [01:57<07:30,  5.78s/it]
 23%|█████████████████████████▊                                                                                      | 23/100 [02:01<06:44,  5.26s/it]
 24%|██████████████████████████▉                                                                                     | 24/100 [02:05<06:16,  4.96s/it]
 25%|████████████████████████████                                                                                    | 25/100 [02:11<06:24,  5.13s/it]
 26%|█████████████████████████████                                                                                   | 26/100 [02:14<05:25,  4.40s/it]
 27%|██████████████████████████████▏                                                                                 | 27/100 [02:18<05:14,  4.30s/it]
 28%|███████████████████████████████▎                                                                                | 28/100 [02:32<08:37,  7.19s/it]
 29%|████████████████████████████████▍                                                                               | 29/100 [02:38<08:20,  7.05s/it]
 30%|█████████████████████████████████▌                                                                              | 30/100 [02:48<09:14,  7.93s/it]
 31%|██████████████████████████████████▋                                                                             | 31/100 [02:59<09:58,  8.67s/it]
 32%|███████████████████████████████████▊                                                                            | 32/100 [03:12<11:15,  9.93s/it]
 33%|████████████████████████████████████▉                                                                           | 33/100 [03:17<09:40,  8.67s/it]
 34%|██████████████████████████████████████                                                                          | 34/100 [03:22<08:06,  7.38s/it]
 35%|███████████████████████████████████████▏                                                                        | 35/100 [03:32<08:56,  8.25s/it]
 36%|████████████████████████████████████████▎                                                                       | 36/100 [03:37<07:52,  7.38s/it]
 37%|█████████████████████████████████████████▍                                                                      | 37/100 [03:42<06:51,  6.52s/it]
 38%|██████████████████████████████████████████▌                                                                     | 38/100 [03:51<07:37,  7.38s/it]
 39%|███████████████████████████████████████████▋                                                                    | 39/100 [03:58<07:28,  7.35s/it]
 40%|████████████████████████████████████████████▊                                                                   | 40/100 [04:05<06:59,  6.99s/it]
 41%|█████████████████████████████████████████████▉                                                                  | 41/100 [04:09<06:13,  6.33s/it]
 42%|███████████████████████████████████████████████                                                                 | 42/100 [04:15<05:46,  5.97s/it]
 43%|████████████████████████████████████████████████▏                                                               | 43/100 [04:17<04:47,  5.04s/it]
 44%|█████████████████████████████████████████████████▎                                                              | 44/100 [04:23<04:44,  5.09s/it]
 45%|██████████████████████████████████████████████████▍                                                             | 45/100 [04:33<06:03,  6.60s/it]
 46%|███████████████████████████████████████████████████▌                                                            | 46/100 [04:38<05:32,  6.16s/it]
 47%|████████████████████████████████████████████████████▋                                                           | 47/100 [04:44<05:31,  6.25s/it]
 48%|█████████████████████████████████████████████████████▊                                                          | 48/100 [04:47<04:30,  5.21s/it]
 49%|██████████████████████████████████████████████████████▉                                                         | 49/100 [04:51<04:02,  4.76s/it]
 50%|████████████████████████████████████████████████████████                                                        | 50/100 [04:57<04:17,  5.15s/it]
 51%|█████████████████████████████████████████████████████████                                                       | 51/100 [05:02<04:09,  5.09s/it]
 52%|██████████████████████████████████████████████████████████▏                                                     | 52/100 [05:07<04:01,  5.03s/it]
 53%|███████████████████████████████████████████████████████████▎                                                    | 53/100 [05:16<04:49,  6.16s/it]
 54%|████████████████████████████████████████████████████████████▍                                                   | 54/100 [05:20<04:17,  5.59s/it]
 55%|█████████████████████████████████████████████████████████████▌                                                  | 55/100 [05:27<04:33,  6.09s/it]
 56%|██████████████████████████████████████████████████████████████▋                                                 | 56/100 [05:38<05:31,  7.54s/it]
 57%|███████████████████████████████████████████████████████████████▊                                                | 57/100 [05:49<06:03,  8.45s/it]
 58%|████████████████████████████████████████████████████████████████▉                                               | 58/100 [05:53<05:05,  7.27s/it]
 59%|██████████████████████████████████████████████████████████████████                                              | 59/100 [06:03<05:29,  8.03s/it]
 60%|███████████████████████████████████████████████████████████████████▏                                            | 60/100 [06:16<06:23,  9.60s/it]
 61%|████████████████████████████████████████████████████████████████████▎                                           | 61/100 [06:21<05:21,  8.24s/it]
 62%|█████████████████████████████████████████████████████████████████████▍                                          | 62/100 [06:27<04:47,  7.58s/it]
 63%|██████████████████████████████████████████████████████████████████████▌                                         | 63/100 [06:32<04:13,  6.85s/it]
 64%|███████████████████████████████████████████████████████████████████████▋                                        | 64/100 [06:38<03:58,  6.61s/it]
 65%|████████████████████████████████████████████████████████████████████████▊                                       | 65/100 [06:43<03:30,  6.01s/it]
 66%|█████████████████████████████████████████████████████████████████████████▉                                      | 66/100 [06:49<03:18,  5.84s/it]
 67%|███████████████████████████████████████████████████████████████████████████                                     | 67/100 [06:55<03:16,  5.95s/it]
 68%|████████████████████████████████████████████████████████████████████████████▏                                   | 68/100 [07:01<03:12,  6.00s/it]
 69%|█████████████████████████████████████████████████████████████████████████████▎                                  | 69/100 [07:06<03:00,  5.82s/it]
 70%|██████████████████████████████████████████████████████████████████████████████▍                                 | 70/100 [07:10<02:37,  5.25s/it]
 71%|███████████████████████████████████████████████████████████████████████████████▌                                | 71/100 [07:20<03:13,  6.66s/it]
 72%|████████████████████████████████████████████████████████████████████████████████▋                               | 72/100 [07:30<03:36,  7.73s/it]
 73%|█████████████████████████████████████████████████████████████████████████████████▊                              | 73/100 [07:35<03:00,  6.69s/it]
 74%|██████████████████████████████████████████████████████████████████████████████████▉                             | 74/100 [07:40<02:44,  6.31s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████                            | 75/100 [07:46<02:36,  6.26s/it]
 76%|█████████████████████████████████████████████████████████████████████████████████████                           | 76/100 [07:54<02:40,  6.70s/it]
 77%|██████████████████████████████████████████████████████████████████████████████████████▏                         | 77/100 [08:04<02:59,  7.82s/it]
 78%|███████████████████████████████████████████████████████████████████████████████████████▎                        | 78/100 [08:07<02:19,  6.36s/it]
 79%|████████████████████████████████████████████████████████████████████████████████████████▍                       | 79/100 [08:12<02:01,  5.80s/it]
 80%|█████████████████████████████████████████████████████████████████████████████████████████▌                      | 80/100 [08:22<02:21,  7.09s/it]
 81%|██████████████████████████████████████████████████████████████████████████████████████████▋                     | 81/100 [08:27<02:03,  6.51s/it]
 82%|███████████████████████████████████████████████████████████████████████████████████████████▊                    | 82/100 [08:40<02:33,  8.55s/it]
 83%|████████████████████████████████████████████████████████████████████████████████████████████▉                   | 83/100 [08:45<02:03,  7.25s/it]
 84%|██████████████████████████████████████████████████████████████████████████████████████████████                  | 84/100 [08:55<02:09,  8.10s/it]
 85%|███████████████████████████████████████████████████████████████████████████████████████████████▏                | 85/100 [08:58<01:42,  6.81s/it]
 86%|████████████████████████████████████████████████████████████████████████████████████████████████▎               | 86/100 [09:04<01:29,  6.40s/it]
 87%|█████████████████████████████████████████████████████████████████████████████████████████████████▍              | 87/100 [09:07<01:11,  5.53s/it]
 88%|██████████████████████████████████████████████████████████████████████████████████████████████████▌             | 88/100 [09:18<01:23,  6.98s/it]
 89%|███████████████████████████████████████████████████████████████████████████████████████████████████▋            | 89/100 [09:29<01:31,  8.28s/it]
 90%|████████████████████████████████████████████████████████████████████████████████████████████████████▊           | 90/100 [09:39<01:28,  8.82s/it]
 91%|█████████████████████████████████████████████████████████████████████████████████████████████████████▉          | 91/100 [09:50<01:24,  9.38s/it]
 92%|███████████████████████████████████████████████████████████████████████████████████████████████████████         | 92/100 [09:52<00:58,  7.31s/it]
 93%|████████████████████████████████████████████████████████████████████████████████████████████████████████▏       | 93/100 [09:57<00:44,  6.39s/it]
 94%|█████████████████████████████████████████████████████████████████████████████████████████████████████████▎      | 94/100 [10:06<00:43,  7.31s/it]
 95%|██████████████████████████████████████████████████████████████████████████████████████████████████████████▍     | 95/100 [10:10<00:32,  6.46s/it]
 96%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▌    | 96/100 [10:21<00:30,  7.60s/it]
 97%|████████████████████████████████████████████████████████████████████████████████████████████████████████████▋   | 97/100 [10:26<00:20,  6.79s/it]
 99%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████▉ | 99/100 [10:29<00:04,  4.02s/it]
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████| 100/100 [10:40<00:00,  6.40s/it]
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████| 100/100 [10:40<00:00,  6.40s/it]
[35m|[39m JSON to Vega conversion error rate: [31m55.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.95 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.98 [35m|[39m [36m[1mY-NAME[39m[22m : 0.71 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total reserves (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1987', 'y': 36748875.4}, {'x': '1988', 'y': 39619764.0}, {'x': '1989', 'y': 26162212.8}, {'x': '1990', 'y': 17599674.8}, {'x': '1991', 'y': 8542562.3}, {'x': '1992', 'y': 23497500.0}, {'x': '1993', 'y': 20068808.52}, {'x': '1994', 'y': 17418040.14}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total reserves (including gold) of Solomon Islands', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 657135}, {'x': 'field', 'y': 405862}, {'x': 'field', 'y': 657135}, {'x': 'variable': 'Value', 'y': 1771657}, {'x': 'field', 'y': 1624660}, {'x': 'variable': 'Value', 'y': 102885}, {'x': 'field', 'y': 10285}, {'x': 'variable': 'Value load', 'y': 1624660}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Time (in hours)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 424}, {'x': '2007', 'y': 424}, {'x': '2008', 'y': 424}, {'x': '2009', 'y': 424}, {'x': '2010', 'y': 424}, {'x': '2011', 'y': 424}, {'x': '2012', 'y': 424}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Trail (flooring)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40}, {'x': 'Field', 'y': 400}, {'x': 'Year', 'y': 400}, {'x': 'Field', 'y': 400}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable', 'y': 0.01}, {'x': 'field', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2005', 'y': 64.61}, {'x': '2006', 'y': 69.38}, {'x': '2007', 'y': 60.8}, {'x': '2008', 'y': 54.98}, {'x': '2009', 'y': 56.12}, {'x': '2010', 'y': 61.52}, {'x': '2011', 'y': 65.44}, {'x': '2012', 'y': 68.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications and computers with respect to service imports of Papua New Guinea', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 8.04}, {'x': 'field', 'y': 7.05}, {'x': 'variable', 'y': 12.04}, {'x': 'field', 'y': 7.05}, {'x': 'variable', 'y': 12.04}, {'x': 'field', 'y': 14.28}, {'x': 'variable', 'y': 14.28}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed Youth Population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'Field', 'y': 7.55}, {'x': 'Year', 'y': 7.55}, {'x': 'Field', 'y': 7.55}, {'x': 'variable': 'Value', 'y': 12.05}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Net GHG emissions or removals (Mt of CO2 equivalent)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1993', 'y': -60.26}, {'x': '1994', 'y': -62.2}, {'x': '1995', 'y': -61.84}, {'x': '1996', 'y': -62.43}, {'x': '1997', 'y': -64.34}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Net GHG emissions or removals by LUCF in Turkey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 54.04}, {'x': 'Field', 'y': 54.04}, {'x': 'Nominal', 'y': 101.85}, {'x': 'Nominal', 'y': 54.04}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Idhemmial Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'Field', 'y': 36.06}, {'x': 'Year', 'y': 55.33}, {'x': 'Field', 'y': 36.06}, {'x': 'Value', 'y': 55.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2011', 'y': 118}, {'x': '2012', 'y': 118}, {'x': '2013', 'y': 118}, {'x': '2014', 'y': 118}, {'x': '2015', 'y': 118}]}}
[31mgrupo_bairro['Year'] = grupo_bairro['Año'].astype('category')<0x0A><0x0A>#Graficamos la figura<0x0A>fig, ax = plt.subplots(figsize=(20, 25))<0x0A><0x0A>#Graficamos la figura<0x0A>ax.set_title('Time required to register a property in Barbados')<0x0A><0x0A>#Graficamos la figura<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of days')<0x0A><0x0A>#Graficamos la figura<0x0A>ax.set_facecolor('white')<0x0A><0x0A>#Graficamos la figura<0x0A>ax.grid(False)<0x0A><0x0A>#Graficamos la figura<0x0A>ax.set_facecolor('white')<0x0A><0x0A>#Graficamos la figura<0x0A>ax.set_ylabel('Number of days')<0x0A><0x0A>#Graficamos la figura<0x0A>ax.set_xlabel('Year')<0x0A><0x0A>#Graficamos la figura<0x0A>ax.set_ylabel('Number of days')<0x0A><0x0A>#Graficamos la figura<0x0A>ax.set_xlabel('Year')<0x0A><0x0A>#Graficamos la figura<0x0A>ax.set_ylabel('Number of days')<0x0A><0x0A>#Graficamos la figura<0x0A>ax.set_xlabel('Year')<0x0A><0x0A>#Graficamos la figura<0x0A>ax.set_ylabel('Number of days')<0x0A><0x0A>#Graficamos la figura<0x0A>ax.set_xlabel('Year')<0x0A><0x0A>#Graficamos la figura<0x0A>ax.set_xlabel('Year')<0x0A><0x0A>#Graficamos la figura<0x0A>ax.set_ylabel('Number of days')<0x0A><0x0A>#Graficamos la figura<0x0A>ax.set_xlabel('Year')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of repeaters', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2008', 'y': 0.22}, {'x': '2009', 'y': 0.17}, {'x': '2010', 'y': 0.4}, {'x': '2011', 'y': 0.52}, {'x': '2012', 'y': 0.84}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of IngestWords', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.22}, {'x': 'Field', 'y': 1.74}, {'x': 'type': 'quantitative', 'y': 0.85}, {'x': 'Field', 'y': 0.18}, {'x': 'variable': 'value', 'y': 1.15}, {'x': 'variable': 'value', 'y': 0.18}, {'x': 'variable': 'value', 'y': 0.18}, {'x': 'variable': 'value', 'y': 0.18}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1987', 'y': 0.06}, {'x': '2002', 'y': 0.07}, {'x': '2013', 'y': 0.07}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of total)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6.16}, {'x': 'Field', 'y': 6.16}, {'x': 'variable': 'Value', 'y': 6.16}, {'x': 'variable': 'Value Numeric', 'y': 6.16}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed males(% of male labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 16.8}, {'x': '1991', 'y': 17.0}, {'x': '1992', 'y': 18.6}, {'x': '1993', 'y': 23.6}, {'x': '1994', 'y': 27.2}, {'x': '1995', 'y': 23.7}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed male youth population of France', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 16.77}, {'x': 'Field', 'y': 16.77}, {'x': 'Year', 'y': 27.18}, {'x': 'Field', 'y': 16.77}, {'x': 'variable': 'Value', 'y': 16.77}, {'x': 'field', 'y': 16.77}, {'x': 'field', 'y': 16.77}, {'x': 'variable': 'Value', 'y': 16.77}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mArable land (hectares) in Seychelles.plot(kind='bar', figsize=(30,40), color='#006699')<0x0A>plt.title('Arable land (hectares) in Seychelles', fontsize=20)<0x0A>plt.xlabel('Year', fontsize=16)<0x0A>plt.ylabel('Area (Client/ (hectares)%)', fontsize=16)<0x0A>plt.xticks(rotation=0)<0x0A>plt.yticks(fontsize=16)<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total Vulnerable employment (% of total employment)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1996', 'y': 80.1}, {'x': '2001', 'y': 75.9}, {'x': '2005', 'y': 79.8}, {'x': '2010', 'y': 73.6}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total Vulnerable employment (% of total employment)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 79.67}, {'x': 'field', 'y': 79.67}, {'x': 'type', 'y': 80.52}, {'x': 'field', 'y': 79.67}, {'x': 'field', 'y': 80.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Domestic credit (% of GDP)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 13.87}, {'x': '2003', 'y': 15.0}, {'x': '2004', 'y': 17.17}, {'x': '2005', 'y': 17.56}, {'x': '2006', 'y': 18.24}, {'x': '2007', 'y': 17.91}, {'x': '2008', 'y': 18.18}, {'x': '2009', 'y': 20.0}, {'x': '2010', 'y': 22.66}]}}
[31mdomestic_credit = df.groupby(['Year'])['Domestic credit (% of GDP)'].sum()<0x0A>domestic_credit.plot(kind='line', x='Year', y='Domestic credit (% of GDP)', color='tab:red', figsize=(25, 25))<0x0A>plt.title('Domestic credit provided by financial sector in Central African Republic')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Domestic credit (% of GDP)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Birth Registration (in %)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 31.8}, {'x': '2012', 'y': 63.9}]}}
[31mpercentage_births_plot(birth_data, 'Year', 'Birth Registration (in %)', 'Percentage of children under age 5 whose births were registered at the time of the survey in Niger')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Birth Registration (in %)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 64.0}, {'x': '2010', 'y': 76.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Birth Registration in %%', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 21.95}, {'x': 'Field', 'y': 79.84}, {'x': 'Year', 'y': 21.95}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of repeaters', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 0.24}, {'x': '2000', 'y': 0.22}, {'x': '2001', 'y': 0.23}, {'x': '2002', 'y': 0.17}]}}
[31m# Plot percentage of repeaters in secondary general education of Kyrgyz Republic<0x0A><0x0A>fig = plt.figure(figsize=(25,25))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plot percentage of repeaters in secondary general education of Kyrgyz Republic<0x0A>ax.plot(repeaters_by_year.index, repeaters_by_year.values, color='#000000')<0x0A><0x0A># Plot percentage of repeaters in secondary general education of Kyrgyz Republic<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Percentage of repeaters in secondary general education of Kyrgyz Republic')<0x0A>ax.set_title('Percentage of repeaters in secondary general education of Kyrgyz Republic')<0x0A><0x0A># Plot percentage of repeaters in secondary general education of Kyrgyz Republic<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A># Plot percentage of repeaters in secondary general education of Kyrgyz Republic<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A># Plot percentage of repeaters in secondary general education of Kyrgyz Republic<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A># Plot percentage of repeaters in secondary general education of Kyrgyz Republic<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A># Plot percentage of repeaters in secondary general education of Kyrgyz Republic<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A># Plot percentage of repeaters in secondary general education of Kyrgyz Republic<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A># Plot percentage of repeaters in
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Workers(% of total employed)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2001', 'y': 46.5}, {'x': '2008', 'y': 36.1}, {'x': '2012', 'y': 1.5}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Weddings', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 60}, {'x': 'Field', 'y': 'Maximum Number of Total Workers', 'data': {'x': 'Year', 'y': 'Weddings' para levitating'}, 'x': {'y': 'Value', 'y': 'Converted'}, 'x': {'x': 'Field', 'y': 'Converted'}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Global Equity Indices (annual % change)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 48.8}, {'x': '1998', 'y': -38.9}, {'x': '1999', 'y': 78.5}, {'x': '2000', 'y': -21.48}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Global Early Analysis (Journal 1 Average)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 9.14}, {'x': 'Field', 'y': 10.95}, {'x': 'Year', 'y': 12.05}, {'x': 'Field', 'y': 10.95}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of reported total deaths to estimated total deaths', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2005', 'y': 82.05}, {'x': '2007', 'y': 80.48}]}}
[31mCountry_year = 'Pakistan'<0x0A>Country_year_count = Country_year.sort_values(by='Year', ascending=False)<0x0A>Country_year_count = Country_year_count[Country_year_count['Country'].isin(Country_year_count['Country'].value_counts().head(10))]<0x0A>Country_year_count = Country_year_count.sort_values(by='Year', ascending=False)<0x0A>Country_year_count = Country_year_count.drop(['Country', 'Country'], axis=1)<0x0A>Country_year_count = Country_year_count.drop(['Country', 'Country'], axis=1)<0x0A>Country_year_count = Country_year_count.sort_values(by='Year', ascending=False)<0x0A>Country_year_count = Country_year_count.drop(['Country', 'Country'], axis=1)<0x0A>Country_year_count = Country_year_count.sort_values(by='Year', ascending=False)<0x0A>Country_year_count = Country_year_count.drop(['Country', 'Country'], axis=1)<0x0A>Country_year_count = Country_year_count.sort_values(by='Year', ascending=False)<0x0A>Country_year_count = Country_year_count.drop(['Country', 'Country'], axis=1)<0x0A>Country_year_count = Country_year_count.sort_values(by='Year', ascending=False)<0x0A>Country_year_count = Country_year_count.drop(['Country', 'Country'], axis=1)<0x0A>Country_year_count = Country_year_count.sort_values(by='Year', ascending=False)<0x0A>Country_year_count = Country_
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Percentage of Production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.05}, {'x': 'field', 'y': 125.66}, {'x': 'field', 'y': 324.05}, {'x': 'variable', 'y': 125.66}, {'x': 'field', 'y': 324.05}, {'x': 'variable', 'y': 324.05}, {'x': 'field', 'y': 324.05}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Elevated land area (as % of total land area)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 4.46}, {'x': '2000', 'y': 4.46}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Energed fuel from the % of total load of city', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6.55}, {'x': 'Field', 'y': 6.55}, {'x': 'Year', 'y': 7.01}, {'x': 'Field', 'y': 7.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Vulnerable female employment (% of total female employment)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 73}, {'x': '2008', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Vulnerable Females employed', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 71.81}, {'x': 'Year', 'y': 71.81}, {'x': 'Field', 'y': 15.55}, {'x': 'Year', 'y': 71.81}, {'x': 'Field', 'y': 71.81}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 164}, {'x': 'Year', 'y': 164}, {'x': 'Year', 'y': 164}, {'x': 'Year', 'y': 164}, {'x': 'Year', 'y': 164}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'Field', 'y': 47.68}, {'x': 'variable', 'y': 37.04}, {'x': 'variable', 'y': 46.56}, {'x': 'field', 'y': 47.68}, {'x': 'variable', 'y': 37.04}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="Net", data=net, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.despine(left=True)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=16)
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Expenditure (as % of GDP per capita)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 208.0}, {'x': '2001', 'y': 225.25}, {'x': '2004', 'y': 274.43}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Expenditure (lbs)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 69.99}, {'x': 'Field', 'y': 214.09}, {'x': 'Nominal', 'y': 69.99}, {'x': 'Nominal', 'y': 214.09}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Earning from trade(% of GDP)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Burundi', 'y': 26.99}, {'x': 'Cabo Verde', 'y': 43.48}, {'x': 'Cambodia', 'y': 96.39}, {'x': 'Cameroon', 'y': 34.19}, {'x': 'Canada', 'y': 47.12}]}}
[31mCountry_Earning_of_countries_from_merchandise_trade_in_the_year_2009 = pd.DataFrame(country_Earning_of_countries_from_merchandise_trade_in_the_year_2009, index = 'Country', columns = 'Earning of countries from merchandise trade in the year 2009')<0x0A>Country_Earning_of_countries_from_merchandise_trade_in_the_year_2009.sort_values(by = 'Earning of countries from merchandise trade in the year 2009', ascending = False).head(10)<0x0A>Country_Earning_of_countries_from_merchandise_trade_in_the_year_2009.plot(kind = 'bar', title = 'Earning of countries from merchandise trade in the year 2009', figsize = (25,25), fontsize = 18)<0x0A>Country_Earning_of_countries_from_merchandise_trade_in_the_year_2009.plot(kind = 'bar', title = 'Earning of countries from merchandise trade in the year 2009', fontsize = 18)<0x0A>Country_Earning_of_countries_from_merchandise_trade_in_the_year_2009.plot(kind = 'bar', title = 'Earning of countries from merchandise trade in the year 2009', fontsize = 18)<0x0A>Country_Earning_of_countries_from_mer
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Energy consumed(% of total)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Cameroon', 'y': 16.11}, {'x': 'Canada', 'y': 74.26}, {'x': 'Chile', 'y': 66.36}, {'x': 'China', 'y': 75.43}, {'x': 'Colombia', 'y': 70.81}]}}
[31mCountry_name = 'Country'<0x0A><0x0A># Create a DataFrame of the Fossil Fuel Energy Consumption in 1992<0x0A>Fossil_fuel_energy_consumption_1992 = FossilFuel_energy_consumption_1992.plot(kind='bar', figsize=(15,15), color='#003366')<0x0A>Fossil_fuel_energy_consumption_1992.set_title('Fossil fuel energy consumption in 1992')<0x0A>Fossil_fuel_energy_consumption_1992.set_xlabel('Country')<0x0A>Fossil_fuel_energy_consumption_1992.set_ylabel('')<0x0A>Fossil_fuel_energy_consumption_1992.set_xticklabels(Country_name, rotation=90)<0x0A><0x0A># Save Figure<0x0A>Fossil_fuel_energy_consumption_1992.savefig('Fossil fuel energy consumption in 1992.png')<0x0A><0x0A># Show Plot<0x0A>Fossil_fuel_energy_consumption_1992.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'IMF credit(in current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Bangladesh', 'y': 67856000}, {'x': 'Bolivia', 'y': 8555000}, {'x': 'Chad', 'y': 2367000}, {'x': 'Congo (Democratic)', 'y': 30649000}, {'x': 'Dominican Republic', 'y': 4071000}]}}
[31mCountry_use_of_IMF_credit_1972_in_defense_of_different_countries = df_2019.groupby(['Country']).size().reset_index(name='JUNGLE CREDIT INF CREDIT INF (US$)', 'JUNGLE CREDIT INF CREDIT INF (UK$)', 'COUNTRY')<0x0A>Country_use_of_IMF_credit_1972_in_defense_of_different_countries = Country_use_of_IMF_credit_1972_in_defense_of_different_countries[df_2019.Country!= 'United States']<0x0A>Country_use_of_IMF_credit_1972_in_defense_of_different_countries = Country_use_of_IMF_credit_1972_in_defense_of_different_countries[df_2019.Country!= 'United States']<0x0A>Country_use_of_IMF_credit_1972_in_defense_of_different_countries = Country_use_of_IMF_credit_1972_in_defense_of_different_countries[df_2019.Country!= 'United States']<0x0A>Country_use_of_IMF_credit_1972_in_defense_of_different_countries = Country_use_of_IMF_credit_1972_in_defense_of_different_countries[df_2019.Country!= 'United States']<0x0A>Country_use_of_IMF_credit_1972_in_defense_of_different_countries = Country_use_
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households with a female head', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1994', 'y': 15.1}, {'x': '1999', 'y': 14.4}, {'x': '2005', 'y': 18.4}, {'x': '2012', 'y': 18.0}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A><0x0A>df = pd.read_csv('C:/Users/Alexandra/Desktop/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/Dataset/
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Debt(current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Sri Lanka', 'y': 1769910000.0}, {'x': 'St. Lucia', 'y': 24373000.0}, {'x': 'St. Vincent and the Grenadines', 'y': 26240000.0}, {'x': 'Sudan', 'y': 1548887000.0}, {'x': 'Swaziland', 'y': 65058000.0}, {'x': 'Syrian Arab Republic', 'y': 544265000.0}]}}
[31mCountry_total_undisbursed_external_debt = pd.DataFrame(country_total_undisbursed, columns = ['Country', 'Undisbursed external debt of countries as per the survey of 1989'])<0x0A>Country_total_undisbursed_external_debt.sort_values(by = 'Undisbursed external debt of countries as per the survey of 1989', ascending = False).head(10)<0x0A>Country_total_undisbursed_external_debt.plot(kind = 'bar', title = 'Total undisbursed external debt of countries as per the survey of 1989', color = 'black')<0x0A>Country_total_undisbursed_external_debt.plot(kind = 'bar', title = 'Total undisbursed external debt of countries as per the survey of 1989', color = 'black')<0x0A>Country_total_undisbursed_external_debt.plot(kind = 'bar', title = 'Total undisbursed external debt of countries as per the survey of 1989', color = 'black')<0x0A>Country_total_undisbursed_external_debt.plot(kind = 'bar', title = 'Total undisbursed external debt of countries as per the survey of 1989', color = 'black')<0x0A>Country_total_undisbursed_external_debt.plot(kind = 'bar', title = 'Total undisbursed external debt of countries as per the survey of 1989', color =
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Total subscribers (per 100 people)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Ecuador', 'y': 0.05}, {'x': 'Egypt, Arab Rep.', 'y': 0.07}, {'x': 'Estonia', 'y': 3.45}, {'x': 'Faeroe Islands', 'y': 0.24}, {'x': 'Finland', 'y': 5.26}, {'x': 'France', 'y': 2.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Fixed broadband subscriptions (per 100 people) in the year 2002', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'country', 'y': 9.67}, {'x': 'field', 'y': 7.05}, {'x': 'field', 'y': 7.05}, {'x': 'field', 'y': 5.55}, {'x': 'field', 'y': 5.55}, {'x': 'field', 'y': 7.05}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Part-time female workers(% of females employed)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2003', 'y': 13.2}, {'x': '2004', 'y': 10.8}, {'x': '2005', 'y': 12.2}, {'x': '2006', 'y': 13.1}, {'x': '2007', 'y': 11.8}]}}
[31mpercentage_female_part_time_workers_SA = percentage_female_part_time_workers_SA.sort_values(ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.bar(x=percentage_female_part_time_workers_SA.index, height=percentage_female_part_time_workers_SA.values, color='#000000')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Percentage female part-time workers SA')<0x0A>ax.set_title('Percentage of female part-time workers SA')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Debt(% of exports of goods, services and primary income)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1996', 'y': 6.52}, {'x': '1997', 'y': 6.27}, {'x': '1998', 'y': 6.21}, {'x': '1999', 'y': 7.79}, {'x': '2000', 'y': 7.91}, {'x': '2001', 'y': 8.91}]}}
[31mtitle = 'Long-term public and publicly guaranteed debt and repayments of Lao PDR to the IMF'<0x0A>df = get_debt_debt_loan(df,title,'Year',title_freq='M',title_text='Debt % of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Number of flight takeoffs', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Australia', 'y': 18700}, {'x': 'Austria', 'y': 21000}, {'x': 'Bahamas', 'y': 15900}, {'x': 'Bahrain', 'y': 5400}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Number of domestic takeoffs and takeoffs abroad of air carriers registered in countries', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'country', 'y': 1868}, {'x': 'field', 'y': 2101}, {'x': 'country', 'y': 2098}, {'x': 'field', 'y': 1588}, {'x': 'field', 'y': 1588}, {'x': 'field', 'y': 5448}, {'x': 'field', 'y': 1588}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Amount (in current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1987', 'y': 174653000}, {'x': '1988', 'y': -110802000}, {'x': '1989', 'y': 164303000}, {'x': '1990', 'y': 21902000}, {'x': '1991', 'y': -38847000}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Amount (in current (US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 16486406.55}, {'x': 'Field', 'y': 22128696.63}, {'x': 'Year', 'y': 17480546.01}, {'x': 'Field', 'y': 17480546.01}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of children', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}, {'x': '1999', 'y': 1000}, {'x': '2000', 'y': 1000}, {'x': '2001', 'y': 1000}]}}
[31m# 2.2.2<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Draw a nested barplot to show bills by year and month<0x0A>sns.barplot(x=df_year['Year'], y=df_year['Number of children ages 0-14 who are infected with HIV in Jamaica'], data=df_year, color='#006795')<0x0A><0x0A># Set title and labels<0x0A>ax.set_title('Number of children ages 0-14 who are infected with HIV in Jamaica')<0x0A>ax.set_ylabel('Number of children ages 0-14 who are infected with HIV in Jamaica')<0x0A><0x0A># Save the figure<0x0A>f, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Draw a nested barplot to show bills by year and month<0x0A>sns.barplot(x=df_year['Year'], y=df_year['Number of children ages 0-14 who are infected with HIV in Jamaica'], data=df_year, color='#006795')<0x0A><0x0A># Save the figure<0x0A>ax.set_title('Number of children ages 0-14 who are infected with HIV in Jamaica')<0x0A>ax.set_ylabel('Number of children ages 0-14 who are infected with HIV in Jamaica')<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Proportion of dependents per 100 working-age population', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 50.35}, {'x': '2010', 'y': 50.68}, {'x': '2011', 'y': 51.42}, {'x': '2012', 'y': 52.46}, {'x': '2013', 'y': 53.73}, {'x': '2014', 'y': 55.06}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Proportion of Dependency ratio in Greece', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.11}, {'x': 'Field', 'y': 7.11}, {'x': 'Nominal', 'y': 7.11}, {'x': 'Nominal', 'y': 7.11}, {'x': 'Field', 'y': 7.11}, {'x': 'Nominal', 'y': 7.11}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'new registrations per 1,000 people ages 15-64', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2005', 'y': 0.59}, {'x': '2006', 'y': 0.56}, {'x': '2007', 'y': 0.58}, {'x': '2008', 'y': 0.62}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'New registrationsper 1200 people ages 15-50', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 67.01}, {'x': 'Field', 'y': 67.01}, {'x': 'Year', 'y': 67.01}, {'x': 'Field', 'y': 67.01}, {'x': 'Year', 'y': 67.01}, {'x': 'Field', 'y': 67.01}, {'x': 'Year', 'y': 67.01}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Amount (in current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Mali', 'y': 252581000.0}, {'x': 'Mauritania', 'y': 450743000.0}, {'x': 'Mauritius', 'y': 492046000.0}, {'x': 'Mexico', 'y': 50479571000.0}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Amount (in current (SS$)', 'type': 'quantitative)'}, 'y': {'field': 'External debt owed to nonresidents by residents of different countries', 'type': 'quantitative'}}, 'data': {'values': [{'x': 199206406, 'y': 681636555}, {'x': 'field': 'Country', 'type': 'quantitative'}}, 'y': 0.75}, {'x': 'field': 'Amount (in current (SS$)', 'type': 'quantitative'}}, 'y': 0.75}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of children', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 1100}, {'x': '2003', 'y': 1100}, {'x': '2004', 'y': 1200}, {'x': '2005', 'y': 1300}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Number of children ages 0-14 who are infected with HIV in Djibouti', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'field', 'y': 1003}, {'x': 'field', 'y': 1003}, {'x': 'type', 'y': 1003}, {'x': 'field', 'y': 1003}, {'x': 'field', 'y': 1003}, {'x': 'field', 'y': 1003}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country']).mean()['Yield for per person/laboratory']).sort_values(by='Yield for per person/laboratory', ascending=False)<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', figsize=(15,15), color='green')<0x0A>plt.xlabel('Country')<0x0A>plt.ylabel('Yield for per person/laboratory')<0x0A>plt.title('Cereal yield in different countries as per the survey of 1981')<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Angola', 'y': 270000.0}, {'x': 'Antigua and Barbuda', 'y': 2690000.0}, {'x': 'Argentina', 'y': 12250000.0}, {'x': 'Bahamas', 'y': 80000.0}]}}
[31mCountry = df.Country.astype(str).tolist()<0x0A>Country.reverse()<0x0A>Country.reverse()<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>sns.barplot(x='Country', y='Adj Flow from DAC donors (external ISS)', data=df, palette='rocket', ax=ax)<0x0A>ax.set_title('Net bilateral aid flow in the year 1974 from Development Assistance Committee', fontsize=16)<0x0A>ax.set_ylabel('Aid flow from DAC donors (external ISS)', fontsize=14)<0x0A>ax.set_xlabel('Country', fontsize=14)<0x0A>ax.tick_params(axis='x', labelsize=14)<0x0A>ax.tick_params(axis='y', labelsize=14)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cereal Production (hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2003', 'y': 2901562}, {'x': '2004', 'y': 3000600}, {'x': '2005', 'y': 2350515}, {'x': '2006', 'y': 2672157}, {'x': '2007', 'y': 2873827}, {'x': '2008', 'y': 1485453}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Cereal production (hectares) in Algeria', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 29000000}, {'x': 'field', 'y': 3000000}, {'x': 'field', 'y': 1000000}, {'x': 'field', 'y': 2850000}, {'x': 'field', 'y': 2900000}, {'x': 'field', 'y': 2700000}, {'x': 'field', 'y': 28500000}, {'x': 'field', 'y': 1500000}, {'x': 'field', 'y': 1500000}, {'x': 'field', 'y': 2600000}, {'x': 'field', 'y': 1500000}, {'x': 'field', 'y': 2900000}, {'x': 'field', 'y': 1500
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Average number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 10.0}, {'x': '2005', 'y': 7.6}, {'x': '2009', 'y': 4.6}, {'x': '2012', 'y': 5.6}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Average number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 1844}, {'x': 'Field', 'y': 798}, {'x': 'Nominal', 'y': 1844}, {'x': 'Nominal', 'y': 798}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Investment (in US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2008', 'y': 15074790314}, {'x': '2009', 'y': -17756860244}, {'x': '2010', 'y': -36875471079}, {'x': '2011', 'y': -2664809742}, {'x': '2012', 'y': -29285240146}, {'x': '2013', 'y': -6857994918}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Investing in US$', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 1644445.68}, {'x': 'Field', 'y': 1644445.68}, {'x': 'Nominal', 'y': 1284445.68}, {'x': 'Nominal', 'y': 1284445.68}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A> grupo_df.plot(kind='bar', figsize=(15,15), color='#133333', title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A>plt.ylabel('5% / poverty lines')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'S$% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.07}, {'x': 'Field', 'y': 7.07}, {'x': 'Nominal', 'y': 7.07}, {'x': 'Nominal', 'y': 7.07}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Survival rate(%)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1983', 'y': 59.82}, {'x': '1985', 'y': 63.41}, {'x': '1986', 'y': 57.17}, {'x': '1990', 'y': 53.38}, {'x': '1991', 'y': 48.48}, {'x': '1992', 'y': 38.48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Survival rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 99.69}, {'x': 'Field', 'y': 99.69}, {'x': 'Nominal', 'y': 99.69}, {'x': 'Nominal', 'y': 99.69}, {'x': 'Field', 'y': 99.69}, {'x': 'Nominal', 'y': 99.69}, {'x': 'Field', 'y': 99.69}, {'x': 'Nominal', 'y': 99.69}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Amount spent (% of revenue)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 6.66}, {'x': '2010', 'y': 7.24}, {'x': '2011', 'y': 7.25}, {'x': '2012', 'y': 7.04}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Amount (per 10g of revenue)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'Field', 'y': 7.55}, {'x': 'Year', 'y': 7.55}, {'x': 'Field', 'y': 7.55}, {'x': 'Year', 'y': 7.55}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Amount of total stocks', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 50280}, {'x': '1980', 'y': 52493}, {'x': '1985', 'y': 38770}, {'x': '1990', 'y': 40191}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Amount of of foreign stocks', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5035}, {'x': 'Field', 'y': 5860}, {'x': 'Nominal', 'y': 5035}, {'x': 'Field', 'y': 5860}, {'x': 'Nominal', 'y': 5035}, {'x': 'Field', 'y': 5035}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Amount (in current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 330813000}, {'x': '1991', 'y': 584218000}, {'x': '1992', 'y': 68314000}, {'x': '1993', 'y': 291328000}, {'x': '1994', 'y': 590868000}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Amount (in received LGS)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 33166420.62}, {'x': 'Field', 'y': 0950666}, {'x': 'Nominal', 'y': 6406566}, {'x': 'Nominal', 'y': 29031316.62}, {'x': 'Field', 'y': 33166420.62}, {'x': 'Nominal', 'y': 33166420.62}, {'x': 'Nominal', 'y': 6406566}, {'x': 'Nominal', 'y': 33166420.62}, {'x': 'Nominal', 'y': 33166420.62}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Population(%)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1960', 'y': 50.76}, {'x': '1961', 'y': 50.72}, {'x': '1962', 'y': 50.67}, {'x': '1963', 'y': 50.61}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Population'}), 'data': {'values': [{'x': 'Year', 'y': 50.89}, {'x': 'Field', 'y': 50.89}, {'x': 'Year', 'y': 50.89}, {'x': 'Field', 'y': 50.89}, {'x': 'Year', 'y': 50.89}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Number of tax payers', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'East Asia (developing only)', 'y': 26.61}, {'x': 'Euro area', 'y': 13.22}, {'x': 'Europe(all income levels)', 'y': 29.45}, {'x': 'Europe(developing only)', 'y': 52.0}, {'x': 'European Union', 'y': 17.63}, {'x': 'Fragile and conflict affected situations', 'y': 35.7}]}}
[31mCountry = 'China'<0x0A>Year = '2010'<0x0A>Country_name = 'Country'<0x0A><0x0A>df = DataFrame(country_name, columns = ['Year', 'TotalPay', 'TotalCharges', 'TotalCharges'])<0x0A>df = df.sort_values(by = 'TotalPay', ascending = False)<0x0A>df = df.head(5)<0x0A><0x0A>fig, ax = plt.subplots(figsize = (15,15))<0x0A><0x0A>ax.bar(df['Year'], df['TotalPay'], color = 'g', width = 0.4)<0x0A>ax.set_ylabel('Number of Tax payers')<0x0A>ax.set_xlabel('Country')<0x0A>ax.set_title('Number of tax payers in different countries in the year 2010')<0x0A>ax.set_xticklabels(Country_name, rotation ='vertical')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'n_procedures', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type', 'building_type',
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2005', 'y': 44.5}, {'x': '2008', 'y': 41.9}, {'x': '2011', 'y': 80.1}]}}
[31mpercentage_households = pd.DataFrame(data=percentage_households, columns=['Year', '5g of Households', 'Percentage of households in Philippines that uses iodized salt'])<0x0A>percentage_households.index = percentage_households.index.map(int)<0x0A><0x0A>g = sns.catplot(x="Year", y="5g of Households", data=percentage_households, kind="bar", palette="Reds_d", height=15)<0x0A>g.set_xticklabels(rotation=90)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A>#g.fig.suptitle('Percentage of households in Philippines that uses iodized salt')<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A>#g.fig.subplots_adjust(bottom=0.05)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A>#g.fig.subplots_adjust(bottom=0.05)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A>#g.fig.subplots_adjust(left=0.05)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A>#g.fig.subplots_adjust(left=0.05)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A>#g.fig.subplots_adjust(left=0.05)<0x0A>g.fig.subplot
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of women ages 15-49', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1980', 'y': 71.2}, {'x': '1995', 'y': 82.0}]}}
[31mpercentage_female_women = df_female_women.groupby('Year')['Percentage of women in Switzerland who are practicing any form of contraception'].mean()<0x0A>percentage_female_women = percentage_female_women.sort_values(ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20,15))<0x0A>ax.bar(percentage_female_women.index, percentage_female_women, color='c', align='center')<0x0A>ax.set_ylabel('Percentage of women aged (Cdg)')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_title('Percentage of women in Switzerland who are practicing any form of contraception')<0x0A>ax.set_ylim(0, 100)<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Electric power consumption (kWh per capita)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'India', 'y': 510.7}, {'x': 'Indonesia', 'y': 519.51}, {'x': 'Iran', 'y': 2209.66}, {'x': 'Iraq', 'y': 972.33}]}}
[31mCountry_Electric_power_consumption = df_Electric_power_consumption.sort_values(by='Electric power consumption (kWh per capita) by countries in the year 2006', ascending=False)<0x0A>Country_Electric_power_consumption = Country_Electric_power_consumption.drop(['Electric power consumption (kWh per capita) by countries in the year 2006'], axis=1)<0x0A>Country_Electric_power_consumption.plot(kind='bar', title='Electric power consumption (kWh per capita) by countries in the year 2006', color='black', figsize=(15,15))<0x0A>Country_Electric_power_consumption.set_xlabel('Country')<0x0A>Country_Electric_power_consumption.set_ylabel('Electric power consumption (kWh per capita) by countries in the year 2006', fontsize=15)<0x0A>Country_Electric_power_consumption.set_ylabel('Electric power consumption (kWh per capita) by countries in the year 2006', fontsize=15)<0x0A>Country_Electric_power_consumption.set_xticklabels(['','','','','','','','','','','','','','','','','',''
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Amount (in current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Benin', 'y': 128069000.0}, {'x': 'Bhutan', 'y': 47336000.0}, {'x': 'Bolivia', 'y': 594170000.0}, {'x': 'Bosnia and Herzegovina', 'y': 824769000.0}]}}
[31mCountry_2019 = df_2019[(df_2019['Country'].isin(top_2019['Country'].value_counts().head(10)) & (df_2019['Country'].isin(top_2019['Country'].value_counts().head(10)))].sort_values('Country',ascending=False)<0x0A>Country_2019 = Country_2019.drop(['Country'], axis=1)<0x0A>Country_2019 = Country_2019.drop(['Country'], axis=1)<0x0A>Country_2019 = Country_2019.sort_values('Country',ascending=False)<0x0A>Country_2019 = Country_2019.drop(['Country'], axis=1)<0x0A>Country_2019 = Country_2019.drop(['Country'], axis=1)<0x0A>Country_2019 = Country_2019.sort_values('Country',ascending=False)<0x0A>Country_2019 = Country_2019.drop(['Country'], axis=1)<0x0A>Country_2019 = Country_2019.drop(['Country'], axis=1)<0x0A>Country_2019 = Country_2019.drop(['Country'], axis=1)<0x0A>Country_2019 = Country_2019.sort_values('Country',ascending=False)<0x0A>Country_2019 = Country_2019.drop(['Country'], axis=1)<0x0A>Country_2019 = Country_2019.drop(['Country'], axis=1)<0x0A>Country_2019 = Country_20
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Domestic credit (% of GDP)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2001', 'y': 28.46}, {'x': '2002', 'y': 31.92}, {'x': '2003', 'y': 32.61}, {'x': '2004', 'y': 31.35}, {'x': '2005', 'y': 31.41}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Domestic credit (1% of GDP)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 11.95}, {'x': 'Field', 'y': 7.96}, {'x': 'Nominal', 'y': 11.95}, {'x': 'Nominal', 'y': 11.95}, {'x': 'Field', 'y': 11.95}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Tuberculosis incidents (per 100,000 people)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1994', 'y': 69}, {'x': '1995', 'y': 71}, {'x': '1996', 'y': 73}, {'x': '1997', 'y': 76}]}}
[31mgrupo_bairro['year'] = grupo_bairro['date'].apply(lambda x: str(x.year) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day)<0x0A><0x0A># plot<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># plot<0x0A>ax.bar(groupe_bairro['year'], grupo_bairro['cases'], color='orange')<0x0A><0x0A># set title<0x0A>ax.set_title('Number of tuberculosis cases reported in Brunei Darussalam')<0x0A><0x0A># set x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># set y-axis label<0x0A>ax.set_ylabel('Tuberculosis mortality per 10,200 people')<0x0A><0x0A># set y-axis limit<0x0A>ax.set_ylim(0, 72)<0x0A><0x0A># save plot as png<0x0A>plt.savefig('Number of tuberculosis cases reported in Brunei Darussalam')<0x0A><0x0A># save plot as png<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total subscribers', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2008', 'y': 46242}, {'x': '2009', 'y': 63000}, {'x': '2010', 'y': 72800}, {'x': '2011', 'y': 70000}, {'x': '2012', 'y': 67300}, {'x': '2013', 'y': 64700}, {'x': '2014', 'y': 62800}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Pull subscribers', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6552}, {'x': 'Field', 'y': 7574}, {'x': 'Year', 'y': 6552}, {'x': 'Field', 'y': 7574}, {'x': 'Year', 'y': 6552}, {'x': 'Field', 'y': 7574}, {'x': 'Year', 'y': 6552}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1122.1}, {'x': '1971', 'y': 1074.44}, {'x': '1972', 'y': 1066.85}, {'x': '1973', 'y': 1049.12}, {'x': '1974', 'y': 936.04}, {'x': '1975', 'y': 1074.82}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Yield of 1000 Predictions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 1000}, {'x': 'Field', 'y': 736}, {'x': 'Year', 'y': 129.85}, {'x': 'Field', 'y': 129.85}, {'x': 'Year', 'y': 736}, {'x': 'Field', 'y': 129.85}, {'x': 'Field', 'y': 115.55}, {'x': 'Field', 'y': 115.55}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed females (as % of female labor force)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2003', 'y': 6.86}, {'x': '2004', 'y': 6.73}, {'x': '2005', 'y': 6.68}, {'x': '2006', 'y': 6.39}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Unemployment for female, non-fertilized labor force (poor (Exercise)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 68.71}, {'x': 'Field', 'y': 68.71}, {'x': 'Year', 'y': 68.71}, {'x': 'Field', 'y': 68.71}, {'x': 'Year', 'y': 68.71}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Teachers, male (%)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 91.45}, {'x': '2008', 'y': 87.37}, {'x': '2009', 'y': 84.51}, {'x': '2010', 'y': 80.3}, {'x': '2011', 'y': 77.99}, {'x': '2012', 'y': 75.14}, {'x': '2013', 'y': 80.2}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Toughness model (%)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 11.67}, {'x': 'field', 'y': 11.67}, {'x': 'variable', 'y': 11.67}, {'x': 'field', 'y': 11.67}, {'x': 'variable', 'y': 11.67}, {'x': 'field', 'y': 11.67}, {'x': 'variable', 'y': 11.67}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Producer in production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 11200}, {'x': 'y', 'y': 7200}, {'x': 'x', 'y': 10300}, {'x': 'y', 'y': 7200}, {'x': 'x', 'y': 11200}, {'x': 'y', 'y': 10300}, {'x': 'x', 'y': 6200}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployment (% of total unemployment)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 20.9}, {'x': '2010', 'y': 23.8}, {'x': '2011', 'y': 23.0}, {'x': '2012', 'y': 19.7}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Unemployment (% of total unemployed/working)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 9.3}, {'x': 'Field', 'y': 'Value', 'type': 'quantitative'}}, 'data': {'x': 'Year', 'y': 'Value', 'dataparsed']}}<0x0A>       }: {'x': {'field': 'Year', 'y': 'Value', 'dataparsed']}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Detection rate (%, all forms)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1992', 'y': 110}, {'x': '1995', 'y': 76}, {'x': '1996', 'y': 77}, {'x': '1997', 'y': 120}, {'x': '1998', 'y': 160}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Outduction rate (% all females)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 100.8}, {'x': 'Field', 'y': 100.8}, {'x': 'variable': 'Value', 'y': 68.09}, {'x': 'field', 'y': 68.09}, {'x': 'variable': 'Value', 'y': 68.09}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/movement)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.45}, {'x': 'Field', 'y': 55.78}, {'x': 'Year', 'y': 103.95}, {'x': 'Field', 'y': 103.95}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Country','Year','2018']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>percentage_sr_lanka.plot(kind='bar', ax=ax)<0x0A>ax.set_title('Percentage of babies born with low-birthweight in Sri Lanka')<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xlabel('')<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['right'].set
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Birth Registration (in %)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 41.1}, {'x': '2011', 'y': 83.6}]}}
[31mpercentage_india = pd.DataFrame(data=percentage_india, columns=['Year', 'Birth Registration (in %)', 'Age', 'Birth', 'Birth', 'Birth', 'Age', 'Birth', 'Age', 'Birth', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age'
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total reserves (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1967', 'y': 2629210307.44}, {'x': '1968', 'y': 2798136288.14}, {'x': '1969', 'y': 2540014731.45}, {'x': '1970', 'y': 3362472584.51}, {'x': '1971', 'y': 4102925821.88}, {'x': '1972', 'y': 6242195051.24}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Page 1 International (earned K$S)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2620aret}, {'x': 'field', 'y': 2620aret}, {'x': 'field', 'y': 4.25}, {'x': 'variable', 'y': 4.25}, {'x': 'field', 'y': 2620aret}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Current account balance (% of GDP)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 15.22}, {'x': '2007', 'y': 5.85}, {'x': '2008', 'y': 8.24}, {'x': '2009', 'y': -1.04}, {'x': '2010', 'y': 8.59}, {'x': '2011', 'y': 13.17}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Current Account Balance (%) of GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 14.43}, {'x': 'Field', 'y': 14.43}, {'x': 'Year', 'y': 14.43}, {'x': 'Field', 'y': 14.43}, {'x': 'Value', 'y': 14.43}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total subscribers (per 100 people)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.0}, {'x': '2010', 'y': 0.0}, {'x': '2011', 'y': 0.0}, {'x': '2012', 'y': 0.0}, {'x': '2013', 'y': 0.0}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Fixed broadband subscriptions (per 100 people)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.05}, {'x': 'field', 'y': 0.05}, {'x': 'type', 'y': 0.05}, {'x': 'field', 'y': 0.05}, {'x': 'type', 'y': 0.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Amount of imports(% of total goods imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2003', 'y': 8.49}, {'x': '2004', 'y': 7.33}, {'x': '2005', 'y': 8.42}, {'x': '2006', 'y': 8.76}, {'x': '2007', 'y': 8.17}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Amount of import(s) of local goods imported by Portugal', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 9.55}, {'x': 'Field', 'y': 6.66}, {'x': 'Year', 'y': 'Amount of import(s) of local goods imported by Portugal', 'data': 'quantitative'}}, 'data': {'x': 'Field', 'y': 7.05}, {'x': 'Value', 'y': 'Amount of import(s) of local goods imported by Portugal', 'data':deducted95': {'x': 'Field', 'y': 9.55}, {'x': 'Value', 'y': 'quantitative'}}, 'data': {'x': 'Field', 'y': 'quantitative'}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of women ages 15-49', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1992', 'y': 48.0}, {'x': '2000', 'y': 42.1}, {'x': '2006', 'y': 45.6}, {'x': '2010', 'y': 47.6}]}}
[31mpercentage_women_in_surname_by_year = (<0x0A>    df_women_in_surname_by_year.groupby('Year')<0x0A>   .sum()<0x0A>   .sort_values(ascending=False)<0x0A>   .reset_index()<0x0A>   .drop('index', axis=1)<0x0A>   .sort_values(ascending=False)<0x0A>   .head(10)<0x0A>   .plot(x='Year', y='Percentage of women in Surname who are practicing any form of contraception', kind='scatter', color='green', figsize=(15, 15))<0x0A>   .set_title('Percentage of women in Surname who are practicing any form of contraception', fontdict={'fontsize': 20, 'color': 'black', 'fontweight': 'bold', 'fontsize': 15})<0x0A>   .set_xlabel('Year', fontdict={'fontsize': 15, 'fontweight': 'bold', 'fontsize': 15})<0x0A>   .set_ylabel('Percentage of women in Surname who are practicing any form of contraception', fontdict={'fontsize': 15, 'fontweight': 'bold', 'fontsize': 15})<0x0A>   .invert_yaxis()<0x0A>   .plot(x='Year', y='Percentage of women in Surname who are practicing any form of contraception', kind='scatter', color='green', figsize=(15, 15))<0x0A>   .invert_yaxis()<0x0A>   .plot(x='Year', y='Percentage of women
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Discrepancy in expenditure estimate of GDP (constant LCU)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 100000.0}, {'x': '2003', 'y': -100000.0}, {'x': '2004', 'y': -100000.0}, {'x': '2012', 'y': -100000.0}, {'x': '2014', 'y': -100000.0}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Discrepancy in expenditure estimate of GDP of Oman', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'field', 'y': 1000e4}, {'x': 'field', 'y': 1000e4}, {'x': 'variable', 'y': 6000000}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Twenty- foot Equivalent Units(TEU)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2001', 'y': 1080545.0}, {'x': '2002', 'y': 1167880.0}, {'x': '2003', 'y': 1250126.0}, {'x': '2004', 'y': 1658672.0}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Tranquility for Growth and Activity (EU)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 10554}, {'x': 'field', 'y': 10554}, {'x': 'type', 'y': 13554}, {'x': 'field', 'y': 13554}, {'x': 'field', 'y': 10554}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Armed forces personnel', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1985', 'y': 276000}, {'x': '1989', 'y': 319000}, {'x': '1990', 'y': 295000}, {'x': '1991', 'y': 295000}, {'x': '1992', 'y': 296000}, {'x': '1993', 'y': 296000}, {'x': '1994', 'y': 296000}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Armed Forces Performanced', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 27443265370}, {'x': 'field', 'y': 1541911558}, {'x': 'field', 'y': 1541911558}, {'x': 'field', 'y': 1745240054}, {'x': 'field', 'y': 27443265370}, {'x': 'field', 'y': 1541911558}, {'x': 'field', 'y': 17452400546}, {'x': 'field', 'y': 15419115586}, {'x': 'field', 'y': 27443265370}, {'x': 'field', 'y': 15419115586}, {'x': 'field', 'y': 17452400546}, {'x': 'field', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 79}, {'x': 'Field', 'y': 68}, {'x': 'Year', 'y': 79}, {'x': 'Field', 'y': 68}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations in Denmark', 'y': 79}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Exports (% of total merchandise exports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 18.43}, {'x': '2001', 'y': 16.87}, {'x': '2002', 'y': 17.92}, {'x': '2003', 'y': 17.06}, {'x': '2004', 'y': 18.91}, {'x': '2005', 'y': 19.22}]}}
[31mgrupo_bairro['Year'] = grupo_bairro['Date'].apply(lambda x: str(x.year) + '-' + str(x.month) + '-' + str(x.year) + '-' + str(x.month) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + '-' + str(x.year) + 
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of total applications', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1982', 'y': 220832}, {'x': '1983', 'y': 252378}, {'x': '1984', 'y': 278310}, {'x': '1985', 'y': 311757}, {'x': '1986', 'y': 326155}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Number of Equal Appropriations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 32244}, {'x': 'field', 'y': 32244}, {'x': 'field', 'y': 27564}, {'x': 'field', 'y': 32244}, {'x': 'field', 'y': 32244}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Rating (1=extremely inefficient to 7=extremely efficient)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 4.4}, {'x': '2010', 'y': 4.63}, {'x': '2011', 'y': 4.7}, {'x': '2012', 'y': 4.8}, {'x': '2013', 'y': 5.0}]}}
[31mfecha_date = '2015-11-01'<0x0A>fecha_date = '2015-11-21'<0x0A><0x0A># Create a DataFrame with the DataFrame containing only the last 100 DataFrames for the year 2014-2018. <0x0A># Be sure to include the years you've chosen. <0x0A># Be sure to include the years you've chosen in your Report. <0x0A># Be sure to include the years you've chosen in your Report. <0x0A># Be sure to include the years you've chosen in your Report. <0x0A># Be sure to include the years you've chosen in your Report. <0x0A># Be sure to include the years you've chosen in your Report. <0x0A># Be sure to include the years you've chosen in your Report. <0x0A># Be sure to include the years you've chosen in your Report. <0x0A># Be sure to include the years you've chosen in your Report. <0x0A># Be sure to include the years you've chosen in your Report. <0x0A># Be sure to include the years you've chosen in your Report. <0x0A># Be sure to include the years you've chosen in your Report. <0x0A># Be sure to include the years you've chosen in your Report. <0x0A># Be sure to include the years you've chosen in your Report. <0x0A># Be sure to include the years you've chosen in your Report. <0x0A># Be sure to include the years you've chosen in your Report. <0x0A># Be sure to include the years you've chosen in your Report. <0x0A># Be sure to include the years you've chosen in your Report. <0x0A># Be sure to include the years you've chosen in your Report. <0x0A># Be sure to include the
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Debt(% of exports of goods, services and primary income)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2003', 'y': 7.8}, {'x': '2004', 'y': 8.83}, {'x': '2005', 'y': 8.44}, {'x': '2006', 'y': 7.1}, {'x': '2007', 'y': 19.36}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Doubles of exports of goods, services and primary income', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'Field', 'y': 7.55}, {'x': 'variable', 'y': 1.22}, {'x': 'variable', 'y': 1.22}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Loss(as % of annual sales)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 0.4}, {'x': '2005', 'y': 0.6}, {'x': '2009', 'y': 0.3}, {'x': '2013', 'y': 0.2}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Loss(y) % 1 (damaged elderly)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.60}, {'x': 'Field', 'y': 0.22}, {'x': 'variable', 'y': 0.22}, {'x': 'field', 'y': 0.19}, {'x': 'variable', 'y': 0.19}, {'x': 'field', 'y': 0.19}, {'x': 'variable', 'y': 0.19}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Amount of exports(% of total goods exports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 0.01}, {'x': '2007', 'y': 0.01}, {'x': '2008', 'y': 0.01}, {'x': '2009', 'y': 0.02}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Amount of exported', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'Field', 'y': 0.01}, {'x': 'Year', 'y': 0.029}, {'x': 'Field', 'y': 0.029}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df = grouped_df.sort_values(by='Year', ascending=False)<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df['Percentage of households in Russian Federation that uses iodized salt'] = grouped_df['Percentage of households in Russian Federation that uses iodized salt'].astype(float)<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df['Percentage of households in Russian Federation that uses iodized salt'] = grouped_df['Percentage of households in Russian Federation that uses iodized salt'].astype(float)<0x0A>grouped_df['Percentage of households in Russian Federation that uses iodized salt'] = grouped_df['Percentage of households in Russian Federation that uses iodized salt'].astype(float)<0x0A>grouped_df['Percentage of households in Russian Federation that uses iodized salt'].plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(16, 20))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Waste generated(% of total energy)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1995', 'y': 1.31}, {'x': '1996', 'y': 1.52}, {'x': '1997', 'y': 1.58}, {'x': '1998', 'y': 1.65}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Waste generated by (Outer Density)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 1.1}, {'x': 'Field', 'y': 1.1}, {'x': 'Year', 'y': 'Waste generated by (Outer Density)', 'type': 'quantitative'}}, 'data': {'x': 'Year', 'y': 'Media (Downloadable % of Outer Density)', 'data': {'x': 'Field', 'y': 'Media (Downloadable % of Outer Density)', 'dataparsedValley': {'x': 'Year', 'y': 'Media (Downloadable % of Outer Density)', 'dataparsedValley': {'x': 'Year', 'y': 'Media (Downloadable % of Outer Density)', 'dataparsedValley': {'x': 'Year', 'y': 'Media (Downloadable % of Outer Density)', 'dataparsedValley': {'x': 'Year', 'y': 'Value (Downloadable % of Outer Density)', 'dataparsedValley': {'x': '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Success rate(as % of new cases)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2004', 'y': 73}, {'x': '2005', 'y': 69}, {'x': '2007', 'y': 67}, {'x': '2008', 'y': 66}, {'x': '2009', 'y': 66}, {'x': '2010', 'y': 67}]}}
[31mgrupo_bairro['year'] = grupo_bairro['date'].apply(lambda x: str(x.year) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + 
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 13.2}, {'x': '2008', 'y': 8.7}, {'x': '2009', 'y': 5.3}, {'x': '2010', 'y': 4.7}, {'x': '2011', 'y': 4.2}, {'x': '2012', 'y': 3.1}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A><0x0A>df = pd.read_csv('data/csv/csv.csv')<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo["Country"] == "United Kingdom") & (grupo["Province"] == "England")]<0x0A><0x0A># Plotting the graph<0x0A>fig = grupo_2.plot(x="Year", y="ConvertedCompensationofAllandCapitali (de % of GVG)", kind="scatter", figsize=(18, 20), color="darkblue", title="Capital used up in the process of production in United Kingdom")<0x0A>fig.axis(ymin=0, ymax=1)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployment (% of male unemployment)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 31.8}, {'x': '2010', 'y': 53.6}, {'x': '2011', 'y': 64.5}, {'x': '2012', 'y': 67.6}, {'x': '2013', 'y': 66.3}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Unemployment (Q of rural and secondary employment)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 9.57}, {'x': 'Field', 'y': 9.57}, {'x': 'Value', 'y': 65.78}, {'x': 'Field', 'y': 65.78}, {'x': 'Value', 'y': 65.78}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (in  % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 18.23}, {'x': 'field', 'y': 19.23}, {'x': 'field', 'y': 19.23}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Average precipitation (mm )', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1992', 'y': 1130}, {'x': '1997', 'y': 1130}, {'x': '2002', 'y': 1130}, {'x': '2007', 'y': 1130}, {'x': '2012', 'y': 1130}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Average precipitation in depth in Paraguay', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 1064}, {'x': 'Field', 'y': 1064}, {'x': 'Value', 'y': 1064}, {'x': 'Field', 'y': 1064}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Births attended by skilled health staff (% of total births)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1992', 'y': 57.0}, {'x': '1997', 'y': 47.3}, {'x': '2000', 'y': 46.2}, {'x': '2004', 'y': 51.3}, {'x': '2009', 'y': 43.9}]}}
[31mpercentage_of_deliveries_at_health_staff_in_madagascar = (<0x0A>    ggplot(health_df, aes(x='Year', y='Employment Status', color='Employment Status', group='Employment Status')) +<0x0A>    geom_point() +<0x0A>    facet_wrap('~Year') +<0x0A>    theme(axis_text_x=element_text(angle=90, hjust=1))<0x0A><0x0A>percentage_of_deliveries_at_health_staff_in_madagascar = (<0x0A>    ggplot(health_df, aes(x='Year', y='Employment Status', color='Employment Status', group='Employment Status', group_col='Employment Status')) +<0x0A>    geom_point() +<0x0A>    facet_wrap('~Year', scales='free_y') +<0x0A>    theme(axis_text_x=element_text(angle=90, hjust=1)) +<0x0A>    labs(title='Percentage of deliveries attended by skilled health staff in Madagascar', x='Year', y='Employment Status', subtitle='Employment Status') +<0x0A>    theme(axis_text_y=element_text(angle=90, hjust=1)) +<0x0A>    labs(title='Percentage of deliveries attended by skilled health staff in Madagascar', x='Year', y='Employment Status', subtitle='Employment Status', subtitle='Employment Status', subtitle='Employment Status', subtitle='Employment Status', subtitle='Empl
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of commercial services imports', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2008', 'y': 4.08}, {'x': '2009', 'y': 15.16}, {'x': '2010', 'y': 16.51}, {'x': '2011', 'y': 8.97}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Percentage of Commercial Assets in the World', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 78.64}, {'x': 'Field', 'y': 78.64}, {'x': 'type': 'quantitative'}}, 'y': 78.64}, {'x': 'Field', 'y': 'Percentage of Commercial Assets in the World', 'data': {'x': 'Value', 'y': 78.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C- levels (C- %(KORE)})', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'Field', 'y': 2.08}, {'x': 'Value', 'y': 2.08}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (hectares per person)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1988', 'y': 0.42}, {'x': '1989', 'y': 0.41}, {'x': '1990', 'y': 0.4}, {'x': '1991', 'y': 0.4}]}}
[31mgraph_by_year('Arable land in Uruguay')
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Imports (% of total merchandise imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 2.28}, {'x': '2007', 'y': 2.3}, {'x': '2008', 'y': 4.24}, {'x': '2009', 'y': 1.78}, {'x': '2010', 'y': 1.6}]}}
[31mgrupo_bairro['Valor'] = grupo_bairro['Valor'].replace({'Valor': 'Merchandise imports between developing economies in Europe and Qatar', 'Valor': 'Merchandise imports (imports)'}, <0x
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.95 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.98 [35m|[39m [36m[1mY-NAME[39m[22m : 0.71 [35m|
  3%|███                                                                                                               | 1/37 [00:01<00:48,  1.35s/it]
  5%|██████▏                                                                                                           | 2/37 [00:07<02:24,  4.12s/it]
  8%|█████████▏                                                                                                        | 3/37 [00:12<02:32,  4.48s/it]
 11%|████████████▎                                                                                                     | 4/37 [00:22<03:43,  6.78s/it]
 14%|███████████████▍                                                                                                  | 5/37 [00:32<04:15,  7.97s/it]
 16%|██████████████████▍                                                                                               | 6/37 [00:43<04:34,  8.84s/it]
 19%|█████████████████████▌                                                                                            | 7/37 [00:57<05:16, 10.54s/it]
 22%|████████████████████████▋                                                                                         | 8/37 [01:05<04:43,  9.78s/it]
 24%|███████████████████████████▋                                                                                      | 9/37 [01:12<04:09,  8.91s/it]
 27%|██████████████████████████████▌                                                                                  | 10/37 [01:16<03:23,  7.55s/it]
 30%|█████████████████████████████████▌                                                                               | 11/37 [01:21<02:55,  6.75s/it]
 32%|████████████████████████████████████▋                                                                            | 12/37 [01:33<03:23,  8.14s/it]
 35%|███████████████████████████████████████▋                                                                         | 13/37 [01:45<03:48,  9.50s/it]
 38%|██████████████████████████████████████████▊                                                                      | 14/37 [01:52<03:19,  8.69s/it]
 41%|█████████████████████████████████████████████▊                                                                   | 15/37 [01:56<02:41,  7.33s/it]
 43%|████████████████████████████████████████████████▊                                                                | 16/37 [02:05<02:42,  7.74s/it]
 46%|███████████████████████████████████████████████████▉                                                             | 17/37 [02:16<02:54,  8.73s/it]
 49%|██████████████████████████████████████████████████████▉                                                          | 18/37 [02:25<02:45,  8.70s/it]
 51%|██████████████████████████████████████████████████████████                                                       | 19/37 [02:32<02:30,  8.38s/it]
 54%|█████████████████████████████████████████████████████████████                                                    | 20/37 [02:38<02:10,  7.68s/it]
 57%|████████████████████████████████████████████████████████████████▏                                                | 21/37 [02:43<01:47,  6.69s/it]
 59%|███████████████████████████████████████████████████████████████████▏                                             | 22/37 [02:51<01:46,  7.13s/it]
 62%|██████████████████████████████████████████████████████████████████████▏                                          | 23/37 [02:55<01:28,  6.34s/it]
 65%|█████████████████████████████████████████████████████████████████████████▎                                       | 24/37 [02:56<00:58,  4.50s/it]
 68%|████████████████████████████████████████████████████████████████████████████▎                                    | 25/37 [03:02<01:02,  5.19s/it]
 70%|███████████████████████████████████████████████████████████████████████████████▍                                 | 26/37 [03:13<01:14,  6.77s/it]
 73%|██████████████████████████████████████████████████████████████████████████████████▍                              | 27/37 [03:21<01:11,  7.14s/it]
 76%|█████████████████████████████████████████████████████████████████████████████████████▌                           | 28/37 [03:25<00:56,  6.27s/it]
 78%|████████████████████████████████████████████████████████████████████████████████████████▌                        | 29/37 [03:30<00:45,  5.72s/it]
 81%|███████████████████████████████████████████████████████████████████████████████████████████▌                     | 30/37 [03:38<00:44,  6.41s/it]
 84%|██████████████████████████████████████████████████████████████████████████████████████████████▋                  | 31/37 [03:49<00:48,  8.03s/it]
 86%|█████████████████████████████████████████████████████████████████████████████████████████████████▋               | 32/37 [04:01<00:45,  9.13s/it]
 89%|████████████████████████████████████████████████████████████████████████████████████████████████████▊            | 33/37 [04:09<00:34,  8.68s/it]
 92%|███████████████████████████████████████████████████████████████████████████████████████████████████████▊         | 34/37 [04:18<00:26,  8.81s/it]
 95%|██████████████████████████████████████████████████████████████████████████████████████████████████████████▉      | 35/37 [04:25<00:16,  8.34s/it]
 97%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████▉   | 36/37 [04:34<00:08,  8.39s/it]
 97%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████▉   | 36/37 [04:34<00:08,  8.39s/it]
[35m|[39m JSON to Vega conversion error rate: [31m62.16[39m [31m%[39m [35m|
error
error
error
error
error
error
error
error
error
error
error
error
error
error
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'encoding': {'y': {'field': 'body_mass_g', 'type': 'quantitative'}, 'x': {'field': 'culmen_length_mm', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
[31mscatterplot(x=df_train['culmen_length_mm'], y=df_train['body_mass_g'], color='#000000', s=80)
[32m[1m{'encoding': {'y': {'field': 'Youth unemployment rate', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': 'Youth unemployment rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2019', 'y': 21.21}, {'x': 2019', 'y': 22.77}, {'x': 2019', 'y': 22.32}, {'x': 2019', 'y': 21.21}, {'x': 2019', 'y': 22.32}]}}
[32m[1m{'encoding': {'y': {'field': 'Amount of daily sent messages in billions', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'ordinal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Q4 '16', 'type': 'nominal'}, 'y': {'field': 'Amount of daily rent average in billions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Q4 '16', 'y': 50}, {'x': 'Q2 '17', 'y': 50}, {'x': 'Q2 '17', 'y': 50}, {'x': 'Q4 '17', 'y': 60}]}}
[32m[1m{'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'nominal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31m# df_2018 = df_2018.loc[(df_2018['Country Code'] == 'Germany')]<0x0A># df_2018['Country Code'].value_counts().sort_index().plot(kind='bar', figsize=(20, 30), fontsize=16)<0x0A># df_2018['Country Code'].value_counts().sort_index().plot(kind='bar', figsize=(20, 30), fontsize=16)<0x0A># df_2018['Country Code'].value_counts().sort_index().plot(kind='bar', figsize=(20, 30), fontsize=16)<0x0A># df_2018['Country Code'].value_counts().sort_index().plot(kind='bar', figsize=(20, 30), fontsize=16)<0x0A># df_2018['Country Code'].value_counts().sort_index().plot(kind='bar', figsize=(20, 30), fontsize=16)<0x0A># df_2018['Country Code'].value_counts().sort_index().plot(kind='bar', figsize=(20, 30), fontsize=16)<0x0A># df_2018['Country Code'].value_counts().sort_index().plot(kind='bar', figsize=(20, 30), fontsize=16)<0x0A># df_2018['Country Code'].value_counts().sort_index().plot(kind='bar', figsize=(20, 30), font
[32m[1m{'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'nominal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31mgrupo_bairro = dados.query("CITY=='C'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY=='C'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY=='C'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY=='C'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY=='C'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY=='C'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY=='C'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY=='C'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY=='C'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY=='C'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY=='C'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY=='C'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY=='C'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY=='C'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY=='C'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY=='C'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY=='C'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY=='C'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY=='C'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY=='C'")<0x0A><0x0A>d
[32m[1m{'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 912, 'y': 878}, {'x': 1048, 'y': 2868}, {'x': 1048, 'y': 2868}, {'x': 912, 'y': 5728}, {'x': 1048, 'y': 8780}, {'x': 6940, 'y': 1154}, {'x': 912, 'y': 1702}, {'x': 1048, 'y': 15720}, {'x': 912, 'y': 11540}, {'x': 1048, 'y': 3016}, {'x': 1169, 'y': 3016}, {'x': 1048, 'y': 8780}, {'x': 912, 'y': 1572}, {'x': 1048, 'y': 9048}, {'x': 1169, 'y': 1702}, {'
[32m[1m{'encoding': {'y': {'field': ',<mark>bar</mark><x><type>temporal</type></x><y><type>quantitative</type><field>Ticket price in U.S. dollars</field></y>', 'type': 'quantitative'}, 'x': {'field': 'Ticket price in U.S. dollars', 'type': 'temporal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Treatment on UK isolates', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2006, 'y': 62.38}, {'x': 2007, 'y': 67.11}, {'x': 2008, 'y': 72.20}, {'x': 2009, 'y': 74.99}, {'x': 2010, 'y': 76.47}, {'x': 2011, 'y': 77.34}, {'x': 2012, 'y': 78.38}, {'x': 2013, 'y': 81.54}, {'x': 2014, 'y': 84.43}, {'x': 2015, 'y': 85.83}, {'x': 2016, 'y': 92.98}, {'x': 2017, 'y': 100.26}, {'x': 2019, 'y': 102.35}, {'x': 2020, 'y':
[32m[1m{'encoding': {'y': {'field': 'Revenue in billions U.S. dollars', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'ordinal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Reserve in billion U.S. dollars', 'type': 'quantitative'}}, 'data': {'values': [{'x': '4.14', 'y': 14.59}, {'x': '3.57', 'y': 10.69}, {'x': '4.14', 'y': 11.51}, {'x': '3.97', 'y': 14.95}, {'x': '3.99', 'y': 15.76}, {'x': '3.93', 'y': 14.95}, {'x': '3.99', 'y': 15.76}, {'x': '3.93', 'y': 14.95}, {'x': '3.99', 'y': 15.76}, {'x': '3.99', 'y': 14.95}]}}
[32m[1m{'encoding': {'y': {'field': 'Number of users in millions', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Number of cases in millions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2017, 'y': 67.2}, {'x': 2018, 'y': 72.38}, {'x': 2019, 'y': 76.29}, {'x': 2020*, 'y': 79.58}, {'x': 2021*, 'y': 82.33}, {'x': 2022*, 'y': 84.67}, {'x': 2023*, 'y': 86.68}, {'x': 2024*, 'y': 88.45}, {'x': 2025*, 'y': 90.04}]}}
[32m[1m{'encoding': {'y': {'field': 'Number of vehicles in thousands', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Number of workers in thousands', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2016, 'y': 48.4}, {'x': 2017, 'y': 95}, {'x': 2018, 'y': 87.8}, {'x': 2019, 'y': 84.7}, {'x': 2020, 'y': 77.8}, {'x': 2021, 'y': 87.3}]}}
[32m[1m{'encoding': {'y': {'field': 'Number of retail stores', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'nominal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Number of installations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red Sea Sea', 'y': 94}, {'x': 'Asian Sea Sea', 'y': 91}, {'x': 'Pacific Sea Sea', 'y': 91}, {'x': 'Pacific Sea Sea', 'y': 91}, {'x': 'Europe Sea Sea', 'y': 48}, {'x': 'Canada & Latin America', 'y': 30}, {'x': 'Europe Sea Sea', 'y': 30': 5}]}}
[32m[1m{'encoding': {'y': {'field': 'Outpatient Satisfaction', 'type': 'quantitative'}, 'x': {'field': 'Time (minutes) with Doctor in Outpatient Clinic Consultation', 'type': 'temporal'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Time (minutes) with Doctor in Outpatient Clinic Consultation \n (Independent Variable)': 'Outpatient Score 0 to 5)': '(Ulbert Score 0 to 5)': '(Independent Variable)':'map': {'field': 'Time (minutes) with Doctor in Outpatient Clinic Consultation \n (Independent Variable)': 'QR Code': {'field': 'Outpatient Satisfaction \n (Ullent Score 0 to 5)': '(Independent Variable)': 'QR Code': {'field': 'Outpatient Satisfaction \n (Ulbert Score 0 to 5)': '(Independent Variable)': 'Notes': {'field': 'Outpatient Satisfaction \n (Ulbert Score 0 to 5)': 'QR Code': {'field': 'Outpatient Satisfaction \n (Ulbert Score 0 to 5)': 'Usage': {'field': 'Outpatient Satisfaction \n (Ulbert Score 0 to 5)': 'Usage': {'field': 'Outpatient Satisfaction \n (Ulbert Score 0 to 5)': 'Usage': {'field': 'Outpatient Satisfaction \n (Ulbert Score 0 to 5)': 'Usage': {'field': 'Outpatient Satisfaction \n (Ulbert Score 0 to 5)': 'Usage'
[32m[1m{'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'nominal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31mgrupo_bairro = dados.query("CITY == 'Villa'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY == 'Villa'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY == 'Villa'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY == 'Villa'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY == 'Villa'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY == 'Villa'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY == 'Villa'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY == 'Villa'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY == 'Villa'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY == 'Villa'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY == 'Villa'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY == 'Villa'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY == 'Villa'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY == 'Villa'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY == 'Villa'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY == 'Villa'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY == 'Villa'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY == 'Villa'")<0x0A><0x0A>dados_bairro =
[32m[1m{'encoding': {'y': {'field': 'Number of fatalities', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': 'Number of fatalities', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2006, 'y': 608}, {'x': 2007, 'y': 661}, {'x': 2008, 'y': 661}, {'x': 2012, 'y': 352}, {'x': 2011, 'y': 322}, {'x': 2014, 'y': 295}, {'x': 2015, 'y': 310}, {'x': 2016, 'y': 276}, {'x': 2018, 'y': 260}, {'x': 2019, 'y': 270}]}}
[32m[1m{'encoding': {'y': {'field': 'Inflation rate compared to previous year', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
[31m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': 'Utilities and completed tomtoeness year', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2025, 'y': 2.5%}, {'x': 2025, 'y': 2.5%}, {'x': 2025, 'y': 17.2%}, {'x': 2025, 'y': 17.2%}, {'x': 2025, 'y': 2.5%}]}}
[32m[1m{'encoding': {'y': {'field': 'Unemployment rate', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
[31m<0x0A>                       }, {'x': 'y', 'x': 2016, 'y': 1.79}, {'x': 'y', 'x': 2016, 'y': 1.79}, {'x': 'y', 'x': 2016, 'y': 1.79}, {'x': 'y', 'x': 2016, 'y': 1.79}, {'x': 'y', 'x': 2016, 'y': 1.79}, {'x': 'x', 'y': 3.560}, {'x': 'y', 'x': 3.560}, {'x': 'y', 'x': 2016, 'y': 1.86% converted}]}}
[32m[1m{'encoding': {'y': {'field': 'Unemployment rate', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
[31m%%time<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(10,15))<0x0A>ax.plot(df_200.index, df_200['total_bill'], '-', color='blue', alpha=0.8)<0x0A>ax.set_ylabel('total bill')<0x0A>ax.set_xlabel('')<0x0A>ax.set_ylabel('total bill')<0x0A>ax.set_xticks(range(0, 2000, 200))<0x0A>ax.set_xticklabels(df_200.index, rotation=45)<0x0A><0x0A># Adding axes labels<0x0A>ax.yaxis.set_major_formatter(ticker.FuncFormatter(lambda x, pos: '{:,.0f}%'.format(x.format(pos.get_x() + pos.get_y() + 1)))<0x0A>ax.xaxis.set_major_formatter(ticker.FuncFormatter(lambda x, pos: '{:,.0f}%'.format(x.format(pos.get_x() + 1)))<0x0A><0x0A># Adding labels to the graph<0x0A>ax.yaxis.set_major_formatter(ticker.FuncFormatter(lambda x, pos: '{:,.0f}%'.format(x.format(pos.get_x() + 1)))<0x0A><0x0A># Labels<0x0A>ax.xaxis.set_major_formatter(ticker.FuncFormatter(lambda x, pos: '{:,.0f}%'.format(x.format(pos.get_x() + 1)))<0x0A><0x0A># Labels<0x0A>ax.xaxis.set_minor_locator(mpl.dates.date2
[32m[1m{'encoding': {'y': {'field': 'Quarterly revenue in million U.S. dollars', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'ordinal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': 'Quantity relation with the US dollars', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 934}, {'x': 'y', 'y': 1392}, {'x': 'x', 'y': 1772}, {'x': 'y', 'y': 670}, {'x': 'x', 'y': 1912}, {'x': 'y', 'y': 1932}, {'x': 'x', 'y': 1752}, {'x': 'y', 'y': 670}, {'x': 'x', 'y': 1932}]}}
[32m[1m{'encoding': {'y': {'field': 'Average annual wages in euros', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
[31m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': 'Average annual wage in each state', 'type': 'quantitative'}, 'data': {'values': [{'x': 2019, 'y': 8606}, {'x': 2019, 'y': 8606}, {'x': 2019, 'y': 9052}, {'x': 2019, 'y': 9052}, {'x': 2019, 'y': 10011, 'type': 'quantitative'}}, 'x': 11967, 'y': 11462}, {'x': 2019, 'y': 12220}, {'x': 2019, 'y': 126116, 'x': 13116, 'y': 13116, 'data': 14310}]}}
[32m[1m{'encoding': {'y': {'field': 'Number of nominations', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'nominal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Number of nominations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Redux', 'y': 35.17}, {'x': 'Blue', 'y': 12.0}, {'x': 'Green', 'y': 8.01}, {'x': 'Redux', 'y': 7.01}, {'x': 'Blue', 'y': 3.01}, {'x': 'Navy', 'y': 6.01}, {'x': 'Sony Pictures Classic', 'y': 6.01}, {'x': 'Universal', 'y': 4.01}, {'x': 'Samuel', 'y': 3.01}]}}
[32m[1m{'encoding': {'y': {'field': 'Mileage (mpg)', 'type': 'quantitative'}, 'x': {'field': 'Weight (lbs.)', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Weight (lbs.)', 'type': 'quantitative'}, 'y': {'field': 'Mileage (mgs)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2000, 'y': 35.15}, {'x': 4100, 'y': 28.12}, {'x': 4100, 'y': 11.45}, {'x': 4100, 'y': 28.12}, {'x': 3000, 'y': 24.12}]}}
[32m[1m{'encoding': {'y': {'field': 'tip', 'type': 'quantitative'}, 'x': {'field': 'total_bill', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
{'mark': 'circle', 'encoding': {'x': {'field': 'total_bill', 'type': 'quantitative'}, 'y': {'field': 'tip', 'type': 'quantitative'}}, 'data': {'values': [{'x': 49, 'y': 9.01}, {'x': 34, 'y': 4.03}, {'x': 51, 'y': 9.01}, {'x': 43, 'y': 3.03}, {'x': 51, 'y': 4.03}, {'x': 24, 'y': 2.35}, {'x': 34, 'y': 1.12}, {'x': 51, 'y': 10.24}, {'x': 43, 'y': 4.03}, {'x': 24, 'y': 4.03}, {'x': 51, 'y': 7.56}, {'x': 43, 'y': 3.03}, {'x': 51, 'y': 1.12}]}}
[32m[1m{'encoding': {'y': {'field': 'hopkins$wind', 'type': 'quantitative'}, 'x': {'field': 'hopkins$day', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
{'mark': 'circle', 'encoding': {'x': {'field': 'hopkins$day', 'type': 'quantitative'}, 'y': {'field': 'hopkins$wind', 'type': 'quantitative'}}, 'data': {'values': [{'x': 199.06, 'y': 4.9}, {'x': 227.2, 'y': 4.9}, {'x': 207.72, 'y': 23.65}, {'x': 344.44, 'y': 4.95}, {'x': 248.3, 'y': 4.95}]}}
[32m[1m{'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
[31mpairs(data, col="green")
[32m[1m{'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2, 'y': 111.79}, {'x': 12, 'y': 77.94}, {'x': 6, 'y': 85.78}, {'x': 12, 'y': 87.2}, {'x': 6, 'y': 108.55}, {'x': 8.7, 'y': 85.78}, {'x': 10, 'y': 77.94}, {'x': 6.38, 'y': 85.78}]}}
[32m[1m{'encoding': {'y': {'field': 'success', 'type': 'quantitative'}, 'x': {'field': 'length', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
{'mark': 'circle', 'encoding': {'x': {'field': 'length', 'type': 'quantitative'}, 'y': {'field':'success', 'type': 'quantitative'}}, 'data': {'values': [{'x': 12.0, 'y': 81.84}, {'x': 10.0, 'y': 92.09}, {'x': 6.0, 'y': 60.55}, {'x': 15.7, 'y': 47.83}, {'x': 17.43, 'y': 16.19}, {'x': 13.5, 'y': 92.09}, {'x': 10.6, 'y': 81.84}, {'x': 13.5, 'y': 92.09}, {'x': 10.6, 'y': 81.84}, {'x': 13.5, 'y': 60.55}, {'x': 10.6, 'y': 47.83}]}}
[32m[1m{'encoding': {'y': {'field': 'Temperature °C', 'type': 'quantitative'}, 'x': {'field': 'Time', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': 'Temperature °C', 'type': 'quantitative'}}, 'data': {'values': [{'x': 9am, 'y': 10.2}, {'x': 10am, 'y': 5.6}, {'x': 11am, 'y': 8.5}, {'x': 12am, 'y': 10.01}, {'x': 4pm, 'y': 16.11}, {'x': 16am, 'y': 10.1}, {'x': 12am, 'y': 9.68}, {'x': 19am, 'y': 10.28}, {'x': 19am, 'y': 10.38}, {'x': 11am, 'y': 8.5}, {'x': 12am, 'y': 10.01}, {'x': 19am, 'y': 10.38}]}}
[32m[1m{'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2017, 'y': 6.13}, {'x': 2018, 'y': 46.09}, {'x': 2019, 'y': 94.43}, {'x': 2020, 'y': 117.97}, {'x': 2021, 'y': 136.4}, {'x': 2022, 'y': 181.35}]}}
[32m[1m{'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'quantitative'}}, 'mark': 'line', 'data': {'url': '<url>'}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 0.01, 'y': 34.5}, {'x': 1.45, 'y': 202.29}, {'x': 2.48, 'y': 99.56}, {'x': 4.28, 'y': 149.06}, {'x': 3.69, 'y': 398.69}, {'x': 4.5, 'y': 253.09}]}}
[32m[1m{'encoding': {'y': {'field': 'Average Monthly Temperature', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'ordinal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': 'Average Monthly Temperature', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Jan', 'y': 1.15}, {'x': 'Feb', 'y': 0.95}, {'x': 'Mar', 'y': 9.95}, {'x': 'Apr', 'y': 11.75}, {'x': 'May', 'y': 14.08}, {'x': 'Jun', 'y': 15.48}, {'x': 'Aug', 'y': 22.09}, {'x': 'Sep', 'y': 20.11}, {'x': 'Oct', 'y': 16.13}, {'x': 'Nov', 'y': 7.08}, {'x': 'Dec', 'y': 1.75}]}}
[32m[1m{'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'quantitative'}}, 'mark': 'line', 'data': {'url': '<url>'}}
[31m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 0.26, 'y': 50.98}, {'x': 3.67, 'y': 60.96}, {'x': 5.65, 'y': 90.09}, {'x': 7.26, 'y': 30.4}, {'x': 4.96, 'y': 90.40}, {'x': 6.16, 'y': 76.89}, {'x': 7.95, 'y': 59.82}, {'x': 5.35, 'y': 90.15}, {'x': 5.9, 'y': 59.82}, {'x': 7.62, 'y': 59.82}, {'x': 5.95, 'y': 76.89}, {'x': 5.95, 'y': 59.82}, {'x': 7.62, 'y': 59.82}, {'x': 5.95, 'y': 76.89}, {'x': 5.9
[32m[1m{'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3.06, 'y': 4.44}, {'x': 4.06, 'y': 6.03}, {'x': 6.8.2, 'y': 6.75}, {'x': 4.67, 'y': 4.7}, {'x': 4.67, 'y': 7.63}, {'x': 3.15, 'y': 3.15}, {'x': 4.6, 'y': 4.44}, {'x': 4.34, 'y': 5.76}, {'x': 7.04, 'y': 3.75}, {'x': 6.8.2, 'y': 4.81}, {'x': 4.6.2, 'y': 6.03}, {'x': 4.6.2, 'y': 5.75}, {'x': 4.6.2, 'y': 6.85}]}}
[32m[1m{'encoding': {'y': {'field': 'Inhabitants in millions', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': 'Waterborne in millions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2009, 'y': 10.32}, {'x': 2010, 'y': 10.62}, {'x': 2011, 'y': 10.91}, {'x': 2012, 'y': 11.21}, {'x': 2013, 'y': 11.52}, {'x': 2014, 'y': 11.83}, {'x': 2015, 'y': 12.11}, {'x': 2016, 'y': 12.48}, {'x': 2017, 'y': 12.82}, {'x': 2018, 'y': 13.16}, {'x': 2019, 'y': 13.52}]}}
[32m[1m{'encoding': {'y': {'field': 'Life expectancy in years', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'nominal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Europe (total)', 'type': 'nominal'}, 'y': {'field': 'Life expectancy in years', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Europe (total)', 'y': 75', 'data': 82}, {'x': 'Western Europe', 'y': 79', 'type': 'quantitative'}}, 'data': {'x': 'Southern Europe', 'y': 79', 'data': {'x': 'Northern Europe', 'y': 79', 'data': {'x': 'Western Europe', 'y': 84', 'type': 'quantitative'}}, 'data': {'x': 'Southern Europe', 'y': 79', 'tips': {'x': 'Northern Europe', 'y': 84', 'tips': {'x': 'Western Europe', 'y': 84',caps': {'x': 'Eastern Europe', 'y': 69'}}, 'y': 79': newlywed Thai Airways Cargo',atuspasos}]}}
[32m[1m{'encoding': {'y': {'field': 'Percentage of votes', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'nominal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Revenage of crime', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Black', 'y': 88%, 'data': 'Nominal', 'type': 'quantitative'}}, 'data': {'x': 'Latino', 'y': 65%, 'data': 'Nominal', 'type': 'quantitative'}}, 'data': {'x': 'Asian', 'y': 65%, 'data': '29%, 'type': 'quantitative'}}, 'data': {'x': 'Other race', 'y': 50%, 'data': {'x': 'Black', 'y': 8%, 'data': 15.51}]}}
[32m[1m{'encoding': {'y': {'field': 'Average daily rate in U.S. dollars', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
[31m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': 'Average daily rates in this state': {'field': 168.55}, {'x': {'field': 'Q1', 'type': 'quantitative'}}, {'x': {'field': 'Q4', 'type': 'quantitative'}}, {'x': {'field': 'Q3', 'type': 'quantitative'}}, {'x': {'field': 'Q2', 'type': 'quantitative'}}, {'x': {'field': 'Q1', 'type': 'quantitative'}},opamp='y': {'x': {'field': 'Q3', 'type': 'quantitative'}},opamp='y': {'x': {'field': 'Q4', 'type': 'quantitative'}},opamp='y': {'x': {'field': 'Q9', 'type': 'quantitative'}},opamp='y': 169.3}]}}
[32m[1m{'encoding': {'y': {'field': 'Gross profit margin', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'nominal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Ted Baker', 'type': 'nominal'}, 'y': {'field': 'Green profit margin', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red Cedar', 'y': 60%}, {'x': 'Blue Cedar', 'y': 58%}, {'x': 'Greens', 'y': 55%}, {'x': 'Red Cedar', 'y': 58%}, {'x': 'Greens', 'y': 55%}, {'x': 'Red Cedar', 'y': 60%}, {'x': 'Greens', 'y': 60%}, {'x': 'Red Cedar', 'y': 60%}, {'x': 'Greens', 'y': 55%}, {'x': 'Red Cedar', 'y': 55%}, {'x': 'Greens', 'y': 55%}, {'x': 'Red Cedar', 'y': 60%}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 37/37 [04:45<00:00,  7.71s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 37/37 [04:45<00:00,  7.71s/it]