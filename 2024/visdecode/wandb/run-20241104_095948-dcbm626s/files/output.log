
[36m[1mEpoch :[39m[22m 0 [32m[1m | Loss :[39m[22m 18.419828414916992















 95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä     | 19/20 [00:39<00:02,  2.18s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mcircle|quantitative|Mode Age|quantitative|Alcohol Consumption
[31m# Plot the data<0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Plot the scatter plot<0x0A>sns.lmplot(x="Mode Age", y="Alcohol Consumption", data=df,<0x0A>           fit_reg=False, height=7, aspect=1,<0x0A>           scatter_kws={"s": 70})<0x0A><0x0A># Add a title<0x0A>plt.title("Alcohol Consumption vs Mode Age")<0x0A><0x0A># Add a legend<0x0A>plt.legend()<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1mbar|nominal|Water Usage|quantitative|CO2 Emissions
[31m# Plot the data<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Draw a nested barplot to show bills by day and time<0x0A>g = sns.catplot(x="Water Usage", y="CO2 Emissions", data=df, kind="bar", height=8, aspect=1.5)<0x0A>g.despine(left=True)<0x0A>g.set_ylabels("CO2 Emissions")<0x0A>g.set_xlabels("Water Usage")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1mbar|nominal|Consumer Price Index|quantitative|Kurtosis And Skewness Of Annual Corporate Profit Margins
[31m# Create a plot of the Consumer Price Index<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Create a bar plot of the Consumer Price Index<0x0A>sns.set(font_scale=1.5)<0x0A><0x0A># Create a bar plot of the Kurtosis And Skewness Of Annual Corporate Profit Margins<0x0A>sns.set(font_scale=1.5)<0x0A><0x0A># Create a bar plot of the Consumer Price Index<0x0A>sns.barplot(x="Consumer Price Index", y="Kurtosis And Skewness Of Annual Corporate Profit Margins", data=df)<0x0A><0x0A># Create a bar plot of the Consumer Price Index<0x0A>sns.barplot(x="Consumer Price Index", y="Kurtosis And Skewness Of Annual Corporate Profit Margins", data=df)<0x0A><0x0A># Create a bar plot of the Consumer Price Index<0x0A>sns.barplot(x="Consumer Price Index
[32m[1mbar|nominal|Range|quantitative|Participation Rate
[31m#plotting the distribution of participation rate by group<0x0A>sns.set(style="whitegrid")<0x0A>g = sns.catplot(x="Range", y="Participation Rate", data=df, kind="bar", height=8, aspect=1.5)<0x0A>g.despine(left=True)<0x0A>g.set_ylabels("Participation Rate")<0x0A>g.set_xlabels("Range")<0x0A>g.set_xticklabels(rotation=90)<0x0A>g.set_ylabels("Participation Rate")<0x0A>g.set_xticklabels(rotation=90)<0x0A>g.set_yticklabels(rotation=90)<0x0A>g.set_xticklabels(rotation=90)<0x0A>g.set_yticklabels(rotation=90)<0x0A>g.set_xlabel("Range")<0x0A>g.set_
[32m[1mbar|nominal|Median Household Income Indexed By Regional Inflation Rates|quantitative|Bond Yield
[31m# Plotting the distribution of the bond yield<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Plotting the distribution of the bond yield<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Plotting the distribution of the bond yield<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Plotting the distribution of the bond yield<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Plotting the distribution of the bond yield<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Plotting the distribution of the bond yield<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Plotting the distribution of the bond yield<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Plotting the distribution of the bond yield<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Plotting the distribution of the bond yield<0x0A><0x0A>sns.set
[32m[1mbar|nominal|Cost|quantitative|Quantile Regression Estimates Of Salary By Experience Level
[31msns.set(context="notebook", style="ticks", font_scale=1.5)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(8, 6))<0x0A><0x0A>sns.barplot(x="Cost", y="Quantile Regression Estimates Of Salary By Experience Level", data=df_salary_exp)<0x0A>sns.despine()<0x0A>plt.xticks(rotation=90)<0x0A><0x0A>plt.show()
[32m[1mcircle|quantitative|Height|quantitative|Speed
[31m# ÏÇ∞Ï†êÎèÑ Í∑∏ÎûòÌîÑ<0x0A>sns.set_style("whitegrid")<0x0A><0x0A># ÏÇ∞Ï†êÎèÑ Í∑∏ÎûòÌîÑ<0x0A>sns.lmplot(x="Height", y="Speed", data=df, fit_reg=False, height=7, aspect=1)<0x0A><0x0A># ÏÇ∞Ï†êÎèÑ Í∑∏ÎûòÌîÑ<0x0A>plt.show()
[32m[1mcircle|quantitative|Log Transformed Peak Demand During Holiday Seasons At Retail Stores|quantitative|Import Volume
[31m# plot the scatter plot<0x0A>plt.figure(figsize=(10,10))<0x0A>plt.scatter(x=df['log_transformed_peak_demand_during_holiday_seasons_at_retail_stores'], y=df['import_volume'], s=100)<0x0A>plt.xlim(0,8000)<0x0A>plt.ylim(0,400)<0x0A>plt.xlabel('Log Transformed Peak Demand During Holiday Seasons At Retail Stores')<0x0A>plt.ylabel('Import Volume')<0x0A>plt.show()
[32m[1mline|temporal|Smoking Rate|quantitative|Simulation Results Of Variable Interest Rates On Bond Prices
[31m# Plot the graph<0x0A>sns.set_style("whitegrid")<0x0A>sns.set_context("paper", font_scale=1.5)<0x0A><0x0A># Set up the grid<0x0A>g = sns.FacetGrid(data=df, col="BondPrice", height=7, aspect=1.5)<0x0A>g.map(sns.lineplot, "Smoking Rate", "Simulation Results Of Variable Interest Rates On Bond Prices", color="steelblue")<0x0A>g.set_axis_labels("Smoking Rate", "Simulation Results Of Variable Interest Rates On Bond Prices")<0x0A>g.set_axis_labels("Smoking Rate", "Simulation Results Of Variable Interest Rates On Bond Prices")<0x0A>g.set_xlabels("Smoking Rate")<0x0A>g.set_ylabels("Simulation Results Of Variable Interest Rates On Bond Prices")<0x0A>g.set_xlim
[32m[1mline|temporal|Adjusted R Squared For Linear Regression Model With Heteroscedasticity|quantitative|CO2 Emissions
[31m# Plot the results<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Set up the grid<0x0A>ax = sns.relplot(x="Adjusted R Squared For Linear Regression Model With Heteroscedasticity", y="CO2 Emissions", data=df, kind="line", height=10, aspect=1.5)<0x0A><0x0A># Set up the x-axis<0x0A>ax.set_xlabel("Adjusted R Squared For Linear Regression Model With Heteroscedasticity")<0x0A>ax.set_ylabel("CO2 Emissions")<0x0A><0x0A># Set up the grid<0x0A>ax.grid(color='white', linestyle='--', linewidth=0.5)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("CO2_Emissions_plot.png")<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1mline|temporal|Time|quantitative|Probability Density Function for Reaction Time (seconds)
[31m# Plot the time series<0x0A>sns.set(style="ticks")<0x0A>sns.set_context("paper", font_scale=1.5)<0x0A>sns.set_context("paper", font_scale=1.5)<0x0A><0x0A>sns.relplot(x="Time", y="Probability Density Function for Reaction Time (seconds)", data=df_time_series, kind="line", height=7, aspect=1.5)<0x0A>plt.xlabel("Time")<0x0A>plt.ylabel("Probability Density Function for Reaction Time (seconds)", fontsize=12)<0x0A>plt.show()
[32m[1mcircle|quantitative|Predictive Accuracy Of Seasonal Demand Forecasting Models|quantitative|Heterogeneity In Clinical Trial Populations By Gender And Age
[31m# Scatter plot of the predicted accuracy of the seasonality of the model<0x0A><0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Scatter plot of the predicted accuracy of the model<0x0A><0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Scatter plot of the predicted accuracy of the model<0x0A><0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Scatter plot of the predicted accuracy of the model<0x0A><0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Scatter plot of the predicted accuracy of the model<0x0A><0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Scatter plot of the predicted accuracy of the model<0x0A><0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Scatter plot of the predicted accuracy of the model<0x0A><0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Scatter plot of the predicted accuracy of the model<0x0A>
[32m[1mline|temporal|Distance|quantitative|Probability Density Function Of Age Distribution In Population Survey
[31m# Plot the distribution of the distances between the two populations<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.plot(dist_list, df_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_pop_
[32m[1mcircle|quantitative|Growth Rate|quantitative|GDP
[31mplt.figure(figsize=(10,10))<0x0A>plt.scatter(x=df['Growth Rate'], y=df['GDP'], s=50)<0x0A>plt.xlim(0, 5)<0x0A>plt.ylim(0, 80)<0x0A>plt.xlabel('Growth Rate')<0x0A>plt.ylabel('GDP')<0x0A>plt.show()
[32m[1mline|temporal|Mental Health|quantitative|Import Volume
[31m# Plot the data<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>sns.set(style="ticks", color_codes=True)<0x0A><0x0A># Plot the data<0x0A>plt.figure(figsize=(10,10))<0x0A>sns.set_context("paper", font_scale=1.5)<0x0A>sns.set_style("ticks")<0x0A><0x0A># Plot the data<0x0A>plt.figure(figsize=(10,10))<0x0A>sns.set_context("paper", font_scale=1.5)<0x0A>sns.set_style("ticks")<0x0A><0x0A># Plot the data<0x0A>plt.plot(df['Mental Health'], df['Import Volume'], linewidth=1)<0x0A><0x0A># Plot the data<0x0A>plt.xlabel('Mental Health')<0x0A>plt.ylabel('Import Volume')
[32m[1mcircle|quantitative|Assessment Of Healthcare Utilization Rates By Demographic Groups|quantitative|Relative Risk Assessment Of Health Outcomes In Demographic Studies
[31m# Plot the relationship between the variables<0x0A><0x0A>plt.figure(figsize=(10,10))<0x0A>plt.scatter(x=df_demo_demo_groups['Risk'], y=df_demo_demo_groups['Relative Risk'], alpha=0.5)<0x0A>plt.xlim(0,2000)<0x0A>plt.ylim(0,400)<0x0A>plt.xlabel('Assessment Of Healthcare Utilization Rates By Demographic Groups')<0x0A>plt.ylabel('Relative Risk,Assessment OF Health. Oucomes In Demographic Studies')<0x0A>plt.show()
[32m[1mbar|nominal|Mortality Rate|quantitative|Poverty Rate
[31m# Plot the poverty rate and mortality rate<0x0A><0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(1, 2, figsize=(6, 6))<0x0A><0x0A># Set up the xticks<0x0A>ax[0].set_xticks(range(0, 50000, 500))<0x0A><0x0A># Set up the yticks<0x0A>ax[0].set_yticks(range(0, 3000, 3000))<0x0A><0x0A># Set up the grid<0x0A>ax[0].grid(axis='x', alpha=0.75)<0x0A>ax[0].grid(axis='y', alpha=0.75)<0x0A><0x0A># Set up the xticks<0x0A>ax[0].set_xticks(range(0, 5
[32m[1mline|temporal|Impact Of Temperature Variability On Crop Yield Statistics|quantitative|Detrended Analysis Of Yearly Weather Anomalies In Temperature Data
[31m# Plotting the results of the model<0x0A><0x0A>plt.figure(figsize=(10,10))<0x0A>plt.plot(df_temp['Impact Of Temperature Variability On Crop Yield Statistics'], df_temp['Ddredted Analysis Of Yearly Weather In Normalies'])<0x0A>plt.xlabel('Impact Of Temperature Variability On Crop Yield Statistics')<0x0A>plt.ylabel('Ddredted Analysis Of Yearly Weather In Normalies')<0x0A>plt.xlim(1,1814)<0x0A>plt.ylim(0,6000)<0x0A>plt.grid(True)<0x0A>plt.show()
[32m[1mline|temporal|Manufacturing Output|quantitative|Fuel Consumption
[31m# Plot the data<0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A>ax.plot(df['Manufacturing Output'], df['Fuel Consumption'])<0x0A>ax.set_ylim(0,50000)<0x0A>ax.set_xlim(1825,1840)<0x0A>ax.set_ylabel('Fuel Consumption')<0x0A>ax.set_xlabel('Manufacturing Output')<0x0A>ax.set_ylim(0,50000)<0x0A>ax.set_xticks(np.arange(1825,1840,1))<0x0A>ax.set_xticklabels(df['Manufacturing Output'])<0x0A>ax.set_yticks(np.arange(0,5000,5))<0x0A>ax.set_yticks(
[32m[1mcircle|quantitative|Literacy Rate|quantitative|Export Volume
[31m# Plot the scatterplot for the literacy rate vs. eport volume<0x0A>sns.lmplot(x='Literacy Rate', y='Eport Volume', data=df, fit_reg=False, size=8, aspect=1.5, scatter_kws={'alpha':0.7})<0x0A>plt.xlim(0, 5000)<0x0A>plt.ylim(0, 650)<0x0A>plt.xlabel('Literacy Rate')<0x0A>plt.ylabel('Eport Volume')<0x0A>plt.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 1.0 [35m|
100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:40<00:00,  2.03s/it]
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)


















 95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä     | 19/20 [00:41<00:02,  2.11s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mline|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
[31m# Plotting the graph of Capita used up in the process of production in Saudi Arabia<0x0A><0x0A>plt.figure(figsize=(20,15))<0x0A>plt.subplot(1,2,1)<0x0A>plt.plot(capita_df['Year'],capita_df['Capita'],'-o',color='green')<0x0A>plt.xticks(rotation=90)<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of land capital (s$ % of GNI)')<0x0A>plt.title('Capita used up in the process of production in Saudi Arabia')<0x0A>plt.subplot(1,2,2)<0x0A>plt.plot(capita_df['Year'],capita_df['Capita'],'-o',color='blue')<0x0A>plt.xticks(ro
[32m[1mline|temporal|Year|quantitative|Number of meetings(average for affected firms)
[31mfig, ax = plt.subplots(figsize=(20, 30))<0x0A><0x0A>ax.set_title('Number of visits or required meetings with tax officials in firms of Nicaragua')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of meetings/meetings/tax officials in firms of Nicaragua')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.plot(df_grouped.Year, df_grouped.Number_of_visits_or_required_meetings_with_tax_officials_in_firms_of_Nicaragua, color='#000000')<0x0A>ax.set_xticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_
[32m[1mline|temporal|Year|quantitative|Number of days
[31m# Plotting the number of days required to get electricity in Kiribati<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A><0x0A>sns.set_style("whitegrid")<0x0A><0x0A>sns.set_context("paper", font_scale=1.5)<0x0A><0x0A>sns.set_palette("muted")<0x0A><0x0A>sns.set_style("ticks")<0x0A><0x0A>sns.set_context("paper", font_scale=1.5)<0x0A><0x0A>sns.set_style("ticks")<0x0A><0x0A>sns.set_style("ticks")<0x0A><0x0A>sns.set_context("paper", font_scale=1.5)<0x0A><0x0A>sns.set_style("ticks")<0x0A><0x0A>sns.set_style("ticks")<0x0A><0x0A>sns.set_context("paper", font_scale=1.5)<0x0A><0x0A>sns.set_
[32m[1mline|temporal|Year|quantitative|% of children under 5 taken to a health provider
[31m# Plotting the percentage of people who were provided with ART treatment in Nigeria<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.plot(df_nigeria['Year'], df_nigeria['Percentage'], color='g', linewidth=1)<0x0A>ax.set_ylabel('% of eligible after 500000 and 5000000 people')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylim(0, 1000000)<0x0A>ax.set_xticks(range(0, 1000000, 1000000))<0x0A>ax.set_xticklabels(df_nigeria['Year'], rotation='vertical')<0x0A>ax.set_yticklabels(df_nigeria['
[32m[1mline|temporal|Year|quantitative|% of firms
[31m# Plotting the graph of the number of female managers in Hungary with female top managers<0x0A><0x0A>fig, ax = plt.subplots(figsize=(18, 20))<0x0A><0x0A>ax.set_title('Percent of firms in Hungary with female as top managers')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of firms')<0x0A>ax.set_xticks(range(0, 100, 10))<0x0A>ax.set_xticklabels([''] + ['count', 'count', 'count', 'count', 'count', 'count', 'count', 'count', 'count', 'count', 'count', 'count', 'count', 'count', 'count', 'count',
[32m[1mbar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
[31mfig, ax = plt.subplots(figsize=(18,20))<0x0A><0x0A>ax.bar(df_vietnam['Year'], df_vietnam['Electric power consumption (kWh per capita) in Vietnam'])<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Electric power consumption (kWh per capita) in Vietnam')<0x0A>ax.set_title('Electric power consumption (kWh per capita) in Vietnam')<0x0A><0x0A>plt.show()
[32m[1mbar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commerical service exports)
[31m# Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A># Plot the results<0x0A><0x0A>#
[32m[1mbar|nominal|Country|quantitative|Number of tractors
[31mfig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.bar(country_countries.index, country_countries.values, color='#000000')<0x0A>ax.set_xlabel('Country')<0x0A>ax.set_ylabel('Number of tractors')<0x0A>ax.set_title('Number of usable tractors in agriculture in different countries')<0x0A>ax.set_xticklabels(country_countries.index, rotation=90)<0x0A>ax.set_yticklabels(country_countries.index, rotation=90)<0x0A><0x0A>plt.show()
[32m[1mbar|temporal|Year|quantitative|Amount of energy used(kg of oil equivalent per capita)
[31m# Plotting the graph of energy use of Maldives<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>sns.barplot(x='Year', y='Avg', data=df, ax=ax, palette='Oranges')<0x0A><0x0A>ax.set_title('Energy use of Maldives')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Avg')<0x0A><0x0A>plt.show()
[32m[1mbar|temporal|Year|quantitative|Number of days
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A>ax.bar(df_2019.index, df_2019['Time required to register a property in Papua New Guinea'])<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of days')<0x0A>ax.set_title('Time required to register a property in Papua New Guinea')<0x0A><0x0A>plt.show()
[32m[1mbar|temporal|Year|quantitative|Savings (current US$)
[31m# Adjusted net savings of Jordan including particulate emission damage<0x0A><0x0A># Adjusted net savings of Jordan including particulate emission damage<0x0A><0x0A># Adjusted net savings of Jordan including particulate emission damage<0x0A><0x0A># Adjusted net savings of Jordan including particulate emission damage<0x0A><0x0A><0x0A># Adjusted net savings of Jordan including particulate emission damage<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1mbar|temporal|Year|quantitative|Land (in sq. km)
[31m# Plotting the total agricultural land in Bolivia<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A>ax.set_facecolor('white')<0x0A><0x0A>ax.set_facecolor('white')<0x0A><0x0A>ax.set_facecolor('white')<0x0A><0x0A>ax.set_facecolor('white')<0x0A><0x0A>ax.set_facecolor('white')<0x0A><0x0A>ax.set_facecolor('white')<0x0A><0x0A>ax.set_facecolor('white')<0x0A><0x0A>ax.set_facecolor('white')<0x0A><0x0A>ax.set_facecolor('white')<0x0A><0x0A>ax.set_facecolor('white')<0x0A><0x0A>ax.set_facecolor('white')<0x0A><0x0A>ax.set_facecolor('white')<0x0A><0x0A>ax.set_facecolor('white')<0x0A><0x0A>ax.set_facecolor('white
[32m[1mbar|nominal|Country|quantitative|Cost (as % of GNI)
[31mfig, ax = plt.subplots(figsize=(18,18))<0x0A><0x0A>sns.barplot(x='Country', y='value', data=df, ax=ax, palette='GnBu_d')<0x0A>ax.set_title('Damage caused due to forest depletion in 1986')<0x0A>ax.set_xlabel('Country')<0x0A>ax.set_ylabel('Value')<0x0A>ax.set_xticklabels(ax.get_xticklabels(), rotation=90)<0x0A><0x0A>plt.show()
[32m[1mbar|nominal|Country|quantitative|Average number of days
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.set_facecolor('white')<0x0A><0x0A>ax.set_title('Delay in obtaining an electrical connection in 2002', fontsize=20)<0x0A>ax.set_xlabel('Country', fontsize=20)<0x0A>ax.set_ylabel('A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A
[32m[1mbar|nominal|Country|quantitative|Prive value of exports (constant LCU)
[31m#############################################################################################################################################################################################################################################################################################################################################################################################################
[32m[1mbar|temporal|Year|quantitative|Total reserves (current US$)
[31m# Plot the total reserves (excluding gold) of Iran<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A>ax.bar(df_iran['Year'], df_iran['Total reserves'], color='purple')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Total reserves (earned (GS$)')<0x0A>ax.set_title('Total reserves (excluding gold) of Iran')<0x0A>ax.grid(True)<0x0A><0x0A>plt.show()
[32m[1mcircle|temporal|Year|quantitative|Unemployed males(% of male labor force ages 15-24)
[31m# Plotting the graph of Unemployed male youth population of High income_ nonOECD<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.scatter(unemployed_male_youth_pop['Year'], unemployed_male_youth_pop['Unemployed male youth population of High income_ nonOECD'], c='purple')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Unemployed male 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
[32m[1mcircle|temporal|Year|quantitative|Mean income or consumption per capita(2011 PPP $ per day)
[31mfig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.set_ylim(0, 1)<0x0A>ax.set_xlim(0, 1)<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Mean income or consumption per capita of total population of Uruguay')<0x0A>ax.set_title('Mean income or consumption per capita of total population of Uruguay')<0x0A><0x0A>ax.scatter(df['Year'], df['Mean income or consumption per capita of total population of Uruguay'], color='orange')<0x0A><0x0A>ax.set_yticks(np.arange(0, 100, 10))<0x0A>ax.set_yticklabels(df['Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(df['Year'], rotation=0)<0x0A>
[32m[1mcircle|temporal|Year|quantitative|Savings (current US$)
[31m# Plot savings per year<0x0A>plt.figure(figsize=(15,20))<0x0A>sns.set_style("whitegrid")<0x0A>sns.scatterplot(x="Year", y="Savings Per Year", data=df, color="red")<0x0A>plt.title("Savings per year")<0x0A>plt.xlabel("Year")<0x0A>plt.ylabel("Savings Per Year (US$)")<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=90)<0x0A>plt.show()
[32m[1mcircle|temporal|Year|quantitative|Value added (current Local Currency Unit)
[31mfig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.scatter(x=df_sa.Year, y=df_sa.Value, c='black')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Value added (Current Local CemmOY (JHh)')<0x0A>ax.set_title('Value added by agricultural sector (in current LCU) of Saudi Arabia')<0x0A>ax.set_xticks(range(0,1000000000000000000000000000000000000000000000000000000000000000000000000000
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 1.0 [35m|

100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:43<00:00,  2.19s/it]
[36m[1mEpoch :[39m[22m 1 [32m[1m | Loss :[39m[22m 12.894654273986816
[36m[1mEpoch :[39m[22m 2 [32m[1m | Loss :[39m[22m 6.426735877990723
[36m[1mEpoch :[39m[22m 3 [32m[1m | Loss :[39m[22m 6.064028739929199
[36m[1mEpoch :[39m[22m 4 [32m[1m | Loss :[39m[22m 5.684638500213623
[36m[1mEpoch :[39m[22m 5 [32m[1m | Loss :[39m[22m 5.631138801574707

















 95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä     | 19/20 [00:43<00:02,  2.72s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mcircle|quantitative|Mode Age|quantitative|Alcohol Consumption
[31m# Plot the scatter plot for Mode Age and Alcohol Consumption<0x0A>sns.set(style="ticks", color_codes=True)<0x0A>g = sns.FacetGrid(data=df, hue="Drug", height=7)<0x0A>g.map(plt.scatter, "Mode Age", "Alcohol Consumption", s=40)<0x0A>g.add_legend();
[32m[1mbar|nominal|Water Usage|quantitative|CO2 Emissions
[31m# Plot the data<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A># Draw a nested barplot to show bills by day and time<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Set up the axes<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Draw a nested barplot to show bills by day and time<0x0A>sns.despine(left=True, right=True)<0x0A><0x0A># Set up the axes<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Draw a nested barplot to show bills by day and time<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Draw a nested barplot to show bills by day and time<0x0A>sns.despine(
[32m[1mbar|nominal|Consumer Price Index|quantitative|Kurtosis And Skewness Of Annual Corporate Profit Margins
[31m# Create a plot of Consumer Price Index<0x0A><0x0A># Create a bar plot of Consumer Price Index<0x0A>sns.set(context="notebook", style="ticks", font_scale=1.5)<0x0A><0x0A># Create a bar plot of Kurtosis And Skewness Of Annual Corporate Profit <0x0A><0x0A>sns.set(font_scale=1.5)<0x0A><0x0A># Create a bar plot of Consumer Price Index<0x0A><0x0A>sns.set(style="ticks", font_scale=1.5)<0x0A><0x0A># Create a bar plot of Consumer Price Index<0x0A><0x0A>sns.set(font_scale=1.5)<0x0A><0x0A># Create a bar plot of Consumer Price Index<0x0A><0x0A>sns.set(style="ticks", font_scale=1.5)<0x0A><0x0A># Create a bar plot of Kurtosis And Skewness Of Annual Corporate Profit <0x0A><0x0A><0x0A>sns.set(font_scale=1.5
[32m[1mbar|nominal|Range|quantitative|Participation Rate
[31m# Create a bar chart of participation rate by Range<0x0A># Set the style of the chart<0x0A>sns.set(style="whitegrid")<0x0A># Draw a nested boxplot to show bills by day and time<0x0A>g = sns.catplot(x="Range", y="Participation Rate", data=df, kind="count", height=8, aspect=1.5)<0x0A>g.despine(left=True)<0x0A>g.set_axis_labels("Range", "Participation Rate")<0x0A>g.set_xticklabels(rotation=90)<0x0A>g.set_ylabels("Participation Rate")<0x0A># Save the figure<0x0A>plt.savefig("participation_rate_barchart.png")
[32m[1mbar|nominal|Median Household Income Indexed By Regional Inflation Rates|quantitative|Bond Yield
[31m# Plotting the graph<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns
[32m[1mbar|nominal|Cost|quantitative|Quantile Regression Estimates Of Salary By Experience Level
[31mfig = plt.figure(figsize=(8,8))<0x0A>sns.barplot(x='Cost',y='Quantile Regression Estimates Of Salary By Experience Level',data=df)<0x0A>sns.despine()<0x0A>plt.show()
[32m[1mcircle|quantitative|Height|quantitative|Speed
[31mheights = df.groupby('Height').mean()<0x0A>heights.reset_index(inplace=True)<0x0A>heights.columns = ['Height', 'Speed']<0x0A>heights.sort_values(by='Speed', ascending=False, inplace=True)<0x0A><0x0A>sns.lmplot('Height', 'Speed', data=heights, fit_reg=False, size=7, aspect=1.5)
[32m[1mcircle|quantitative|Log Transformed Peak Demand During Holiday Seasons At Retail Stores|quantitative|Import Volume
[31mimport matplotlib.pyplot as plt<0x0A>import matplotlib.ticker as ticker<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_xlim(0, 8000)<0x0A><0x0A>ax.set_ylabel('Import Volume')<0x0A>ax.set_xlabel('Log Transformed Peak Demand During Holiday Seasons At Retail Stores')<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_xlim(0, 8000)<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_xlim(0, 8000)<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_
[32m[1mline|temporal|Smoking Rate|quantitative|Simulation Results Of Variable Interest Rates On Bond Prices
[31m# Plot the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.plot(smoking_rates, smoking_rates, linewidth=1, marker='o')<0x0A>ax.set_xlabel('Smoking Rate')<0x0A>ax.set_ylabel('Simulation Results Of Variable Interest Rates On Bond Prices')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A>ax.spines['bottom'].set_linewidth(1)
[32m[1mline|temporal|Adjusted R Squared For Linear Regression Model With Heteroscedasticity|quantitative|CO2 Emissions
[31m# Plot the Co2 Emissions<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Compute the co2 emissions<0x0A>co2_emissions = pd.DataFrame(<0x0A>    [<0x0A>        (co2_emissions['CO2 Emissions'].iloc[0],<0x0A>        (co2_emissions['CO2 Emissions'].iloc[1],<0x0A>        (co2_emissions['CO2 Emissions'].iloc[2],<0x0A>        (co2_emissions['CO2 Emissions'].iloc[3],<0x0A>        (co2_emissions['CO2 Emissions'].iloc[4],<0x0A>        (co2_emissions['CO2 Emissions'].iloc[5],<0x0A>        (co2_emissions['CO2 Emissions'].iloc[6],
[32m[1mline|temporal|Time|quantitative|Probability Density Function for Reaction Time (seconds)
[31m# Plot the Probability Density Function for Reaction Time (seconds)<0x0A>sns.set(style="ticks")<0x0A><0x0A>sns.relplot(x="Time", y="Probability Density Function for Reaction Time (seconds)", data=df, kind="line", height=7, aspect=1.5)<0x0A><0x0A>sns.relplot(x="Time", y="Probability Density Function for Reaction Time (seconds)", data=df, kind="line", height=7, aspect=1.5)<0x0A><0x0A>sns.relplot(x="Time", y="Probability Density Function for Reaction Time (seconds)", data=df, kind="line", height=7, aspect=1.5)<0x0A><0x0A>sns.relplot(x="Time", y="Probability Density Function for Reaction Time (seconds)", data=df, kind="line", height=7, aspect=1.5)<0x0A><0x0A>sns
[32m[1mcircle|quantitative|Predictive Accuracy Of Seasonal Demand Forecasting Models|quantitative|Heterogeneity In Clinical Trial Populations By Gender And Age
[31m# Scatter plot of Heterogeneity in Clinical Trials Populations by Gender and Age<0x0A><0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Compute the Pearson Correlation Coefficient with the Scatter Plot<0x0A>pearson_scatterplot(<0x0A>    df_scatter,<0x0A>    x="Predictive Accuracy Of Seasonal Demand Forecasting Models",<0x0A>    y="Heterogeneity In Clinical Trials Populations By Gender And Age",<0x0A>    data=df_scatter,<0x0A>    height=6,<0x0A>    xlim=(0, 900),<0x0A>    ylim=(0, 700000),<0x0A>)
[32m[1mline|temporal|Distance|quantitative|Probability Density Function Of Age Distribution In Population Survey
[31m# Plot the distribution of the distances between the two populations<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.set_xlabel('Distance')<0x0A>ax.set_ylabel('Probability Density Density Density Function OY Age Distribution in Population Survey')<0x0A>ax.set_xlim(0,1880)<0x0A>ax.set_ylim(0,600)<0x0A><0x0A>ax.spines['right'].set_
[32m[1mcircle|quantitative|Growth Rate|quantitative|GDP
[31m# Declare a figure with the parameters above and provide a title<0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A># Add the current axes to the figure<0x0A>ax.set_xlim(0, 60)<0x0A><0x0A># Add the current axis to the figure<0x0A>ax.set_ylim(0, 80)<0x0A><0x0A># Add the current axis to the figure<0x0A>ax.set_xlabel('Growth Rate')<0x0A>ax.set_ylabel('GDP')<0x0A><0x0A># Add the current axis to the figure<0x0A>ax.set_yticks([0, 20, 40, 60, 80])<0x0A><0x0A># Add the current axis to the figure<0x0A>ax.set_xticks([0, 1, 2, 3, 4, 5, 6])<0x0A><0x0A>#
[32m[1mline|temporal|Mental Health|quantitative|Import Volume
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A># Load the example dataset<0x0A># https://raw.githubusercontent.com/mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-m
[32m[1mcircle|quantitative|Assessment Of Healthcare Utilization Rates By Demographic Groups|quantitative|Relative Risk Assessment Of Health Outcomes In Demographic Studies
[31m# Plot the relationship between relative risk and assessment of healthcare utilization rates by demographic groups<0x0A><0x0A>ggplot(df, aes(x='Relative Risk', y='Assessment Of Healthcare Utilization Rates By Demographic Groups', fill='Relative Risk')) +<0x0A>    geom_point() +<0x0A>    geom_abline(intercept = 0, slope = 1, linetype = 'dotted') +<0x0A>    scale_x_continuous(breaks = 1.0) +<0x0A>    scale_y_continuous(limits = (0, 400)) +<0x0A>    labs(x = 'Assessment Of Healthcare Utilization Rates By Demographic Groups', y = 'Relative Risk, Assessment Of Health. Oucomes In Demographic Studies') +<0x0A>    theme(text = element_text(size = 15))
[32m[1mbar|nominal|Mortality Rate|quantitative|Poverty Rate
[31mfig = plt.figure(figsize=(6,6))<0x0A>ax1 = fig.add_subplot(1,2,1)<0x0A>ax2 = fig.add_subplot(1,2,2)<0x0A><0x0A>#ax1.set_ylim(0,3000)<0x0A>#ax1.set_ylimit(-0.1, 3000)<0x0A>#ax1.set_xlim(0,3000)<0x0A>#ax1.set_xlabel('Mortality Rate')<0x0A>#ax1.set_ylabel('Poverty Rate')<0x0A>#ax1.set_xlabel('Mortality Rate')<0x0A>#ax1.set_ylabel('Poverty Rate')<0x0A>#ax1.set_xlabel('Mortality Rate')<0x0A>#ax1.set_ylabel('Poverty Rate'
[32m[1mline|temporal|Impact Of Temperature Variability On Crop Yield Statistics|quantitative|Detrended Analysis Of Yearly Weather Anomalies In Temperature Data
[31m# Plot the results as a line plot<0x0A>plt.figure(figsize=(10,10))<0x0A><0x0A># Plot the results as a line plot<0x0A>plt.plot(x, y)<0x0A><0x0A># Add a title and axis labels<0x0A>plt.ylabel('Dtended Analysis Of Yearly Weather In Normalies')<0x0A>plt.xlabel('Impact Of Temperature Variability On Crop Yield Statistics')<0x0A><0x0A># Add a title and axis labels<0x0A>plt.yticks(np.arange(0, 6000, 1000))<0x0A><0x0A># Add a title and axis labels<0x0A>plt.yticks(np.arange(0, 6000, 1000))<0x0A><0x0A># Add a legend<0x0A>plt.legend()<0x0A><0x0A># Add a title and axis labels<0x0A>plt.ylabel('Dtended Analysis Of Year
[32m[1mline|temporal|Manufacturing Output|quantitative|Fuel Consumption
[31m# Plot the consumption of fuel<0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A>ax.plot(df['Manufacturing Output'],df['Fuel Consumption'])<0x0A>ax.set_ylim(0,500000000)<0x0A>ax.set_xlim(1825,1840)<0x0A>ax.set_ylabel('Fuel Consumption')<0x0A>ax.set_xlabel('Manufacturing Output')<0x0A>ax.set_ylim(0,500000000)<0x0A>ax.set_xticks(np.arange(1825,1840,1))<0x0A>ax.set_xticklabels(df['Manufacturing Output'])<0x0A>ax.set_yticks(np.arange(0,5000000
[32m[1mcircle|quantitative|Literacy Rate|quantitative|Export Volume
[31m# Plot the graph<0x0A>sns.set(style="ticks")<0x0A><0x0A>g = sns.relplot(x="Literacy Rate", y="Epoch Volume", data=df,<0x0A>                  height=7, aspect=1.5,<0x0A>                  palette="muted")<0x0A><0x0A>g.set(xlim=(0,5000))<0x0A>g.set(ylim=(0,650))<0x0A><0x0A>g.set(xlabel="Literacy Rate", ylabel="Epoch Volume")<0x0A>g.set(yticks=[0, 100, 200, 300, 400])<0x0A><0x0A>g.set(xlim=(0,5000))<0x0A><0x0A>g.set(ylim=(0,650))<0x0A><0x0A>g.set(xlabel="Literacy Rate", ylabel="Epoch Volume
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 1.0 [35m|
100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:45<00:00,  2.29s/it]















 85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé               | 17/20 [00:36<00:06,  2.24s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mline|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
[31mgrupo_estado_semana_1 = grupo_estado_semana_1.sort_values('Year')<0x0A><0x0A># Plotando o gr√°fico de barras para cada grupo<0x0A>plot = grupo_estado_semana_1.plot(kind='line', x='Year', y='Consumption of land capital (as % of GNI)', color='green', <0x0A>                                                                xlabel='Year', ylabel='Consumption of land capital (as % of GNI)',<0x0A>                                                                ylim=(0, 2500000000), <0x0A>                                                                figsize=(15, 20), linewidth=1, fontsize=15)<0x0A><0x0A># Adicionando o gr√°fico de barras para cada grupo<0x0A><0x0A># Adicionando o gr√°fico de barras
[32m[1mline|temporal|Year|quantitative|Number of meetings(average for affected firms)
[31mYear = get_year_total(df_2018, 'Year', 'Number of meetings/meetings/tax officials in firms of Nicaragua', 'Number of meetings/meetings/tax officials in firms of Nicaragua', 'Number of meetings/meetings/tax officials in firms of Nicaragua', 'Number of meetings/meetings/tax officials in firms of Nicaragua', 'Number of meetings/meetings/tax officials in firms of Nicaragua', 'Number of meetings/meetings/tax officials in firms of Nicaragua', 'Number of meetings/meetings/tax officials in firms of Nicaragua', 'Number of meetings/meetings/tax officials in firms of Nicaragua', 'Number of meetings/meetings/tax officials in firms of Nicaragua', 'Number of meetings/meetings/tax officials in firms of Nicaragua'
[32m[1mline|temporal|Year|quantitative|Number of days
[31mYear = ["Number of days required to get electricity in Kiribati"]<0x0A>Number of days required to get electricity in Kiribati<0x0A>while True:<0x0A>    fig = grupo_vendas('Number of days required to get electricity in Kiribati','Year','Number of days','Number of days required to get electricity in Kiribati','Number of days required to get electricity in Kiribati','Number of days required to get electricity in Kiribati','Number of days required to get electricity in Kiribati','Number of days required to get electricity in Kiribati','Number of days required to get electricity in Kiribati','Number of days required to get electricity in Kiribati','Number of days required to get electricity in Kiribati','Number of days required to get electricity in Kiribati','Number of days required to get electricity in Kir
[32m[1mline|temporal|Year|quantitative|% of children under 5 taken to a health provider
[31mgrupo grupo_estado_clasificacion_del_medios_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento_del_vento
[32m[1mline|temporal|Year|quantitative|% of firms
[31mshitposting_ranking_ranking = {<0x0A>    'Year': ['2016-01-01', '2017-01-01', '2018-01-01', '2019-01-01', '2020-01-01', '2021-01-01', '2022-01-01', '2023-01-01', '2024-01-01', '2025-01-01', '2026-01-01', '2027-01-01', '2028-01-01', '2
[32m[1mbar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
[31m>{{_bar_chart(a_year, a_electric_power_consumption, 'Electric power consumption (kWh per capita) in Vietnam')
[32m[1mbar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commerical service exports)
[31mCropped = False<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10, 15))<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1mbar|nominal|Country|quantitative|Number of tractors
[31mCountry_country_proportion_plot = Country_country_proportion_plot.plot(kind='bar',figsize=(20,10),color='green')<0x0A>Country_country_proportion_plot.set_xlabel('Country')<0x0A>Country_country_proportion_plot.set_ylabel('Number of Farmers')<0x0A>Country_country_proportion_plot.set_title('Number of usable tractors in agriculture in different countries')
[32m[1mbar|temporal|Year|quantitative|Amount of energy used(kg of oil equivalent per capita)
[31mgrupo grupo_estado('Maldives')
[32m[1mbar|temporal|Year|quantitative|Number of days
[31mdrtuber2 = under_duper[['Year', 'Number of Days', 'Time required to register a property in Papua New Guinea', 'Number of Days']]<0x0A>under_duper2 = under_duper2.drop(under_duper2.index[0], axis=1)<0x0A>under_duper2 = under_duper2.drop(under_duper2.index[0], axis=1)<0x0A>under_duper2 = under_duper2.drop(under_duper2.index[0], axis=1)<0x0A>under_duper2 = under_duper2.drop(under_duper2.index[0], axis=1)<0x0A>under_duper2 = under_duper2.drop(under_duper2.index[0], axis=1)<0x0A>under_duper2 = under_duper2.drop
[32m[1mbar|temporal|Year|quantitative|Savings (current US$)
[31mgrupos = {<0x0A>    'Year': df['Year']<0x0A>}<0x0A>df = pd.DataFrame(<0x0A>    df, columns=['Year', 'SAVINGS (current US$)'])<0x0A>df = grupos.replace({'Year': 'Year'}, inplace=True)<0x0A>df = df.replace({'Year': 'Year'}, inplace=True)<0x0A><0x0A># Plotando o gr√°fico de barras para as vari√°veis com todos os pa√≠ses<0x0A> grupos['Year'] = grupos['Year'].replace({'Year': 'Year', 'SAVINGS (current US$)', 'SAVINGS (current US$)', 'Adjusted net savings of Jordan including particulate emission damage', 'Adjusted net savings of Jordan including particulate emission damage', 
[32m[1mbar|temporal|Year|quantitative|Land (in sq. km)
[31mBolivian_plot = fbprophet_bolivia_cleaned[['Year','Land for no long haul']].plot(kind='bar',figsize=(20,30),color = 'green')<0x0A> Bolivian_plot.set_xlabel('Year')<0x0A>Bolivia_plot.set_ylabel('Land for no long haul')<0x0A>Bolivia_plot.set_title('Total agricultural land in Bolivia')<0x0A><0x0A># Bolivian_plot.set_xticklabels(['Year','Year'], rotation=90)<0x0A># Bolivian_plot.set_yticklabels(['Year'], rotation=90)<0x0A># Bolivian_plot.set_xlim(0, 200000)<0x0A># Bolivian_plot.set_ylim(0, 200000)<0x0A># Bolivian_plot.
[32m[1mbar|nominal|Country|quantitative|Cost (as % of GNI)
[31mCountry_Cost_vs_Growth = Train[['Country','Cost (os % of GVW)']].groupby(['Country']).mean()<0x0A>Country_Cost_vs_Growth.plot(kind='bar',figsize=(16,16),color='black')<0x0A>plt.ylabel('Cost (os % of GVW)')<0x0A>plt.xlabel('Country')<0x0A>plt.grid(True)<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A><0x0A>plt.savefig('Country vs Cost vs Growth.png')
[32m[1mbar|nominal|Country|quantitative|Average number of days
[31mCountry = ["Country", "Average number of days"]<0x0A>temperature = [15, 17, 19, 20, 21, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65
[32m[1mbar|nominal|Country|quantitative|Prive value of exports (constant LCU)
[31mCountry_country_price_price_country.plot(kind='bar',figsize=(15,15),color='grey')<0x0A>plt.xlabel('Country')<0x0A>plt.ylabel('Price value of exports (constant L210)')<0x0A>plt.title('Current value of exports of goods and services in countries deflated by the import price index')<0x0A>plt.grid(True)<0x0A>plt.show()
[32m[1mbar|temporal|Year|quantitative|Total reserves (current US$)
[31mYear = []<0x0A>Total reserves (current US$) = []<0x0A><0x0A>for year in range(1,20):<0x0A>    total_reserves_2019 = df_2019[(df_2019["Year"]==year) & (df_2019["Total reserves (current US$)"]<100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
[32m[1mcircle|temporal|Year|quantitative|Unemployed males(% of male labor force ages 15-24)
[31mCropped = grouped.sort_values('Year',ascending=False)<0x0A>fig = grupo_unemployed_male_youth_population_high_income_nonOECD_vs_higher_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_race_
[32m[1mcircle|temporal|Year|quantitative|Mean income or consumption per capita(2011 PPP $ per day)
[31mgrupo grupo_estado_nombre_nombre(datos_completos, "Year")
[32m[1mcircle|temporal|Year|quantitative|Savings (current US$)
[31mgrupo grupo_estado_inferior_2.plot(kind='scatter', x='Year', y='Savings earned US$', color='Red', figsize=(20,30), legend=False)
[32m[1mcircle|temporal|Year|quantitative|Value added (current Local Currency Unit)
[31mgrupo grupoValores(['Year'])
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 1.0 [35m|

100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:37<00:00,  1.88s/it]
[36m[1mEpoch :[39m[22m 6 [32m[1m | Loss :[39m[22m 5.432776927947998
[36m[1mEpoch :[39m[22m 7 [32m[1m | Loss :[39m[22m 5.314501762390137
[36m[1mEpoch :[39m[22m 8 [32m[1m | Loss :[39m[22m 5.276330947875977
[36m[1mEpoch :[39m[22m 9 [32m[1m | Loss :[39m[22m 5.334849834442139
  0%|                                                                                                                  | 0/20 [00:00<?, ?it/s]


















 95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä     | 19/20 [00:40<00:02,  2.30s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mcircle|quantitative|Mode Age|quantitative|Alcohol Consumption
[31m# Create a scatter plot of Mode Age versus Alcohol Consumption<0x0A>sns.lmplot(x='Mode Age', y='Alcohol Consumption', data=df, fit_reg=False, height=7, aspect=1, scatter_kws={'alpha':0.7});
[32m[1mbar|nominal|Water Usage|quantitative|CO2 Emissions
[31m# Plot the data<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A># Draw a nested barplot to show bills by day and time<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Set up the axes<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Draw a nested barplot to show bills by day and time<0x0A>sns.despine(left=True, right=True)<0x0A><0x0A># Set up the axes<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Draw a nested barplot to show bills by day and time<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Draw a nested barplot to show bills by day and time<0x0A>sns.despine(
[32m[1mbar|nominal|Consumer Price Index|quantitative|Kurtosis And Skewness Of Annual Corporate Profit Margins
[31m# Create a plot of Consumer Price Index<0x0A><0x0A># Create a bar plot of Consumer Price Index<0x0A>sns.set(context="notebook", style="ticks", font_scale=1.5)<0x0A><0x0A># Create a bar plot of Kurtosis And Skewness Of Annual Corporate Profit Margins<0x0A>sns.set(context="notebook", style="ticks", font_scale=1.5)<0x0A><0x0A># Create a bar plot of Consumer Price Index<0x0A>sns.set(context="notebook", style="ticks", font_scale=1.5)<0x0A><0x0A># Create a bar plot of Consumer Price Index<0x0A>sns.set(context="notebook", style="ticks", font_scale=1.5)<0x0A><0x0A># Create a bar plot of Consumer Price Index<0x0A>sns.set(context="notebook", style="ticks", font_scale=1.5)<0x0A><0x0A># Create a bar
[32m[1mbar|nominal|Range|quantitative|Participation Rate
[31m# Create a bar chart of participation rate by Range<0x0A># Set the background color to a white, and add a dashed line to the chart<0x0A># Set the y-axis label to "Participation Rate"<0x0A>plt.ylim(0, 230)<0x0A># Create a bar chart of average participation rate by Range<0x0A>plt.bar(range, participation_rate)<0x0A># Add a vertical line to the chart<0x0A>plt.ylabel("Participation Rate")<0x0A># Add a vertical line to the chart<0x0A>plt.xlabel("Range")<0x0A># Add a vertical line to the chart<0x0A>plt.xticks(range(0, 300, 10), rotation=90)<0x0A># Add a vertical line to the chart<0x0A>plt.yticks(np.arange(0, 230, 10))<0x0A># Add a vertical line to the chart
[32m[1mbar|nominal|Median Household Income Indexed By Regional Inflation Rates|quantitative|Bond Yield
[31m# Plotting the graph<0x0A>sns.set(style="ticks")<0x0A><0x0A># Plotting the graph<0x0A>sns.set(context="paper", font_scale=1.5)<0x0A><0x0A># Plotting the graph<0x0A>sns.set(style="ticks")<0x0A><0x0A># Plotting the graph<0x0A>sns.set(context="paper", font_scale=1.5)<0x0A><0x0A># Plotting the graph<0x0A>sns.set(style="ticks")<0x0A><0x0A># Plotting the graph<0x0A>sns.set(context="paper", font_scale=1.5)<0x0A><0x0A># Plotting the graph<0x0A>sns.set(style="ticks")<0x0A><0x0A># Plotting the graph<0x0A>sns.set(context="paper", font_scale=1.5)<0x0A><0x0A># Plotting the graph<0x0A>sns.set(style="ticks")<0x0A><0x0A># Plotting the graph<0x0A>sns.
[32m[1mbar|nominal|Cost|quantitative|Quantile Regression Estimates Of Salary By Experience Level
[31mfig = plt.figure(figsize=(8,8))<0x0A>sns.barplot(x='Cost',y='Quantile Regression Estimates Of Salary By Experience Level',data=df)<0x0A>sns.despine(bottom=True, left=True)
[32m[1mcircle|quantitative|Height|quantitative|Speed
[31mheights = df.groupby('Height').mean()<0x0A>heights.plot(kind='scatter', x='Height', y='Speed', alpha=0.8, figsize=(10,10))<0x0A>plt.show()
[32m[1mcircle|quantitative|Log Transformed Peak Demand During Holiday Seasons At Retail Stores|quantitative|Import Volume
[31mimport matplotlib.pyplot as plt<0x0A>import matplotlib.ticker as ticker<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.set_ylim(0,400)<0x0A><0x0A>ax.set_xlim(0,8000)<0x0A><0x0A>ax.set_ylabel('Import Volume')<0x0A>ax.set_xlabel('Log Transformed Peak Demand During Holiday Seasons At Retail Stores')<0x0A><0x0A>ax.set_ylim(0,400)<0x0A><0x0A>ax.set_xlim(0,8000)<0x0A><0x0A>ax.set_ylim(0,400)<0x0A><0x0A>ax.set_xlim(0,8000)<0x0A><0x0A>ax.set_ylim(0,400)<0x0A><0x0A>ax.set_xlim(0,80
[32m[1mline|temporal|Smoking Rate|quantitative|Simulation Results Of Variable Interest Rates On Bond Prices
[31m## Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_color('white')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A>ax.spines['right'].set_color('white')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A>ax.spines['bottom'].set_position((
[32m[1mline|temporal|Adjusted R Squared For Linear Regression Model With Heteroscedasticity|quantitative|CO2 Emissions
[31m# Plot the Co2 Emissions<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Compute the co2 emissions<0x0A>co2_emissions_df = pd.DataFrame(<0x0A>    [<0x0A>        (co2_emissions_df["CO2 Emissions"].iloc[:,1],<0x0A>        (co2_emissions_df["CO2 Emissions"].iloc[:,2],<0x0A>        (co2_emissions_df["CO2 Emissions"].iloc[:,3],<0x0A>        (co2_emissions_df["CO2 Emissions"].iloc[:,4],<0x0A>        (co2_emissions_df["CO2 Emissions"].iloc[:,5],<0x0A>        (co2_emissions_df["CO2 Emissions"].iloc[:,6],<0x0A>        
[32m[1mline|temporal|Time|quantitative|Probability Density Function for Reaction Time (seconds)
[31m# Plot the Probability Density Function for Reaction Time (seconds)<0x0A>sns.set(style="ticks")<0x0A><0x0A>sns.relplot(x="Time", y="Probability Density Function for Reaction Time (seconds)", data=df, kind="line", height=7, aspect=1.5)<0x0A><0x0A>sns.relplot(x="Time", y="Probability Density Function for Reaction Time (seconds)", data=df, kind="line", height=7, aspect=1.5)<0x0A><0x0A>sns.relplot(x="Time", y="Probability Density Density Function for Reaction Time (seconds)", data=df, kind="line", height=7, aspect=1.5)<0x0A><0x0A>sns.relplot(x="Time", y="Probability Density Density Function for Reaction Time (seconds)", data=df, kind="line", height=7, aspect=1.5)<0x0A><0x0A>
[32m[1mcircle|quantitative|Predictive Accuracy Of Seasonal Demand Forecasting Models|quantitative|Heterogeneity In Clinical Trial Populations By Gender And Age
[31m# Scatter plot of Heterogeneity in Clinical Trials Populations by Gender and Age<0x0A><0x0A># Set the style<0x0A>plt.style.use('fivethirtyeight')<0x0A><0x0A># Set the layout<0x0A>plt.figure(figsize=(10,10))<0x0A><0x0A># Add axis labels<0x0A>plt.xlabel("Predictive Accuracy Of Seasonal Demand Forecasting Models")<0x0A>plt.ylabel("Heterogeneity In Clinical Trials Populations By Gender And Age")<0x0A><0x0A># Add axis limits<0x0A>plt.xlim(0,850)<0x0A><0x0A># Add axis labels<0x0A>plt.ylim(0,65)<0x0A><0x0A># Add axis tick labels<0x0A>plt.tick_params(labelsize=14)<0x0A><0x0A># Add axis tick labels<0x0A>plt.tick_params(labelsize=14)<0x0A><0x0A># Add axis tick labels<0x0A>plt.tick_params(label
[32m[1mline|temporal|Distance|quantitative|Probability Density Function Of Age Distribution In Population Survey
[31m# Plot the distribution of Probability Density Density Function OYA Age Distribution in Population Survey<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Set the figure size<0x0A>plt.figure(figsize=(10,10))<0x0A><0x0A># Create a line plot of Probability Density Density Function OYA Age Distribution in Population Survey<0x0A>sns.lineplot(x="Distance", y="Probability Density Density Function OYA Age Distribution in Population Survey", data=population_survey_df)<0x0A><0x0A># Add a title<0x0A>plt.title("Probability Density Density Function OYA Age Distribution in Population Survey")<0x0A><0x0A># Add a legend<0x0A>plt.legend()<0x0A><0x0A># Add a title<0x0A>plt.ylabel("Probability Density Density Density Function OYA Age Distribution in Population Survey")<0x0A><0x0A># Add a legend<0x0A>plt.legend()<0x0A><0x0A># Add a title<0x0A>plt.title("Probability Density
[32m[1mcircle|quantitative|Growth Rate|quantitative|GDP
[31m# Declare a function to calculate the mean growth rate of a country<0x0A>def createGDP(country, country_code):<0x0A>    country_code = country_code.split(',')<0x0A>    country_code = country_code.replace(',','')<0x0A>    country_code = country_code.replace(',','')<0x0A>    country_code = country_code.replace(',','')<0x0A>    country_code = country_code.replace(',','')<0x0A>    country_code = country_code.replace(',','')<0x0A>    country_code = country_code.replace(',','')<0x0A>    country_code = country_code.replace(',','')<0x0A>    country_code = country_code.replace(',
[32m[1mline|temporal|Mental Health|quantitative|Import Volume
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A># Draw a horizontal line using the current axes<0x0A>ax.spines['bottom'].set_position('zero')<0x0A>ax.spines['top'].set_color('none')<0x0A>ax.spines['left'].set_position('zero')<0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['bottom'].set_position('zero')<0x0A>ax.spines['left'].set_position('none')<0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['bottom'].set_position('none')<0x0A>ax.spines['left'].set
[32m[1mcircle|quantitative|Assessment Of Healthcare Utilization Rates By Demographic Groups|quantitative|Relative Risk Assessment Of Health Outcomes In Demographic Studies
[31m# Plot the relationship between relative risk and assessment of healthcare utilization rates by demographic groups<0x0A><0x0A>ggplot(df, aes(x='Relative Risk', y='Assessment Of Healthcare Utilization Rates By Demographic Groups', fill='Relative Risk')) +<0x0A>    geom_point() +<0x0A>    geom_abline(intercept=0, slope=0, linetype=2)
[32m[1mbar|nominal|Mortality Rate|quantitative|Poverty Rate
[31mfig = plt.figure(figsize=(10,10))<0x0A>ax1 = fig.add_subplot(1,2,1)<0x0A>ax2 = fig.add_subplot(1,2,2)<0x0A><0x0A>#ax1.set_ylim(0,3000)<0x0A>#ax1.set_ylimit(-0.1, 3000)<0x0A>#ax1.set_xlim(0,3000)<0x0A>#ax1.set_xlabel('Mortality Rate')<0x0A>#ax1.set_ylabel('Poverty Rate')<0x0A>#ax1.set_xticks(np.arange(0, 4000, 200))<0x0A>#ax1.set_xticklabels(["Dog", "Nike", "Red", "USA"])<0x0A>#ax1.set_x
[32m[1mline|temporal|Impact Of Temperature Variability On Crop Yield Statistics|quantitative|Detrended Analysis Of Yearly Weather Anomalies In Temperature Data
[31m# Plot the results as a line plot<0x0A>plt.figure(figsize=(10,10))<0x0A><0x0A># Plot the results as a line plot<0x0A>plt.plot(x, y)<0x0A><0x0A># Add a title and axis labels<0x0A>plt.ylabel('Dtended Analysis Of Yearly Weather In Normalies In Temperature Data')<0x0A>plt.xlabel('Impact Of Temperature Variability On Crop Yield Statistics')<0x0A><0x0A># Add a title and axis labels<0x0A>plt.yticks(np.arange(0, 6000, 1000))<0x0A><0x0A># Add a title and axis labels<0x0A>plt.yticks(np.arange(0, 6000, 1000))<0x0A><0x0A># Add a legend<0x0A>plt.legend()<0x0A><0x0A># Add a title and axis labels<0x0A>plt.ylabel('Dtended
[32m[1mline|temporal|Manufacturing Output|quantitative|Fuel Consumption
[31m# Plot the consumption of fuel in the dataset<0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A>ax.set_ylim(0,50000)<0x0A>ax.set_xlim(1825,1840)<0x0A>ax.set_ylabel('Fuel Consumption')<0x0A>ax.set_xlabel('Manufacturing Output')<0x0A>ax.plot(df['Manufacturing Output'],df['Consumption'],linewidth=1.5)<0x0A>ax.set_ylim(0,50000)<0x0A>ax.set_xticks(np.arange(1825,1840,1))<0x0A>ax.set_xticklabels(df['Manufacturing Output'])<0x0A>ax.set_yticks(np.arange(0,5000
[32m[1mcircle|quantitative|Literacy Rate|quantitative|Export Volume
[31m# Plot the graph<0x0A>sns.set(style="ticks")<0x0A><0x0A>g = sns.relplot(x="Literacy Rate", y="Epoch Volume", data=df,<0x0A>                  height=7, aspect=1.5,<0x0A>                  palette="muted")<0x0A><0x0A>g.set(xlim=(0,5000))<0x0A>g.set(ylim=(0,650))<0x0A><0x0A>g.set(xlabel="Literacy Rate", ylabel="Epoch Volume")<0x0A>g.set(yticks=[0, 100, 200, 300, 400])<0x0A><0x0A>g.set(yticks=[0, 100, 200, 300, 400])<0x0A><0x0A>g.set(xlim=(0,5000))<0x0A><0x0A>g.
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 1.0 [35m|
100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:42<00:00,  2.13s/it]









 95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä     | 19/20 [00:21<00:00,  1.21it/s]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mline|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
[31mpropagation_trend(year_trend, consumption_trend, consumption_trend_trend, consumption_trend_trend_trend, consumption_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend_trend
[32m[1mline|temporal|Year|quantitative|Number of meetings(average for affected firms)
[31mYear = get_grouped('Year')<0x0A>prop_yearly = year.groupby(['Year']).sum()<0x0A>prop_yearly = prop_yearly.reset_index()<0x0A>prop_yearly['Year'] = prop_yearly['Year'].replace('Year','')<0x0A>prop_yearly['Year'] = prop_yearly['Year'].replace('Year','')<0x0A>prop_yearly['Year'] = prop_yearly['Year'].replace('Year','')<0x0A>prop_yearly['Year'] = prop_yearly['Year'].replace('Year','')<0x0A>prop_yearly['Year'] = prop_yearly['Year'].replace('Year','')<0x0A>prop_yearly['Year'] = prop_yearly['Year'].replace('Year','')<0x0A>prop_yearly['Year']
[32m[1mline|temporal|Year|quantitative|Number of days
[31mYear = grouped[['Number of days required to get electricity in Kiribati', 'Number of days required to get electricity in Kiribati']].drop_duplicates('Year', keep='true')<0x0A>fig = plt.figure()<0x0A>fig = plt.figure()<0x0A>ax = fig.add_subplot(1, 1, 1)<0x0A>fig.set_size_inches(15, 20)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of days')<0x0A>ax.set_yticklabels([''] + ["Number of days required to get electricity in Kiribati'])<0x0A>ax.set_yticklabels([''] + ['Number of days required to get electricity in Kiribati'])<0x0A>ax.grid(False)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.
[32m[1mline|temporal|Year|quantitative|% of children under 5 taken to a health provider
[31mgrupo grupo de grupos(['Percentage of children under 5 trauma to death provided'])
[32m[1mline|temporal|Year|quantitative|% of firms
[31mdrtuberord('Year')
[32m[1mbar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
[31m[fc]_prop_vs_year(rp_2016_2017_2018)
[32m[1mbar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commerical service exports)
[31mCroppedContent_bar_chart(year_combined_2009,2018)
[32m[1mbar|nominal|Country|quantitative|Number of tractors
[31mCountry | Number of tractors <0x0A>lowercase20 | 10 <0x0A>uppercase20 | 10
[32m[1mbar|temporal|Year|quantitative|Amount of energy used(kg of oil equivalent per capita)
[31mYear|temporal|Amount of energy used (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of cadastitic) of (overcast) of equivalent (overcast) of equivalent (overcast) of equivalent (overcast) of equivalent (overcast) of equivalent (overcast) of equivalent (overcast) of equivalent (overcast) of equivalent (overcast) of equivalent (overcast) of equivalent (overcast) of equivalent (overcast) of equivalent (overcast) of equivalent (overcast) of equivalent (overcast) of equivalent (overcast) of equivalent (overcast) of equivalent (overcast) of equivalent (overcast) of equivalent (overcast) of equivalent (overcast) of equivalent (overcast) of equivalent (overcast) of equivalent (overcast) of equivalent (overcast) of equivalent (overcast
[32m[1mbar|temporal|Year|quantitative|Number of days
[31m[fc]_proporal[['Year','Number of days']].groupby(['Year']).sum().plot(kind='bar',figsize=(15,30),legend=False)<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Number of days')<0x0A>plt.tight_layout()<0x0A>plt.show()
[32m[1mbar|temporal|Year|quantitative|Savings (current US$)
[31mYear|temporal|Savage (current US$)
[32m[1mbar|temporal|Year|quantitative|Land (in sq. km)
[31mYear|temporal|Total agricultural land in Bolivia(% WTI mean ton mil)
[32m[1mbar|nominal|Country|quantitative|Cost (as % of GNI)
[31mCountry_Cost_vs_GCN(temporal_2016_2020)
[32m[1mbar|nominal|Country|quantitative|Average number of days
[31mbaggage_country_2002 = baggage_country_2002.sort_values('Country',ascending=False)<0x0A><0x0A>fig,ax = plt.subplots()<0x0A>fig.set_figheight(10)<0x0A>fig.set_figwidth(30)<0x0A>fig.set_figheight(15)<0x0A>prop_2002 = baggage_country_2002.plot(x='Country',y='Average number of days', kind='bar',figsize=(20,30),color='grey')<0x0A><0x0A>prop_2002.set_ylabel('Average number of days')<0x0A><0x0A>prop_2002.set_xlabel('Country')<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1mbar|nominal|Country|quantitative|Prive value of exports (constant LCU)
[31mCountry = getCountry.plot(kind='bar', figsize=(15,15))<0x0A>Country.set_ylabel('Prew value of exports (constant L210)')<0x0A>Country.set_xlabel('Country')<0x0A>Country.grid(True)<0x0A>Country.plot(kind='bar', figsize=(15,15))<0x0A>Country.set_ylabel('Prew value of exports (constant L210)')<0x0A>Country.grid(True)<0x0A>Country.plot(kind='bar', figsize=(15,15))<0x0A>Country.set_ylabel('Prew value of exports (constant L210)')<0x0A>Country.grid(True)<0x0A>Country.plot(kind='bar', figsize=(15,15))<0x0A>Country.grid(True)<0x0A>Country.plot(kind='bar', figsize=(15,
[32m[1mbar|temporal|Year|quantitative|Total reserves (current US$)
[31mYear_prop_2018_2019_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_2020_
[32m[1mcircle|temporal|Year|quantitative|Unemployed males(% of male labor force ages 15-24)
[31mCategoryLift("High income_nonOECD")
[32m[1mcircle|temporal|Year|quantitative|Mean income or consumption per capita(2011 PPP $ per day)
[31m[fc](year, mean_income_ratio_per_city)
[32m[1mcircle|temporal|Year|quantitative|Savings (current US$)
[31mgrupo grupo de grupo latingraf√≠a.com %>%<0x0A>ggplot(fatias, aes(x=Year, fill=Year))
[32m[1mcircle|temporal|Year|quantitative|Value added (current Local Currency Unit)
[31m<0x4D>andalucilleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRoselleRose
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 1.0 [35m|

100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:24<00:00,  1.20s/it]
[36m[1mEpoch :[39m[22m 11 [32m[1m | Loss :[39m[22m 5.062316417694092
[36m[1mEpoch :[39m[22m 12 [32m[1m | Loss :[39m[22m 5.104698181152344
[36m[1mEpoch :[39m[22m 13 [32m[1m | Loss :[39m[22m 4.976097106933594
[36m[1mEpoch :[39m[22m 14 [32m[1m | Loss :[39m[22m 4.978111743927002
[36m[1mEpoch :[39m[22m 15 [32m[1m | Loss :[39m[22m 4.947711944580078
















 90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå          | 18/20 [00:43<00:05,  2.71s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mcircle|quantitative|Mode Age|quantitative|Alcohol Consumption
[31m# Create a scatter plot of Mode Age versus Alcohol Consumption<0x0A>sns.lmplot(x='Mode Age', y='Alcohol Consumption', data=df, fit_reg=False, height=7, aspect=1, scatter_kws={'s':70})
[32m[1mbar|nominal|Water Usage|quantitative|CO2 Emissions
[31m# Plot the data<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A># Draw a nested barplot to show bills by day and time<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Set up the axes<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Draw a nested barplot to show bills by day and time<0x0A>sns.despine(left=True, right=True)<0x0A><0x0A># Set up the axes<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Draw a nested barplot to show bills by day and time<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Draw a nested barplot to show bills by day and time<0x0A>sns.despine(
[32m[1mbar|nominal|Consumer Price Index|quantitative|Kurtosis And Skewness Of Annual Corporate Profit Margins
[31mfig = plt.figure(figsize=(10,10))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>#ax.set_xticks(np.arange(0,100,10))<0x0A>ax.set_xticklabels(names, rotation=90)<0x0A><0x0A>#ax.set_ylim(0,1000)<0x0A>ax.set_xlabel('Consumer Price Index')<0x0A>ax.set_ylabel('Kurtosis And Skewness Of Annual Corporate Profit Margins')<0x0A><0x0A>#ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>#ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set
[32m[1mbar|nominal|Range|quantitative|Participation Rate
[31m# Create a bar chart of average participation rate per Range<0x0A># Set the x-axis label and tick labels<0x0A># Set the y-axis label and tick labels<0x0A># Set the y-axis limits<0x0A># Set the limits of the y-axis<0x0A># Set the limits of the y-axis<0x0A># Set the limits of the y-axis<0x0A># Set the limits of the y-axis<0x0A># Set the limits of the y-axis<0x0A># Set the limits of the y-axis<0x0A># Set the limits of the y-axis<0x0A># Set the limits of the y-axis<0x0A># Set the limits of the y-axis<0x0A># Set the limits of the y-axis<0x0A># Set the limits of the y-axis<0x0A># Set the limits of the y-axis<0x0A># Set the limits of the y-axis<0x0A># Set the limits of the y-axis<0x0A># Set the limits of the y-axis<0x0A># Set the limits of the y
[32m[1mbar|nominal|Median Household Income Indexed By Regional Inflation Rates|quantitative|Bond Yield
[31m# Plotting the graph<0x0A><0x0A># Compute the correlation matrix<0x0A>corr = df.corr()<0x0A><0x0A># Generate a mask for the upper triangle<0x0A>mask = np.zeros_like(corr, dtype=np.bool)<0x0A>mask[np.triu_indices_from(mask)] = True<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(10, 15))<0x0A><0x0A># Generate a custom diverging colormap<0x0A>cmap = sns.diverging_palette(220, 10, as_cmap=True)<0x0A><0x0A># Draw the heatmap with the mask and correct aspect ratio<0x0A>sns.heatmap(corr, mask=mask, cmap=cmap, vmax=155, square=True, annot=True, fmt='d', cbar=False
[32m[1mbar|nominal|Cost|quantitative|Quantile Regression Estimates Of Salary By Experience Level
[31mfig = plt.figure(figsize=(8,8))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Create a bar plot of the Salary by Experience Level<0x0A>sns.barplot(x='Cost', y='Salary', data=Salary_by_Experience_Level, ax=ax)<0x0A><0x0A># Add a title and axis labels<0x0A>ax.set_title('Salary by Experience Level')<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a ytick label<0x0A>ax.yaxis.set_major_locator(mticker.MultipleLocator(1))<0x0A>ax.yaxis.set_major_formatter(mticker.ScalarFormatter())<0x0A><0x0A># Add a xtick label<0x0A>ax
[32m[1mcircle|quantitative|Height|quantitative|Speed
[31mheights = df.groupby('Height').mean()<0x0A>heights.plot(kind='scatter', x='Height', y='Speed', alpha=0.8, figsize=(10,10))<0x0A>plt.show()
[32m[1mcircle|quantitative|Log Transformed Peak Demand During Holiday Seasons At Retail Stores|quantitative|Import Volume
[31mimport matplotlib.pyplot as plt<0x0A>import matplotlib.ticker as ticker<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_xlim(0, 8000)<0x0A><0x0A>ax.set_ylabel('Import Volume')<0x0A>ax.set_xlabel('Log Transformed Peak Demand During Holiday Seasons At Retail Stores')<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_xlim(0, 8000)<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_xlim(0, 8000)<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_
[32m[1mline|temporal|Smoking Rate|quantitative|Simulation Results Of Variable Interest Rates On Bond Prices
[31m## Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_color('white')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A>ax.spines['right'].set_color('white')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A>ax.spines['bottom'].set_color('
[32m[1mline|temporal|Adjusted R Squared For Linear Regression Model With Heteroscedasticity|quantitative|CO2 Emissions
[31m# Plot the linear regression model with the linear regression model<0x0A><0x0A>sns.set(style="ticks", color_codes=True)<0x0A><0x0A># Plot the linear regression model<0x0A><0x0A>sns.relplot(x="Adjusted R Squared For Linear Regression Model With Heteroscedasticity", y="CO2 Emissions", kind="line", data=df)<0x0A><0x0A># Plot the linear regression model<0x0A><0x0A>sns.relplot(x="Adjusted R Squared For Linear Regression Model With Heteroscedasticity", y="CO2 Emissions", kind="line", data=df)<0x0A><0x0A># Plot the linear regression model<0x0A><0x0A>sns.relplot(x="Adjusted R Squared For Linear Regression Model With Heteroscedasticity", y="CO2 Emissions", kind="line", data=df)<0x0A><0x0A># Plot the linear regression model<0x0A><0x0A>sns.relplot(
[32m[1mline|temporal|Time|quantitative|Probability Density Function for Reaction Time (seconds)
[31m# Plot the time series<0x0A>sns.set(style="ticks")<0x0A><0x0A># Compute the Probability Density Function for Reaction Time (seconds)<0x0A>prob_time_series_plot = smf.ols('Probability Density Function for Reaction Time (seconds)',<0x0A>                                    data=data,<0x0A>                                    order=order,<0x0A>                                    scale=1,<0x0A>                                    scale_range=1)<0x0A><0x0A># Plot the time series<0x0A>sns.set(style="ticks")<0x0A><0x0A># Compute the Probability Density Function for Reaction Time (seconds)<0x0A>prob_time_series_plot = prob_time_series_plot.fit()<0x0A><0x0A># Plot the time series<0x0A>sns.set(style="ticks")<0x0A><0x0A># Plot the time series<0x0A>sns.set(style="ticks")<0x0A><0x0A># Plot the time series<0x0A>sns.set(style="
[32m[1mcircle|quantitative|Predictive Accuracy Of Seasonal Demand Forecasting Models|quantitative|Heterogeneity In Clinical Trial Populations By Gender And Age
[31m# Scatter plot of Heterogeneity in Clinical Trials Populations by Gender and Age<0x0A><0x0A># Set the style<0x0A>plt.style.use('fivethirtyeight')<0x0A><0x0A># Set the axes<0x0A>plt.axes().set_xlim([0, 850])<0x0A>plt.axes().set_ylim([0, 65])<0x0A><0x0A># Set the axes<0x0A>plt.axes().set_ylabel('Heterogeneity In Clinical Trials Populations By Gender And Age')<0x0A>plt.axes().set_xlabel('Predictive Accuracy Of Seasonal Demand Forecasting Models')<0x0A>plt.axes().set_ylabel('Heterogeneity In Clinical Trials Populations By Gender And Age')<0x0A><0x0A># Set the grid<0x0A>plt.grid(True)<0x0A><0x0A># Plot the scatter plot<0x0A>scatter.scatter(<0x0A>    x=
[32m[1mline|temporal|Distance|quantitative|Probability Density Function Of Age Distribution In Population Survey
[31m# Plot the Distance vs Probability Density Density Function of Age Distribution in Population Survey<0x0A><0x0A>sns.set_context("paper", rc={"font.size":16,"axes.titlesize":16,"axes.labelsize":16})<0x0A><0x0A># Plot the Distance vs Probability Density Density Function of Age Distribution in Population Survey<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.set_xlabel("Distance")<0x0A>ax.set_ylabel("Probability Density Density Function OF Age Distribution
[32m[1mcircle|quantitative|Growth Rate|quantitative|GDP
[31m# Declare a function to calculate the mean growth rate of a country<0x0A>def cu_mean_growth_rate(country, country_name, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate, mean_growth_rate,
[32m[1mline|temporal|Mental Health|quantitative|Import Volume
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A># Draw a horizontal bar graph<0x0A>sns.barplot(x='Mental Health', y='Import Volume', data=df)<0x0A><0x0A># Add a vertical line at the end of the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Set up the x-axis label<0x0A>ax.set_xlabel('Mental Health')<0x0A>ax.set_ylabel('Import Volume')<0x0A><0x0A># Save the figure<0x0A>plt.tight_layout()<0x0A>plt.show()
[32m[1mcircle|quantitative|Assessment Of Healthcare Utilization Rates By Demographic Groups|quantitative|Relative Risk Assessment Of Health Outcomes In Demographic Studies
[31m# Plot the relationship between relative risk and assessment of healthcare utilization rates by demographic groups<0x0A><0x0A>plt.figure(figsize=(10,10))<0x0A>plt.scatter(df_healthcare['Relative Risk'], df_healthcare['Assessment of Healthcare Utilization Rates By Demographic Groups'], alpha=0.7)<0x0A>plt.xlabel('Assessment Of Healthcare Utilization Rates By Demographic Groups')<0x0A>plt.ylabel('Relative Risk Assessment Of Health Outcomes In Demographic Studies')<0x0A>plt.ylim(0,400)<0x0A>plt.xlim(0,2000)<0x0A>plt.show()
[32m[1mbar|nominal|Mortality Rate|quantitative|Poverty Rate
[31mfig = plt.figure(figsize=(10,10))<0x0A>ax1 = fig.add_subplot(1,2,1)<0x0A>ax2 = fig.add_subplot(1,2,2)<0x0A><0x0A>#ax1.set_ylim(0,3000)<0x0A>#ax1.set_ylimit(-0.1, 3000)<0x0A>#ax1.set_xlim(0,3000)<0x0A>#ax1.set_xlabel('Mortality Rate')<0x0A>#ax1.set_ylabel('Poverty Rate')<0x0A>#ax1.set_xticks(np.arange(0, 4000, 200))<0x0A>#ax1.set_xticklabels(["Dog", "Nike", "Red", "USA"])<0x0A>#ax1.set_x
[32m[1mline|temporal|Impact Of Temperature Variability On Crop Yield Statistics|quantitative|Detrended Analysis Of Yearly Weather Anomalies In Temperature Data
[31m# Plot the results as a line plot<0x0A>plt.figure(figsize=(10,10))<0x0A><0x0A># Plot the results as a line plot<0x0A>plt.plot(x, y)<0x0A><0x0A># Add a title and axis labels<0x0A>plt.ylabel('Dtended Analysis Of Yearly Weather In Normalies In Temperature Data')<0x0A>plt.xlabel('Impact Of Temperature Variability On Crop Yield Statistics')<0x0A><0x0A># Add a title and axis labels<0x0A>plt.yticks(np.arange(0, 6000, 1000))<0x0A><0x0A># Add a title and axis labels<0x0A>plt.yticks(np.arange(0, 6000, 1000))<0x0A><0x0A># Add a legend<0x0A>plt.legend(fontsize=10)<0x0A><0x0A># Add a title and axis labels<0x0A>plt.
[32m[1mline|temporal|Manufacturing Output|quantitative|Fuel Consumption
[31m# Plot the consumption of fuel in the future<0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A>ax.plot(df['Manufacturing Output'],df['Consumption'],linewidth=0.5)<0x0A>ax.set_ylim(0,50000)<0x0A>ax.set_xlabel('Manufacturing Output')<0x0A>ax.set_ylabel('Fuel Consumption')<0x0A>ax.set_yticks(np.arange(0,5000,5))<0x0A>ax.set_yticklabels(df['Country Name'])<0x0A>ax.set_yticklabels(df['Country Name'])<0x0A>ax.grid(False)<0x0A>ax.set_ylim(0,5000)<0x0A>ax.set_yticklabels(df['Country Name'])<0x0A>ax.set_ylim(0,
[32m[1mcircle|quantitative|Literacy Rate|quantitative|Export Volume
[31m# Plot the graph<0x0A>sns.lmplot(x="Literacy Rate", y="Epcnt Volume", data=df, fit_reg=False, size=7, aspect=1.5)<0x0A>plt.xlim(0,5000)<0x0A>plt.ylim(0,650)<0x0A>plt.xlabel("Literacy Rate")<0x0A>plt.ylabel("Epcnt Volume")<0x0A>plt.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 1.0 [35m|
100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:47<00:00,  2.36s/it]








 95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä     | 19/20 [00:16<00:00,  1.53it/s]
[35m|[39m JSON to Vega conversion error rate: [31m75.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.25 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.9 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.75 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mline|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
[31mpropagation_bar(year_prop, consumption_prop, consumption_prop_medal, consumption_prop_medal, consumption_prop_medal, save=False)
[32m[1mline|temporal|Year|quantitative|Number of meetings(average for affected firms)
Year|temporal|Year|quantitative|Number of meetings/vens of firms
[32m[1mline|temporal|Year|quantitative|Number of days
[31mYear|temporal|Number of days
[32m[1mline|temporal|Year|quantitative|% of children under 5 taken to a health provider
[31mgrupoUFACT['Year'] = grupoUFACT['Year'].astype(str)<0x0A>proposalUFACT['Year'] = round(proposalUFACT['Year'].astype(str)/200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
[32m[1mline|temporal|Year|quantitative|% of firms
[31mgrouped_year_proporal[['Year','% of firms']].plot(kind='line',figsize=(20,30),fontsize=20)
[32m[1mbar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
Year|temporal|Year|quantitative|Electric power consumption (kWh per capita)
[32m[1mbar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commerical service exports)
[31mCroppedGraph(dropna=False, columns=['Year'])
[32m[1mbar|nominal|Country|quantitative|Number of tractors
[31mgrouped_country_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa_prop_usa
[32m[1mbar|temporal|Year|quantitative|Amount of energy used(kg of oil equivalent per capita)
[31meste(['Year','Amount of energy used (kg of air capacity)'])
[32m[1mbar|temporal|Year|quantitative|Number of days
[31mYear|Number of days
[32m[1mbar|temporal|Year|quantitative|Savings (current US$)
[31mYear|temporal|Savage (current US$)
[32m[1mbar|temporal|Year|quantitative|Land (in sq. km)
[31mgraffitiVisual[['Year']].groupby(['Year']).sum().plot(kind='bar',figsize=(20,30),legend=False)<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Land (in kg km)')
[32m[1mbar|nominal|Country|quantitative|Cost (as % of GNI)
[31mCountry|Cost (os % of GNI)
[32m[1mbar|nominal|Country|quantitative|Average number of days
[31mbaggage_number_days = []<0x0A><0x0A>country_gender_days = []<0x0A><0x0A>average_number_days = []<0x0A><0x0A>average_number_days.append(average_number_days)<0x0A><0x0A>country_gender_days.append(country_gender_days)<0x0A><0x0A>average_number_days.append(average_number_days)<0x0A><0x0A>average_number_days.append(average_number_days)<0x0A><0x0A>average_number_days.append(average_number_days)<0x0A><0x0A>average_number_days.append(average_number_days)<0x0A><0x0A>average_number_days.append(average_number_days)<0x0A><0x0A>average_number_days.append(average_number_days)<0x0A><0x0A>average_number_days.append(average_number_days)<0x0A><0x0A>average_number_days.append(average_number_days)<0x0A><0x0A>average_number_days.append(average_number_
[32m[1mbar|nominal|Country|quantitative|Prive value of exports (constant LCU)
[31mcountry_plot = plot_country.plot(x='Country', kind='bar', figsize=(15, 20), color='black')<0x0A>country_plot.set_xlabel('Country')<0x0A>country_plot.set_ylabel('Prew value of exports (constant L210)')<0x0A>country_plot.grid(axis='y', alpha=0.2)<0x0A>country_plot.set_title('Current value of exports of goods and services in countries deflated by the Import price index index')<0x0A>country_plot.set_ylim(ymin=0)<0x0A>country_plot.set_xlabel('Country')<0x0A>country_plot.set_ylabel('Prew value of exports (constant L210)')<0x0A>country_plot.grid(axis='y', alpha=0.2)<0x0A>country_plot.set_ylim(
[32m[1mbar|temporal|Year|quantitative|Total reserves (current US$)
Year|temporal|Year|quantitative|Total reserves (current US$)
[32m[1mcircle|temporal|Year|quantitative|Unemployed males(% of male labor force ages 15-24)
Year|temporal|Year|quantitative|Unemployed male % of male labor force spent 15-24)
[32m[1mcircle|temporal|Year|quantitative|Mean income or consumption per capita(2011 PPP $ per day)
Year|temporal|Year|quantitative|Mean income or consumption per capita (Q11 (population per day)
[32m[1mcircle|temporal|Year|quantitative|Savings (current US$)
[31mYear|temporal|Savings earned US$
[32m[1mcircle|temporal|Year|quantitative|Value added (current Local Currency Unit)
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.25 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.9 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.75 [35m|

100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:19<00:00,  1.03it/s]

































model.safetensors: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 1.13G/1.13G [01:05<00:00, 17.4MB/s]
[36m[1mEpoch :[39m[22m 16 [32m[1m | Loss :[39m[22m 4.826383113861084
[36m[1mEpoch :[39m[22m 17 [32m[1m | Loss :[39m[22m 4.777768135070801
[36m[1mEpoch :[39m[22m 18 [32m[1m | Loss :[39m[22m 4.746668815612793
[36m[1mEpoch :[39m[22m 19 [32m[1m | Loss :[39m[22m 4.759491443634033
[36m[1mEpoch :[39m[22m 20 [32m[1m | Loss :[39m[22m 4.7113847732543945

















 95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä     | 19/20 [00:44<00:02,  2.12s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mcircle|quantitative|Mode Age|quantitative|Alcohol Consumption
[31m# Create a scatter plot of Mode Age versus Alcohol Consumption<0x0A>sns.lmplot(x='Mode Age', y='Alcohol Consumption', data=df, fit_reg=False, height=7, aspect=1, scatter_kws={'s':70})
[32m[1mbar|nominal|Water Usage|quantitative|CO2 Emissions
[31m# Plot the data<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A># Draw a nested barplot to show bills by day and time<0x0A>ax.bar(df['Water Usage'], df['CO2 Emissions'])<0x0A><0x0A># Set up the x-axis label<0x0A>ax.set_xlabel('Water Usage')<0x0A><0x0A># Set up the y-axis label<0x0A>ax.set_ylabel('CO2 Emissions')<0x0A><0x0A># Set up the y-axis tick labels<0x0A>ax.set_yticklabels(['0,000','0,000','0,000','0,000','0,000','0,000','0,000','0,000
[32m[1mbar|nominal|Consumer Price Index|quantitative|Kurtosis And Skewness Of Annual Corporate Profit Margins
[31mfig = plt.figure(figsize=(10,10))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Generate a bar plot showing the kurtosis and skewness of annual corporate profit margins<0x0A>ax.bar(df_kurtosis_annual_corporate_profit_margins.index, df_kurtosis_annual_corporate_profit_margins.values, color='#003366', alpha=0.75)<0x0A>ax.set_xticklabels(df_kurtosis_annual_corporate_profit_margins.index, rotation=90)<0x0A>ax.set_yticklabels(df_kurtosis_annual_corporate_profit_margins.index, rotation=0)<0x0A><0x0A># Add a mean line to the plot<0x0A>ax.axvline(x=df_kurtosis
[32m[1mbar|nominal|Range|quantitative|Participation Rate
[31m# Create a bar chart of average participation rate across all 50 states<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A># Draw a nested barplot to show average participation rate across all 50 states<0x0A>ax.bar(range(50), participation_rate_by_state.values(), width=0.5)<0x0A><0x0A># Set up the x-axis label<0x0A>ax.set_xlabel("Range")<0x0A><0x0A># Set up the y-axis label<0x0A>ax.set_ylabel("Participation Rate")<0x0A><0x0A># Set up the grid<0x0A>ax.grid(linestyle='dashdot', linewidth=0.5)<0x0A><0x0A># Add the legend<0x0A>ax.legend(prop={'size': 12})<0x0A><0x0A># Save the figure<0x0A>plt.savefig("barchart
[32m[1mbar|nominal|Median Household Income Indexed By Regional Inflation Rates|quantitative|Bond Yield
[31m# Plotting the graph<0x0A><0x0A># Compute the correlation matrix<0x0A>corr = df.corr()<0x0A><0x0A># Generate a mask for the upper triangle<0x0A>mask = np.zeros_like(corr, dtype=np.bool)<0x0A>mask[np.triu_indices_from(mask)] = True<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(10, 15))<0x0A><0x0A># Generate a custom diverging colormap<0x0A>cmap = sns.diverging_palette(220, 10, as_cmap=True)<0x0A><0x0A># Draw the heatmap with the mask and correct aspect ratio<0x0A>sns.heatmap(corr, mask=mask, cmap=cmap, vmax=155, square=True, annot=True, fmt='d', cbar=False
[32m[1mbar|nominal|Cost|quantitative|Quantile Regression Estimates Of Salary By Experience Level
[31mfig = plt.figure(figsize=(8,8))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Create a bar plot of the Salary by Experience Level<0x0A>sns.barplot(x='Cost', y='Salary', data=Salary_by_Experience_Level, ax=ax)<0x0A><0x0A># Add a title and axis labels<0x0A>ax.set_title('Salary by Experience Level')<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a ytick label<0x0A>ax.yaxis.set_major_locator(mticker.MultipleLocator(1))<0x0A>ax.yaxis.set_major_formatter(mticker.ScalarFormatter())<0x0A><0x0A># Add a xtick label<0x0A>ax
[32m[1mcircle|quantitative|Height|quantitative|Speed
[31mheights = df.groupby('Height').mean()<0x0A>heights.plot(kind='scatter', x='Height', y='Speed', alpha=0.8, figsize=(10,10))<0x0A>plt.show()
[32m[1mcircle|quantitative|Log Transformed Peak Demand During Holiday Seasons At Retail Stores|quantitative|Import Volume
[31mimport matplotlib.pyplot as plt<0x0A>import matplotlib.ticker as ticker<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10, 15))<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_xlim(0, 8000)<0x0A><0x0A>ax.set_ylabel('Import Volume')<0x0A>ax.set_xlabel('Log Transformed Peak Demand During Holiday Seasons At Retail Stores')<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_xlim(0, 8000)<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_xlim(0, 8000)<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1mline|temporal|Smoking Rate|quantitative|Simulation Results Of Variable Interest Rates On Bond Prices
[31m## Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_color('white')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A>ax.spines['right'].set_color('white')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A>ax.spines['bottom'].set_color('
[32m[1mline|temporal|Adjusted R Squared For Linear Regression Model With Heteroscedasticity|quantitative|CO2 Emissions
[31m# Plot the linear regression model with the linear regression model<0x0A><0x0A>sns.set(style="ticks", color_codes=True)<0x0A><0x0A># Plot the linear regression model<0x0A><0x0A>sns.relplot(x="Adjusted R Squared For Linear Regression Model With Heteroscedasticity", y="CO2 Emissions", kind="line", data=df)<0x0A><0x0A># Plot the linear regression model<0x0A><0x0A>sns.relplot(x="Adjusted R Squared For Linear Regression Model With Heteroscedasticity", y="CO2 Emissions", kind="line", data=df)<0x0A><0x0A># Plot the linear regression model<0x0A><0x0A>sns.relplot(x="Adjusted R Squared For Linear Regression Model With Heteroscedasticity", y="CO2 Emissions", kind="line", data=df)<0x0A><0x0A># Plot the linear regression model<0x0A><0x0A>sns.relplot(
[32m[1mline|temporal|Time|quantitative|Probability Density Function for Reaction Time (seconds)
[31m# Plot the time series<0x0A>sns.set(style="ticks")<0x0A><0x0A># Compute the Probability Density Function for Reaction Time (seconds)<0x0A>prob_time_series_plot = smf.ols('Probability Density Function for Reaction Time (seconds)',<0x0A>                                    data=data,<0x0A>                                    order=order,<0x0A>                                    scale=1,<0x0A>                                    scale_range=1)<0x0A><0x0A># Plot the time series<0x0A>sns.set(context="talk", style="ticks",<0x0A>                                     ylim=(0, 250),<0x0A>                                     xlim=(1, 1860),<0x0A>                                     ylabel='Probability Density Density Function for Reaction Time (seconds)')<0x0A><0x0A># Plot the time series<0x0A>sns.set(context="talk", style="ticks",<0x0A>                                     ylim=(0
[32m[1mcircle|quantitative|Predictive Accuracy Of Seasonal Demand Forecasting Models|quantitative|Heterogeneity In Clinical Trial Populations By Gender And Age
[31m# Scatter plot of predicted accuracy of seasonal demand forecasting models and heterogeneity in clinical trial populations by gender and age<0x0A><0x0A># Set the style<0x0A>plt.style.use('fivethirtyeight')<0x0A><0x0A># Set the figure size<0x0A>plt.figure(figsize=(10,10))<0x0A><0x0A># Set the axes<0x0A>plt.xlim(0,850)<0x0A>plt.ylim(0,65)<0x0A><0x0A># Set the axes<0x0A>plt.axes().set_xlim(0,850)<0x0A>plt.xlabel('Predictive Accuracy Of Seasonal Demand Forecasting Models')<0x0A>plt.ylabel('Heterogeneity In Clinical Trial Populations By Gender And Age')<0x0A><0x0A># Set the grid<0x0A>plt.grid(True, linewidth=0.5, color='0.5', alpha=0.5)<0x0A><0x0A>
[32m[1mline|temporal|Distance|quantitative|Probability Density Function Of Age Distribution In Population Survey
[31m# Plot the Distance vs Probability Density Density Function of Age Distribution in Population Survey<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A># Plot the Distance vs Probability Density Density Function of Age Distribution in Population Survey<0x0A>sns.lineplot(x="Distance", y="Probability Density Density Function of Age Distribution in Population Survey", data=PopSurvey)<0x0A><0x0A># Set up the axes labels<0x0A>ax.set(xlabel="Distance", ylabel="Probability Density Density Function of Age Distribution in Population Survey")<0x0A><0x0A># Add a title<0x0A>ax.set(ylim=(0, 600))<0x0A><0x0A># Add a title<0x0A>ax.set(xlabel="Distance", ylabel="Probability Density Density Density Function of Age Distribution in Population Survey")<0x0A><0x0A># Add a legend<0x0A>ax.legend()<0x0A><0x0A>
[32m[1mcircle|quantitative|Growth Rate|quantitative|GDP
[31mscatterplot = plt.figure(figsize=(10,12))<0x0A>ax = scatterplot.add_subplot(111)<0x0A>ax.set_xlim(0, 5)<0x0A>ax.set_ylim(0, 80)<0x0A>ax.set_xlabel('Growth Rate')<0x0A>ax.set_ylabel('GDP')<0x0A>ax.set_yticks(np.arange(0, 90, step=1))<0x0A>ax.set_yticklabels(['0', '1,000', '2,000', '3,000', '4,000', '5,000'])<0x0A>ax.set_yticklabels(['0', '1,000', '2,000', '3,
[32m[1mline|temporal|Mental Health|quantitative|Import Volume
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['bottom'].set_position('zero')<0x0A>ax.spines['top'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['bottom'].set_position('zero')<0x0A><0x0A>ax.spines['left'].set_position('zero')<0x0A>ax.spines['left'].set_position('zero')<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A>ax.spines['right'].set_linewidth(1)<0x0A><0x0A>ax.spines['left'].set
[32m[1mcircle|quantitative|Assessment Of Healthcare Utilization Rates By Demographic Groups|quantitative|Relative Risk Assessment Of Health Outcomes In Demographic Studies
[31m# Plot the relationship between relative risk and assessment of healthcare utilization rates by demographic groups<0x0A><0x0A>plt.figure(figsize=(10,10))<0x0A>plt.scatter(df_healthcare['relative_risk'], df_healthcare['assessment_utilization_rates'], alpha=0.7)<0x0A>plt.xlabel('Assessment Of Healthcare Utilization Rates By Demographic Groups')<0x0A>plt.ylabel('Relative Risk Assessment Of Health Outcomes In Demographic Studies')<0x0A>plt.ylim(0,400)<0x0A>plt.xlim(0,2000)<0x0A>plt.show()
[32m[1mbar|nominal|Mortality Rate|quantitative|Poverty Rate
[31mfig = plt.figure(figsize=(10,10))<0x0A>ax1 = fig.add_subplot(1,2,1)<0x0A>ax2 = fig.add_subplot(1,2,2)<0x0A><0x0A>#ax1.set_ylim(0,3000)<0x0A>ax1.bar(df['Mortality Rate'], df['Poverty Rate'])<0x0A>ax1.set_xlabel('Mortality Rate')<0x0A>ax1.set_ylabel('Poverty Rate')<0x0A><0x0A>#ax2.set_ylim(0,3000)<0x0A>ax2.bar(df['Mortality Rate'], df['Poverty Rate'])<0x0A>ax2.set_xlabel('Mortality Rate')<0x0A>ax2.set_ylabel('Poverty Rate')<0x0A><0x0A>#ax2.set_ylim(
[32m[1mline|temporal|Impact Of Temperature Variability On Crop Yield Statistics|quantitative|Detrended Analysis Of Yearly Weather Anomalies In Temperature Data
[31m# Plot the results as a line plot<0x0A>plt.figure(figsize=(10,10))<0x0A><0x0A># Plot the results as a bar graph<0x0A>plt.bar(x=temp_data.index,height=temp_data.values)<0x0A><0x0A># Add a title to the chart<0x0A>plt.title('Impact Of Temperature Variability On Crop Yield Statistics')<0x0A><0x0A># Add a legend<0x0A>plt.legend()<0x0A><0x0A># Add a limit for the x axis<0x0A>plt.xlim(1,1814)<0x0A><0x0A># Add a y limit for the x axis<0x0A>plt.ylim(0,6000)<0x0A><0x0A># Add a y limit for the y axis<0x0A>plt.ylim(0,6000)<0x0A><0x0A># Add a y limit for the x axis<0x0A>plt.xlim(1,1814)<0x0A><0x0A># Add
[32m[1mline|temporal|Manufacturing Output|quantitative|Fuel Consumption
[31m# Plot the graph<0x0A>plt.figure(figsize=(10,10))<0x0A>plt.plot(df['Manufacturing Output'],df['Fuel Consumption'])<0x0A>plt.ylim(0,5)<0x0A>plt.xlabel('Manufacturing Output')<0x0A>plt.ylabel('Fuel Consumption')<0x0A>#plt.savefig('figs/fig2.png', dpi=300)<0x0A>plt.show()
[32m[1mcircle|quantitative|Literacy Rate|quantitative|Export Volume
[31m# Plot the graph<0x0A>sns.set(style="ticks")<0x0A><0x0A>g = sns.relplot(x="Literacy Rate", y="Epcnt Volume",<0x0A>                   data=df,<0x0A>                   height=6,<0x0A>                   palette="muted",<0x0A>                   kind="scatter",<0x0A>                   height=6,<0x0A>                   aspect=1.5,<0x0A>                   kind="scatter",<0x0A>                   color="steelblue",<0x0A>                   alpha=.8,<0x0A>                   linewidth=.5,<0x0A>                   height=6,<0x0A>                   data=df)<0x0A><0x0A>g.set(xlim=(0,5000))<0x0A>g.set(ylim=(0,600))<0x0A><0x0A>g.set(xlabel="Literacy Rate", ylabel="Epcnt Volume")<0x0A>
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 1.0 [35m|
100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:47<00:00,  2.37s/it]
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)


 85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé               | 17/20 [00:05<00:00,  3.04it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.24 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.94 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mline|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
bar|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
[32m[1mline|temporal|Year|quantitative|Number of meetings(average for affected firms)
bar|temporal|Year|quantitative|Number of meetings/vens of firms
[32m[1mline|temporal|Year|quantitative|Number of days
bar|temporal|Year|quantitative|Number of days
[32m[1mline|temporal|Year|quantitative|% of children under 5 taken to a health provider
bar|temporal|Year|quantitative|% of children under 5 taken to a health provider
[32m[1mline|temporal|Year|quantitative|% of firms
bar|temporal|Year|quantitative|% of firms
[32m[1mbar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
bar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
[32m[1mbar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commerical service exports)
bar|temporal|Year|quantitative|Cost of communications and computers, communications and other services (% of commercial service exports of Faeroe Islands)
[32m[1mbar|nominal|Country|quantitative|Number of tractors
bar|nominal|Country|quantitative|Number of tractors
[32m[1mbar|temporal|Year|quantitative|Amount of energy used(kg of oil equivalent per capita)
bar|temporal|Year|quantitative|Amount of energy used(kg of al equivalent (px capital)
[32m[1mbar|temporal|Year|quantitative|Number of days
bar|temporal|Year|quantitative|Number of days
[32m[1mbar|temporal|Year|quantitative|Savings (current US$)
bar|temporal|Year|quantitative|Savings (current US$)
[32m[1mbar|temporal|Year|quantitative|Land (in sq. km)
bar|temporal|Year|quantitative|Land (in kg km)
[32m[1mbar|nominal|Country|quantitative|Cost (as % of GNI)
bar|nominal|Country|quantitative|Cost (os % of GNI)
[32m[1mbar|nominal|Country|quantitative|Average number of days
bar|nominal|Country|quantitative|Average number of days
[32m[1mbar|nominal|Country|quantitative|Prive value of exports (constant LCU)
bar|nominal|Country|quantitative|Prew value of exports (constant L210)
[32m[1mbar|temporal|Year|quantitative|Total reserves (current US$)
bar|temporal|Year|quantitative|Total reserves (current US$)
[32m[1mcircle|temporal|Year|quantitative|Unemployed males(% of male labor force ages 15-24)
bar|temporal|Year|quantitative|Unemployed male % of male labor force spent (5-24)
[32m[1mcircle|temporal|Year|quantitative|Mean income or consumption per capita(2011 PPP $ per day)
bar|temporal|Year|quantitative|Mean income or consumption per capita (Q11 (population per day)
[32m[1mcircle|temporal|Year|quantitative|Savings (current US$)
bar|temporal|Year|quantitative|Savings (current US$)
[32m[1mcircle|temporal|Year|quantitative|Value added (current Local Currency Unit)
bar|temporal|Year|quantitative|Value added (current Local Currency Unit)
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.24 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.94 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|
100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:06<00:00,  3.16it/s]
README.md: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 5.18k/5.18k [00:00<00:00, 6.75MB/s]




























model.safetensors: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 1.13G/1.13G [00:56<00:00, 20.1MB/s]
[36m[1mEpoch :[39m[22m 21 [32m[1m | Loss :[39m[22m 4.6593403816223145
[36m[1mEpoch :[39m[22m 22 [32m[1m | Loss :[39m[22m 4.636432647705078
[36m[1mEpoch :[39m[22m 23 [32m[1m | Loss :[39m[22m 4.611849784851074
[36m[1mEpoch :[39m[22m 24 [32m[1m | Loss :[39m[22m 4.551239490509033
[36m[1mEpoch :[39m[22m 25 [32m[1m | Loss :[39m[22m 4.503204822540283


















 95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä     | 19/20 [00:44<00:02,  2.18s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mcircle|quantitative|Mode Age|quantitative|Alcohol Consumption
[31m# Plot the data<0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A># Draw a scatter plot of Mode Age versus Alcohol Consumption<0x0A>sns.lmplot('Mode Age', 'Alcohol Consumption', <0x0A>           data=df, <0x0A>           fit_reg=False, <0x0A>           size=10, <0x0A>           scatter_kws={"s": 70})<0x0A><0x0A># Set up the axes<0x0A>plt.grid(b=True, which='major', color='grey', linewidth=1)<0x0A><0x0A># Add axis labels<0x0A>plt.xlabel('Mode Age')<0x0A>plt.ylabel('Alcohol Consumption')<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1mbar|nominal|Water Usage|quantitative|CO2 Emissions
[31m# Plot the data<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A># Draw a nested barplot to show bills by day and time<0x0A>ax.bar(df['Water Usage'], df['CO2 Emissions'])<0x0A><0x0A># Set up the x-axis label<0x0A>ax.set_xlabel('Water Usage')<0x0A><0x0A># Set up the y-axis label<0x0A>ax.set_ylabel('CO2 Emissions')<0x0A><0x0A># Set up the legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Set up the y-axis<0x0A>ax.yaxis.set_ticks_position('both')<0x0A><0x0A># Set up the x-axis label<0x0A>ax.set_xlabel
[32m[1mbar|nominal|Consumer Price Index|quantitative|Kurtosis And Skewness Of Annual Corporate Profit Margins
[31mfig = plt.figure(figsize=(10,10))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Generate a bar plot showing the kurtosis and skewness of annual corporate profit margins<0x0A>ax.bar(df_kurtosis_annual_corporate_profit_margins.index, df_kurtosis_annual_corporate_profit_margins.values, color='#003366', alpha=0.75)<0x0A>ax.set_xticklabels(df_kurtosis_annual_corporate_profit_margins.index, rotation=90)<0x0A>ax.set_yticklabels(df_kurtosis_annual_corporate_profit_margins.index, rotation=0)<0x0A><0x0A># Add a mean line to the plot<0x0A>ax.axvline(x=df_kurtosis
[32m[1mbar|nominal|Range|quantitative|Participation Rate
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A># Set up the matplotlib figure<0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Generate a bar plot of average participation rate versus number of participants<0x0A>ax.bar(range, participation_rate)<0x0A><0x0A># Set up the x-axis label<0x0A>ax.set_xlabel("Range")<0x0A><0x0A># Set up the y-axis label<0x0A>ax.set_ylabel("Participation Rate")<0x0A><0x0A># Set up the grid<0x0A>ax.grid(linestyle='dashdot', linewidth=0.5, alpha=0.5)<0x0A><0x0A># Add the legend<0x0A>ax.legend(prop={'size': 12})<0x0A><0x0A># Save the figure<0x0A>plt
[32m[1mbar|nominal|Median Household Income Indexed By Regional Inflation Rates|quantitative|Bond Yield
[31m# Plotting the graph<0x0A><0x0A># Compute the correlation matrix<0x0A>corr = df.corr()<0x0A><0x0A># Generate a mask for the upper triangle<0x0A>mask = np.zeros_like(corr, dtype=np.bool)<0x0A>mask[np.triu_indices_from(mask)] = True<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(10, 15))<0x0A><0x0A># Generate a custom diverging colormap<0x0A>cmap = sns.diverging_palette(220, 10, as_cmap=True)<0x0A><0x0A># Draw the heatmap with the mask and correct aspect ratio<0x0A>sns.heatmap(corr, mask=mask, cmap=cmap, vmax=1.5, center=0,<0x0A>            square=True, linewidths=.5, c
[32m[1mbar|nominal|Cost|quantitative|Quantile Regression Estimates Of Salary By Experience Level
[31mfig = plt.figure(figsize=(8,8))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Create a bar plot of the Salary by Experience Level<0x0A>sns.barplot(x='Cost', y='Salary', data=Salary_by_Experience_Level, ax=ax)<0x0A><0x0A># Add a title and axis labels<0x0A>ax.set_title('Salary by Experience Level')<0x0A><0x0A># Add a y-axis label<0x0A>ax.set_ylabel('Salary by Experience Level')<0x0A><0x0A># Add a y-axis limit<0x0A>ax.set_ylim(0, 13)<0x0A><0x0A># Add a y-axis limit<0x0A>ax.set_ylim(0, 13)<0x0A><0x0A># Add a y-axis limit<0x0A>ax.set_ylim(0, 13)<0x0A><0x0A># Add a
[32m[1mcircle|quantitative|Height|quantitative|Speed
[31mheights = df.groupby('Height').mean()<0x0A>heights.plot(kind='scatter', x='Height', y='Speed', alpha=0.8, figsize=(10,10))<0x0A>plt.show()
[32m[1mcircle|quantitative|Log Transformed Peak Demand During Holiday Seasons At Retail Stores|quantitative|Import Volume
[31mborder = {'Log Transformed Peak Demand During Holiday Seasons At Retail Stores': 'Log Transformed Peak Demand During Holiday Seasons At Retail Stores', 'Import Volume': 'Log Transformed Peak Demand During Holiday Seasons At Retail Stores'}<0x0A><0x0A># Set up the graph<0x0A>fig, ax = plt.subplots(figsize=(10, 15))<0x0A><0x0A># Draw the graph<0x0A>ax.scatter(x=df['Log Transformed Peak Demand During Holiday Seasons At Retail Stores'], y=df['Import Volume'])<0x0A><0x0A># Set up the x-axis<0x0A>ax.set_xlim(0, 400)<0x0A><0x0A># Draw the graph<0x0A>ax.set_ylim(0, 400)<0x0A><0x0A># Set up the axes<0x0A>ax.set_xlabel('Log Transformed Peak Demand During Holiday Seasons At Retail Stores')<0x0A>ax.set_ylabel
[32m[1mline|temporal|Smoking Rate|quantitative|Simulation Results Of Variable Interest Rates On Bond Prices
[31m## Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A>ax.spines['bottom'].set_color
[32m[1mline|temporal|Adjusted R Squared For Linear Regression Model With Heteroscedasticity|quantitative|CO2 Emissions
[31m# Plot the data<0x0A><0x0A># Set up the graph<0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A># Plot the data<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot the data<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A># Plot the data<0x0A>ax.spines['left'].
[32m[1mline|temporal|Time|quantitative|Probability Density Function for Reaction Time (seconds)
[31m# Plot the time series<0x0A>sns.set(context="paper", style="ticks", palette="muted")<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>ax = sns.lineplot(x="Time", y="Probability Density Density Function for Reaction Time (seconds)", data=df_time_series,<0x0A>                 palette=sns.color_palette("muted", 10))<0x0A><0x0A>ax.set(xlabel="Time", ylabel="Probability Density Density Function for Reaction Time (seconds)")<0x0A><0x0A>sns.despine()
[32m[1mcircle|quantitative|Predictive Accuracy Of Seasonal Demand Forecasting Models|quantitative|Heterogeneity In Clinical Trial Populations By Gender And Age
[31m# Scatter plot of predicted accuracy of seasonal demand forecasting models and heterogeneity in clinical trial populations by gender and age<0x0A><0x0A># Set the figure size<0x0A>plt.rcParams['figure.figsize'] = 10, 10<0x0A><0x0A># Set the y limits<0x0A>plt.ylim(0, 75)<0x0A><0x0A># Set the x limits<0x0A>plt.xlim(0, 850)<0x0A><0x0A># Set the y limits<0x0A>plt.ylim(0, 75)<0x0A><0x0A># Set the limits<0x0A>plt.xlim(0, 850)<0x0A><0x0A># Set the y limits<0x0A>plt.ylim(0, 75)<0x0A><0x0A># Set the x limits<0x0A>plt.xlim(0, 850)<0x0A><0x0A># Set the y limits<0x0A>plt.ylim(0, 75)<0x0A><0x0A># Set the
[32m[1mline|temporal|Distance|quantitative|Probability Density Function Of Age Distribution In Population Survey
[31m# Plot the Distance between the two variables<0x0A><0x0A># Plot the Probability Density Density Function of Age Distribution in Population Survey<0x0A><0x0A># Plot the Probability Density Density Function of Age Distribution in Population Survey<0x0A><0x0A># Plot the Probability Density Density Function of Age Distribution in Population Survey<0x0A><0x0A># Plot the Probability Density Density Function of Age Distribution in Population Survey<0x0A><0x0A># Plot the Probability Density Density Function of Age Distribution in Population Survey<0x0A><0x0A># Plot the Probability Density Density Function of Age Distribution in Population Survey<0x0A><0x0A># Plot the Probability Density Density Function of Age Distribution in Population Survey<0x0A><0x0A># Plot the Probability Density Density Function of Age Distribution in Population Survey<0x0A><0x0A># Plot the Probability Density Density Function of Age Distribution in Population Survey<0x0A><0x0A># Plot the Probability Density Density Function of Age Distribution in Population Survey<0x0A><0x0A># Plot the Probability Density Density Function of Age Distribution in Population Survey<0x0A><0x0A># Plot the Probability Density Density Function of Age Distribution in Population Survey<0x0A><0x0A># Plot the Probability Density Density Function of Age
[32m[1mcircle|quantitative|Growth Rate|quantitative|GDP
[31mscatterplot = plt.figure(figsize=(10,12))<0x0A>ax = scatterplot.add_subplot(111)<0x0A>ax.set_xlim(0, 5)<0x0A>ax.set_ylim(0, 80)<0x0A>ax.set_xlabel('Growth Rate')<0x0A>ax.set_ylabel('GDP')<0x0A>ax.set_yticks(np.arange(0, 90, step=10))<0x0A>ax.set_yticklabels(['0', '1,000', '2,000', '3,000', '4,000', '5,000'])<0x0A>ax.set_yticklabels(['0', '1,000', '2,000', '3
[32m[1mline|temporal|Mental Health|quantitative|Import Volume
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['bottom'].set_position('zero')<0x0A>ax.spines['top'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['bottom'].set_position('zero')<0x0A><0x0A>ax.spines['left'].set_position('zero')<0x0A>ax.spines['left'].set_position('zero')<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A>ax.spines['right'].set_linewidth(1)<0x0A><0x0A>ax.spines['left'].set
[32m[1mcircle|quantitative|Assessment Of Healthcare Utilization Rates By Demographic Groups|quantitative|Relative Risk Assessment Of Health Outcomes In Demographic Studies
[31m# Plot the relationship between relative and relative rate of assessment of healthcare utilization rates by demographic groups<0x0A><0x0A>plt.figure(figsize=(10,10))<0x0A>plt.scatter(df_healthcare['relative_rate'], df_healthcare['relative_rate'], alpha=0.5)<0x0A>plt.xlabel('Assessment Of Healthcare Utilization Rates By Demographic Groups')<0x0A>plt.ylabel('Relative Risk Assessment Of Health Outcomes In Demographic Studies')<0x0A>plt.ylim(0,400)<0x0A>plt.xlim(0,2000)<0x0A>plt.show()
[32m[1mbar|nominal|Mortality Rate|quantitative|Poverty Rate
[31mfig = plt.figure(figsize=(10,10))<0x0A>ax1 = fig.add_subplot(1,2,1)<0x0A>ax2 = fig.add_subplot(1,2,2)<0x0A><0x0A>#ax1.set_ylim(0,3000)<0x0A>ax1.bar(df_poverty_rate.index, df_poverty_rate['Poverty Rate'])<0x0A>ax1.set_xlabel('Mortality Rate')<0x0A>ax1.set_ylabel('Poverty Rate')<0x0A><0x0A>#ax2.set_ylim(0,3000)<0x0A>ax2.bar(df_military_rate.index, df_military_rate['Mortality Rate'], color='#000000')<0x0A>ax2.set_xlabel('Mortality Rate')<0x0A>
[32m[1mline|temporal|Impact Of Temperature Variability On Crop Yield Statistics|quantitative|Detrended Analysis Of Yearly Weather Anomalies In Temperature Data
[31m# Plot the results as a line plot<0x0A>plt.figure(figsize=(10,10))<0x0A><0x0A># Plot the results as a bar graph<0x0A>plt.bar(x=temp_data.index,height=temp_data.values)<0x0A><0x0A># Add a title to the chart<0x0A>plt.title('Impact Of Temperature Variability On Crop Yield Statistics')<0x0A><0x0A># Add a legend<0x0A>plt.legend()<0x0A><0x0A># Add a limit for the x axis<0x0A>plt.xlim(1,1814)<0x0A><0x0A># Add a y limit for the x axis<0x0A>plt.ylim(0,6000)<0x0A><0x0A># Add a y limit for the y axis<0x0A>plt.ylim(0,6000)<0x0A><0x0A># Add a y limit for the x axis<0x0A>plt.xlim(1,1814)<0x0A><0x0A># Add
[32m[1mline|temporal|Manufacturing Output|quantitative|Fuel Consumption
[31m# Plot the graph<0x0A>plt.figure(figsize=(10,10))<0x0A>plt.plot(df['Manufacturing Output'],df['Fuel Consumption'])<0x0A>plt.ylim(0,5)<0x0A>plt.xlabel('Manufacturing Output')<0x0A>plt.ylabel('Fuel Consumption')<0x0A>#plt.savefig('figs/fig2.png', dpi=300)<0x0A>plt.grid(True)<0x0A>#plt.savefig('fig2.png', dpi=300)<0x0A>plt.show()
[32m[1mcircle|quantitative|Literacy Rate|quantitative|Export Volume
[31m# Plot the graph<0x0A>sns.set(context="paper", style="ticks", font_scale=1.5)<0x0A><0x0A># Draw the graph<0x0A>sns.lmplot(x="Literacy Rate", y="Epcnt Volume", data=df, fit_reg=False, height=7, aspect=1.5,<0x0A>          scatter_kws={"s": 70})<0x0A><0x0A># Label the axes<0x0A>plt.xlabel("Literacy Rate")<0x0A>plt.ylabel("Epcnt Volume")<0x0A><0x0A># Show the plot<0x0A>plt.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 1.0 [35m|
100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:46<00:00,  2.30s/it]
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)



 80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                     | 16/20 [00:07<00:01,  2.96it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.44 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.92 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mline|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
line|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
[32m[1mline|temporal|Year|quantitative|Number of meetings(average for affected firms)
bar|temporal|Year|quantitative|Number of meetings/venues for officials firms
[32m[1mline|temporal|Year|quantitative|Number of days
circle|temporal|Year|quantitative|Number of days
[32m[1mline|temporal|Year|quantitative|% of children under 5 taken to a health provider
line|temporal|Year|quantitative|% of children under 5 taken to a health provider
[32m[1mline|temporal|Year|quantitative|% of firms
circle|temporal|Year|quantitative|% of firms
[32m[1mbar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
bar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
[32m[1mbar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commerical service exports)
bar|temporal|Year|quantitative|Cost of communications, computers, communications, computers, communications, computers, communications, computers, communications, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers,
[32m[1mbar|nominal|Country|quantitative|Number of tractors
bar|nominal|Country|quantitative|Number of tractors
[32m[1mbar|temporal|Year|quantitative|Amount of energy used(kg of oil equivalent per capita)
bar|temporal|Year|quantitative|Amount of energy used(kg of of equivalent (per capita)
[32m[1mbar|temporal|Year|quantitative|Number of days
bar|temporal|Year|quantitative|Number of days
[32m[1mbar|temporal|Year|quantitative|Savings (current US$)
bar|temporal|Year|quantitative|Savings (current US$)
[32m[1mbar|temporal|Year|quantitative|Land (in sq. km)
bar|temporal|Year|quantitative|Land (in kg km)
[32m[1mbar|nominal|Country|quantitative|Cost (as % of GNI)
bar|nominal|Country|quantitative|Cost (as % of GNI)
[32m[1mbar|nominal|Country|quantitative|Average number of days
bar|nominal|Country|quantitative|Average number of days
[32m[1mbar|nominal|Country|quantitative|Prive value of exports (constant LCU)
bar|nominal|Country|quantitative|Prew value of exports (constant L210)
[32m[1mbar|temporal|Year|quantitative|Total reserves (current US$)
bar|temporal|Year|quantitative|Total reserves (current US$)
[32m[1mcircle|temporal|Year|quantitative|Unemployed males(% of male labor force ages 15-24)
line|temporal|Year|quantitative|Unemployed male % of male labor force spent 15-24)
[32m[1mcircle|temporal|Year|quantitative|Mean income or consumption per capita(2011 PPP $ per day)
line|temporal|Year|quantitative|Mean income or consumption per capita (Q11 (population per day)
[32m[1mcircle|temporal|Year|quantitative|Savings (current US$)
bar|temporal|Year|quantitative|Savings (current US$)
[32m[1mcircle|temporal|Year|quantitative|Value added (current Local Currency Unit)
bar|temporal|Year|quantitative|Value added (current Local Currency Unit)
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.44 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.92 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|

100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:08<00:00,  2.31it/s]
[36m[1mEpoch :[39m[22m 26 [32m[1m | Loss :[39m[22m 4.526859283447266
[36m[1mEpoch :[39m[22m 27 [32m[1m | Loss :[39m[22m 4.4469475746154785
[36m[1mEpoch :[39m[22m 28 [32m[1m | Loss :[39m[22m 4.5014166831970215
[36m[1mEpoch :[39m[22m 29 [32m[1m | Loss :[39m[22m 4.407447338104248
[36m[1mEpoch :[39m[22m 30 [32m[1m | Loss :[39m[22m 4.3534345626831055



















 95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä     | 19/20 [00:48<00:02,  2.75s/it]
[35m|[39m JSON to Vega conversion error rate: [31m95.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.95 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mcircle|quantitative|Mode Age|quantitative|Alcohol Consumption
[31m# Plot the data<0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A># Draw a diagonal line using the function<0x0A>sns.despine(f, left=True, bottom=True)<0x0A><0x0A># Set up the axes<0x0A>sns.despine(f, left=True, bottom=True)<0x0A><0x0A># Set up the axes<0x0A>sns.despine(f, top=True, bottom=True)<0x0A><0x0A># Add axis labels<0x0A>sns.despine(f, top=True, left=True)<0x0A><0x0A># Set up the axes<0x0A>sns.despine(f, top=True, left=True)<0x0A><0x0A># Add axis labels<0x0A>sns.despine(f, top=True, left=True)
[32m[1mbar|nominal|Water Usage|quantitative|CO2 Emissions
[31m# Plot the data<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A># Draw a nested barplot to show bills by day and time<0x0A>ax.bar(x=df['Water Usage'], height=df['CO2 Emissions'])<0x0A><0x0A># Set up the x-axis label<0x0A>ax.set_xlabel('Water Usage')<0x0A><0x0A># Set up the y-axis label<0x0A>ax.set_ylabel('CO2 Emissions')<0x0A><0x0A># Set up the lable<0x0A>ax.set_lable(ylim=(0, 80000))<0x0A><0x0A># Draw a nested barplot to show bills by day and time<0x0A>ax.bar(x=df['Water Usage'], height=df['CO2 Emissions'])<0x0A><0x0A># Draw a nested barplot to show bills by day
[32m[1mbar|nominal|Consumer Price Index|quantitative|Kurtosis And Skewness Of Annual Corporate Profit Margins
[31mfig = plt.figure(figsize=(10,10))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Generate a bar plot showing the kurtosis and skewness of annual corporate profit margins<0x0A>ax.bar(df_kurtosis_annual_corporate_profit_margins.index, df_kurtosis_annual_corporate_profit_margins.kurtosis_and_skewness_of_annual_corporate_profit_margins, color='steelblue', alpha=0.75)<0x0A>ax.set_xticklabels(df_kurtosis_annual_corporate_profit_margins.index, rotation=90)<0x0A>ax.set_yticklabels(df_kurtosis_annual_corporate_profit_margins.index, rotation=0)<0x0A><0x0A># Add a mean line to the
[32m[1mbar|nominal|Range|quantitative|Participation Rate
bar|temporal|Range|quantitative|Participation Rate
[32m[1mbar|nominal|Median Household Income Indexed By Regional Inflation Rates|quantitative|Bond Yield
[31m# Plotting the graph<0x0A><0x0A># Compute the Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A>
[32m[1mbar|nominal|Cost|quantitative|Quantile Regression Estimates Of Salary By Experience Level
[31mfig = plt.figure(figsize=(8,8))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Create a bar plot of the Salary by Experience Level<0x0A>sns.barplot(x='Cost', y='Salary', data=Salary_by_Experience_Level, ax=ax)<0x0A><0x0A># Add a title and axis labels<0x0A>ax.set_title('Salary by Experience Level')<0x0A><0x0A># Add a y-axis label<0x0A>ax.set_ylabel('Salary By Experience Level')<0x0A><0x0A># Add a y-axis limit<0x0A>ax.set_ylim(0, 13)<0x0A><0x0A># Add a y-axis limit<0x0A>ax.set_ylim(0, 13)<0x0A><0x0A># Add a y-axis limit<0x0A>ax.set_ylim(0, 13)<0x0A><0x0A># Add a
[32m[1mcircle|quantitative|Height|quantitative|Speed
[31mheights = df.groupby('Height').mean()['Speed']<0x0A>heights.plot(kind='scatter', x='Height', y='Speed', alpha=0.8, figsize=(10,10))<0x0A>plt.show()
[32m[1mcircle|quantitative|Log Transformed Peak Demand During Holiday Seasons At Retail Stores|quantitative|Import Volume
[31mborder = {'Log Transformed Peak Demand During Holiday Seasons At Retail Stores': 'Log Transformed Peak Demand During Holiday Seasons At Retail Stores', 'Import Volume': 'Log Transformed Peak Demand During Holiday Seasons At Retail Stores'}<0x0A><0x0A># Plotting<0x0A>fig, ax = plt.subplots(figsize=(10, 15))<0x0A><0x0A># Plotting<0x0A>ax.scatter(x=df['Log Transformed Peak Demand During Holiday Seasons At Retail Stores'], y=df['Import Volume'])<0x0A><0x0A># Plotting<0x0A>ax.set_ylim(0, 400)<0x0A><0x0A># Plotting<0x0A>ax.set_xlim(0, 800)<0x0A><0x0A># Plotting<0x0A>ax.set_yticks(np.arange(0, 400, 200))<0x0A><0x0A># Plotting<0x0A>ax.set_ytick
[32m[1mline|temporal|Smoking Rate|quantitative|Simulation Results Of Variable Interest Rates On Bond Prices
[31m## Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A>ax.spines['bottom'].set_color
[32m[1mline|temporal|Adjusted R Squared For Linear Regression Model With Heteroscedasticity|quantitative|CO2 Emissions
[31m# Plot the data<0x0A><0x0A># Set up the graph<0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A># Plot the data<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot the data<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A># Plot the data<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A># Plot the data<0x0A>ax
[32m[1mline|temporal|Time|quantitative|Probability Density Function for Reaction Time (seconds)
[31m# Plot the time series<0x0A>sns.set(context="paper", style="ticks", palette="muted")<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>ax = sns.lineplot(x="Time", y="Probability Density Density Function for Reaction Time (seconds)", data=df_time_series,<0x0A>                 palette=sns.color_palette("muted", 10))<0x0A><0x0A>ax.set(xlabel="Time", ylabel="Probability Density Density Function for Reaction Time (seconds)")<0x0A><0x0A>sns.despine()
[32m[1mcircle|quantitative|Predictive Accuracy Of Seasonal Demand Forecasting Models|quantitative|Heterogeneity In Clinical Trial Populations By Gender And Age
[31m# Scatter plot of predicted accuracy of seasonal demand forecasting models and heterogeneity in clinical trial populations by gender and age<0x0A><0x0A># Set the figure size<0x0A>plt.rcParams['figure.figsize'] = 10, 10<0x0A><0x0A># Set the y limits<0x0A>plt.ylim(0, 75)<0x0A><0x0A># Set the x limits<0x0A>plt.xlim(0, 850)<0x0A><0x0A># Set the y limits<0x0A>plt.ylim(0, 75)<0x0A><0x0A># Set the limits<0x0A>plt.xlim(0, 850)<0x0A><0x0A># Set the y limits<0x0A>plt.ylim(0, 75)<0x0A><0x0A># Set the limits<0x0A>plt.xlim(0, 850)<0x0A><0x0A># Set the y limits<0x0A>plt.ylim(0, 75)<0x0A><0x0A># Set the limits
[32m[1mline|temporal|Distance|quantitative|Probability Density Function Of Age Distribution In Population Survey
[31m# Plot the Distance between Probability Density Density Function OYA Age Distribution in Population Survey<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A># Plot the Distance between Probability Density Density Function OYA Age Distribution in Population Survey<0x0A>sns.lineplot(x="Distance", y="Probability Density Density Function OYA Age Distribution in Population Survey", data=survey_data)<0x0A><0x0A># Set up the axes labels<0x0A>plt.xlabel("Distance")<0x0A>plt.ylabel("Probability Density Density Function OYA Age Distribution in Population Survey")<0x0A><0x0A># Save the figure<0x0A>plt.savefig("Dist Distance vs Probability Density Density Function OYA Age Distribution in Population Survey")<0x0A><0x0A># Show the figure<0x0A>plt.show()
[32m[1mcircle|quantitative|Growth Rate|quantitative|GDP
[31mscatterplot = plt.figure(figsize=(10,12))<0x0A>ax = scatterplot.add_subplot(111)<0x0A>ax.set_xlim(0, 5)<0x0A>ax.set_ylim(0, 80)<0x0A>ax.set_xlabel('Growth Rate')<0x0A>ax.set_ylabel('GDP')<0x0A><0x0A>ax.scatter(x=data['Growth Rate'], y=data['GDP'], s=50)<0x0A><0x0A>ax.set_yticks([0, 100, 200, 300, 400, 500])<0x0A>ax.set_yticklabels(['0, 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1
[32m[1mline|temporal|Mental Health|quantitative|Import Volume
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['bottom'].set_position('zero')<0x0A>ax.spines['top'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['bottom'].set_position('zero')<0x0A><0x0A>ax.spines['left'].set_position('zero')<0x0A>ax.spines['left'].set_position('zero')<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A>ax.spines['right'].set_linewidth(1)<0x0A><0x0A>ax.spines['left'].set
[32m[1mcircle|quantitative|Assessment Of Healthcare Utilization Rates By Demographic Groups|quantitative|Relative Risk Assessment Of Health Outcomes In Demographic Studies
[31m# Plot the relationship between relative risk and assessment of healthcare utilization rates by demographic groups<0x0A><0x0A>plt.figure(figsize=(10,10))<0x0A>plt.scatter(demographic_groups, relative_risk, color='#000000', s=100)<0x0A>plt.xlabel('Assessment Of Healthcare Utilization Rates By Demographic Groups')<0x0A>plt.ylabel('Relative Risk Assessment Of Health Outcomes In Demographic Studies')<0x0A>plt.xlim(0,2000)<0x0A>plt.ylim(0,400)<0x0A>plt.show()
[32m[1mbar|nominal|Mortality Rate|quantitative|Poverty Rate
[31mfig = plt.figure(figsize=(10,10))<0x0A>ax1 = fig.add_subplot(1,2,1)<0x0A>ax2 = fig.add_subplot(1,2,2)<0x0A><0x0A>#ax1.set_ylim(0,3000)<0x0A>ax1.bar(df_poverty_rate.index, df_poverty_rate['Poverty Rate'])<0x0A>ax1.set_xlabel('Mortality Rate')<0x0A>ax1.set_ylabel('Poverty Rate')<0x0A><0x0A>#ax2.set_ylim(0,3000)<0x0A>ax2.bar(df_military_rate.index, df_military_rate['Mortality Rate'], color='#000000')<0x0A>ax2.set_xlabel('Mortality Rate')<0x0A>
[32m[1mline|temporal|Impact Of Temperature Variability On Crop Yield Statistics|quantitative|Detrended Analysis Of Yearly Weather Anomalies In Temperature Data
[31m# Plot the results as a line plot<0x0A>plt.figure(figsize=(10,10))<0x0A><0x0A># Plot the results as a bar graph<0x0A>plt.bar(x=temp_data.index,height=temp_data.values)<0x0A><0x0A># Add a title to the chart<0x0A>plt.title('Impact Of Temperature Variability On Crop Yield Statistics')<0x0A><0x0A># Add a x-axis label<0x0A>plt.xlabel('Impact Of Temperature Variability On Crop Yield Statistics')<0x0A><0x0A># Add a y-axis label<0x0A>plt.ylabel('Dtrended Analysis Of Yearly Weather In Normalies In Temperature Data')<0x0A><0x0A># Add a grid<0x0A>plt.grid(b=True, which='major', axis='y')<0x0A><0x0A># Add a limit for the x-axis limits<0x0A>plt.xlim(1,1814)<0x0A>
[32m[1mline|temporal|Manufacturing Output|quantitative|Fuel Consumption
[31m# Plot the graph<0x0A>plt.figure(figsize=(10,10))<0x0A>plt.plot(df['Manufacturing Output'],df['Fuel Consumption'])<0x0A>plt.ylabel('Fuel Consumption')<0x0A>plt.xlabel('Manufacturing Output')<0x0A>#plt.ylim(0,5000)<0x0A>#plt.xlim(0,1000)<0x0A>#plt.ylim(0,5000)<0x0A>#plt.xticks(np.arange(1825,1840,1825))<0x0A>#plt.yticks(np.arange(0,5000,1000))<0x0A>#plt.xticks(np.arange(1825,1840,1840))<0x0A>#plt.
[32m[1mcircle|quantitative|Literacy Rate|quantitative|Export Volume
[31m# Plot the graph<0x0A>sns.set(context="paper", style="ticks", font_scale=1.5)<0x0A><0x0A># Draw the graph<0x0A>sns.lmplot(x="Literacy Rate", y="Epcnt Volume", data=df, fit_reg=False, height=7, aspect=1.5,<0x0A>          scatter_kws={"s": 70})<0x0A><0x0A># Label the axes<0x0A>plt.xlabel("Literacy Rate")<0x0A>plt.ylabel("Epcnt Volume")<0x0A><0x0A># Show the plot<0x0A>plt.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.95 [35m|
100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:50<00:00,  2.54s/it]



 80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                     | 16/20 [00:09<00:01,  2.34it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.55 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.92 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mline|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
line|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
[32m[1mline|temporal|Year|quantitative|Number of meetings(average for affected firms)
circle|temporal|Year|quantitative|Number of meetings/venues (as of local firms)
[32m[1mline|temporal|Year|quantitative|Number of days
circle|temporal|Year|quantitative|Number of days
[32m[1mline|temporal|Year|quantitative|% of children under 5 taken to a health provider
line|temporal|Year|quantitative|% of children under 5 taken to a health provider
[32m[1mline|temporal|Year|quantitative|% of firms
circle|temporal|Year|quantitative|% of firms
[32m[1mbar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
bar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
[32m[1mbar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commerical service exports)
bar|temporal|Year|quantitative|Cost of communications, computers, communications, computers, communications, computers, communications, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers, computers,
[32m[1mbar|nominal|Country|quantitative|Number of tractors
bar|nominal|Country|quantitative|Number of tractors
[32m[1mbar|temporal|Year|quantitative|Amount of energy used(kg of oil equivalent per capita)
bar|temporal|Year|quantitative|Amount of energy used(kg of of equivalent (per capita)
[32m[1mbar|temporal|Year|quantitative|Number of days
bar|temporal|Year|quantitative|Number of days
[32m[1mbar|temporal|Year|quantitative|Savings (current US$)
bar|temporal|Year|quantitative|Savings (current US$)
[32m[1mbar|temporal|Year|quantitative|Land (in sq. km)
bar|temporal|Year|quantitative|Land (in kg km)
[32m[1mbar|nominal|Country|quantitative|Cost (as % of GNI)
bar|nominal|Country|quantitative|Cost (as % of GNI)
[32m[1mbar|nominal|Country|quantitative|Average number of days
bar|nominal|Country|quantitative|Average number of days
[32m[1mbar|nominal|Country|quantitative|Prive value of exports (constant LCU)
bar|nominal|Country|quantitative|Prew value of exports (constant L211)
[32m[1mbar|temporal|Year|quantitative|Total reserves (current US$)
bar|temporal|Year|quantitative|Total reserves (current US$)
[32m[1mcircle|temporal|Year|quantitative|Unemployed males(% of male labor force ages 15-24)
line|temporal|Year|quantitative|Unemployed male(% of male labor force age 15-24)
[32m[1mcircle|temporal|Year|quantitative|Mean income or consumption per capita(2011 PPP $ per day)
line|temporal|Year|quantitative|Mean income or consumption per capita (Q11 (population per day)
[32m[1mcircle|temporal|Year|quantitative|Savings (current US$)
circle|temporal|Year|quantitative|Savings (current US$)
[32m[1mcircle|temporal|Year|quantitative|Value added (current Local Currency Unit)
bar|temporal|Year|quantitative|Value added (current Local Currency Unit)
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.55 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.92 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|

100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:11<00:00,  1.80it/s]
[36m[1mEpoch :[39m[22m 31 [32m[1m | Loss :[39m[22m 4.425525188446045
[36m[1mEpoch :[39m[22m 32 [32m[1m | Loss :[39m[22m 4.410960674285889
[36m[1mEpoch :[39m[22m 33 [32m[1m | Loss :[39m[22m 4.368377208709717
[36m[1mEpoch :[39m[22m 34 [32m[1m | Loss :[39m[22m 4.318352222442627
[36m[1mEpoch :[39m[22m 35 [32m[1m | Loss :[39m[22m 4.306400299072266


















 95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä     | 19/20 [00:44<00:02,  2.25s/it]
[35m|[39m JSON to Vega conversion error rate: [31m95.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.95 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mcircle|quantitative|Mode Age|quantitative|Alcohol Consumption
[31m# Plot the data<0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Set up the graph<0x0A>plt.figure(figsize=(10,10))<0x0A><0x0A># Add a title<0x0A>plt.title("Alcohol Consumption")<0x0A><0x0A># Add a x- and y-axis label<0x0A>plt.xlabel("Mode Age")<0x0A><0x0A># Add a y-axis label<0x0A>plt.ylabel("Alcohol Consumption")<0x0A><0x0A># Add a grid<0x0A>plt.grid(linestyle='dashed', linewidth=1, alpha=0.5)<0x0A><0x0A># Add a grid<0x0A>plt.grid(color='0.7', linestyle='dashed', linewidth=1, alpha=0.5)<0x0A><0x0A># Add a legend<0x0A>plt.axvline(x=mode_age, color='0.7', linewidth=1, alpha=0
[32m[1mbar|nominal|Water Usage|quantitative|CO2 Emissions
[31m# Plot the data<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A># Draw a nested barplot to show bills by day and time<0x0A>ax.bar(x=df['Water Usage'], height=df['CO2 Emissions'])<0x0A><0x0A># Set up the x-axis label<0x0A>ax.set_xlabel('Water Usage')<0x0A><0x0A># Set up the y-axis label<0x0A>ax.set_ylabel('CO2 Emissions')<0x0A><0x0A># Set up the lable<0x0A>ax.set_lable(ylim=(0, 80000))<0x0A><0x0A># Draw a nested barplot to show bills by day and time<0x0A>ax.bar(x=df['Water Usage'], height=df['CO2 Emissions'])<0x0A><0x0A># Draw a nested barplot to show bills by day
[32m[1mbar|nominal|Consumer Price Index|quantitative|Kurtosis And Skewness Of Annual Corporate Profit Margins
[31mfig = plt.figure(figsize=(10,10))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Generate a bar plot showing the kurtosis and skewness of annual corporate profit margins<0x0A>ax.bar(df_kurtosis_annual_corporate_profit_margins.index, df_kurtosis_annual_corporate_profit_margins.kurtosis_and_skewness_of_annual_corporate_profit_margins, color='steelblue', alpha=0.75)<0x0A>ax.set_xticklabels(df_kurtosis_annual_corporate_profit_margins.index, rotation=90)<0x0A>ax.set_yticklabels(df_kurtosis_annual_corporate_profit_margins.index, rotation=0)<0x0A><0x0A># Set the y limits of the
[32m[1mbar|nominal|Range|quantitative|Participation Rate
bar|temporal|Range|quantitative|Participation Rate
[32m[1mbar|nominal|Median Household Income Indexed By Regional Inflation Rates|quantitative|Bond Yield
[31m# Plotting the graph<0x0A><0x0A># Compute the Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A><0x0A># Compute Pearson Correlation<0x0A>
[32m[1mbar|nominal|Cost|quantitative|Quantile Regression Estimates Of Salary By Experience Level
[31mfig = plt.figure(figsize=(8,8))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plot bar chart<0x0A>sns.barplot(x='Cost', y='Quantile Regression Estimates Of Salary By Experience Level', data=df)<0x0A><0x0A># Set limits for x axis<0x0A>ax.set_xlim(0, 2000)<0x0A><0x0A># Set axis labels<0x0A>ax.set_xticklabels(df.Cost, rotation=90)<0x0A><0x0A># Set axis limits<0x0A>ax.set_ylim(0, 13)<0x0A><0x0A># Set axis tick labels<0x0A>ax.set_yticklabels(df.Cost, rotation=90)<0x0A><0x0A># Set axis tick labels<0x0A>ax.set_xticklabels(df.Cost, rotation=90)<0x0A><0x0A># Set y limits<0x0A>ax.set_ylim(0, 
[32m[1mcircle|quantitative|Height|quantitative|Speed
[31mheights = df.groupby('Height').mean()['Speed']<0x0A>heights.plot(kind='scatter', x='Height', y='Speed', alpha=0.8, figsize=(10,10))<0x0A>plt.axvline(heights.mean()['Speed'].mean(), color='black', linewidth=1)<0x0A>plt.axvline(heights.mean()['Speed'].mean() + heights.std()['Speed'].std(), color='black', linewidth=1)<0x0A>plt.axvline(heights.mean()['Speed'].mean() + heights.std()['Speed'].mean(), color='black', linewidth=1)<0x0A>plt.axvline(heights.mean()['Speed'].mean() + heights.std()['Speed'].mean(), color='black', line
[32m[1mcircle|quantitative|Log Transformed Peak Demand During Holiday Seasons At Retail Stores|quantitative|Import Volume
[31mborder = {'Log Transformed Peak Demand During Holiday Seasons At Retail Stores': 'Log Transformed Peak Demand During Holiday Seasons At Retail Stores', 'Import Volume': 'Log Transformed Peak Demand During Holiday Seasons At Retail Stores'}<0x0A><0x0A># Plotting scatter plot<0x0A>fig, ax = plt.subplots(figsize=(10, 15))<0x0A>ax.scatter(x=df['Log Transformed Peak Demand During Holiday Seasons At Retail Stores'], y=df['Import Volume'], s=100)<0x0A>ax.set_xlim(0, 400)<0x0A>ax.set_ylim(0, 400)<0x0A><0x0A># Plotting legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
[32m[1mline|temporal|Smoking Rate|quantitative|Simulation Results Of Variable Interest Rates On Bond Prices
[31m## Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_color('white')<0x0A>ax.spines['left'].set_color('white')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A>ax.spines['right'].set_color('white')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A>ax.spines['bottom'].set_color
[32m[1mline|temporal|Adjusted R Squared For Linear Regression Model With Heteroscedasticity|quantitative|CO2 Emissions
[31m# Plot the data<0x0A><0x0A># Set up the graph<0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A># Plot the data<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot the data<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A># Plot the data<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A># Plot the data<0x0A>ax
[32m[1mline|temporal|Time|quantitative|Probability Density Function for Reaction Time (seconds)
[31m# Plot the time series<0x0A>sns.set(context="paper", style="ticks", palette="muted")<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>ax = sns.lineplot(x="Time", y="Probability Density Density Function for Reaction Time (seconds)", data=df_time_series,<0x0A>                 palette=sns.color_palette("muted", n_colors=len(df_time_series.columns)))<0x0A><0x0A>ax.set(xlabel="Time", ylabel="Probability Density Density Function for Reaction Time (seconds)")<0x0A><0x0A>sns.despine()
[32m[1mcircle|quantitative|Predictive Accuracy Of Seasonal Demand Forecasting Models|quantitative|Heterogeneity In Clinical Trial Populations By Gender And Age
[31m# Plot scatter plot<0x0A>scatter_plot(df_predictive_accuracy_model_predictive_accuracy_model_predictive_accuracy_model_predictive_accuracy_model_predictive_accuracy_model_predictive_accuracy_model_predictive_accuracy_model_predictive_accuracy_model_predictive_accuracy_model_predictive_accuracy_model_predictive_accuracy_model_predictive_accuracy_model_predictive_accuracy_model_predictive_accuracy_model_predictive_accuracy_model_predictive_accuracy_model_predictive_accuracy_model_predictive_accuracy_model_predictive_accura
[32m[1mline|temporal|Distance|quantitative|Probability Density Function Of Age Distribution In Population Survey
[31m# Plot the Distance between Probability Density Density Function OYA Age Distribution in Population Survey<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.set_xlabel('Distance')<0x0A>ax.set_ylabel('Probability Density Density Function OYA Age Distribution in Population Survey')<0x0A>ax.set_ylim(0, 600)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.
[32m[1mcircle|quantitative|Growth Rate|quantitative|GDP
[31mscatterplot = plt.figure(figsize=(10,12))<0x0A>ax = scatterplot.add_artist(scatterplot)<0x0A><0x0A># Add axis labels<0x0A>ax.set_xlabel('Growth Rate')<0x0A>ax.set_ylabel('GDP')<0x0A><0x0A># Set limits for the x axis<0x0A>ax.set_xlim(0, 5)<0x0A><0x0A># Set axis limits<0x0A>ax.set_ylim(0, 80)<0x0A><0x0A># Set axis limits<0x0A>ax.set_xlim(0, 5)<0x0A><0x0A># Set axis limit<0x0A>ax.set_xlim(0, 5)<0x0A><0x0A># Set axis limit<0x0A>ax.set_xlim(0, 5)<0x0A><0x0A># Set axis limit<0x0A>ax.set_xlim(0, 5)<0x0A><0x0A># Set axis limit<0x0A>ax.set_ylim(0, 
[32m[1mline|temporal|Mental Health|quantitative|Import Volume
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['bottom'].set_position('zero')<0x0A>ax.spines['top'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['bottom'].set_position('zero')<0x0A><0x0A>ax.spines['left'].set_position('zero')<0x0A>ax.spines['left'].set_position('zero')<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A>ax.spines['right'].set_linewidth(1)<0x0A><0x0A>ax.spines['left'].set
[32m[1mcircle|quantitative|Assessment Of Healthcare Utilization Rates By Demographic Groups|quantitative|Relative Risk Assessment Of Health Outcomes In Demographic Studies
[31m# Plot the relationship between relative risk and assessment of healthcare utilization rates by demographic groups<0x0A><0x0A>plt.figure(figsize=(10,10))<0x0A>plt.scatter(demographic_groups, relative_risk, s=100)<0x0A>plt.xlabel('Assessment Of Healthcare Utilization Rates By Demographic Groups')<0x0A>plt.ylabel('Relative Risk Assessment Of Health Outcomes In Demographic Studies')<0x0A>plt.xlim(0,2000)<0x0A>plt.ylim(0,400)<0x0A>plt.show()
[32m[1mbar|nominal|Mortality Rate|quantitative|Poverty Rate
[31mfig = plt.figure(figsize=(10,10))<0x0A>ax1 = fig.add_subplot(1,2,1)<0x0A>ax2 = fig.add_subplot(1,2,2)<0x0A><0x0A>#ax1.set_ylim(0,3000)<0x0A>ax1.bar(df_poverty_rate.index, df_poverty_rate['Poverty Rate'])<0x0A>ax1.set_xlabel('Mortality Rate')<0x0A>ax1.set_ylabel('Poverty Rate')<0x0A><0x0A>#ax2.set_ylim(0,3000)<0x0A>ax2.bar(df_military_rate.index, df_military_rate['Mortality Rate'], color='#000000')<0x0A>ax2.set_xlabel('Mortality Rate')<0x0A>
[32m[1mline|temporal|Impact Of Temperature Variability On Crop Yield Statistics|quantitative|Detrended Analysis Of Yearly Weather Anomalies In Temperature Data
[31m# Plot the results as a line graph<0x0A>plt.figure(figsize=(10,10))<0x0A><0x0A># Plot the results as a line graph<0x0A>plt.plot(temp_df['temp_var_temp'], temp_df['temp_var_temp'])<0x0A><0x0A># Plot the results as a line graph<0x0A>plt.plot(temp_df['temp_var_temp'], temp_df['temp_var_temp'])<0x0A><0x0A># Plot the results as a line graph<0x0A>plt.plot(temp_df['temp_var_temp'], temp_df['temp_var_temp'])<0x0A><0x0A># Plot the results as a line graph<0x0A>plt.plot(temp_df['temp_var_temp'], temp_df['temp_var_temp'])<0x0A><0x0A># Plot the results as a line graph<0x0A>plt.plot(temp_df['temp_var_temp'], temp_df['temp_
[32m[1mline|temporal|Manufacturing Output|quantitative|Fuel Consumption
[31m##########################################################################<0x0A># Plot the graph<0x0A>################################################################################<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.plot(df['Manufacturing Output'], df['Fuel Consumption'])<0x0A>ax.set_xlabel('Manufacturing Output')<0x0A>ax.set_ylabel('Fuel Consumption')<0x0A><0x0A>ax.set_ylim(0,50000)<0x0A><0x0A># Save the figure<0x0A>plt.tight_layout()<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1mcircle|quantitative|Literacy Rate|quantitative|Export Volume
[31m# Plot the graph<0x0A>sns.set(context="paper", style="ticks", font_scale=1.5)<0x0A><0x0A># Draw the graph<0x0A>sns.lmplot(x="Literacy Rate", y="Epcnt Volume", data=df, fit_reg=False, height=7, aspect=1.5,<0x0A>          scatter_kws={"s": 70})<0x0A><0x0A># Label the axes<0x0A>plt.xlabel("Literacy Rate")<0x0A>plt.ylabel("Epcnt Volume")<0x0A><0x0A># Show the plot<0x0A>plt.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.95 [35m|
100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:46<00:00,  2.31s/it]



 95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä     | 19/20 [00:06<00:00,  3.03it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.63 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.95 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mline|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
line|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
[32m[1mline|temporal|Year|quantitative|Number of meetings(average for affected firms)
circle|temporal|Year|quantitative|Number of meetings/levers (as of actual firms)
[32m[1mline|temporal|Year|quantitative|Number of days
circle|temporal|Year|quantitative|Number of days
[32m[1mline|temporal|Year|quantitative|% of children under 5 taken to a health provider
line|temporal|Year|quantitative|% of children under 5 taken to a health provider
[32m[1mline|temporal|Year|quantitative|% of firms
circle|temporal|Year|quantitative|% of firms
[32m[1mbar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
bar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
[32m[1mbar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commerical service exports)
bar|temporal|Year|quantitative|Cost of communications, computers, communications and other services (% of commercial service exports of Faeroe Islands)
[32m[1mbar|nominal|Country|quantitative|Number of tractors
bar|nominal|Country|quantitative|Number of tractors
[32m[1mbar|temporal|Year|quantitative|Amount of energy used(kg of oil equivalent per capita)
bar|temporal|Year|quantitative|Amount of energy used(kg of of equivalent (per capita)
[32m[1mbar|temporal|Year|quantitative|Number of days
bar|temporal|Year|quantitative|Number of days
[32m[1mbar|temporal|Year|quantitative|Savings (current US$)
bar|temporal|Year|quantitative|Savings (current US$)
[32m[1mbar|temporal|Year|quantitative|Land (in sq. km)
bar|temporal|Year|quantitative|Land (in kg km)
[32m[1mbar|nominal|Country|quantitative|Cost (as % of GNI)
bar|nominal|Country|quantitative|Cost (as % of GNI)
[32m[1mbar|nominal|Country|quantitative|Average number of days
bar|nominal|Country|quantitative|Average number of days
[32m[1mbar|nominal|Country|quantitative|Prive value of exports (constant LCU)
bar|nominal|Country|quantitative|Prew value of exports (constant L211)
[32m[1mbar|temporal|Year|quantitative|Total reserves (current US$)
bar|temporal|Year|quantitative|Total reserves (current US$)
[32m[1mcircle|temporal|Year|quantitative|Unemployed males(% of male labor force ages 15-24)
line|temporal|Year|quantitative|Unemployed male(% of male labor force age 15-24)
[32m[1mcircle|temporal|Year|quantitative|Mean income or consumption per capita(2011 PPP $ per day)
circle|temporal|Year|quantitative|Mean income or consumption per capita(2011 population)
[32m[1mcircle|temporal|Year|quantitative|Savings (current US$)
circle|temporal|Year|quantitative|Savings (current US$)
[32m[1mcircle|temporal|Year|quantitative|Value added (current Local Currency Unit)
bar|temporal|Year|quantitative|Value added (current Local Currency Unit)
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.63 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.95 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|

100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:06<00:00,  3.15it/s]


































model.safetensors: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 1.13G/1.13G [01:06<00:00, 16.9MB/s]
[36m[1mEpoch :[39m[22m 36 [32m[1m | Loss :[39m[22m 4.270120620727539
[36m[1mEpoch :[39m[22m 37 [32m[1m | Loss :[39m[22m 4.20888614654541
[36m[1mEpoch :[39m[22m 38 [32m[1m | Loss :[39m[22m 4.205808162689209
[36m[1mEpoch :[39m[22m 39 [32m[1m | Loss :[39m[22m 4.225613117218018
  0%|                                                                                                                | 0/20 [00:00<?, ?it/s]

















 95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä     | 19/20 [00:41<00:02,  2.40s/it]
[35m|[39m JSON to Vega conversion error rate: [31m95.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.95 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mcircle|quantitative|Mode Age|quantitative|Alcohol Consumption
[31m# Plot the data<0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Set up the graph<0x0A>plt.figure(figsize=(10,10))<0x0A><0x0A># Add a title<0x0A>plt.title("Alcohol Consumption")<0x0A><0x0A># Add a x- and y-axis label<0x0A>plt.xlabel("Mode Age")<0x0A><0x0A># Add a y-axis label<0x0A>plt.ylabel("Alcohol Consumption")<0x0A><0x0A># Add a grid line<0x0A>plt.grid(linestyle='dashed', linewidth=1, alpha=0.5)<0x0A><0x0A># Add a legend<0x0A>plt.axvline(x=mode_age, linewidth=3, color='lightgray')<0x0A><0x0A># Add a grid line<0x0A>plt.grid(linestyle='dashed', linewidth=3, color='lightgray')<0x0A><0x0A># Add a legend<0x0A>plt
[32m[1mbar|nominal|Water Usage|quantitative|CO2 Emissions
[31m# Plot the data<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A># Draw a nested barplot to show bills by day and time<0x0A>ax.bar(x=df['Water Usage'], height=df['CO2 Emissions'])<0x0A><0x0A># Set up the x-axis label<0x0A>ax.set_xlabel('Water Usage')<0x0A><0x0A># Set up the y-axis label<0x0A>ax.set_ylabel('CO2 Emissions')<0x0A><0x0A># Set up the lable<0x0A>ax.set_lable(ylim=(0, 80000))<0x0A><0x0A># Draw a nested barplot to show bills by day and time<0x0A>ax.bar(x=df['Water Usage'], height=df['CO2 Emissions'])<0x0A><0x0A># Draw a nested barplot to show bills by day
[32m[1mbar|nominal|Consumer Price Index|quantitative|Kurtosis And Skewness Of Annual Corporate Profit Margins
[31mfig = plt.figure(figsize=(10,10))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Generate a bar plot showing the kurtosis and skewness of annual corporate profit margins<0x0A>ax.bar(df_kurtosis_annual_corporate_profit_margins.index, df_kurtosis_annual_corporate_profit_margins.kurtosis_and_skewness_of_annual_corporate_profit_margins, color='steelblue', alpha=0.7)<0x0A>ax.set_xticklabels(df_kurtosis_annual_corporate_profit_margins.index, rotation=90)<0x0A>ax.set_yticklabels(df_kurtosis_annual_corporate_profit_margins.index, rotation=0)<0x0A><0x0A># Set the y limits of the axes
[32m[1mbar|nominal|Range|quantitative|Participation Rate
bar|temporal|Range|quantitative|Participation Rate
[32m[1mbar|nominal|Median Household Income Indexed By Regional Inflation Rates|quantitative|Bond Yield
[31m# Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting
[32m[1mbar|nominal|Cost|quantitative|Quantile Regression Estimates Of Salary By Experience Level
[31mfig = plt.figure(figsize=(10, 8))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plot bar chart<0x0A>sns.barplot(x='Cost', y='Quantile Regression Estimates Of Salary By Experience Level', data=df)<0x0A><0x0A># Set limits for x axis<0x0A>ax.set_xlim(0, 2000)<0x0A><0x0A># Set axis labels<0x0A>ax.set_xticklabels(df.Cost, rotation=90)<0x0A><0x0A># Set axis limits<0x0A>ax.set_ylim(0, 13)<0x0A><0x0A># Set axis tick labels<0x0A>ax.set_yticklabels(df.Cost, rotation=90)<0x0A><0x0A># Set axis lable<0x0A>ax.set_ylabel('Quantile Regression Estimates Of Salary By Experience Level')<0x0A>ax.set_xlabel('Cost')<0x0A><0x0A>
[32m[1mcircle|quantitative|Height|quantitative|Speed
[31mheights = df.groupby('Height').mean()['Speed']<0x0A>heights.plot(kind='scatter', x='Height', y='Speed', figsize=(10,10), color='tab:blue', s=100)<0x0A>plt.axvline(heights.mean()['Speed'].mean(), color='tab:blue')<0x0A>plt.axvline(heights.mean()['Speed'].mean() + heights.mean()['Speed'].mean(), color='tab:blue')<0x0A>plt.axvline(heights.mean()['Speed'].mean() + heights.mean()['Speed'].mean(), color='tab:blue')<0x0A>plt.axvline(heights.mean()['Speed'].mean() + heights.mean()['Speed'].mean(), color='tab:blue')
[32m[1mcircle|quantitative|Log Transformed Peak Demand During Holiday Seasons At Retail Stores|quantitative|Import Volume
[31mborder = {'Log Transformed Peak Demand During Holiday Seasons At Retail Stores': 'Log Transformed Peak Demand During Holiday Seasons At Retail Stores', 'Import Volume': 'Log Transformed Peak Demand During Holiday Seasons At Retail Stores'}<0x0A>colors = {'Log Transformed Peak Demand During Holiday Seasons At Retail Stores': 'Log Transformed Peak Demand During Holiday Seasons At Retail Stores', 'Import Volume': 'Log Transformed Peak Demand During Holiday Seasons At Retail Stores'}<0x0A>fig, ax = plt.subplots(figsize=(10, 15))<0x0A>ax.scatter(x=df['Log Transformed Peak Demand During Holiday Seasons At Retail Stores'], y=df['Import Volume'])<0x0A>ax.set_xlim(0, 400)<0x0A>ax.set_ylim(0, 400)<0x0A>ax.set_xlabel(''
[32m[1mline|temporal|Smoking Rate|quantitative|Simulation Results Of Variable Interest Rates On Bond Prices
[31m## Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_color('white')<0x0A>ax.spines['left'].set_color('white')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A>ax.spines['right'].set_color('white')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A>ax.spines['bottom'].set_color
[32m[1mline|temporal|Adjusted R Squared For Linear Regression Model With Heteroscedasticity|quantitative|CO2 Emissions
[31m# Plot the data<0x0A><0x0A># Set up the graph<0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A># Plot the data<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot the data<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A># Plot the data<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A># Plot the data<0x0A>ax
[32m[1mline|temporal|Time|quantitative|Probability Density Function for Reaction Time (seconds)
[31m# Plot the time series<0x0A>sns.set(context="paper", style="ticks", font_scale=1.5)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A># Plot the time series<0x0A>sns.lineplot(x="Time", y="Probability Density Density Function for Reaction Time (seconds)", data=time_series, ax=ax)<0x0A><0x0A># Plot the time series<0x0A>sns.despine()<0x0A><0x0A># Add a line to the plot<0x0A>sns.despine()
[32m[1mcircle|quantitative|Predictive Accuracy Of Seasonal Demand Forecasting Models|quantitative|Heterogeneity In Clinical Trial Populations By Gender And Age
[31mplot_scatter(predictive_accuracy_model_df, heterogeneity_in_clinical_trial_populations_by_gender_and_age)
[32m[1mline|temporal|Distance|quantitative|Probability Density Function Of Age Distribution In Population Survey
[31m# Plot the Distance between Probability Density Density Function OYA Age Distribution in Population Survey<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom']
[32m[1mcircle|quantitative|Growth Rate|quantitative|GDP
[31mscatterplot = plt.figure(figsize=(10,12))<0x0A>ax = scatterplot.add_artist(scatterplot)<0x0A><0x0A># Add axis labels<0x0A>ax.set_xlabel('Growth Rate')<0x0A>ax.set_ylabel('GDP')<0x0A><0x0A># Make the shaded circle on the center stem from red dot on the center stem.<0x0A>plt.scatter(x=df['Growth Rate'], y=df['GDP'], s=50, color='red', alpha=0.5)<0x0A><0x0A># Draw the shaded circle at the center<0x0A>for m, b in proportions:<0x0A>    x = m * slope + b<0x0A>    y = m * slope + b<0x0A>    ax.add_artist(m)<0x0A><0x0A># Set limits for this plot<0x0A>plt.ylim(0, 80)<0x0A><0x0A># Set
[32m[1mline|temporal|Mental Health|quantitative|Import Volume
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['bottom'].set_position('zero')<0x0A>ax.spines['top'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['bottom'].set_position('zero')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A>ax.set_xlabel('Mental Health')<0x0A>ax.set_ylabel('Import Volume')<0x0A>ax.spines['right'].set_linewidth(1)<0x0A><0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A>ax
[32m[1mcircle|quantitative|Assessment Of Healthcare Utilization Rates By Demographic Groups|quantitative|Relative Risk Assessment Of Health Outcomes In Demographic Studies
[31m# Plot the relationship between relative risk and assessment of healthcare utilization rates by demographic groups<0x0A><0x0A>ggplot(data=df, aes(x='Relative Risk,Assessment Of Healthcare Utilization Rates By Demographic Groups', y='Relative Risk,Assessment Of Healthcare Utilization Rates By Demographic Groups')) +<0x0A>    geom_point() +<0x0A>    scale_color_brewer(palette='Blues')
[32m[1mbar|nominal|Mortality Rate|quantitative|Poverty Rate
[31mfig = plt.figure(figsize=(10,10))<0x0A>ax1 = fig.add_subplot(1,2,1)<0x0A>ax2 = fig.add_subplot(1,2,2)<0x0A><0x0A>#ax1.set_ylim(0,3)<0x0A>#ax1.set_ylimit(-0.1, 1000)<0x0A>#ax1.set_xlim(0,3)<0x0A>#ax1.set_xticks(np.arange(0, 4000, 1000))<0x0A>#ax1.set_xticklabels(["Dog", "Nike", "Red", "USA"])<0x0A>#ax1.set_xlabel("Mortality Rate")<0x0A>#ax1.set_ylabel("Poverty Rate")<0x0A>#ax1.set_ylim(0,3)<0x0A>
[32m[1mline|temporal|Impact Of Temperature Variability On Crop Yield Statistics|quantitative|Detrended Analysis Of Yearly Weather Anomalies In Temperature Data
[31m##############################################################################################################################################################################################################################################################################################################################################################################################################
[32m[1mline|temporal|Manufacturing Output|quantitative|Fuel Consumption
[31mmarkers = ['o', '^']<0x0A>colors = ['r', 'g']<0x0A>fig, ax = plt.subplots()<0x0A>fig.set_figheight(10)<0x0A>fig.set_figwidth(10)<0x0A><0x0A>ax.plot(df['Manufacturing Output'], df['Fuel Consumption'], linewidth=2)<0x0A>ax.set_xlabel('Manufacturing Output')<0x0A>ax.set_ylabel('Fuel Consumption')<0x0A><0x0A>ax.set_yticks(np.arange(0, 5, 1))<0x0A>ax.set_yticklabels(['0', '1000', '2000', '3000', '4000', '5000'])<0x0A><0x0A>ax.set_xticklabels(df['Man
[32m[1mcircle|quantitative|Literacy Rate|quantitative|Export Volume
[31m# Plot the graph<0x0A>sns.set(context="paper", style="ticks", font_scale=1.5)<0x0A><0x0A># Draw the graph<0x0A>sns.lmplot(x="Literacy Rate", y="Epcnt Volume", data=df, fit_reg=False, height=7, aspect=1.5,<0x0A>          scatter_kws={"s": 70})<0x0A><0x0A># Label the axes<0x0A>plt.xlabel("Literacy Rate")<0x0A>plt.ylabel("Epcnt Volume")<0x0A><0x0A># Show the plot<0x0A>plt.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.95 [35m|
100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:42<00:00,  2.14s/it]
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)



 90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã          | 18/20 [00:06<00:00,  2.11it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.63 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.95 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mline|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
line|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
[32m[1mline|temporal|Year|quantitative|Number of meetings(average for affected firms)
circle|temporal|Year|quantitative|Number of meetings/levers (as calculated firms)
[32m[1mline|temporal|Year|quantitative|Number of days
circle|temporal|Year|quantitative|Number of days
[32m[1mline|temporal|Year|quantitative|% of children under 5 taken to a health provider
line|temporal|Year|quantitative|% of children under 5 taken to a health provider
[32m[1mline|temporal|Year|quantitative|% of firms
circle|temporal|Year|quantitative|% of firms
[32m[1mbar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
bar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
[32m[1mbar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commerical service exports)
bar|temporal|Year|quantitative|Cost of communications, computers, communications and other services (% of commercial service exports of Faeroe Islands)
[32m[1mbar|nominal|Country|quantitative|Number of tractors
bar|nominal|Country|quantitative|Number of tractors
[32m[1mbar|temporal|Year|quantitative|Amount of energy used(kg of oil equivalent per capita)
bar|temporal|Year|quantitative|Amount of energy used(kg of of equivalent (per capita)
[32m[1mbar|temporal|Year|quantitative|Number of days
bar|temporal|Year|quantitative|Number of days
[32m[1mbar|temporal|Year|quantitative|Savings (current US$)
bar|temporal|Year|quantitative|Savings (current US$)
[32m[1mbar|temporal|Year|quantitative|Land (in sq. km)
bar|temporal|Year|quantitative|Land (in kg km)
[32m[1mbar|nominal|Country|quantitative|Cost (as % of GNI)
bar|nominal|Country|quantitative|Cost (as % of GNI)
[32m[1mbar|nominal|Country|quantitative|Average number of days
bar|nominal|Country|quantitative|Average number of days
[32m[1mbar|nominal|Country|quantitative|Prive value of exports (constant LCU)
bar|nominal|Country|quantitative|Prew value of exports (constant L211)
[32m[1mbar|temporal|Year|quantitative|Total reserves (current US$)
bar|temporal|Year|quantitative|Total reserves (current US$)
[32m[1mcircle|temporal|Year|quantitative|Unemployed males(% of male labor force ages 15-24)
line|temporal|Year|quantitative|Unemployed male(% of male labor force age 15-24)
[32m[1mcircle|temporal|Year|quantitative|Mean income or consumption per capita(2011 PPP $ per day)
circle|temporal|Year|quantitative|Mean income or consumption per capita(2011 population)
[32m[1mcircle|temporal|Year|quantitative|Savings (current US$)
circle|temporal|Year|quantitative|Savings (current US$)
[32m[1mcircle|temporal|Year|quantitative|Value added (current Local Currency Unit)
line|temporal|Year|quantitative|Value added (current Local Currency Unit)
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.63 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.95 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|

100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:07<00:00,  2.61it/s]
[36m[1mEpoch :[39m[22m 41 [32m[1m | Loss :[39m[22m 4.166329860687256
[36m[1mEpoch :[39m[22m 42 [32m[1m | Loss :[39m[22m 4.185416221618652

[36m[1mEpoch :[39m[22m 43 [32m[1m | Loss :[39m[22m 4.1380205154418945
[36m[1mEpoch :[39m[22m 44 [32m[1m | Loss :[39m[22m 4.047580718994141
[36m[1mEpoch :[39m[22m 45 [32m[1m | Loss :[39m[22m 4.079692363739014
















 95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 19/20 [00:36<00:02,  2.36s/it]
[35m|[39m JSON to Vega conversion error rate: [31m95.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.95 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mcircle|quantitative|Mode Age|quantitative|Alcohol Consumption
[31m# Plot the data<0x0A>plt.scatter(x=df['Mode Age'], y=df['Alcohol Consumption'], s=100)<0x0A><0x0A># Label the axes<0x0A>plt.xlabel('Mode Age')<0x0A>plt.ylabel('Alcohol Consumption')<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1mbar|nominal|Water Usage|quantitative|CO2 Emissions
[31m# Plot the data<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A># Draw a nested barplot to show bills by day and time<0x0A>ax.bar(x=df['Water Usage'], height=df['CO2 Emissions'])<0x0A><0x0A># Set up the axes<0x0A>ax.set_ylim(0, 80000)<0x0A><0x0A># Set up the x-axis<0x0A>ax.set_xlabel('Water Usage')<0x0A>ax.set_ylabel('CO2 Emissions')<0x0A><0x0A># Set up the y-axis<0x0A>ax.set_xticklabels(['Apple', 'Dog', 'Male', 'Nike', 'Red', 'Rock', 'Sedan', 'USA', 'USH'])
[32m[1mbar|nominal|Consumer Price Index|quantitative|Kurtosis And Skewness Of Annual Corporate Profit Margins
[31mbar|temporal|Consumer Price Index|kurtosis And Skewness Of Annual Corporate Profit Margins
[32m[1mbar|nominal|Range|quantitative|Participation Rate
bar|temporal|Range|quantitative|Participation Rate
[32m[1mbar|nominal|Median Household Income Indexed By Regional Inflation Rates|quantitative|Bond Yield
[31m# Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting
[32m[1mbar|nominal|Cost|quantitative|Quantile Regression Estimates Of Salary By Experience Level
[31mfig = plt.figure(figsize=(10, 8))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plot bar chart<0x0A>sns.barplot(x='Cost', y='Quantile Regression Estimates Of Salary By Experience Level', data=df)<0x0A><0x0A># Custom limits<0x0A>ax.set_xlim(0, 2000)<0x0A>ax.set_ylim(0, 15)<0x0A><0x0A># Custom limits<0x0A>ax.set_xticklabels(df.index, rotation=90)<0x0A>ax.set_yticklabels(df.index, rotation=0)<0x0A><0x0A># Custom limits<0x0A>ax.set_xlim(0, 2000)<0x0A>ax.set_ylim(0, 15)<0x0A><0x0A># Custom limits<0x0A>ax.set_xlim(0, 2000)<0x0A>ax
[32m[1mcircle|quantitative|Height|quantitative|Speed
[31mheights = df.groupby('Height').mean()['Speed']<0x0A>heights.plot(kind='scatter', x='Height', y='Speed', figsize=(10,10), color='tab:blue', s=100)<0x0A>plt.axvline(heights.mean()['Speed'].mean(), color='tab:blue')<0x0A>plt.axvline(heights.mean()['Speed'].mean() + heights.mean()['Speed'].mean(), color='tab:blue')<0x0A>plt.axvline(heights.mean()['Speed'].mean() + heights.mean()['Speed'].mean(), color='tab:blue')<0x0A>plt.axvline(heights.mean()['Speed'].mean() + heights.mean()['Speed'].mean(), color='tab:blue')
[32m[1mcircle|quantitative|Log Transformed Peak Demand During Holiday Seasons At Retail Stores|quantitative|Import Volume
[31mborder = {'Log Transformed Peak Demand During Holiday Seasons At Retail Stores': 'Log Transformed Peak Demand During Holiday Seasons At Retail Stores', 'Import Volume': 'Log Transformed Peak Demand During Holiday Seasons At Retail Stores'}<0x0A>colors = {'Log Transformed Peak Demand During Holiday Seasons At Retail Stores': 'Log Transformed Peak Demand During Holiday Seasons At Retail Stores', 'Import Volume': 'Log Transformed Peak Demand During Holiday Seasons At Retail Stores'}<0x0A>fig, ax = plt.subplots(figsize=(10, 15))<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].
[32m[1mline|temporal|Smoking Rate|quantitative|Simulation Results Of Variable Interest Rates On Bond Prices
[31m## Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['bottom'].set_color('none
[32m[1mline|temporal|Adjusted R Squared For Linear Regression Model With Heteroscedasticity|quantitative|CO2 Emissions
[31m# Plot the data<0x0A><0x0A># Set up the graph<0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A># Plot the data<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot the data<0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_color('none'
[32m[1mline|temporal|Time|quantitative|Probability Density Function for Reaction Time (seconds)
[31m# Plot the time series<0x0A>sns.set(context="paper", style="ticks", font_scale=1.5)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A># Plot the time series<0x0A>sns.lineplot(x="Time", y="Probability Density Density Function for Reaction Time (seconds)", data=time_series, ax=ax)<0x0A><0x0A># Plot the time series<0x0A>sns.despine()<0x0A><0x0A># Add a line to the plot<0x0A>sns.despine()
[32m[1mcircle|quantitative|Predictive Accuracy Of Seasonal Demand Forecasting Models|quantitative|Heterogeneity In Clinical Trial Populations By Gender And Age
[31mscatterplot(predictive_accuracy_model_df, heterogeneity_in_clinical_trial_populations_by_gender_and_age, <0x0A>            xlab = "Predictive Accuracy Of Seasonal Demand Forecasting Models", ylab = "Heterogeneity In Clinical Trial Populations By Gender And Age")
[32m[1mline|temporal|Distance|quantitative|Probability Density Function Of Age Distribution In Population Survey
[31mbar|distance|Probability Density Density Function OF Age Distribution in Population Survey
[32m[1mcircle|quantitative|Growth Rate|quantitative|GDP
[31mscatterplot = plt.figure(figsize=(10,12))<0x0A>colors = ['#000000', '#000000']<0x0A>ax = scatterplot.add_axes([0.1, 0.1, 1, 1])<0x0A>ax.set_xlabel('Growth Rate')<0x0A>ax.set_ylabel('GDP')<0x0A>ax.set_ylim(0, 80)<0x0A><0x0A># draw a circle at the center of the center<0x0A>draw_circle_axes([0, 0.1, 1, 1])<0x0A><0x0A># draw a circle at the center of the circle<0x0A>draw_circle_axes([0, 0.1, 0.1, 0])<0x0A><0x0A># draw a circle at the center of the circle<0x0A>draw_circle_axes([0, 0.1
[32m[1mline|temporal|Mental Health|quantitative|Import Volume
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['bottom'].set_position('zero')<0x0A>ax.spines['top'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['bottom'].set_position('zero')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A>ax.spines['right'].set_linewidth(1)<0x0A><0x0A>ax.spines['bottom'].set_position
[32m[1mcircle|quantitative|Assessment Of Healthcare Utilization Rates By Demographic Groups|quantitative|Relative Risk Assessment Of Health Outcomes In Demographic Studies
[31m# Plot the relationship between relative risk and assessment of healthcare utilization rates by demographic groups<0x0A><0x0A>ggplot(data=df, aes(x='Relative Risk,Assessment Of Healthcare Utilization Rates By Demographic Groups', y='Relative Risk,Assessment Of Healthcare Utilization Rates By Demographic Groups')) +<0x0A>    geom_point() +<0x0A>    scale_color_brewer(palette='Blues')
[32m[1mbar|nominal|Mortality Rate|quantitative|Poverty Rate
[31mfig = plt.figure(figsize=(10,10))<0x0A>ax1 = fig.add_subplot(1,2,1)<0x0A>ax2 = fig.add_subplot(1,2,2)<0x0A><0x0A>#ax1.set_ylim(0,3)<0x0A>#ax1.set_ylimit(-0.1, 1000)<0x0A>#ax1.set_xlim(0,3)<0x0A>#ax1.set_xticks(np.arange(0, 4000, 1000))<0x0A>#ax1.set_xticklabels(["Dog", "Nike", "Red", "USA"])<0x0A>#ax1.set_xlabel("Mortality Rate")<0x0A>#ax1.set_ylabel("Poverty Rate")<0x0A>#ax1.set_ylim(0,3)<0x0A>
[32m[1mline|temporal|Impact Of Temperature Variability On Crop Yield Statistics|quantitative|Detrended Analysis Of Yearly Weather Anomalies In Temperature Data
[31m##############################################################################################################################################################################################################################################################################################################################################################################################################
[32m[1mline|temporal|Manufacturing Output|quantitative|Fuel Consumption
[31mmarkers = ['o', '^']<0x0A>colors = ['#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000', '#000000
[32m[1mcircle|quantitative|Literacy Rate|quantitative|Export Volume
[31m# Plot the graph<0x0A>sns.set(context="paper", style="ticks", font_scale=1.5)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.95 [35m|
100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:39<00:00,  1.96s/it]



 95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 19/20 [00:06<00:00,  2.92it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.7 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.96 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mline|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
line|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
[32m[1mline|temporal|Year|quantitative|Number of meetings(average for affected firms)
circle|temporal|Year|quantitative|Number of meetings/venues (as of local firms)
[32m[1mline|temporal|Year|quantitative|Number of days
circle|temporal|Year|quantitative|Number of days
[32m[1mline|temporal|Year|quantitative|% of children under 5 taken to a health provider
line|temporal|Year|quantitative|% of children under 5 taken to a health provider
[32m[1mline|temporal|Year|quantitative|% of firms
line|temporal|Year|quantitative|% of firms
[32m[1mbar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
bar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
[32m[1mbar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commerical service exports)
bar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commercial service exports)
[32m[1mbar|nominal|Country|quantitative|Number of tractors
bar|nominal|Country|quantitative|Number of tractors
[32m[1mbar|temporal|Year|quantitative|Amount of energy used(kg of oil equivalent per capita)
bar|temporal|Year|quantitative|Amount of energy used(kg of of equivalent (per capita)
[32m[1mbar|temporal|Year|quantitative|Number of days
bar|temporal|Year|quantitative|Number of days
[32m[1mbar|temporal|Year|quantitative|Savings (current US$)
bar|temporal|Year|quantitative|Savings (current US$)
[32m[1mbar|temporal|Year|quantitative|Land (in sq. km)
bar|temporal|Year|quantitative|Land (in kg km)
[32m[1mbar|nominal|Country|quantitative|Cost (as % of GNI)
bar|nominal|Country|quantitative|Cost (as % of GNI)
[32m[1mbar|nominal|Country|quantitative|Average number of days
bar|nominal|Country|quantitative|Average number of days
[32m[1mbar|nominal|Country|quantitative|Prive value of exports (constant LCU)
bar|nominal|Country|quantitative|Prew value of exports (constant L211)
[32m[1mbar|temporal|Year|quantitative|Total reserves (current US$)
bar|temporal|Year|quantitative|Total reserves (current US$)
[32m[1mcircle|temporal|Year|quantitative|Unemployed males(% of male labor force ages 15-24)
line|temporal|Year|quantitative|Unemployed male(% of male labor force ages 15-24)
[32m[1mcircle|temporal|Year|quantitative|Mean income or consumption per capita(2011 PPP $ per day)
circle|temporal|Year|quantitative|Mean income or consumption per capita(2011 population)
[32m[1mcircle|temporal|Year|quantitative|Savings (current US$)
circle|temporal|Year|quantitative|Savings (current US$)
[32m[1mcircle|temporal|Year|quantitative|Value added (current Local Currency Unit)
line|temporal|Year|quantitative|Value added (current Local Currency Unit)
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.7 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.96 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|

100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:06<00:00,  3.04it/s]




























model.safetensors: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 1.13G/1.13G [00:56<00:00, 20.0MB/s]

[36m[1mEpoch :[39m[22m 46 [32m[1m | Loss :[39m[22m 4.062570095062256
[36m[1mEpoch :[39m[22m 47 [32m[1m | Loss :[39m[22m 4.046224117279053
[36m[1mEpoch :[39m[22m 48 [32m[1m | Loss :[39m[22m 3.9893949031829834
[36m[1mEpoch :[39m[22m 49 [32m[1m | Loss :[39m[22m 4.034387588500977
  0%|                                                    | 0/20 [00:00<?, ?it/s]












100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:33<00:00,  1.69s/it]
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
  0%|                                                    | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m95.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.95 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mcircle|quantitative|Mode Age|quantitative|Alcohol Consumption
[31m# Plot the data<0x0A>plt.scatter(mode_age, alcohol_consumption, s=100)<0x0A><0x0A># Label the axes<0x0A>plt.xlabel('Mode Age')<0x0A>plt.ylabel('Alcohol Consumption')<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1mbar|nominal|Water Usage|quantitative|CO2 Emissions
[31m# Plot the data<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A># Draw a nested barplot to show bills by day and time<0x0A>ax.bar(x=df['Water Usage'], height=df['CO2 Emissions'])<0x0A><0x0A># Set up the axes<0x0A>ax.set_ylim(0, 80000)<0x0A><0x0A># Set up the x-axis<0x0A>ax.set_xlabel('Water Usage')<0x0A>ax.set_ylabel('CO2 Emissions')<0x0A><0x0A># Set up the y-axis<0x0A>ax.set_xticklabels(['Apple', 'Dog', 'Malic', 'Nike', 'Red', 'Rock', 'Sedan', 'USA', 'USH'])
[32m[1mbar|nominal|Consumer Price Index|quantitative|Kurtosis And Skewness Of Annual Corporate Profit Margins
[31mbar|temporal|Consumer Price Index|kurtosis And Skewness Of Annual Corporate Profit Margins
[32m[1mbar|nominal|Range|quantitative|Participation Rate
bar|temporal|Range|quantitative|Participation Rate
[32m[1mbar|nominal|Median Household Income Indexed By Regional Inflation Rates|quantitative|Bond Yield
[31m# Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting
[32m[1mbar|nominal|Cost|quantitative|Quantile Regression Estimates Of Salary By Experience Level
[31mfig = plt.figure(figsize=(10, 8))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plot bar chart<0x0A>sns.barplot(x='Cost', y='Quantile Regression Estimates Of Salary By Experience Level', data=df)<0x0A><0x0A># Custom limits<0x0A>ax.set_xlim(0, 2000)<0x0A>ax.set_ylim(0, 15)<0x0A><0x0A># Custom limits<0x0A>ax.set_xticklabels(df.index, rotation=90)<0x0A>ax.set_yticklabels(df.index, rotation=0)<0x0A><0x0A># Custom limits<0x0A>ax.set_ylim(0, 15)<0x0A><0x0A># Custom limits<0x0A>ax.set_xlim(0, 2000)<0x0A>ax.set_ylim(0, 15)<0x0A><0x0A># Custom
[32m[1mcircle|quantitative|Height|quantitative|Speed
[31mheights = df.groupby('Height').mean()['Speed']<0x0A>heights.plot(kind='scatter', x='Height', y='Speed', figsize=(10,10), color='tab:blue', s=100)<0x0A>plt.axvline(heights.mean()['Speed'].mean(), color='tab:blue')<0x0A>plt.axvline(heights.mean()['Speed'].mean() + heights.mean()['Speed'].mean(), color='tab:blue')<0x0A>plt.axvline(heights.mean()['Speed'].mean() + heights.mean()['Speed'].mean(), color='tab:blue')<0x0A>plt.axvline(heights.mean()['Speed'].mean() + heights.mean()['Speed'].mean(), color='tab:blue')
[32m[1mcircle|quantitative|Log Transformed Peak Demand During Holiday Seasons At Retail Stores|quantitative|Import Volume
[31mborder|temporal|Log Transformed Peak Demand During Holiday Seasons At Retail Stores|Import Volume
[32m[1mline|temporal|Smoking Rate|quantitative|Simulation Results Of Variable Interest Rates On Bond Prices
[31m## Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['bottom'].set_color('none
[32m[1mline|temporal|Adjusted R Squared For Linear Regression Model With Heteroscedasticity|quantitative|CO2 Emissions
[31m# Plot the data<0x0A><0x0A># Set up the graph<0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A># Plot the data<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot the data<0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_color('none'
[32m[1mline|temporal|Time|quantitative|Probability Density Function for Reaction Time (seconds)
[31m# Plot the time series<0x0A>sns.set(context="paper", style="ticks", font_scale=1.5)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A># Plot the time series<0x0A>sns.lineplot(x="Time", y="Probability Density Density Function for Reaction Time (seconds)", data=time_series, ax=ax)<0x0A><0x0A># Plot the time series<0x0A>sns.despine()<0x0A><0x0A># Add a line to the plot<0x0A>sns.despine()
[32m[1mcircle|quantitative|Predictive Accuracy Of Seasonal Demand Forecasting Models|quantitative|Heterogeneity In Clinical Trial Populations By Gender And Age
[31mscatterplot(predictive_accuracy_model_df, heterogeneity_in_clinical_trial_populations_by_gender_and_age, <0x0A>            xlab = "Predictive Accuracy Of Seasonal Demand Forecasting Models", ylab = "Heterogeneity In Clinical Trial Populations By Gender And Age")
[32m[1mline|temporal|Distance|quantitative|Probability Density Function Of Age Distribution In Population Survey
[31mbar|distance|Probability Density Density Function OF Age Distribution in Population Survey
[32m[1mcircle|quantitative|Growth Rate|quantitative|GDP
[31mscatterplot = plt.figure(figsize=(10,10))<0x0A>colors = ['#000000', '#000000']<0x0A>ax = scatterplot.add_artist(colors)<0x0A><0x0A># Add axis labels<0x0A>ax.set_ylabel('GDP')<0x0A>ax.set_xlabel('Growth Rate')<0x0A><0x0A># Plot a scatter diagram for each point<0x0A>ax.scatter(x=x_axis, y=y_axis, color='#000000', s=100)<0x0A><0x0A># Plot a second axes<0x0A>ax.set_xlim(0, 5)<0x0A>ax.set_ylim(0, 80)<0x0A><0x0A># Add axis limits<0x0A>ax.set_xlim(0, 5)<0x0A><0x0A># Set limits for x axis<0x0A>ax.set_xlim(
[32m[1mline|temporal|Mental Health|quantitative|Import Volume
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.
[32m[1mcircle|quantitative|Assessment Of Healthcare Utilization Rates By Demographic Groups|quantitative|Relative Risk Assessment Of Health Outcomes In Demographic Studies
[31m# Plot the relationship between relative risk and assessment of healthcare utilization rates by demographic groups<0x0A><0x0A>ggplot(data=df, aes(x='Relative Risk,Assessment Of Healthcare Utilization Rates By Demographic Groups', y='Relative Risk,Assessment Of Healthcare Utilization Rates By Demographic Groups')) +<0x0A>    geom_point() +<0x0A>    scale_color_brewer(palette='Blues')
[32m[1mbar|nominal|Mortality Rate|quantitative|Poverty Rate
[31mfig = plt.figure(figsize=(10,10))<0x0A>ax1 = fig.add_subplot(1,2,1)<0x0A>ax2 = fig.add_subplot(1,2,2)<0x0A><0x0A># Plot the data<0x0A>ax1.bar(df_poverty_rate.index, df_poverty_rate['Poverty Rate'])<0x0A>ax1.set_xlabel('Mortality Rate')<0x0A>ax1.set_ylabel('Poverty Rate')<0x0A><0x0A># Plot the data<0x0A>ax2.bar(df_military_rate.index, df_military_rate['Mortality Rate'], color='#000000')<0x0A>ax2.set_xlabel('Mortality Rate')<0x0A>ax2.set_ylabel('Poverty Rate')<0x0A><0x0A># Plot the data<0x0A>ax2.
[32m[1mline|temporal|Impact Of Temperature Variability On Crop Yield Statistics|quantitative|Detrended Analysis Of Yearly Weather Anomalies In Temperature Data
[31m##############################################################################################################################################################################################################################################################################################################################################################################################################
[32m[1mline|temporal|Manufacturing Output|quantitative|Fuel Consumption
[31mbar|nominal|Manufacturing Output|Fuel Consumption
[32m[1mcircle|quantitative|Literacy Rate|quantitative|Export Volume
[31m# Plot the graph<0x0A>sns.set(context="paper", style="ticks", font_scale=1.5)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.95 [35m|



 85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå      | 17/20 [00:05<00:01,  2.76it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.78 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.96 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mline|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
line|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
[32m[1mline|temporal|Year|quantitative|Number of meetings(average for affected firms)
circle|temporal|Year|quantitative|Number of meetings/levers (as calculated firms)
[32m[1mline|temporal|Year|quantitative|Number of days
circle|temporal|Year|quantitative|Number of days
[32m[1mline|temporal|Year|quantitative|% of children under 5 taken to a health provider
line|temporal|Year|quantitative|% of children under 5 taken to a health provider
[32m[1mline|temporal|Year|quantitative|% of firms
line|temporal|Year|quantitative|% of firms
[32m[1mbar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
bar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
[32m[1mbar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commerical service exports)
bar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commercial service exports)
[32m[1mbar|nominal|Country|quantitative|Number of tractors
bar|nominal|Country|quantitative|Number of tractors
[32m[1mbar|temporal|Year|quantitative|Amount of energy used(kg of oil equivalent per capita)
bar|temporal|Year|quantitative|Amount of energy used(kg of oil equivalent (ex capital)
[32m[1mbar|temporal|Year|quantitative|Number of days
bar|temporal|Year|quantitative|Number of days
[32m[1mbar|temporal|Year|quantitative|Savings (current US$)
bar|temporal|Year|quantitative|Savings (current US$)
[32m[1mbar|temporal|Year|quantitative|Land (in sq. km)
bar|temporal|Year|quantitative|Land (in kg km)
[32m[1mbar|nominal|Country|quantitative|Cost (as % of GNI)
bar|nominal|Country|quantitative|Cost (as % of GNI)
[32m[1mbar|nominal|Country|quantitative|Average number of days
bar|nominal|Country|quantitative|Average number of days
[32m[1mbar|nominal|Country|quantitative|Prive value of exports (constant LCU)
bar|nominal|Country|quantitative|Prew value of exports (constant L211)
[32m[1mbar|temporal|Year|quantitative|Total reserves (current US$)
bar|temporal|Year|quantitative|Total reserves (current US$)
[32m[1mcircle|temporal|Year|quantitative|Unemployed males(% of male labor force ages 15-24)
circle|temporal|Year|quantitative|Unemployed males(% of male labor force ages 15-24)
[32m[1mcircle|temporal|Year|quantitative|Mean income or consumption per capita(2011 PPP $ per day)
circle|temporal|Year|quantitative|Mean income or consumption per capita(2011 population)
[32m[1mcircle|temporal|Year|quantitative|Savings (current US$)
circle|temporal|Year|quantitative|Savings (current US$)
[32m[1mcircle|temporal|Year|quantitative|Value added (current Local Currency Unit)
line|temporal|Year|quantitative|Value added (current Local Currency Unit)
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.78 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.96 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|

100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:06<00:00,  2.86it/s]
[36m[1mEpoch :[39m[22m 51 [32m[1m | Loss :[39m[22m 4.001458644866943
[36m[1mEpoch :[39m[22m 52 [32m[1m | Loss :[39m[22m 3.9694457054138184
[36m[1mEpoch :[39m[22m 53 [32m[1m | Loss :[39m[22m 3.9237396717071533
[36m[1mEpoch :[39m[22m 54 [32m[1m | Loss :[39m[22m 3.8792192935943604
[36m[1mEpoch :[39m[22m 55 [32m[1m | Loss :[39m[22m 3.8702661991119385












 95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 19/20 [00:31<00:01,  1.90s/it]
[35m|[39m JSON to Vega conversion error rate: [31m85.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.27 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.85 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mcircle|quantitative|Mode Age|quantitative|Alcohol Consumption
[31m# Plot the data<0x0A>plt.scatter(mode_age, alcohol_consumption, s=100)<0x0A><0x0A># Label the axes<0x0A>plt.xlabel('Mode Age')<0x0A>plt.ylabel('Alcohol Consumption')<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1mbar|nominal|Water Usage|quantitative|CO2 Emissions
bar|temporal|Water Usage|quantitative|CO2 Emissions
[32m[1mbar|nominal|Consumer Price Index|quantitative|Kurtosis And Skewness Of Annual Corporate Profit Margins
[31mbar|temporal|Consumer Price Index|kurtosis And Skewness Of Annual Corporate Profit Margins
[32m[1mbar|nominal|Range|quantitative|Participation Rate
bar|temporal|Range|quantitative|Participation Rate
[32m[1mbar|nominal|Median Household Income Indexed By Regional Inflation Rates|quantitative|Bond Yield
[31m# Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting
[32m[1mbar|nominal|Cost|quantitative|Quantile Regression Estimates Of Salary By Experience Level
[31mfig = plt.figure(figsize=(10,8))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plot bar graph<0x0A>sns.barplot(x='Cost', y='Quantile Regression Estimates Of Salary By Experience Level', data=df)<0x0A><0x0A># Plot line graph<0x0A>sns.despine(bottom=True, left=True)<0x0A>ax.set_ylabel('Quantile Regression Estimates Of Salary By Experience Level')<0x0A>ax.set_xlabel('Cost')<0x0A>ax.set_ylabel('Quantile Regression Estimates Of Salary By Experience Level')<0x0A><0x0A># Save the figure<0x0A>plt.savefig('figures/barplot_cost.png')
[32m[1mcircle|quantitative|Height|quantitative|Speed
[31mheights = df.groupby('Height').mean()['Speed']<0x0A>heights = heights.reset_index()<0x0A>heights.columns = ['Height', 'Speed']<0x0A>heights.plot(kind='scatter', x='Height', y='Speed', figsize=(10,10), color='#006699')<0x0A>plt.axvline(heights.mean()['Speed'].mean(), color='#006699', linewidth=1)<0x0A>plt.axvline(heights.mean()['Speed'].mean(), color='#006699', linewidth=1)<0x0A>plt.axvline(heights.mean()['Speed'].mean(), color='#006699', linewidth=1)<0x0A>plt.axvline(heights
[32m[1mcircle|quantitative|Log Transformed Peak Demand During Holiday Seasons At Retail Stores|quantitative|Import Volume
[31mbar|temporal|Log Transformed Peak Demand During Holiday Seasons At Retail Stores|Import Volume
[32m[1mline|temporal|Smoking Rate|quantitative|Simulation Results Of Variable Interest Rates On Bond Prices
[31m## Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['bottom'].set_color('none
[32m[1mline|temporal|Adjusted R Squared For Linear Regression Model With Heteroscedasticity|quantitative|CO2 Emissions
[31m# Plot the data<0x0A><0x0A># Set up the graph<0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A># Plot the data<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot the data<0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_color('none'
[32m[1mline|temporal|Time|quantitative|Probability Density Function for Reaction Time (seconds)
[31mtime_plot(1860, 1870, 1880, 1890, 1895, 1896, 1897, 1898, 1899, 1890)
[32m[1mcircle|quantitative|Predictive Accuracy Of Seasonal Demand Forecasting Models|quantitative|Heterogeneity In Clinical Trial Populations By Gender And Age
[31mscatterplot(predictive_accuracy_model_df, heterogeneity_in_clinical_trial_populations_by_gender_and_age)
[32m[1mline|temporal|Distance|quantitative|Probability Density Function Of Age Distribution In Population Survey
[31mbar|distance|Probability Density Density Function OF Age Distribution in Population Survey
[32m[1mcircle|quantitative|Growth Rate|quantitative|GDP
[31mscatterplot = plt.figure(figsize=(10,10))<0x0A>colors = ['#000000', '#000000']<0x0A>ax = scatterplot.add_artist(colors)<0x0A><0x0A># Draw a diagonal line using the function draw function<0x0A>ax.plot(x, y, 'o', color='#000000', linewidth=5, alpha=0.7)<0x0A><0x0A># Set limits for the limits of the axes<0x0A>ax.set_xlim(0, 5)<0x0A>ax.set_ylim(0, 80)<0x0A><0x0A># Set limits for the axes<0x0A>ax.set_xlim(0, 5)<0x0A><0x0A># Set limits for the axes<0x0A>ax.set_ylim(0, 80)<0x0A><0x0A># Set limits for the axes<0x0A>ax.set_xlim(0, 
[32m[1mline|temporal|Mental Health|quantitative|Import Volume
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['top'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['bottom'].set_color('none')<0x0A><0x0A>ax.set_xlabel('Mental Health')<0x0A>ax.set_ylabel('Import Volume')<0x0A>ax.set_ylim(0, 3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['
[32m[1mcircle|quantitative|Assessment Of Healthcare Utilization Rates By Demographic Groups|quantitative|Relative Risk Assessment Of Health Outcomes In Demographic Studies
[31m# Plot the relationship between relative risk and assessment of healthcare utilization rates by demographic groups<0x0A><0x0A>ggplot(data=df, aes(x='Relative Risk,Assessment Of Healthcare Utilization Rates By Demographic Groups', y='Relative Risk,Assessment Of Healthcare Outcomes In Demographic Studies')) +<0x0A>    geom_point() +<0x0A>    scale_color_brewer(palette='Blues')
[32m[1mbar|nominal|Mortality Rate|quantitative|Poverty Rate
[31mfig = plt.figure(figsize=(10,10))<0x0A>ax1 = fig.add_subplot(1, 2, 1)<0x0A>ax2 = fig.add_subplot(1, 2, 2)<0x0A><0x0A># Plot the data<0x0A>ax1.bar(df_poverty_rate.index, df_poverty_rate['Poverty Rate'])<0x0A>ax1.set_xlabel('Mortality Rate')<0x0A>ax1.set_ylabel('Poverty Rate')<0x0A><0x0A># Plot the data<0x0A>ax2.bar(df_military_rate.index, df_military_rate['Mortality Rate'], color='#006688', bottom=df_military_rate['Poverty Rate'])<0x0A>ax2.set_xlabel('Mortality Rate')<0x0A>ax2.set_ylabel
[32m[1mline|temporal|Impact Of Temperature Variability On Crop Yield Statistics|quantitative|Detrended Analysis Of Yearly Weather Anomalies In Temperature Data
[31m##############################################################################################################################################################################################################################################################################################################################################################################################################
[32m[1mline|temporal|Manufacturing Output|quantitative|Fuel Consumption
bar|nominal|Manufacturing Output|Fee|Fuel Consumption
[32m[1mcircle|quantitative|Literacy Rate|quantitative|Export Volume
[31m# Plot the graph<0x0A>plt.figure(figsize=(10,10))<0x0A>ax = sns.scatterplot(x="Literacy Rate", y="Epoch Volume", data=df, s=100)<0x0A>ax.set(xlabel="Literacy Rate", ylabel="Epoch Volume")<0x0A>ax.set(ylim=(0, None))<0x0A>ax.set(xlim=(0, None))<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.27 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.85 [35m|
100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:34<00:00,  1.71s/it]



 90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | 18/20 [00:06<00:00,  2.57it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.85 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.97 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mline|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
line|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
[32m[1mline|temporal|Year|quantitative|Number of meetings(average for affected firms)
line|temporal|Year|quantitative|Number of meetings/levers (as calculated firms)
[32m[1mline|temporal|Year|quantitative|Number of days
circle|temporal|Year|quantitative|Number of days
[32m[1mline|temporal|Year|quantitative|% of children under 5 taken to a health provider
line|temporal|Year|quantitative|% of children under 5 taken to a health provider
[32m[1mline|temporal|Year|quantitative|% of firms
line|temporal|Year|quantitative|% of firms
[32m[1mbar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
bar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
[32m[1mbar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commerical service exports)
bar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commercial service exports)
[32m[1mbar|nominal|Country|quantitative|Number of tractors
bar|nominal|Country|quantitative|Number of tractors
[32m[1mbar|temporal|Year|quantitative|Amount of energy used(kg of oil equivalent per capita)
bar|temporal|Year|quantitative|Amount of energy used(kg of oil equivalent (per capita)
[32m[1mbar|temporal|Year|quantitative|Number of days
bar|temporal|Year|quantitative|Number of days
[32m[1mbar|temporal|Year|quantitative|Savings (current US$)
bar|temporal|Year|quantitative|Savings (current US$)
[32m[1mbar|temporal|Year|quantitative|Land (in sq. km)
bar|temporal|Year|quantitative|Land (in kg km)
[32m[1mbar|nominal|Country|quantitative|Cost (as % of GNI)
bar|nominal|Country|quantitative|Cost (as % of GNI)
[32m[1mbar|nominal|Country|quantitative|Average number of days
bar|nominal|Country|quantitative|Average number of days
[32m[1mbar|nominal|Country|quantitative|Prive value of exports (constant LCU)
bar|nominal|Country|quantitative|Prew value of exports (constant L211)
[32m[1mbar|temporal|Year|quantitative|Total reserves (current US$)
bar|temporal|Year|quantitative|Total reserves (current US$)
[32m[1mcircle|temporal|Year|quantitative|Unemployed males(% of male labor force ages 15-24)
circle|temporal|Year|quantitative|Unemployed males(% of male labor force ages 15-24)
[32m[1mcircle|temporal|Year|quantitative|Mean income or consumption per capita(2011 PPP $ per day)
circle|temporal|Year|quantitative|Mean income or consumption per capita(2011 PPP 5 per day)
[32m[1mcircle|temporal|Year|quantitative|Savings (current US$)
circle|temporal|Year|quantitative|Savings (current US$)
[32m[1mcircle|temporal|Year|quantitative|Value added (current Local Currency Unit)
line|temporal|Year|quantitative|Value added (current Local Currency Unit)
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.85 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.97 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|

100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:07<00:00,  2.83it/s]





























model.safetensors: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 1.13G/1.13G [00:57<00:00, 19.5MB/s]
[36m[1mEpoch :[39m[22m 56 [32m[1m | Loss :[39m[22m 3.8715953826904297
[36m[1mEpoch :[39m[22m 57 [32m[1m | Loss :[39m[22m 3.844970941543579
[36m[1mEpoch :[39m[22m 58 [32m[1m | Loss :[39m[22m 3.7964212894439697
[36m[1mEpoch :[39m[22m 59 [32m[1m | Loss :[39m[22m 3.734414577484131
[36m[1mEpoch :[39m[22m 60 [32m[1m | Loss :[39m[22m 3.7389824390411377











 95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | 19/20 [00:28<00:01,  1.53s/it]
[35m|[39m JSON to Vega conversion error rate: [31m75.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.3 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.75 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mcircle|quantitative|Mode Age|quantitative|Alcohol Consumption
[31m# Plot the data<0x0A>plt.scatter(mode_age, alcohol_consumption, s=100)<0x0A><0x0A># Label the axes<0x0A>plt.xlabel('Mode Age')<0x0A>plt.ylabel('Alcohol Consumption')<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1mbar|nominal|Water Usage|quantitative|CO2 Emissions
bar|temporal|Water Usage|quantitative|CO2 Emissions
[32m[1mbar|nominal|Consumer Price Index|quantitative|Kurtosis And Skewness Of Annual Corporate Profit Margins
bar|temporal|Consumer Price Index|<0x0A>bar|Kurtosis And Skewness Of Annual Corporate Profit Margins
[32m[1mbar|nominal|Range|quantitative|Participation Rate
bar|temporal|Range|quantitative|Participation Rate
[32m[1mbar|nominal|Median Household Income Indexed By Regional Inflation Rates|quantitative|Bond Yield
[31m# Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting
[32m[1mbar|nominal|Cost|quantitative|Quantile Regression Estimates Of Salary By Experience Level
[31mfig = plt.figure(figsize=(10,8))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plot bar graph<0x0A>sns.barplot(x='Cost', y='Quantile Regression Estimates Of Salary By Experience Level', data=df)<0x0A><0x0A># Plot line graph<0x0A>sns.despine(bottom=True, left=True)<0x0A>ax.set_ylabel('Quantile Regression Estimates Of Salary By Experience Level')<0x0A>ax.set_xlabel('Cost')<0x0A>ax.set_ylabel('Quantile Regression Estimates Of Salary By Experience Level')<0x0A><0x0A># Save the figure<0x0A>plt.savefig('figures/barplot_cost.png')
[32m[1mcircle|quantitative|Height|quantitative|Speed
[31mheights = df.groupby('Height').mean()['Speed']<0x0A>heights = heights.reset_index()<0x0A>heights.columns = ['Height', 'Speed']<0x0A>heights.plot(kind='scatter', x='Height', y='Speed', figsize=(10,10), color='#006699')<0x0A>plt.axvline(heights.mean()['Speed'].mean(), color='#006699', linewidth=1)<0x0A>plt.axvline(heights.mean()['Speed'].mean(), color='#006699', linewidth=1)<0x0A>plt.axvline(heights.mean()['Speed'].mean(), color='#006699', linewidth=1)<0x0A>plt.axvline(heights
[32m[1mcircle|quantitative|Log Transformed Peak Demand During Holiday Seasons At Retail Stores|quantitative|Import Volume
[31mbar|temporal|Log Transformed Peak Demand During Holiday Seasons At Retail Stores|Import Volume
[32m[1mline|temporal|Smoking Rate|quantitative|Simulation Results Of Variable Interest Rates On Bond Prices
[31m## Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1mline|temporal|Adjusted R Squared For Linear Regression Model With Heteroscedasticity|quantitative|CO2 Emissions
[31m# Plot the linear regression model with the linear regression model<0x0A><0x0A># Set the figure size<0x0A>plt.rcParams['figure.figsize'] = (10, 10)<0x0A><0x0A># Plot the linear regression model<0x0A>sns.set(style="ticks", color_codes=True)<0x0A><0x0A># Plot the linear regression model<0x0A>sns.lineplot(x="Adjusted R Squared For Linear Regression Model With Heteroscedasticity", y="CO2 Emissions", data=df)<0x0A><0x0A># Plot the linear regression model<0x0A>sns.lineplot(x="Adjusted R Squared For Linear Regression Model With Heteroscedasticity", y="CO2 Emissions", data=df)<0x0A><0x0A># Plot the linear regression model<0x0A>sns.lineplot(x="Adjusted R Squared For Linear Regression Model With Heteroscedasticity", y="CO2 Emissions",
[32m[1mline|temporal|Time|quantitative|Probability Density Function for Reaction Time (seconds)
[31mtime_plot(1860, 1870, 1880, 1890, 1895, 1896, 1897, 1898, 1899, 1890)
[32m[1mcircle|quantitative|Predictive Accuracy Of Seasonal Demand Forecasting Models|quantitative|Heterogeneity In Clinical Trial Populations By Gender And Age
[31mscatterplot(predictive_accuracy_model_df, heterogeneity_in_clinical_trial_populations_by_gender_and_age)
[32m[1mline|temporal|Distance|quantitative|Probability Density Function Of Age Distribution In Population Survey
[31mbar|distance|Probability Density Density Function OF Age Distribution in Population Survey
[32m[1mcircle|quantitative|Growth Rate|quantitative|GDP
[31mscatterplot = plt.figure(figsize=(10,10))<0x0A>colors = ['#000000', '#000000']<0x0A>ax = scatterplot.add_artist(colors)<0x0A><0x0A># Make the margins bigger<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.set_ylim(0,80)<0x0A><0x0A># Set up margins<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A># Set up margins<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Set up margins<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spin
[32m[1mline|temporal|Mental Health|quantitative|Import Volume
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['top'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['bottom'].set_color('none')<0x0A><0x0A>ax.set_xlabel('Mental Health')<0x0A>ax.set_ylabel('Import Volume')<0x0A>ax.set_ylim(0, 3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['
[32m[1mcircle|quantitative|Assessment Of Healthcare Utilization Rates By Demographic Groups|quantitative|Relative Risk Assessment Of Health Outcomes In Demographic Studies
[31m# Plot the relationship between relative risk and assessment of healthcare utilization rates by demographic groups<0x0A><0x0A>ggplot(data=df, aes(x=relative_risk, y=assessment_health_outcome)) +<0x0A>    geom_point() +<0x0A>    labs(x="Assessment Of Healthcare Utilization Rates By Demographic Groups", y="Relative Risk, Assessment Of Health Outcomes In Demographic Studies")
[32m[1mbar|nominal|Mortality Rate|quantitative|Poverty Rate
bar|temporal|Mortality Rate|quantitative|Poverty Rate|quantitative|Poverty Rate|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative|quantitative
[32m[1mline|temporal|Impact Of Temperature Variability On Crop Yield Statistics|quantitative|Detrended Analysis Of Yearly Weather Anomalies In Temperature Data
[31m##############################################################################################################################################################################################################################################################################################################################################################################################################
[32m[1mline|temporal|Manufacturing Output|quantitative|Fuel Consumption
bar|nominal|Manufacturing Output|quantitative|Fuel Consumption
[32m[1mcircle|quantitative|Literacy Rate|quantitative|Export Volume
[31m# Plot the graph<0x0A>plt.figure(figsize=(10,10))<0x0A>ax = sns.scatterplot(x="Literacy Rate", y="Epoch Volume", data=df, s=100)<0x0A>ax.set(xlabel="Literacy Rate", ylabel="Epoch Volume")<0x0A>ax.set(ylim=(0, None))<0x0A>ax.set(xlim=(0, None))<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.3 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.75 [35m|
100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:30<00:00,  1.54s/it]
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)


 85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå      | 17/20 [00:05<00:01,  3.00it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.85 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.97 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mline|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
line|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
[32m[1mline|temporal|Year|quantitative|Number of meetings(average for affected firms)
line|temporal|Year|quantitative|Number of meetings/levers (as calculated firms)
[32m[1mline|temporal|Year|quantitative|Number of days
circle|temporal|Year|quantitative|Number of days
[32m[1mline|temporal|Year|quantitative|% of children under 5 taken to a health provider
line|temporal|Year|quantitative|% of children under 5 taken to a health provider
[32m[1mline|temporal|Year|quantitative|% of firms
line|temporal|Year|quantitative|% of firms
[32m[1mbar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
bar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
[32m[1mbar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commerical service exports)
bar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commercial service exports)
[32m[1mbar|nominal|Country|quantitative|Number of tractors
bar|nominal|Country|quantitative|Number of tractors
[32m[1mbar|temporal|Year|quantitative|Amount of energy used(kg of oil equivalent per capita)
bar|temporal|Year|quantitative|Amount of energy used(kg of oil equivalent (ex capita)
[32m[1mbar|temporal|Year|quantitative|Number of days
bar|temporal|Year|quantitative|Number of days
[32m[1mbar|temporal|Year|quantitative|Savings (current US$)
bar|temporal|Year|quantitative|Savings (current US$)
[32m[1mbar|temporal|Year|quantitative|Land (in sq. km)
bar|temporal|Year|quantitative|Land (in kg km)
[32m[1mbar|nominal|Country|quantitative|Cost (as % of GNI)
bar|nominal|Country|quantitative|Cost (as % of GNI)
[32m[1mbar|nominal|Country|quantitative|Average number of days
bar|nominal|Country|quantitative|Average number of days
[32m[1mbar|nominal|Country|quantitative|Prive value of exports (constant LCU)
bar|nominal|Country|quantitative|Prrw value of exports (constant L211)
[32m[1mbar|temporal|Year|quantitative|Total reserves (current US$)
bar|temporal|Year|quantitative|Total reserves (current US$)
[32m[1mcircle|temporal|Year|quantitative|Unemployed males(% of male labor force ages 15-24)
circle|temporal|Year|quantitative|Unemployed males(% of male labor force ages 15-24)
[32m[1mcircle|temporal|Year|quantitative|Mean income or consumption per capita(2011 PPP $ per day)
circle|temporal|Year|quantitative|Mean income or consumption per capita(2011 PPP 5 per day)
[32m[1mcircle|temporal|Year|quantitative|Savings (current US$)
circle|temporal|Year|quantitative|Savings (current US$)
[32m[1mcircle|temporal|Year|quantitative|Value added (current Local Currency Unit)
line|temporal|Year|quantitative|Value added (current Local Currency Unit)
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.85 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.97 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|

100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:06<00:00,  3.12it/s]
[36m[1mEpoch :[39m[22m 61 [32m[1m | Loss :[39m[22m 3.7741506099700928
[36m[1mEpoch :[39m[22m 62 [32m[1m | Loss :[39m[22m 3.7208008766174316
[36m[1mEpoch :[39m[22m 63 [32m[1m | Loss :[39m[22m 3.7624337673187256
[36m[1mEpoch :[39m[22m 64 [32m[1m | Loss :[39m[22m 3.6796441078186035
  5%|‚ñà‚ñà‚ñè                                         | 1/20 [00:00<00:18,  1.00it/s]










100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:27<00:00,  1.36s/it]
 25%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                                 | 5/20 [00:01<00:04,  3.35it/s]
[35m|[39m JSON to Vega conversion error rate: [31m75.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.3 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.75 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mcircle|quantitative|Mode Age|quantitative|Alcohol Consumption
[31m# Plot the data<0x0A>plt.scatter(mode_age, alcohol_consumption, s=100)<0x0A><0x0A># Label the axes<0x0A>plt.xlabel('Mode Age')<0x0A>plt.ylabel('Alcohol Consumption')<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1mbar|nominal|Water Usage|quantitative|CO2 Emissions
bar|temporal|Water Usage|quantitative|CO2 Emissions
[32m[1mbar|nominal|Consumer Price Index|quantitative|Kurtosis And Skewness Of Annual Corporate Profit Margins
bar|temporal|Consumer Price Index|<0x0A>bar|Kurtosis And Skewness Of Annual Corporate Profit Margins
[32m[1mbar|nominal|Range|quantitative|Participation Rate
bar|temporal|Range|quantitative|Participation Rate
[32m[1mbar|nominal|Median Household Income Indexed By Regional Inflation Rates|quantitative|Bond Yield
[31m# Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting
[32m[1mbar|nominal|Cost|quantitative|Quantile Regression Estimates Of Salary By Experience Level
[31mbar|Cost|quantitative|Quantile Regression Estimates Of Salary By Experience Level
[32m[1mcircle|quantitative|Height|quantitative|Speed
[31mheights = df.groupby('Height')['Speed'].mean()<0x0A>heights.plot(kind='scatter', x='Height', y='Speed', figsize=(10,10), color='tab:blue', s=100)<0x0A>plt.axvline(heights.mean(), color='k', linewidth=1)<0x0A>plt.axvline(heights.median(), color='k', linewidth=1)<0x0A>plt.axvline(heights.mean() + heights.std(), color='k', linewidth=1)<0x0A>plt.axvline(heights.mean() - heights.std(), color='k', linewidth=1)<0x0A>plt.axvline(heights.mean() - heights.std(), color='k', linewidth=1)<0x0A>plt.a
[32m[1mcircle|quantitative|Log Transformed Peak Demand During Holiday Seasons At Retail Stores|quantitative|Import Volume
[31mline|temporal|Log Transformed Peak Demand During Holiday Seasons At Retail Stores|Import Volume
[32m[1mline|temporal|Smoking Rate|quantitative|Simulation Results Of Variable Interest Rates On Bond Prices
[31m## Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1mline|temporal|Adjusted R Squared For Linear Regression Model With Heteroscedasticity|quantitative|CO2 Emissions
[31m# Plot the linear regression model with the linear regression model<0x0A><0x0A># Set the figure size<0x0A>plt.rcParams['figure.figsize'] = (10, 10)<0x0A><0x0A># Plot the linear regression model<0x0A>sns.set(style="ticks", color_codes=True)<0x0A><0x0A># Plot the linear regression model<0x0A>sns.lineplot(x="Adjusted R Squared For Linear Regression Model With Heteroscedasticity", y="CO2 Emissions", data=df)<0x0A><0x0A># Plot the linear regression model<0x0A>sns.lineplot(x="Adjusted R Squared For Linear Regression Model With Heteroscedasticity", y="CO2 Emissions", data=df)
[32m[1mline|temporal|Time|quantitative|Probability Density Function for Reaction Time (seconds)
[31mtime_plot(1860, 1890, 1890, 1890, 1890)
[32m[1mcircle|quantitative|Predictive Accuracy Of Seasonal Demand Forecasting Models|quantitative|Heterogeneity In Clinical Trial Populations By Gender And Age
[31mscatterplot(predictive_accuracy_model_df, heterogeneity_in_clinical_trial_populations_by_gender_and_age)
[32m[1mline|temporal|Distance|quantitative|Probability Density Function Of Age Distribution In Population Survey
[31mbar|distance|Probability Density Density Function OF Age Distribution in Population Survey
[32m[1mcircle|quantitative|Growth Rate|quantitative|GDP
[31mscatterplot = plt.figure(figsize=(10,10))<0x0A>colors = ['#000000', '#000000']<0x0A>ax = scatterplot.add_artist(colors)<0x0A><0x0A># Make the margins bigger<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.set_ylim(0,80)<0x0A><0x0A># Set up margins<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A># Set up margins<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['bottom'].set_color('none')<0x0A><0x0A># Set up margins<0x0A>ax.
[32m[1mline|temporal|Mental Health|quantitative|Import Volume
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.
[32m[1mcircle|quantitative|Assessment Of Healthcare Utilization Rates By Demographic Groups|quantitative|Relative Risk Assessment Of Health Outcomes In Demographic Studies
[31m# Plot the relationship between relative risk and assessment of healthcare utilization rates by demographic groups<0x0A><0x0A>ggplot(data=df, aes(x=relative_risk, y=assessment_health_outcome)) +<0x0A>    geom_point() +<0x0A>    scale_color_brewer(palette="Blues_d") +<0x0A>    theme_bw() +<0x0A>    theme(axis.text.x = element_text(angle=90, hjust=1))
[32m[1mbar|nominal|Mortality Rate|quantitative|Poverty Rate
bar|temporal|Mortality Rate|quantitative|Poverty Rate
[32m[1mline|temporal|Impact Of Temperature Variability On Crop Yield Statistics|quantitative|Detrended Analysis Of Yearly Weather Anomalies In Temperature Data
[31m## Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.plot(temp_data_df['temp_var_1'], temp_data_df['temp_var_2'], linewidth=0.5)<0x0A>ax.plot(temp_data_df['temp_var_1'], temp_data_df['temp_var_2'], linewidth=0.5)<0x0A>ax.plot(temp_data_df['temp_var_1'], temp_data_df['temp_var_2'], linewidth=0.5)<0x0A>ax.plot(temp_data_df['temp_var_1'], temp_data_df['temp_var_2'], linewidth=0.5)<0x0A>ax.plot(temp_data_df['temp_var_1'], temp_
[32m[1mline|temporal|Manufacturing Output|quantitative|Fuel Consumption
bar|nominal|Manufacturing Output|quantitative|Fuel Consumption
[32m[1mcircle|quantitative|Literacy Rate|quantitative|Export Volume
[31m# Plot the graph<0x0A>plt.figure(figsize=(10,10))<0x0A>ax = sns.scatterplot(x=df['Literacy Rate'], y=df['Epoch Volume'], s=100, color='#000000')<0x0A>ax.set(xlabel='Literacy Rate', ylabel='Epoch Volume')<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.tick_params(labelsize=15)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A># Plot the graph<0x0A>plt.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.3 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.75 [35m|


 85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå      | 17/20 [00:05<00:01,  2.98it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.85 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.97 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mline|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
line|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
[32m[1mline|temporal|Year|quantitative|Number of meetings(average for affected firms)
line|temporal|Year|quantitative|Number of meetings/averages for officials firms
[32m[1mline|temporal|Year|quantitative|Number of days
circle|temporal|Year|quantitative|Number of days
[32m[1mline|temporal|Year|quantitative|% of children under 5 taken to a health provider
line|temporal|Year|quantitative|% of children under 5 taken to a health provider
[32m[1mline|temporal|Year|quantitative|% of firms
line|temporal|Year|quantitative|% of firms
[32m[1mbar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
bar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
[32m[1mbar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commerical service exports)
bar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commercial service exports)
[32m[1mbar|nominal|Country|quantitative|Number of tractors
bar|nominal|Country|quantitative|Number of tractors
[32m[1mbar|temporal|Year|quantitative|Amount of energy used(kg of oil equivalent per capita)
bar|temporal|Year|quantitative|Amount of energy used(kg of oil equivalent (ex capita)
[32m[1mbar|temporal|Year|quantitative|Number of days
bar|temporal|Year|quantitative|Number of days
[32m[1mbar|temporal|Year|quantitative|Savings (current US$)
bar|temporal|Year|quantitative|Savings (current US$)
[32m[1mbar|temporal|Year|quantitative|Land (in sq. km)
bar|temporal|Year|quantitative|Land (in kg km)
[32m[1mbar|nominal|Country|quantitative|Cost (as % of GNI)
bar|nominal|Country|quantitative|Cost (as % of GNI)
[32m[1mbar|nominal|Country|quantitative|Average number of days
bar|nominal|Country|quantitative|Average number of days
[32m[1mbar|nominal|Country|quantitative|Prive value of exports (constant LCU)
bar|nominal|Country|quantitative|Prrw value of exports (constant L211)
[32m[1mbar|temporal|Year|quantitative|Total reserves (current US$)
bar|temporal|Year|quantitative|Total reserves (current US$)
[32m[1mcircle|temporal|Year|quantitative|Unemployed males(% of male labor force ages 15-24)
circle|temporal|Year|quantitative|Unemployed males(% of male labor force ages 15-24)
[32m[1mcircle|temporal|Year|quantitative|Mean income or consumption per capita(2011 PPP $ per day)
circle|temporal|Year|quantitative|Mean income or consumption per capita(2011 PPP $ per day)
[32m[1mcircle|temporal|Year|quantitative|Savings (current US$)
circle|temporal|Year|quantitative|Savings (current US$)
[32m[1mcircle|temporal|Year|quantitative|Value added (current Local Currency Unit)
line|temporal|Year|quantitative|Value added (current Local Currency Unit)
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.85 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.97 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|

100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:06<00:00,  3.00it/s]
[36m[1mEpoch :[39m[22m 66 [32m[1m | Loss :[39m[22m 3.699728012084961
[36m[1mEpoch :[39m[22m 67 [32m[1m | Loss :[39m[22m 3.6159162521362305
[36m[1mEpoch :[39m[22m 68 [32m[1m | Loss :[39m[22m 3.6004488468170166
[36m[1mEpoch :[39m[22m 69 [32m[1m | Loss :[39m[22m 3.6198554039001465
  0%|                                                    | 0/20 [00:00<?, ?it/s]










100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:27<00:00,  1.36s/it]
 10%|‚ñà‚ñà‚ñà‚ñà‚ñç                                       | 2/20 [00:00<00:06,  2.79it/s]
[35m|[39m JSON to Vega conversion error rate: [31m75.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.3 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.75 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mcircle|quantitative|Mode Age|quantitative|Alcohol Consumption
[31m# Plot the data<0x0A>plt.scatter(mode_age, alcohol_consumption, s=100)<0x0A><0x0A># Label the axes<0x0A>plt.xlabel('Mode Age')<0x0A>plt.ylabel('Alcohol Consumption')<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1mbar|nominal|Water Usage|quantitative|CO2 Emissions
bar|temporal|Water Usage|quantitative|CO2 Emissions
[32m[1mbar|nominal|Consumer Price Index|quantitative|Kurtosis And Skewness Of Annual Corporate Profit Margins
bar|temporal|Consumer Price Index|<0x0A>bar|Kurtosis And Skewness Of Annual Corporate Profit Margins
[32m[1mbar|nominal|Range|quantitative|Participation Rate
bar|temporal|Range|quantitative|Participation Rate
[32m[1mbar|nominal|Median Household Income Indexed By Regional Inflation Rates|quantitative|Bond Yield
[31m# Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting
[32m[1mbar|nominal|Cost|quantitative|Quantile Regression Estimates Of Salary By Experience Level
[31mbar|Cost|quantitative|Quantile Regression Estimates Of Salary By Experience Level
[32m[1mcircle|quantitative|Height|quantitative|Speed
[31mheights = df.groupby('Height')['Speed'].mean()<0x0A>heights.plot(kind='scatter', x='Height', y='Speed', figsize=(10,10), color='tab:blue', s=100)<0x0A>plt.axvline(heights.mean(), color='k', linewidth=1)<0x0A>plt.axvline(heights.median(), color='k', linewidth=1)<0x0A>plt.axvline(heights.mean() + heights.std(), color='k', linewidth=1)<0x0A>plt.axvline(heights.mean() - heights.std(), color='k', linewidth=1)<0x0A>plt.axvline(heights.mean() - heights.std(), color='k', linewidth=1)<0x0A>plt.a
[32m[1mcircle|quantitative|Log Transformed Peak Demand During Holiday Seasons At Retail Stores|quantitative|Import Volume
[31mline|temporal|Log Transformed Peak Demand During Holiday Seasons At Retail Stores|Import Volume
[32m[1mline|temporal|Smoking Rate|quantitative|Simulation Results Of Variable Interest Rates On Bond Prices
[31m## Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(smoking_rates, smoking_results)<0x0A>ax.set_xlabel('Smoking Rate')<0x0A>ax.set_ylabel('Simulation Results Of Variable Interest Rates On Bond Prices')<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A>ax.spines['bottom'].set_position(('data',0))<0x0A>ax.spines['left'].set_position(('data',0))<0x0A><0x0A># Plotting the graph<0x0A>ax.spines['left'].set_position(('data',0))<0x0A>ax.spines['bottom'].set_position(('data'
[32m[1mline|temporal|Adjusted R Squared For Linear Regression Model With Heteroscedasticity|quantitative|CO2 Emissions
[31m# Plot the line graph<0x0A><0x0A># Set up the random variables<0x0A>x = np.arange(1, 100, 1)<0x0A>y = np.random.rand(100)<0x0A><0x0A># Plot the line graph<0x0A>plt.figure(figsize=(10,10))<0x0A>plt.plot(x, y)<0x0A>plt.ylabel('CO2 Emissions')<0x0A>plt.xlabel('Adjusted R Squared For Linear Regression Model With Heteroscedasticity')<0x0A>plt.grid(linestyle='dashdot', color='grey', linewidth=1, alpha=0.5)<0x0A>plt.grid(color='grey', linewidth=1, alpha=0.5)<0x0A><0x0A># Add axis labels<0x0A>plt.xticks(x, ['1.814', '1.816'
[32m[1mline|temporal|Time|quantitative|Probability Density Function for Reaction Time (seconds)
[31mtime_plot(1860, 1870, 1880, 1890, 1895, 1896, 1897, 1898, 1899, 1890)
[32m[1mcircle|quantitative|Predictive Accuracy Of Seasonal Demand Forecasting Models|quantitative|Heterogeneity In Clinical Trial Populations By Gender And Age
[31mscatterplot(predictive_accuracy_model_df, heterogeneity_in_clinical_trial_populations_by_gender_and_age)
[32m[1mline|temporal|Distance|quantitative|Probability Density Function Of Age Distribution In Population Survey
[31mbar|distance|Probability Density Density Function OF Age Distribution in Population Survey
[32m[1mcircle|quantitative|Growth Rate|quantitative|GDP
[31mscatterplot = graphprops = {'color': 'blue', 'linewidth': 2, 'edgecolor': 'black', 'linewidth': 2, 'edgecolor':'black', 'linewidth': 2, 'edgecolor':'black', 'linewidth': 2, 'linecolor':'black', 'linewidth': 2, 'linewidth': 2, 'linecolor':'black', 'linewidth': 2, 'linewidth': 2, 'linecolor':'black', 'linewidth': 2, 'linecolor':'black', 'linewidth': 2, 'linecolor':'black', 'linewidth': 2, 'linecolor':'black', 'linewidth': 2,
[32m[1mline|temporal|Mental Health|quantitative|Import Volume
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.set_xlabel('Mental Health')<0x0A>ax.set_ylabel('Import Volume')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left
[32m[1mcircle|quantitative|Assessment Of Healthcare Utilization Rates By Demographic Groups|quantitative|Relative Risk Assessment Of Health Outcomes In Demographic Studies
[31m# Plot the relationship between relative risk and assessment of healthcare utilization rates by demographic groups<0x0A><0x0A>ggplot(data=df, aes(x=relative_risk, y=assessment_health_outcome)) +<0x0A>    geom_point() +<0x0A>    labs(x="Assessment Of Healthcare Utilization Rates By Demographic Groups", y="Relative Risk, Assessment Of Health. Outcomes In Demographic Studies")
[32m[1mbar|nominal|Mortality Rate|quantitative|Poverty Rate
bar|temporal|Mortality Rate|quantitative|Poverty Rate
[32m[1mline|temporal|Impact Of Temperature Variability On Crop Yield Statistics|quantitative|Detrended Analysis Of Yearly Weather Anomalies In Temperature Data
[31mgraph = df.plot(figsize=(10,10))<0x0A><0x0A># Plot the line graph<0x0A>line = graph.get_lines()<0x0A>line.set_dashes((10,10))<0x0A><0x0A># Plot the line graph<0x0A>graph.draw()<0x0A><0x0A># Plot the line graph<0x0A>line.set_dashes((10,10))<0x0A>line.set_dashes((10,10))<0x0A>line.set_dashes((10,10))<0x0A><0x0A># Plot the line graph<0x0A>graph.draw()<0x0A><0x0A># Plot the line graph<0x0A>line.set_dashes((10,10))<0x0A>line.set_dashes((10,10))<0x0A>line.set_dashes((10,10))<0x0A>line.set_dashes((10,10))<0x0A>line.set_dashes((10,10))<0x0A>line.
[32m[1mline|temporal|Manufacturing Output|quantitative|Fuel Consumption
bar|nominal|Manufacturing Output|quantitative|Fuel Consumption
[32m[1mcircle|quantitative|Literacy Rate|quantitative|Export Volume
[31m# Plot the graph<0x0A>plt.figure(figsize=(10,10))<0x0A>ax = sns.scatterplot(x=df['Literacy Rate'], y=df['Epoch Volume'], s=100, color='#000000')<0x0A>ax.set(xlabel='Literacy Rate', ylabel='Epoch Volume')<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.tick_params(labelsize=16)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A># Plot the graph<0x0A>plt.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.3 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.75 [35m|



100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:06<00:00,  2.96it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.85 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mline|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
line|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
[32m[1mline|temporal|Year|quantitative|Number of meetings(average for affected firms)
line|temporal|Year|quantitative|Number of meetings/average for elected firms
[32m[1mline|temporal|Year|quantitative|Number of days
circle|temporal|Year|quantitative|Number of days
[32m[1mline|temporal|Year|quantitative|% of children under 5 taken to a health provider
line|temporal|Year|quantitative|% of children under 5 taken to a health provider
[32m[1mline|temporal|Year|quantitative|% of firms
line|temporal|Year|quantitative|% of firms
[32m[1mbar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
bar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
[32m[1mbar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commerical service exports)
bar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commercial service exports)
[32m[1mbar|nominal|Country|quantitative|Number of tractors
bar|nominal|Country|quantitative|Number of tractors
[32m[1mbar|temporal|Year|quantitative|Amount of energy used(kg of oil equivalent per capita)
bar|temporal|Year|quantitative|Amount of energy used(kg of oil equivalent per capita)
[32m[1mbar|temporal|Year|quantitative|Number of days
bar|temporal|Year|quantitative|Number of days
[32m[1mbar|temporal|Year|quantitative|Savings (current US$)
bar|temporal|Year|quantitative|Savings (current US$)
[32m[1mbar|temporal|Year|quantitative|Land (in sq. km)
bar|temporal|Year|quantitative|Land (in kg km)
[32m[1mbar|nominal|Country|quantitative|Cost (as % of GNI)
bar|nominal|Country|quantitative|Cost (as % of GNI)
[32m[1mbar|nominal|Country|quantitative|Average number of days
bar|nominal|Country|quantitative|Average number of days
[32m[1mbar|nominal|Country|quantitative|Prive value of exports (constant LCU)
bar|nominal|Country|quantitative|Prrw value of exports (constant L211)
[32m[1mbar|temporal|Year|quantitative|Total reserves (current US$)
bar|temporal|Year|quantitative|Total reserves (current US$)
[32m[1mcircle|temporal|Year|quantitative|Unemployed males(% of male labor force ages 15-24)
circle|temporal|Year|quantitative|Unemployed males(% of male labor force ages 15-24)
[32m[1mcircle|temporal|Year|quantitative|Mean income or consumption per capita(2011 PPP $ per day)
circle|temporal|Year|quantitative|Mean income or consumption per capita(2011 PPP $ per day)
[32m[1mcircle|temporal|Year|quantitative|Savings (current US$)
circle|temporal|Year|quantitative|Savings (current US$)
[32m[1mcircle|temporal|Year|quantitative|Value added (current Local Currency Unit)
line|temporal|Year|quantitative|Value added (current Local Currency Unit)
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.85 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
































model.safetensors: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 1.13G/1.13G [01:01<00:00, 18.3MB/s]
[36m[1mEpoch :[39m[22m 71 [32m[1m | Loss :[39m[22m 3.581742763519287
[36m[1mEpoch :[39m[22m 72 [32m[1m | Loss :[39m[22m 3.565194606781006
[36m[1mEpoch :[39m[22m 73 [32m[1m | Loss :[39m[22m 3.5156490802764893
[36m[1mEpoch :[39m[22m 74 [32m[1m | Loss :[39m[22m 3.525628089904785
  0%|                                                    | 0/20 [00:00<?, ?it/s]












100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:25<00:00,  1.27s/it]
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
 15%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå                                     | 3/20 [00:01<00:05,  3.14it/s]
[35m|[39m JSON to Vega conversion error rate: [31m75.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.3 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.75 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mcircle|quantitative|Mode Age|quantitative|Alcohol Consumption
[31m# Plot the data<0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A># Plot the data<0x0A>sns.regplot(x='Mode Age', y='Alcohol Consumption', data=df, fit_reg=False, scatter_kws={'s':70})<0x0A><0x0A># Plot the data<0x0A>sns.despine(offset=10, trim=True)<0x0A><0x0A># Add axis labels<0x0A>plt.xlabel('Mode Age')<0x0A>plt.ylabel('Alcohol Consumption')<0x0A><0x0A># Turn off axis lines<0x0A>plt.gca().spines['top'].set_visible(False)<0x0A>plt.gca().spines['right'].set_visible(False)<0x0A><0x0A># Turn off axis lines<0x0A>plt.gca().spines['bottom'].set_visible(False)
[32m[1mbar|nominal|Water Usage|quantitative|CO2 Emissions
bar|temporal|Water Usage|quantitative|CO2 Emissions
[32m[1mbar|nominal|Consumer Price Index|quantitative|Kurtosis And Skewness Of Annual Corporate Profit Margins
bar|temporal|Consumer Price Index|<0x0A>table|Kurtosis And Skewness Of Annual Corporate Profit Margins
[32m[1mbar|nominal|Range|quantitative|Participation Rate
bar|temporal|Range|quantitative|Participation Rate
[32m[1mbar|nominal|Median Household Income Indexed By Regional Inflation Rates|quantitative|Bond Yield
[31m# Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting the graph<0x0A><0x0A># Plotting
[32m[1mbar|nominal|Cost|quantitative|Quantile Regression Estimates Of Salary By Experience Level
[31mbar|Cost|quantitative|Quantile Regression Estimates Of Salary By Experience Level
[32m[1mcircle|quantitative|Height|quantitative|Speed
[31mheights = df.Height.values<0x0A>heights = heights.values<0x0A><0x0A>fig = plt.figure(figsize=(10,10))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.scatter(heights, heights, s=heights*10)<0x0A><0x0A>ax.set_xlabel('Height')<0x0A>ax.set_ylabel('Speed')<0x0A>ax.set_xlim(0,heights)<0x0A>ax.set_ylim(0,heights)<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.set_xticks([0,50,100,150,250])<0x0A>ax.set_xticks([0,50,100,150,2
[32m[1mcircle|quantitative|Log Transformed Peak Demand During Holiday Seasons At Retail Stores|quantitative|Import Volume
[31mline|temporal|Log Transformed Peak Demand During Holiday Seasons At Retail Stores|Import Volume
[32m[1mline|temporal|Smoking Rate|quantitative|Simulation Results Of Variable Interest Rates On Bond Prices
[31m## Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(smoking_rates, smoking_results)<0x0A>ax.set_xlabel('Smoking Rate')<0x0A>ax.set_ylabel('Simulation Results Of Variable Interest Rates On Bond Prices')<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A>ax.spines['bottom'].set_position(('data',0))<0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_position(('data',0))<0x0A><0x0A># Plotting the graph<0x0A>ax.spines['left'].set_position(('data',0))
[32m[1mline|temporal|Adjusted R Squared For Linear Regression Model With Heteroscedasticity|quantitative|CO2 Emissions
[31mbar|temporal|Adjusted R Squared For Linear Regression Model With Heteroscedasticity
[32m[1mline|temporal|Time|quantitative|Probability Density Function for Reaction Time (seconds)
[31mtime_plot(1860, 1870, 1880, 1890, 1895, 1896, 1897, 1898, 1899, 1890)
[32m[1mcircle|quantitative|Predictive Accuracy Of Seasonal Demand Forecasting Models|quantitative|Heterogeneity In Clinical Trial Populations By Gender And Age
[31mscatterplot(predictive_accuracy_model_df, heterogeneity_in_clinical_trial_populations_by_gender_and_age)
[32m[1mline|temporal|Distance|quantitative|Probability Density Function Of Age Distribution In Population Survey
[31mbar|distance|Probability Density Density Function OF Age Distribution in Population Survey
[32m[1mcircle|quantitative|Growth Rate|quantitative|GDP
[31mscatterplot = graphprops = {'color': 'blue', 'linewidth': 2, 'edgecolor': 'black', 'linewidth': 2, 'edgecolor':'black', 'linewidth': 2, 'edgecolor':'black', 'linewidth': 2, 'linecolor':'black', 'linewidth': 2, 'linewidth': 2, 'linecolor':'black', 'linewidth': 2, 'linecolor':'black', 'linewidth': 2, 'linecolor':'black', 'linewidth': 2, 'linecolor':'black', 'linewidth': 2, 'linecolor':'black', 'linewidth': 2, 'linecolor':'black', 
[32m[1mline|temporal|Mental Health|quantitative|Import Volume
[31mimport_volume = []<0x0A><0x0A>for i in range(0, len(df_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2
[32m[1mcircle|quantitative|Assessment Of Healthcare Utilization Rates By Demographic Groups|quantitative|Relative Risk Assessment Of Health Outcomes In Demographic Studies
[31m# Plot the relationship between relative risk and assessment of healthcare utilization rates by demographic groups<0x0A><0x0A>ggplot(data=df, aes(x=relative_risk, y=assessment_health_outcome)) +<0x0A>    geom_point() +<0x0A>    labs(x="Assessment Of Healthcare Utilization Rates By Demographic Groups", y="Relative Risk, Assessment Of Health Outcomes In Demographic Studies")
[32m[1mbar|nominal|Mortality Rate|quantitative|Poverty Rate
bar|temporal|Mortality Rate|quantitative|Poverty Rate
[32m[1mline|temporal|Impact Of Temperature Variability On Crop Yield Statistics|quantitative|Detrended Analysis Of Yearly Weather Anomalies In Temperature Data
[31mgraph = df.plot(figsize=(10,10))<0x0A><0x0A># Plot the line graph<0x0A>line = graph.plot(line, line, color='#445555', linewidth=1)<0x0A><0x0A># Plot the line graph<0x0A>line.set(color='#445555', linewidth=1)<0x0A><0x0A># Plot the line graph<0x0A>line.set(color='#445555', linewidth=1)<0x0A><0x0A># Plot the line graph<0x0A>line.set(color='#445555', linewidth=1)<0x0A><0x0A># Plot the line graph<0x0A>line.set(color='#445555', linewidth=1)<0x0A><0x0A># Plot the line graph<0x0A>line.set(color='#445555', linewidth=1)<0x0A><0x0A># Plot the line graph<0x0A>line
[32m[1mline|temporal|Manufacturing Output|quantitative|Fuel Consumption
bar|nominal|Manufacturing Output|quantitative|Fuel Consumption
[32m[1mcircle|quantitative|Literacy Rate|quantitative|Export Volume
[31m# Plot the graph<0x0A>plt.figure(figsize=(10,10))<0x0A>ax = sns.scatterplot(x=df['Literacy Rate'], y=df['Epoch Volume'], s=100, color='#000000')<0x0A>ax.set(xlabel='Literacy Rate', ylabel='Epoch Volume')<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.tick_params(labelsize=16)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A># Plot the graph<0x0A>plt.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.3 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.75 [35m|



100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:06<00:00,  2.99it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.85 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mline|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
line|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
[32m[1mline|temporal|Year|quantitative|Number of meetings(average for affected firms)
line|temporal|Year|quantitative|Number of meetings/average for elected firms
[32m[1mline|temporal|Year|quantitative|Number of days
circle|temporal|Year|quantitative|Number of days
[32m[1mline|temporal|Year|quantitative|% of children under 5 taken to a health provider
line|temporal|Year|quantitative|% of children under 5 taken to a health provider
[32m[1mline|temporal|Year|quantitative|% of firms
line|temporal|Year|quantitative|% of firms
[32m[1mbar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
bar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
[32m[1mbar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commerical service exports)
bar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commerical service exports)
[32m[1mbar|nominal|Country|quantitative|Number of tractors
bar|nominal|Country|quantitative|Number of tractors
[32m[1mbar|temporal|Year|quantitative|Amount of energy used(kg of oil equivalent per capita)
bar|temporal|Year|quantitative|Amount of energy used(kg of oil equivalent per capita)
[32m[1mbar|temporal|Year|quantitative|Number of days
bar|temporal|Year|quantitative|Number of days
[32m[1mbar|temporal|Year|quantitative|Savings (current US$)
bar|temporal|Year|quantitative|Savings (current US$)
[32m[1mbar|temporal|Year|quantitative|Land (in sq. km)
bar|temporal|Year|quantitative|Land (in kg km)
[32m[1mbar|nominal|Country|quantitative|Cost (as % of GNI)
bar|nominal|Country|quantitative|Cost (as % of GNI)
[32m[1mbar|nominal|Country|quantitative|Average number of days
bar|nominal|Country|quantitative|Average number of days
[32m[1mbar|nominal|Country|quantitative|Prive value of exports (constant LCU)
bar|nominal|Country|quantitative|Prrw value of exports (constant L211)
[32m[1mbar|temporal|Year|quantitative|Total reserves (current US$)
bar|temporal|Year|quantitative|Total reserves (current US$)
[32m[1mcircle|temporal|Year|quantitative|Unemployed males(% of male labor force ages 15-24)
circle|temporal|Year|quantitative|Unemployed males(% of male labor force ages 15-24)
[32m[1mcircle|temporal|Year|quantitative|Mean income or consumption per capita(2011 PPP $ per day)
circle|temporal|Year|quantitative|Mean income or consumption per capita(2011 PPP $ per day)
[32m[1mcircle|temporal|Year|quantitative|Savings (current US$)
circle|temporal|Year|quantitative|Savings (current US$)
[32m[1mcircle|temporal|Year|quantitative|Value added (current Local Currency Unit)
line|temporal|Year|quantitative|Value added (current Local Currency Unit)
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.85 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 76 [32m[1m | Loss :[39m[22m 3.4835598468780518
[36m[1mEpoch :[39m[22m 77 [32m[1m | Loss :[39m[22m 3.450140953063965
[36m[1mEpoch :[39m[22m 78 [32m[1m | Loss :[39m[22m 3.420619249343872
[36m[1mEpoch :[39m[22m 79 [32m[1m | Loss :[39m[22m 3.421994209289551
[36m[1mEpoch :[39m[22m 80 [32m[1m | Loss :[39m[22m 3.3646106719970703









100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:26<00:00,  1.35s/it]
  5%|‚ñà‚ñà‚ñè                                         | 1/20 [00:00<00:07,  2.60it/s]
[35m|[39m JSON to Vega conversion error rate: [31m75.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.3 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.75 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mcircle|quantitative|Mode Age|quantitative|Alcohol Consumption
[31m# Plot the results as a scatter plot<0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A># Use the current Axes labels as labels<0x0A># Use the current axis labels as labels<0x0A># Use the current axis labels as labels<0x0A># Use the current axis labels as labels<0x0A># Use the current axis labels as labels<0x0A># Use the current axis labels as labels<0x0A># Use the current axis labels as labels<0x0A># Use the current axis labels as labels<0x0A># Use the current axis labels as labels<0x0A># Use the current axis labels as labels<0x0A># Use the current axis labels as labels<0x0A># Use the current axis labels as labels<0x0A># Use the current axis labels as labels<0x0A># Use the current axis labels as labels<0x0A># Use the current axis labels as labels<0x0A># Use the current axis labels as labels<0x0A># Use the current axis labels as labels<0x0A># Use the current axis labels as labels<0x0A># Use the current
[32m[1mbar|nominal|Water Usage|quantitative|CO2 Emissions
bar|temporal|Water Usage|quantitative|CO2 Emissions
[32m[1mbar|nominal|Consumer Price Index|quantitative|Kurtosis And Skewness Of Annual Corporate Profit Margins
bar|temporal|Consumer Price Index|quantitative|Kurtosis And Skewness Of Annual Corporate Profit Margins
[32m[1mbar|nominal|Range|quantitative|Participation Rate
bar|temporal|Range|quantitative|Participation Rate
[32m[1mbar|nominal|Median Household Income Indexed By Regional Inflation Rates|quantitative|Bond Yield
[31m# Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting the results<0x0A><0x0A># Plotting
[32m[1mbar|nominal|Cost|quantitative|Quantile Regression Estimates Of Salary By Experience Level
[31mbar|Cost|quantitative|Quantile Regression Estimates Of Salary By Experience Level
[32m[1mcircle|quantitative|Height|quantitative|Speed
[31mheights = df.Height.values<0x0A>heights = heights.values<0x0A><0x0A>fig = plt.figure(figsize=(10,10))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.scatter(heights, heights, s=heights*10)<0x0A><0x0A>ax.set_xlabel('Height')<0x0A>ax.set_ylabel('Speed')<0x0A>ax.set_xlim(0,heights)<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.set_xticks([0,50,100,150,250])<0x0A>ax.set_xticklabels(['0','50','100','150','250'])<0x0A>ax
[32m[1mcircle|quantitative|Log Transformed Peak Demand During Holiday Seasons At Retail Stores|quantitative|Import Volume
[31mline|temporal|Log Transformed Peak Demand During Holiday Seasons At Retail Stores|Import Volume
[32m[1mline|temporal|Smoking Rate|quantitative|Simulation Results Of Variable Interest Rates On Bond Prices
[31m## Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(smoking_rates, smoking_results)<0x0A>ax.set_xlabel('Smoking Rate')<0x0A>ax.set_ylabel('Simulation Results Of Variable Interest Rates On Bond Prices')<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A>ax.spines['bottom'].set_position(('data',0))<0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_position(('data',0))<0x0A><0x0A># Plotting the graph<0x0A>ax.spines['left'].set_position(('data',0))
[32m[1mline|temporal|Adjusted R Squared For Linear Regression Model With Heteroscedasticity|quantitative|CO2 Emissions
[31mbar|temporal|Adjusted R Squared For Linear Regression Model With Heteroscedasticity
[32m[1mline|temporal|Time|quantitative|Probability Density Function for Reaction Time (seconds)
[31mtime_plot(1860, 1870, 1880, 1890, 1895, 1896, 1897, 1898, 1899, 1890)
[32m[1mcircle|quantitative|Predictive Accuracy Of Seasonal Demand Forecasting Models|quantitative|Heterogeneity In Clinical Trial Populations By Gender And Age
[31mscatterplot(predictive_accuracy_model_df, heterogeneity_in_clinical_trial_populations_by_gender_and_age)
[32m[1mline|temporal|Distance|quantitative|Probability Density Function Of Age Distribution In Population Survey
[31mbar|distance|Probability Density Density Function OF Age Distribution in Population Survey
[32m[1mcircle|quantitative|Growth Rate|quantitative|GDP
[31mscatterplot = graphprops = {'color': 'blue', 'linewidth': 2, 'edgecolor':'black', 'linewidth': 2, 'edgecolor':'black', 'linewidth': 2, 'linecolor':'black', 'linewidth': 2, 'linewidth': 2, 'linecolor':'black', 'linewidth': 2, 'linecolor':'black', 'linewidth': 2, 'linecolor':'black', 'linewidth': 2, 'linecolor':'black', 'linewidth': 2, 'linecolor':'black', 'linewidth': 2, 'linecolor':'black', 'linewidth': 2, 'linecolor':'black', 'linewidth
[32m[1mline|temporal|Mental Health|quantitative|Import Volume
[31mimport_volume = []<0x0A><0x0A>for i in range(0, len(df_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2
[32m[1mcircle|quantitative|Assessment Of Healthcare Utilization Rates By Demographic Groups|quantitative|Relative Risk Assessment Of Health Outcomes In Demographic Studies
[31m# Plot the scatter plot<0x0A><0x0A># Plot the scatter plot<0x0A><0x0A># Plot the scatter plot<0x0A><0x0A># Plot the scatter plot<0x0A><0x0A># Plot the scatter plot<0x0A><0x0A># Plot the scatter plot<0x0A><0x0A># Plot the scatter plot<0x0A><0x0A># Plot the scatter plot<0x0A><0x0A># Plot the scatter plot<0x0A><0x0A># Plot the scatter plot<0x0A><0x0A><0x0A># Plot the scatter plot<0x0A><0x0A><0x0A># Plot the scatter plot<0x0A><0x0A><0x0A># Plot the scatter plot<0x0A><0x0A><0x0A># Plot the scatter plot<0x0A><0x0A><0x0A># Plot the scatter plot<0x0A><0x0A><0x0A><0x0A># Plot the scatter plot<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1mbar|nominal|Mortality Rate|quantitative|Poverty Rate
bar|temporal|Mortality Rate|quantitative|Poverty Rate
[32m[1mline|temporal|Impact Of Temperature Variability On Crop Yield Statistics|quantitative|Detrended Analysis Of Yearly Weather Anomalies In Temperature Data
[31mgraph = df.plot(figsize=(10,10))<0x0A><0x0A># Plot the line graph<0x0A>line = graph.plot(line, line, color='#445555', linewidth=1)<0x0A><0x0A># Plot the line graph<0x0A>line.set(color='#445555', linewidth=1)<0x0A><0x0A># Plot the line graph<0x0A>line.set(color='#445555', linewidth=1)<0x0A><0x0A># Plot the line graph<0x0A>line.set(color='#445555', linewidth=1)<0x0A><0x0A># Plot the line graph<0x0A>line.set(color='#445555', linewidth=1)<0x0A><0x0A># Plot the line graph<0x0A>line.set(color='#445555', linewidth=1)<0x0A><0x0A># Plot the line graph<0x0A>line
[32m[1mline|temporal|Manufacturing Output|quantitative|Fuel Consumption
bar|nominal|Manufacturing Output|Amount|Fuel Consumption
[32m[1mcircle|quantitative|Literacy Rate|quantitative|Export Volume
[31mscatterplot = sns.lmplot(x="Literacy Rate", y="Epcnt Volume", fit_reg=False, data=df, fit_reg=False, height=7, aspect=1, scatter_kws={"s": 70})<0x0A><0x0A># Set up the axes<0x0A>fig = scatterplot.get_figure()<0x0A>fig.savefig("figs/fig2.png")
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.3 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.75 [35m|




100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 20/20 [00:06<00:00,  2.94it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.92 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1mline|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
line|temporal|Year|quantitative|Consumption of fixed capital (as % of GNI)
[32m[1mline|temporal|Year|quantitative|Number of meetings(average for affected firms)
line|temporal|Year|quantitative|Number of meetings/average for officials firms
[32m[1mline|temporal|Year|quantitative|Number of days
line|temporal|Year|quantitative|Number of days
[32m[1mline|temporal|Year|quantitative|% of children under 5 taken to a health provider
line|temporal|Year|quantitative|% of children under 5 taken to a health provider
[32m[1mline|temporal|Year|quantitative|% of firms
line|temporal|Year|quantitative|% of firms
[32m[1mbar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
bar|temporal|Year|quantitative|Electric power consumption (kWh per capita)
[32m[1mbar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commerical service exports)
bar|temporal|Year|quantitative|Cost of computers, communications and other services (% of commerical service exports)
[32m[1mbar|nominal|Country|quantitative|Number of tractors
bar|nominal|Country|quantitative|Number of tractors
[32m[1mbar|temporal|Year|quantitative|Amount of energy used(kg of oil equivalent per capita)
bar|temporal|Year|quantitative|Amount of energy used(kg of oil equivalent per capita)
[32m[1mbar|temporal|Year|quantitative|Number of days
bar|temporal|Year|quantitative|Number of days
[32m[1mbar|temporal|Year|quantitative|Savings (current US$)
bar|temporal|Year|quantitative|Savings (current US$)
[32m[1mbar|temporal|Year|quantitative|Land (in sq. km)
bar|temporal|Year|quantitative|Land (in kg km)
[32m[1mbar|nominal|Country|quantitative|Cost (as % of GNI)
bar|nominal|Country|quantitative|Cost (as % of GNI)
[32m[1mbar|nominal|Country|quantitative|Average number of days
bar|nominal|Country|quantitative|Average number of days
[32m[1mbar|nominal|Country|quantitative|Prive value of exports (constant LCU)
bar|nominal|Country|quantitative|Prrw value of exports (constant L21)
[32m[1mbar|temporal|Year|quantitative|Total reserves (current US$)
bar|temporal|Year|quantitative|Total reserves (current US$)
[32m[1mcircle|temporal|Year|quantitative|Unemployed males(% of male labor force ages 15-24)
circle|temporal|Year|quantitative|Unemployed males(% of male labor force ages 15-24)
[32m[1mcircle|temporal|Year|quantitative|Mean income or consumption per capita(2011 PPP $ per day)
circle|temporal|Year|quantitative|Mean income or consumption per capita(2011 PPP $ per day)
[32m[1mcircle|temporal|Year|quantitative|Savings (current US$)
circle|temporal|Year|quantitative|Savings (current US$)
[32m[1mcircle|temporal|Year|quantitative|Value added (current Local Currency Unit)
line|temporal|Year|quantitative|Value added (current Local Currency Unit)
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.92 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|[39m [36m[1mSTRUCT-ERROR[39m[22m : 0.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 81 [32m[1m | Loss :[39m[22m 3.3600614070892334
Traceback (most recent call last):
  File "/mnt/disk2/msinnona/visdecode/clean_visdecode/trainer.py", line 137, in <module>
  File "/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 631, in __next__
    data = self._next_data()
           ^^^^^^^^^^^^^^^^^
  File "/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 675, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/torch/utils/data/_utils/fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
            ~~~~~~~~~~~~^^^^^
  File "/mnt/disk2/msinnona/visdecode/clean_visdecode/trainer.py", line 80, in __getitem__
    white_background = Image.new("RGBA", image.size, (255, 255, 255, 255))
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/PIL/Image.py", line 3328, in alpha_composite
    return im1._new(core.alpha_composite(im1.im, im2.im))
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt