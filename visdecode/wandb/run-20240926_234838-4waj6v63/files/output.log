
Epoch:  0
Aproximadamente quedan: 0.31 horas.
---------------------------------------------------------------------------------------------------------
 [1m(0)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.set_title('Damage caused due to forest depletion in Belgium')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Coalitions (% of GNI)')<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.plot(df_bel.Year, df_bel.Coalitions, color='#000000', linestyle='--')<0x0A>ax.plot(df_bel.Year, df_bel.Coalitions, color='#000000', linestyle='--')<0x0A>ax.plot(df_bel.Year, df_bel.Coalitions, color='#000000', linestyle='--')<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines 
---------------------------------------------------------------------------------------------------------
 [1m(1)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m # Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A> 
---------------------------------------------------------------------------------------------------------
 [1m(2)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m fig = plt.figure(figsize=(20,20))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.plot(df['Year'],df['Freshwater withdrawal (%)'],linestyle='--',color='red')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Annual freshwater withdrawals (%) of withdrawal (% of withdrawal)')<0x0A>ax.set_title('Annual freshwater withdrawals (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal (%) of withdrawal 
---------------------------------------------------------------------------------------------------------
 [1m(3)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m fig, ax = plt.subplots(figsize=(30, 30))<0x0A><0x0A>sns.set(font_scale=2)<0x0A><0x0A>sns.barplot(x='Year', y='Average land (hectares)', data=df_sy, ax=ax)<0x0A><0x0A>ax.set_title('Arable land (hectares) in Seychelles', fontsize=20)<0x0A>ax.set_xlabel('Year', fontsize=20)<0x0A>ax.set_ylabel('Average land (hectares) in Seychelles', fontsize=20)<0x0A>ax.set_xticklabels(ax.get_xticklabels(), fontsize=20)<0x0A>ax.set_yticklabels(ax.get_yticklabels(), fontsize=20)<0x0A><0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(4)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m # Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.plot(df_brazil.groupby(['Year'])['Value'].sum().reset_index()['Year'], df_brazil.groupby(['Year'])['Value'].sum().reset_index()['Year'], '-')<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A>ax.set_xticklabels(['year','month', 'day','month', 'day','month', 'day','month', 'day','month', 'day','month', 'day','month', 'day','month', 'day','month', 'day','month','month', 'day','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month' 
---------------------------------------------------------------------------------------------------------
 [1m(5)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31m fig = plt.figure(figsize=(25,25))<0x0A>ax = fig.add_subplot(111)<0x0A>ax.set_title('Time required to register a property in Samoa')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of Days')<0x0A>ax.set_xticklabels(['Year', 'Month', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Month', 'Year'])<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines 
---------------------------------------------------------------------------------------------------------
 [1m(6)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m # Plot the cost of communications and computers with respect to service imports of Lebanon<0x0A><0x0A>plt.figure(figsize=(25,25))<0x0A>sns.set(font_scale=2)<0x0A>sns.set_style("whitegrid")<0x0A>sns.set_context("talk")<0x0A><0x0A>ax = sns.lineplot(x="Year", y="Cost Of Communications and Computers with respect to service imports of Lebanon", data=df_comms_comms_lebanon, color="blue")<0x0A>ax.set_xticklabels(ax.get_xticklabels(), rotation=90)<0x0A>ax.set_title("Cost of communications and computers with respect to service imports of Lebanon")<0x0A>ax.set_ylabel("Cost Of communications and computers with respect to service imports of Lebanon")<0x0A>ax.set_xlabel("Year")<0x0A>ax.set_ylabel("Cost Of communications and computers with respect to service imports of Lebanon")<0x0A>ax.set_xticklabels(ax.get_xticklabels(), rotation=90)<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(7)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>gre_barplot = sns.barplot(x='Year', y='Net bilateral aid flow of Grenada from Development Assistance Committee', data=gre_barplot, ax=ax)<0x0A>gre_barplot.set_xticklabels(gre_barplot.get_xticklabels(), rotation=90)<0x0A>gre_barplot.set_title('Net bilateral aid flow of Grenada from Development Assistance Committee', fontsize=20)<0x0A>gre_barplot.set_ylabel('Net aid flow', fontsize=20)<0x0A>gre_barplot.set_xlabel('Year', fontsize=20)<0x0A>gre_barplot.set_ylabel('Net bilateral aid flow of Grenada from Development Assistance Committee', fontsize=20)<0x0A>gre_barplot.set_xticklabels(gre_barplot.get_xticklabels(), rotation=90)<0x0A><0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(8)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31m fig = plt.figure(figsize=(20,20))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.set_title('Cereal yield in different countries as per the survey of 1981', fontsize=20)<0x0A>ax.set_xlabel('Country', fontsize=20)<0x0A>ax.set_ylabel('Yield for per person/number of households', fontsize=20)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_color('black')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A>ax.spines['bottom'].set_color('black')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A>ax.spines['left'].set_linestyle(2)<0x0A><0x0A>ax.spines['left'].set_color('black')<0x0A>ax.spines['left'].set_linestyle(2)<0x0A>ax.spines['left'].set_linewidth(2)<0x0A>ax.spines['left'].set_linestyle(2)<0x0A>ax.spines['left'].set_linewidth(2)<0x0A>ax.spines['left'].set_linestyle(2)<0x0A>ax.spines['left'].set_linewidth(2)<0x0A>ax.spines['left'].set_linestyle(2)<0x0A>ax.spines['left'].set_linewidth(2)<0x0A>ax.spines['left'].set_linestyle(2)<0x0A>ax.spines['left'].set_linewidth(2)<0x0A>ax.spines['left'].set_linestyle(2)<0x0A>ax.spines['left'].set_linewidth(2)<0x0A>ax.spines['left'].set_linestyle(2)<0x0A>ax.spines['left'].set_linewidth(2)<0x0A>ax.spines['left'].set_linestyle(2)<0x0A>ax.spines['left'].set_linewidth(2)<0x0A>ax.spines['left'].set_linestyle(2)<0x0A>ax.spines['left'].set_linewidth(2)<0x0A>ax.spines['left'].set_linestyle(2)<0x0A>ax.spines['left'].set_linestyle(2) 
---------------------------------------------------------------------------------------------------------
 [1m(9)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31m fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.set_title('Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A>ax.set_ylabel('55/poverty lines')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A>ax.bar(df_sri_lanka.Year, df_sri_lanka.Survived, color='#117188', edgecolor='white', linewidth=1.5)<0x0A>ax.set_xticklabels(df_sri_lanka.Year, rotation='vertical')<0x0A><0x0A>ax.set_xticklabels(df_sri_lanka.Year, rotation='vertical')<0x0A><0x0A>ax.set_ylabel('55/poverty lines')<0x0A>ax.set_xticklabels(df_sri_lanka.Year, rotation='vertical')<0x0A><0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(10)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31m import_plot = pd.DataFrame({'Year': 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia'})<0x0A>import_plot.set_index('Year', inplace=True)<0x0A>import_plot.plot.bar(color='#004491', figsize=(20,20), legend=False)<0x0A>plt.title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>plt.ylabel('% of tax revenue')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(11)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m # Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the figure size<0x0A>plt.rcParams['figure.figsize'] = (25, 40)<0x0A><0x0A># Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the figure size<0x0A>plt.rcParams['figure.figsize'] = (25, 40)<0x0A><0x0A># Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A><0x0A># Setting up the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A><0x0A># Setting up the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A><0x0A># Setting up the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A><0x0A># Setting up the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A><0x0A># Setting up the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A><0x0A># Setting up the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A><0x0A># Setting up the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A><0x0A># Setting up the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A><0x0A># Setting up the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A><0x0A><0x0A># Setting up the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A><0x0A><0x0A># Setting up the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A> 
---------------------------------------------------------------------------------------------------------
 [1m(12)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.scatter(df['Year'], df['Producers in practice hours'], color='#000000')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Producers in practice hours')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Producers in practice hours'])<0x0A>ax.grid(False)<0x0A><0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(13)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m # Plot the distribution of distance to frontier score (on scale of 100) of Armenia<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>sns.scatterplot(x='Year', y='Distance to Frontier score (on scale of 100) of Armenia', data=df_100, ax=ax)<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (prudential to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to increased to 
---------------------------------------------------------------------------------------------------------
 [1m(14)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m fig = plt.figure(figsize=(20,20))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.set_title('Percentage of babies born with low-birthweight in Sri Lanka')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A>ax.scatter(df_srl['Year'], df_srl['Birth Weight'], color='purple')<0x0A>ax.set_xticklabels(df_srl['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_srl['Birth Weight'], rotation=90)<0x0A><0x0A>ax.set_xticklabels(df_srl['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_srl['Birth Weight'], rotation=90)<0x0A><0x0A>ax.set_xlim([0,20])<0x0A>ax.set_ylim([0,20])<0x0A><0x0A>ax.set_xticklabels(df_srl['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_srl['Year'], rotation=90)<0x0A><0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A>ax.set_ylim([0,20])<0x0A><0x0A>ax.set_xticklabels(df_srl['Year'], rotation=90)<0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A>ax.set_xticklabels(df_srl['Year'], rotation=90)<0x0A><0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A>ax.set_xlabel('Year')<0x0A><0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A>ax.set_xlabel('Year')<0x0A><0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A>ax.set_xlabel('Year')<0x0A><0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A>ax.set_xlabel('Year')<0x0A><0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A>ax.set_xlabel('Year')<0x0A><0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A>ax.set_ 
---------------------------------------------------------------------------------------------------------
 [1m(15)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m # Plot percentage of children ages 12-23 months who received DPT vaccinations in Denmark<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.set_title('Percentage of children ages 12-23 months who received DPT vaccinations in Denmark')<0x0A><0x0A>ax = sns.scatterplot(x='Year', y='Percentage of children ages 12-23 months who received DPT vaccinations', data=df, palette='viridis')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of children who received DPT vaccinations')<0x0A>ax.set_xticklabels(ax.get_xticklabels(), rotation=90)<0x0A><0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(16)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m # Create a scatter plot of percentage of households in Russian Federation that uses salt<0x0A>sns.set(style="darkgrid")<0x0A><0x0A># Create a scatter plot of percentage of households in Russian Federation that uses salt<0x0A>sns.catplot(x="Year", y="Percentage of households in Russian Federation that uses salt", data=df, height=15, aspect=1.5, palette="muted")<0x0A><0x0A># Set title and labels<0x0A>plt.title("Percentage of households in Russian Federation that uses salt")<0x0A>plt.xlabel("Year")<0x0A>plt.ylabel("% of households")<0x0A><0x0A># Save the figure<0x0A>plt.savefig("Percentage of households in Russian Federation that uses salt")<0x0A><0x0A># Show the plot<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(17)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m # Plotting the graph<0x0A><0x0A># Setting up the figure size<0x0A>plt.rcParams['figure.figsize'] = (25, 25)<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = False<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] 
---------------------------------------------------------------------------------------------------------
 [1m(18)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m # Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A> 
---------------------------------------------------------------------------------------------------------
 [1m(19)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m # Create a scatter plot of rating regarding strength of legal rights index in Croatia<0x0A>fig, ax = plt.subplots(figsize=(20,15))<0x0A><0x0A># Create a scatter plot of rating regarding strength of legal rights index in Croatia<0x0A>sns.scatterplot(data=df, x='Year', y='Strength Rating (1-1000000000)', color='green', ax=ax)<0x0A><0x0A># Create a scatter plot of rating regarding strength of legal rights index in Croatia<0x0A>sns.scatterplot(data=df, x='Year', y='Strength Rating (1-1000000000)', color='blue', ax=ax)<0x0A><0x0A># Create a scatter plot of rating regarding strength of legal rights index in Croatia<0x0A>sns.scatterplot(data=df, x='Year', y='Strength Rating (1-1000000000)', color='red', ax=ax)<0x0A><0x0A># Create a scatter plot of rating regarding strength of legal rights index in Croatia<0x0A>sns.scatterplot(data=df, x='Year', y='Strength Rating (1-1000000000)', color='red', ax=ax)<0x0A><0x0A># Create a scatter plot of rating regarding strength of legal rights index in Croatia<0x0A>sns.scatterplot(data=df, x='Year', y='Strength Rating (1-10000000000)', color='red', ax=ax)<0x0A><0x0A># Create a scatter plot of rating regarding strength of legal rights index in Croatia<0x0A>sns.scatterplot(data=df, x='Year', y='Strength Rating (1-10000000000)', color='red', ax=ax)<0x0A><0x0A># Create a scatter plot of rating regarding strength of legal rights index in Croatia<0x0A>sns.scatterplot(data=df, x='Year', y='Strength Rating (1-10000000000)', color='red', ax=ax)<0x0A><0x0A># Create a scatter plot of rating regarding strength of legal rights index in Croatia<0x0A>sns.scatterplot(data=df, x='Year', y='Strength Rating (1-10000000000)', color='red', ax=ax)<0x0A><0x0A># Create a scatter plot of rating regarding strength of legal rights index in Croatia<0x0A>sns.s 
---------------- RESULTS --------------------
accuracy mark type : 0.0
accuracy var types (x) : 0.0
accuracy var types (y) : 0.0
accuracy var names (x) : 0.0
accuracy var names (y) : 0.0
accuracy structure : 0.0
---------------------------------------------
accuracies test:  [0.0]
Epoch:  1
Epoch:  2
Epoch:  3
Epoch:  4
Epoch:  5
---------------------------------------------------------------------------------------------------------
 [1m(0)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Coal (in as % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'type': 'quantitative'}}, 'y': 0.01}, {'x': 'field', 'type': 'quantitative'}}, 'y': 0.01}, {'x': 'field', 'type': 'quantitative'}}, 'y': 0.01}, {'x': 'field', 'type': 'quantitative'}}, 'y': 0.01}, {'x': 'field', 'type': 'quantitative'}}, 'y': 0.01}, {'x': 'field', 'type': 'quantitative'}}, 'y': 0.01}, {'x': 'field', 'type': 'quantitative'}}, 'y': 0.01}, {'x': 'field', 'type': 'quantitative'}}, 'y': 0.01}, {'x': 'field', 'type': 'quantitative'}}, 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0 
---------------------------------------------------------------------------------------------------------
 [1m(1)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m Country_plot(Total_unemployed, 'Total unemployed youth population of Colombia', 'Year', 'Total unemployed youth population of Colombia', 'Total unemployed youth population of Colombia') 
---------------------------------------------------------------------------------------------------------
 [1m(2)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) of drinking water in households', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.26}, {'x': 'Year', 'y': 55.26}, {'x': 'Year', 'type': 'quantitative'}}, 'y': 55.26}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 55.26}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 55.26}, {'x': 'field': 'Year', 'type': 'quantitative'}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(3)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m # Plot the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(30, 30))<0x0A><0x0A>sns.set(font_scale=2)<0x0A><0x0A>sns.despine(ax=ax)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A> 
---------------------------------------------------------------------------------------------------------
 [1m(4)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 265.69}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': {'x': 'field', 'y': 305.69}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': {'x': 'field', 'y': 305.69}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': {'x': 'field', 'y': 305.69}, {'x': 'field': 'Year', 'y': 305.69}, {'x': 'field': 'Year', 'y': 305.69}, {'x': 'field': 'year', 'y': 305.69}, {'x': 'field': 'year', 'y': 305.69}, {'x': 'field': 'year', 'y': 305.69}, {'x': 'field': 'year', 'y': 305.69}, {'x': 'field': 'year', 'y': 305.69}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(5)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31m reg_name = 'Time required to register a property in Samoa'<0x0A><0x0A># Create a line plot of time required to register a property in Samoa<0x0A><0x0A>fig, ax = plt.subplots(figsize=(25, 25))<0x0A><0x0A># Plot the time required to register a property in Samoa<0x0A>ax.plot(reg_time_required_to_register, linewidth=0.5, color='black')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of Days')<0x0A>ax.set_title('Time required to register a property in Samoa')<0x0A><0x0A># Save the figure<0x0A>plt.savefig('time_required_to_register_property_in_Sanos.png', dpi=300)<0x0A><0x0A># Display the graph<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(6)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 1.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 0.59 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
 {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and Computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.06}, {'x': 'field', 'y': 40.06}, {'x': 'field', 'y': 50.06}, {'x': 'field', 'y': 50.06}, {'x': 'field', 'y': 50.06}, {'x': 'field', 'y': 50.06}, {'x': 'field', 'y': 40.06}, {'x': 'field', 'y': 50.06}, {'x': 'field', 'y': 50.06}, {'x': 'field', 'y': 50.06}, {'x': 'field', 'y': 40.06}]}}
---------------------------------------------------------------------------------------------------------
 [1m(7)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>g1 = sns.barplot(x="Year", y="Net bilateral aid flow of Grenada from Development Assistance Committee", data=net_bil, palette="rocket")<0x0A>g1.set_title("Net bilateral aid flow of Grenada from Development Assistance Committee", fontsize=16)<0x0A>g1.set_xlabel("Year", fontsize=16)<0x0A>g1.set_ylabel("Net bilateral aid flow of Grenada from Development Assistance Committee", fontsize=16)<0x0A>g1.tick_params(labelsize=16)<0x0A>g1.tick_params(labelsize=16)<0x0A><0x0A>g1.savefig("../Images/Net_bil_flow_Grenada_from_Development_Assistance_Committee.png", dpi=300, transparent=True)<0x0A><0x0A>g1.tick_params(labelsize=16)<0x0A>g1.tick_params(labelsize=16)<0x0A><0x0A>g1.show() 
---------------------------------------------------------------------------------------------------------
 [1m(8)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31m Country_1981 = df_1981.groupby(['Country'])['Yield for per person'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str).apply(lambda x: x.replace(',','').astype(str))<0x0A>Country_1981 = Country_1981.sort_values(by='Country', ascending=False)<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str).apply(lambda x: x.replace(',','').astype(str))<0x0A>Country_1981.head()<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='green', figsize=(15,15))<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(15,15))<0x0A>Country_1981.head() 
---------------------------------------------------------------------------------------------------------
 [1m(9)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31m fecha_date = '2018-12-31'<0x0A><0x0A># Create a bar plot of the mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka<0x0A>ax = df_sri_poverty_lines.plot.bar(x='Year', y='mean_shortfall', color='#557557', figsize=(15,15), legend=False, fontsize=15, title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka', fontsize=15, color='#557557', edgecolor='white', <0x0A>                                      title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka', fontsize=15, color='#557557', edgecolor='white', <0x0A>                                      title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka', fontsize=15, title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka', fontsize=15, title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka', fontsize=15, title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka', fontsize=15, title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka', fontsize=15, title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka', fontsize=15, title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka', fontsize=15, title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka', fontsize=15, title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka', fontsize=15, title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka', fontsize=15, title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka', fontsize=15, title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka', fontsize=15, title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka', fontsize=1 
---------------------------------------------------------------------------------------------------------
 [1m(10)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31m import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A># Create a bar plot of Customs and other import duties (as % of tax revenue) of Indonesia<0x0A>g = sns.catplot(x="Year", y="Sales", data=df, kind="bar", palette="ch:.25", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year", fontsize=16)<0x0A>g.set_ylabels("Sales", fontsize=16)<0x0A>g.fig.suptitle('Customs and other import duties (as % of tax revenue) of Indonesia', fontsize=16)<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(11)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m partido_countries = pd.DataFrame(<0x0A>    [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        [<0x0A>        ]<0x0A>        ]<0x0A>        ]<0x0A>        ]<0x0A>        ]<0x0A>        ]<0x0A>        ]<0x0A>        ]<0x0A>        ]<0x0A>        ]<0x0A>        ]<0x0A>        ]<0x0A>        ]<0x0A>        ]<0x0A>        ]<0x0A>        ]<0x0A>        ]<0x0A>        ]<0x0A>        )<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax = sns.barplot(<0x0A>    x="Year",<0x0A>    y="Number of procedures to build a warehouse in Congo (Republic)",<0x0A>    data=partial_countries,<0x0A>    color="green",<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    color="green",<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    saturation=1,<0x0A>    color="green",<0x0A>    saturation=1,<0x0A>    saturation=1, 
---------------------------------------------------------------------------------------------------------
 [1m(12)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m estados_semana_semana = estados_semana.sort_values('Year', ascending=False)<0x0A>estados_semana_semana.plot(kind='scatter', x='Year', y='Prodedit', color='orange', title='Cereal production in Swaziland', figsize=(20, 20))<0x0A>plt.ylabel('Prodedit')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(13)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m {'x': 'Year', 'y': 'Score ((floatened for 'Armenia') & (floatened for 'Distance to Frontier score (on scale of 100) of Armenia') })<0x0A>fig, ax = plt.subplots(figsize=(25, 25))<0x0A><0x0A>sns.scatterplot(x=df['Year'], y=df['Distance to Frontier score (on scale of 100) of Armenia'], ax=ax)<0x0A>ax.set_title('Distance To Frontier score (on scale of 100) of Armenia')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score ((floatened for 'Armenia') & (floatened for 'Distance to Frontier score (on scale of 100) of Armenia') })<0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A>ax.set_yticklabels(df['Distance to Frontier score (on scale of 100) of Armenia'], rotation=90)<0x0A><0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(14)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m percentage_birth_year = df_srl_srl[['Year','Silence']].groupby(['Year']).sum()<0x0A>percentage_birth_year = percentage_birth_year.reset_index()<0x0A>percentage_birth_year.rename(columns={'index':'Silence', 'Silence':'Silence'})<0x0A>percentage_birth_year.rename(columns={'index':'Year', 'Silence':'Silence'})<0x0A>percentage_birth_year.rename(columns={'index':'Year', 'Silence':'Silence'})<0x0A>percentage_birth_year.rename(columns={'index':'Year', 'Silence':'Silence'})<0x0A>percentage_birth_year.rename(columns={'index':'Year', 'Silence':'Silence'})<0x0A>percentage_birth_year.rename(columns={'index':'Year', 'Silence':'Silence'})<0x0A>percentage_birth_year.rename(columns={'index':'Year', 'Silence':'Silence'})<0x0A>percentage_birth_year.rename(columns={'index':'Year', 'Silence':'Silence'})<0x0A>percentage_birth_year.rename(columns={'index':'Year', 'Silence':'Silence'})<0x0A>percentage_birth_year.rename(columns={'index':'Year', 'Silence':'Silence'})<0x0A>percentage_birth_year.rename(columns={'index':'Year', 'Silence':'Silence'})<0x0A>percentage_birth_year.rename(columns={'index':'Year', 'Silence':'Silence'})<0x0A>percentage_birth_year.rename(columns={'index':'Year', 'Silence':'Silence'})<0x0A>percentage_birth_year.rename(columns={'index':'Year', 'Silence':'Silence'})<0x0A>percentage_birth_year.rename(columns={'index':'Year', 'Silence':'Silence'})<0x0A>percentage_birth_year.rename(columns={'index':'Year', 'Silence':'Silence'})<0x0A>percentage_birth_year.rename(columns={'index':'Year', 'Silence':'Silence'})<0x0A>percentage_birth_year.rename(columns={'index':'Year', 'Silence':'Silence'})<0x0A>percentage_birth 
---------------------------------------------------------------------------------------------------------
 [1m(15)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.1}, {'x': 'Year', 'y': 18.1}, {'x': 'field', 'type': 'quantitative'}}, 'y': 18.1}, {'x': 'field', 'y': 18.1}, {'x': 'field', 'y': 18.1}, {'x': 'field', 'y': 18.1}, {'x': 'field', 'y': 18.1}, {'x': 'field', 'y': 18.1}, {'x': 'field', 'y': 18.1}, {'x': 'field', 'y': 18.1}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(16)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m grouped_df = pd.pivot_table(df, values='Percentage of households in Russian Federation that uses iodized salt', index=['Year','Year'], columns=['Percentage of households in Russian Federation that uses iodized salt'])<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', title='Percentage of households in Russian Federation that uses iodized salt', figsize=(20,20), legend=False)<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(17)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m Country_2016_2017 = 'United Kingdom'<0x0A>Country_2017_2018 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_201 
---------------------------------------------------------------------------------------------------------
 [1m(18)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m Country_wise_damage_caused = Country_wise_damage_caused[Country_wise_damage_caused['Country Code'].isin(['South Asia'])]<0x0A>Country_wise_damage_caused = Country_wise_damage_caused.sort_values(by='Country Code',ascending=False)<0x0A>Country_wise_damage_caused = Country_wise_damage_caused.reset_index()<0x0A>Country_wise_damage_caused = Country_wise_damage_caused.sort_values(by='Country Code',ascending=False)<0x0A>Country_wise_damage_caused = Country_wise_damage_caused.reset_index()<0x0A>Country_wise_damage_caused = Country_wise_damage_caused.reset_index()<0x0A>Country_wise_damage_caused = Country_wise_damage_caused.reset_index()<0x0A>Country_wise_damage_caused = Country_wise_damage_caused.reset_index()<0x0A>Country_wise_damage_caused = Country_wise_damage_caused.reset_index()<0x0A>Country_wise_damage_caused = Country_wise_damage_caused.reset_index()<0x0A>Country_wise_damage_caused = Country_wise_damage_caused.reset_index()<0x0A>Country_wise_damage_caused = Country_wise_damage_caused.reset_index()<0x0A>Country_wise_damage_caused = Country_wise_damage_caused.reset_index()<0x0A>Country_wise_damage_caused = Country_wise_damage_caused.reset_index()<0x0A>Country_wise_damage_caused = Country_wise_damage_caused.reset_index()<0x0A>Country_wise_damage_caused = Country_wise_damage_caused.reset_index()<0x0A>Country_wise_damage_caused = Country_wise_damage_caused.reset_index()<0x0A>Country_wise_damage_caused = Country_wise_damage_caused.reset_index()<0x0A>Country_wise_damage_caused = Country_wise_damage_caused.reset_index()<0x0A>Country_wise_damage_caused = Country_wise_damage_caused.reset_index()<0x0A>Country_wise_damage_caused = Country_wise_damage_caused.reset_index()<0x0A>Country_wise_damage_caused = Country_wise_damage_caused.reset_index()<0x0A>Country_wise_damage_caused = Country_wise_damage_caused.reset_index()<0x0A>Country_wise_damage_caused = Country_wise_damage_caused.reset_index()<0x0A>Country_wise_damage_caused 
---------------------------------------------------------------------------------------------------------
 [1m(19)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m graph_df = pd.DataFrame(columns = ['Year', 'Strength rating (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean (C. mean 
---------------- RESULTS --------------------
accuracy mark type : 1.0
accuracy var types (x) : 1.0
accuracy var types (y) : 1.0
accuracy var names (x) : 1.0
accuracy var names (y) : 0.59
accuracy structure : 0.05
---------------------------------------------




















model.safetensors: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1.13G/1.13G [00:41<00:00, 27.5MB/s]
accuracies test:  [0.0, 0.59]
Epoch:  6
Epoch:  7
Epoch:  8
Epoch:  9
Epoch:  10
---------------------------------------------------------------------------------------------------------
 [1m(0)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (in as % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.02}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.02}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.02}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.02}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.02}, {'x': 'field': 'Quantity': 'quantitative'}}, 'y': 0.02}, {'x': 'field': 'Quantity': 'Yield', 'type': 'quantitative'}}, 'y': 0.02}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(1)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m Country_plot(Total_unemployed, 'Total unemployed youth population of Colombia', 'Year', 'Total unemployed youth population of Colombia', 'Total unemployed youth population of Colombia') 
---------------------------------------------------------------------------------------------------------
 [1m(2)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Irthomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'Field', 'type': 'quantitative'}}, 'y': 55.33}, {'x': 'Field', 'y': 61.33}, {'x': 'variable': 'Value', 'type': 'quantitative'}}, 'y': 55.33}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 55.33}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(3)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m # Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(30, 30))<0x0A><0x0A># Plotting the graph<0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plot 
---------------------------------------------------------------------------------------------------------
 [1m(4)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 265.69}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': {'x': 'field': 'value'}}, 'y': {'x': 'field': 'value'}}, 'y': {'x': 'field': 'value'}}, 'y': {'x': 'field': 'value'}}, 'y': {'x': 'field': 'value'}}, 'y': {'x': 'field': 'value'}}, 'y': {'x': 'field': 'value'}}, 'y': {'x': 'field': 'value'}}, 'y': {'x': 'field': 'value'}}, 'y': {'x': 'field': 'value'}}, 'y': {'x': 'field': 'value'}}, 'y': {'x': 'field': 'value'}}, 'y': {'x': 'field': 'value'}}, 'y': {'x': 'field': 'value'}}, 'y': {'x': 'field': 'value'}}, 'y': {'x': 'y': 265.69}, {'x': 'y': 265.69}, {'x': 'y': 265.69}, {'x': 'y': 306.57}, {'x': 'y': 306.57}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(5)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.01}, {'x': 'Year', 'y': 12.01}, {'x': 'Type': 'Year', 'type': 'quantitative'}}, 'y': 12.01}, {'x': 'Field': 'Year', 'type': 'quantitative'}}, 'y': 12.01}, {'x': 'Field': 'Year', 'type': 'quantitative'}}, 'y': 12.01}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(6)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 1.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.59 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
 {'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and Computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.06}, {'x': 'Field', 'y': 47.65}, {'x': 'Type', 'y': 90.06}, {'x': 'Type', 'y': 90.06}]}}
---------------------------------------------------------------------------------------------------------
 [1m(7)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m ##########################################################################<0x0A># TODO: Execute your algorithm from Step 6 on<0x0A># Hint: You may want to try your best.<0x0A>###<0x0A># Graph<0x0A># Graph 1<0x0A># Hint: Use seaborn to create a bar plot of the bill of the year and year<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the year and year of the bill<0x0A># Hint: Use seaborn to create a pivot table for the 
---------------------------------------------------------------------------------------------------------
 [1m(8)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31m Country_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),color='green')<0x0A>plt.xlabel('Country')<0x0A>plt.ylabel('Yield for per person/number of households')<0x0A>plt.title('Cereal yield in different countries as per the survey of 1981')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(9)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31m grupo_df = grupo_df.sort_values('Year', ascending=False)<0x0A><0x0A># Create a bar plot of the mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka<0x0A>ax = grupo_df.plot.bar(x='Year', y='55/poverty lines', color='#115555', title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka', legend=False, figsize=(15,15))<0x0A><0x0A># Add the legend to the plot<0x0A>ax.legend(prop={'size': 15})<0x0A><0x0A># Set title and labels<0x0A>ax.set_ylabel('55/poverty lines')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Save the plotted figure as a.png file<0x0A>plt.savefig('figs/fig2.png') 
---------------------------------------------------------------------------------------------------------
 [1m(10)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31m import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A># Create a bar plot of Customs and other import duties (as % of tax revenue) of Indonesia<0x0A>g = sns.catplot(x="Year", y="Sales", data=df, kind="bar", palette="ch:.25", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year", fontsize=16)<0x0A>g.set_ylabels("Sales", fontsize=16)<0x0A>g.fig.suptitle('Customs and other import duties (as % of tax revenue) of Indonesia', fontsize=20)<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(11)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m partido_countries = pd.DataFrame(<0x0A>    [<0x0A>        df_proj_congo_building_republic["Year"],<0x0A>        df_proj_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_proj_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_proj_congo_building_republic["Year"],<0x0A>        df_proj_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_proj_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_proj_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_proj_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_proj_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_proj_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_proj_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_proj_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_proj_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_proj_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_proj_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_proj_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_proj_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_proj_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_proj_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_proj_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_proj_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"], 
---------------------------------------------------------------------------------------------------------
 [1m(12)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m estados = {'x': 'Year', 'y': 'Producción in python book', 'data': {'x': 'Year', 'y': 10000}, {'x': 'Year', 'y': 7000}, {'x': 'Year', 'x': 5000}, {'x': 'Year', 'y': 10000}, {'x': 'Year', 'y': 7000}, {'x': 'Year', 'y': 10000}, {'x': 'Year', 'y': 5000}, {'x': 'Year', 'y': 10000}, {'x': 'Year', 'y': 5000}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(13)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((intraword for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted for 'discounted 
---------------------------------------------------------------------------------------------------------
 [1m(14)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m percentage_birth_year_sr_lanka = percentage_birth_year_sr_lanka.sort_values(by='Year', ascending=False)<0x0A><0x0A>g = sns.catplot(x="Year", y="Sr", data=percentage_birth_year_sr_lanka, height=15, aspect=1.5, palette="mako")<0x0A>g.set_xticklabels(rotation=90)<0x0A>g.set_title("Percentage of babies born with low-birthweight in Sri Lanka")<0x0A>g.set(ylabel="% of babies")<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(15)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18}, {'x': 'Field', 'y': 18}, {'x': 'Type', 'type': 'quantitative'}}, 'y': 18}, {'x': 'Field', 'y': 18}, {'x': 'Type', 'y': 18}, {'x': 'Field', 'y': 18}, {'x': 'Y': 18}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(16)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m grouped_df = pd.pivot_table(df, values='Percentage of households in Russian Federation that uses iodized salt', index=['Year', 'Percentage of households in Russian Federation that uses iodized salt'], aggfunc='median')<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt', colormap='tab10')<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(17)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m Country_2016_2017 = 'United Kingdom'<0x0A>Country_2017_2018 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_201 
---------------------------------------------------------------------------------------------------------
 [1m(18)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m {'x': 'Year', 'y': 'Cost (y$ of GWI)', 'data': {'x': 'Year', 'y': 'Cost (y$ of GWI)', 'data': {'x': 'Year', 'y': 'Cost (y$ of GWI)', 'data': {'x': 'Year', 'y': 'Cost (y$ of GWI)', 'data': {'x': 'Year', 'y': 'Cost (y$ of GWI)', 'data': {'x': 'Year', 'y': 'Cost (y$ of GWI)', 'data': {'x': 'Year', 'y': 'Cost (y$ of GWI)', 'data': {'x': 'Year', 'y': 'Cost (y$ of GWI)', 'data': {'x': 'Year', 'y': 'Cost (y$ of GWI)', 'data': NULLER.TEXT}}, 'y': 'Y': 'Cost (y$ of GWI)', 'y': NULLER.TEXT}} }}} }}}<0x0A><0x0A>ggplot(df, aes(x=Year, y=Cost (y$ of GWI), data=df, aes(fill=Year, color=Year)) + geom_point() + facet_wrap('~Country/Region')+ facet_wrap('~Country/Region')+ facet_wrap('~Country/Region')+ facet_wrap('~Country/Region')+ facet_wrap('~Country/Region')+ facet_wrap('~Country/Region')+ facet_wrap('~Country/Region')+ facet_wrap('~Country/Region')+ facet_wrap('~Country/Region')+ facet_wrap('~Country/Region')+ facet_wrap('~Country/Region')+ facet_wrap('~Country/Region')+ facet_wrap('~Country/Region')+ facet_wrap('~Country/Region')+ facet_wrap('~Country/Region')+ facet_wrap('~Country/Region')+ facet_wrap('~Country/Region')+ facet_wrap('~Country/Region')+ facet_wrap('~Country/Region')+ facet_wrap('~Country/Region')+ facet_wrap('~Country/Region')+ facet_wrap('~Country/Region')+ facet_wrap 
---------------------------------------------------------------------------------------------------------
 [1m(19)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m graph = pd.DataFrame({'Year':['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020', '2021', '2022', '2023', '2024', '2025', '2026', '2027', '2028', '2029', '2030', '2031', '2032', '2033', '2035', '2036', '2037', '2039', '2041', '2042', '2043', '2045', '2046', '2047', '2048', '2049', '2051', '2052', '2053', '2055', '2055', '2057', '2057', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '20 
---------------- RESULTS --------------------
accuracy mark type : 1.0
accuracy var types (x) : 1.0
accuracy var types (y) : 1.0
accuracy var names (x) : 0.0
accuracy var names (y) : 0.59
accuracy structure : 0.05
---------------------------------------------
accuracies test:  [0.0, 0.59, 0.0]
Epoch:  11
Epoch:  12
Epoch:  13
Epoch:  14
Epoch:  15
---------------------------------------------------------------------------------------------------------
 [1m(0)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (in as % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.02}, {'x': 'field', 'type': 'quantitative'}}, 'y': 0.02}, {'x': 'field', 'type': 'quantitative'}}, 'y': 0.02}, {'x': 'field', 'type': 'quantitative'}}, 'y': 0.02}, {'x': 'field', 'type': 'quantitative'}}, 'y': 0.02}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(1)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m Country_plot(Total_unemployed, 'Total unemployed youth population of Colombia', 'Year', 'Total unemployed youth population of Colombia', 'Total unemployed youth population of Colombia') 
---------------------------------------------------------------------------------------------------------
 [1m(2)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 0.79 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
 {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihilomonin Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.26}, {'x': 'Field', 'y': 60.39}, {'x': 'Type', 'y': 55.26}]}}
---------------------------------------------------------------------------------------------------------
 [1m(3)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m # Plotting the graph<0x0A><0x0A>g = sns.catplot(x="Year", y="Arable land (hectares) in Seychelles", data=df, height=15, aspect=2.5, kind="bar", palette="ch:.25", ci=None)<0x0A>g.fig.set_size_inches(25,20)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.suptitle('Arable land (hectares) in Seychelles', y=1.03)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A>g.fig.subplots_ad 
---------------------------------------------------------------------------------------------------------
 [1m(4)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Percentage of Production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'year', 'y': 265.45}, {'x': 'field', 'y': 304.32}, {'x': 'type': 'quantitative', 'y': 265.45}, {'x': 'field', 'y': 304.32}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(5)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'Year', 'y': 143}, {'x': 'Type', 'type': 'quantitative'}}, 'y': 143}, {'x': 'Field', 'type': 'quantitative'}}, 'y': 143}, {'x': 'Field', 'y': 143}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(6)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 1.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.62 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
 {'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.06}, {'x': 'Field', 'y': 48.55}, {'x': 'Type', 'y': 90.39}, {'x': 'Type', 'y': 90.39}]}}
---------------------------------------------------------------------------------------------------------
 [1m(7)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m ##########################################################################################<0x0A># TODO: Execute your algorithm from Step 6 on<0x0A># Hint_grabber = True<0x0A># Hint_get_graph(graph, 'net_bilateral_aid_flow')<0x0A>##########################################################################################<0x0A>graph = Graph(<0x0A>    title='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    subtitle='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    subtitle_prefix='Grenada',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle_format='svg',<0x0A>    subtitle 
---------------------------------------------------------------------------------------------------------
 [1m(8)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31m Country_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(18,18),color='green')<0x0A>plt.xlabel('Country')<0x0A>plt.ylabel('Yield by per Phenomena')<0x0A>plt.title('Cereal yield in different countries as per the survey of 1981')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(9)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31m grupo_df = grupo_df.sort_values('Year', ascending=False)<0x0A><0x0A># Create a bar plot of the mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka<0x0A>ax = grupo_df.plot.bar(x='Year', y='55/poverty lines', color='#115555', title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka', legend=False, figsize=(16, 16))<0x0A><0x0A># Add the legend to the plot<0x0A>ax.legend(prop={'size': 16})<0x0A><0x0A># Save the plotted figure as a.png file<0x0A>plt.savefig('figs/fig2.png') 
---------------------------------------------------------------------------------------------------------
 [1m(10)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31m {'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '% of tax revenue'}}, 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 60}, {'x': 'Field', 'y': 70}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(11)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Number of procedures to build a warehouse in Congo (Republic)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 13.42}, {'x': 'field', 'y': 13.42}, {'x': 'type': 'Number of procedures to build a warehouse in Congo (Republic)', 'y': 13.42}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(12)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m %matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A># Load the example dataset<0x0A># https://raw.githubusercontent.com/mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike-mike 
---------------------------------------------------------------------------------------------------------
 [1m(13)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((intraword for indexing)})': {'x': {'field': 'Year', 'type': 'quantitative'}}, 'y': {'field': 'Roundup (%)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.05}, {'x': 'y': 20.43}, {'x': 'y': 20.43}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(14)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m percentage_sr_lanka = pd.DataFrame(data=percentage_sr_lanka, columns=['Year', 'Percentage'])<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by='Percentage', ascending=False)<0x0A><0x0A>g = sns.catplot(x="Year", y="Percentage", data=percentage_sr_lanka, kind="swarm", palette="ch:.25", height=15)<0x0A>g.set_xticklabels(rotation=90)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.suptitle('Percentage of babies born with low-birthweight in Sri Lanka', y=1.03)<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(15)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 0.46 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
 {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Percentage of children ages 12-23 months who received DPT vaccinations in Denmark', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.06}, {'x': 'Year', 'y': 10.35}, {'x': 'Type', 'y': 13.77}, {'x': 'Field', 'y': 140.69}, {'x': 'Type', 'y': 70.33}, {'x': 'Field', 'y': 140.69}]}}
---------------------------------------------------------------------------------------------------------
 [1m(16)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m grouped_df = pd.pivot_table(df, values='Percentage of households in Russian Federation that uses iodized salt', index=['Year', 'Percentage of households in Russian Federation that uses iodized salt'], aggfunc='mean')<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt', colormap='tab10')<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(17)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m Country_2016_2017 = 'United Kingdom'<0x0A>Country_2017_2018 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_201 
---------------------------------------------------------------------------------------------------------
 [1m(18)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m {'x': 'Year', 'y': 'Cost (y$ of GW)', 'data': {'x': 'Year', 'y': 'COST (y$ of GW)', 'data': {'x': 'Year', 'y': 'COST (y$ of GW)', 'data': {'x': 'Year', 'y': 'COST (y$ of GW)', 'data': {'x': 'Year', 'y': 'COST (y$ of GW)', 'data': {'x': 'Year', 'y': 'COST (y$ of GW)', 'data': {'x': 'Year', 'y': 'Y': 'COST (y$ of GW)', 'data': {'x': 'Year', 'y': 'Y': 'COST (y$ of GW)', 'data': {'x': 'Year', 'y': 'Y': 'Y': 'COST (y$ of GW)', 'data': {'x': 'Year', 'y': 'Y': 'Y': 'Y': 'Y': None}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(19)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m graph = pd.DataFrame({'Year':['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020', '2021', '2022', '2023', '2024', '2025', '2026', '2027', '2028', '2029', '2030', '2031', '2032', '2033', '2035', '2036', '2037', '2039', '2041', '2042', '2043', '2045', '2046', '2047', '2048', '2049', '2051', '2052', '2053', '2055', '2055', '2057', '2057', '2059', '2061', '2062', '2063', '2065', '2065', '2065', '2067', '2067', '2068', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '20 
---------------- RESULTS --------------------
accuracy mark type : 1.0
accuracy var types (x) : 0.33
accuracy var types (y) : 1.0
accuracy var names (x) : 0.67
accuracy var names (y) : 0.62
accuracy structure : 0.15
---------------------------------------------
accuracies test:  [0.0, 0.59, 0.0, 0.33]
Epoch:  16
Epoch:  17
Epoch:  18
Epoch:  19
Epoch:  20
---------------------------------------------------------------------------------------------------------
 [1m(0)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (in a Set of GTV)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'type': 'quantitative'}}, 'y': 0.01}, {'x': 'field', 'type': 'quantitative'}}, 'y': 0.01}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(1)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 'Total unemployed youth population of Colombia}}, 'data': {'x': 'Year', 'y': 'Unemployed youth population of Colombia}}, 'data': {'x': 'Year', 'y': 'Total unemployed youth population of Colombia}}, 'data': {'x': 'Year', 'y': 'Unemployed youth population of Colombia}}, 'x': 'Y': 'Total unemployed youth population of Colombia}}, 'y': 'Y': 'Total unemployed youth population of Colombia}}, 'data': {'x': 'Y': 'Year', 'y': 'Total unemployed youth population of Colombia}}, 'x': 'Y': 'Y': 'Total unemployed youth population of Colombia}}, 'y': 'Y': 'Y': 'Total unemployed youth population of Colombia}}, 'x': 'Y': 'Y': 'Total unemployed youth population of Colombia}}, 'y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y': 'Y':  
---------------------------------------------------------------------------------------------------------
 [1m(2)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 0.82 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
 {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Irthomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.23}, {'x': 'Field', 'y': 60.33}, {'x': 'Type', 'y': 55.23}]}}
---------------------------------------------------------------------------------------------------------
 [1m(3)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m # Plotting the graph<0x0A><0x0A># Setting up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(25, 25))<0x0A><0x0A># Plotting the graph<0x0A>sns.set(font_scale=2)<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(top=True, left 
---------------------------------------------------------------------------------------------------------
 [1m(4)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Percentage of Production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 265.45}, {'x': 'field': 'Year', 'y': 304.32}, {'x': 'field': 'Year', 'y': 265.45}, {'x': 'field': 'Year', 'y': 304.32}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(5)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 1.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 0.93 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
 {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.02}, {'x': 'Year', 'y': 12.02}, {'x': 'Type', 'y': 12.02}, {'x': 'Type', 'y': 12.02}, {'x': 'Year', 'y': 200}, {'x': 'Type', 'y': 10.34}]}}
---------------------------------------------------------------------------------------------------------
 [1m(6)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 1.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 0.62 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
 {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.06}, {'x': 'Field', 'y': 48.55}, {'x': 'Type', 'y': 90.39}, {'x': 'Field', 'y': 90.39}, {'x': 'Type', 'y': 75.75}, {'x': 'Field', 'y': 46.15}, {'x': 'Type', 'y': 75.75}, {'x': 'Field', 'y': 46.15}]}}
---------------------------------------------------------------------------------------------------------
 [1m(7)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m ##########################################################################################<0x0A># TODO: Execute your algorithm from Step 6 on<0x0A># Hint_grabber = True<0x0A># Hint_get_graph(graph, 'net_bilateral_aid_flow')<0x0A>##########################################################################################<0x0A>graph = Graph(<0x0A>    title='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    x_label='Year',<0x0A>    y_label='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    sub_title='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    sub_sub_title='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    sub_sub_title='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    sub_title='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    sub_title='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    sub_title='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    sub_title='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    sub_title='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    sub_title='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    sub_title='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    sub_title='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    sub_title='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    sub_title='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    sub_title='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    sub_title='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    sub_title='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    sub_title='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    sub_title='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    sub_title='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    sub_title='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    sub_title='Net bilateral aid flow of Grenada from Development Assistance Committee',<0x0A>    sub_title='Net bilateral 
---------------------------------------------------------------------------------------------------------
 [1m(8)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31m Country_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(18,18),color='green')<0x0A>plt.xlabel('Country')<0x0A>plt.ylabel('Yield by per Phenomena')<0x0A>plt.title('Cereal yield in different countries as per the survey of 1981')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(9)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31m grupo_df = grupo_df.sort_values('Year', ascending=False)<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133555', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133555', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133555', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133555', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133555', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133555', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133555', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133555', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133555', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133555', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133555', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133555', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133555', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133555', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133555', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df 
---------------------------------------------------------------------------------------------------------
 [1m(10)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 1.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
 {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6.6}, {'x': 'Field', 'y': 7.0}]}}
---------------------------------------------------------------------------------------------------------
 [1m(11)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 0.67 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
 {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Number of procedures to build a warehouse in Congo (Republic)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 13.42}, {'x': 'field', 'y': 13.42}, {'x': 'field', 'y': 13.42}, {'x': 'field', 'y': 13.42}, {'x': 'field', 'y': 13.42}]}}
---------------------------------------------------------------------------------------------------------
 [1m(12)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m %matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['top'].set_color('none')<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['bottom'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2 
---------------------------------------------------------------------------------------------------------
 [1m(13)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((fromward to backward to normally-graduated)), 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 20}, {'x': 'Y': 20}, {'x': 'Y': 20}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(14)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Percentage of babies born with low-birthweight in Sri Lanka', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 21.77}, {'x': 'Year', 'y': 17.55}, {'x': 'Y': 17.55}, {'x': 'Y': 21.75}, {'x': 'Y': 21.75}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(15)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 11.03}, {'x': 'Year', 'y': 11.03}, {'x': 'Y': 20.43}, {'x': 'Y': 20.43}, {'x': 'Y': 20.43}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(16)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m fecha_date = '2016-01-01'<0x0A><0x0A># Create a new DataFrame containing only the date of the last meeting.<0x0A>df_new = pd.DataFrame(index=range(len(date_list)))<0x0A><0x0A># Create a new column that contains the date of the last meeting.<0x0A>df_new['Date'] = pd.to_datetime(df_new['Date'])<0x0A><0x0A># Create a new column that contains the date of the last meeting.<0x0A>df_new['Date'] = pd.to_datetime(df_new['Date'])<0x0A><0x0A># Create a new column that contains the date of the last meeting.<0x0A>df_new['Date'] = pd.to_datetime(df_new['Date'])<0x0A><0x0A># Create a new column that contains the date of the last meeting.<0x0A>df_new['Date'] = pd.to_datetime(df_new['Date'])<0x0A><0x0A># Create a new column that contains the date of the last meeting.<0x0A>df_new['Date'] = pd.to_datetime(df_new['Date'])<0x0A><0x0A># Create a new column that contains the date of the last meeting.<0x0A>df_new['Date'] = pd.to_datetime(df_new['Date'])<0x0A><0x0A># Create a new column that contains the date of the last meeting.<0x0A>df_new['Date'] = pd.to_datetime(df_new['Date'])<0x0A><0x0A># Create a new column that contains the date of the last meeting.<0x0A>df_new['Date'] = pd.to_datetime(df_new['Date'])<0x0A><0x0A># Create a new column that contains the date of the last meeting.<0x0A>df_new['Date'] = pd.to_datetime(df_new['Date'])<0x0A><0x0A># Create a new column that contains the date of the last meeting.<0x0A>df_new['Date'] = pd.to_datetime(df_new['Date'])<0x0A><0x0A># Create a new column that contains the date of the last meeting.<0x0A>df_new['Date'] = pd.to_datetime(df_new['Date'])<0x0A><0x0A># Create a new column that contains the date of the last meeting.<0x0A>df_new['Date'] = pd.to_datetime(df_new['Date'])<0x0A><0x0A># Create a new column that contains the date of the last meeting.<0x0A>df_new['Date'] = pd.to_datetime(df_new['Date'])<0x0A><0x0A># Create a new column that contains the date of the last meeting.<0x0A>df_new['Date'] = pd.to_datetime(df_new['Date'])<0x0A><0x0A># Create a new column that contains the date of the last meeting.<0x0A>df_new['Date'] = pd 
---------------------------------------------------------------------------------------------------------
 [1m(17)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m Country_2016_2017 = 'United Kingdom'<0x0A>Country_2017_2018 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_201 
---------------------------------------------------------------------------------------------------------
 [1m(18)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 0.56 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
 {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Costile (1% of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.55}, {'x': 'Field', 'y': 18.55}, {'x': 'Type', 'y': 250}, {'x': 'Field', 'y': 1600}, {'x': 'Type', 'y': 2500}]}}
---------------------------------------------------------------------------------------------------------
 [1m(19)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m graph = pd.DataFrame({'Year':['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020', '2021', '2022', '2023', '2024', '2025', '2026', '2027', '2028', '2029', '2031', '2032', '2033', '2035', '2036', '2037', '2039', '2041', '2042', '2043', '2045', '2046', '2047', '2048', '2049', '2051', '2052', '2053', '2055', '2055', '2057', '2059', '2061', '2062', '2063', '2065', '2065', '2065', '2067', '2067', '2068', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '20 
---------------- RESULTS --------------------
accuracy mark type : 1.0
accuracy var types (x) : 0.33
accuracy var types (y) : 1.0
accuracy var names (x) : 1.0
accuracy var names (y) : 0.77
accuracy structure : 0.3
---------------------------------------------
accuracies test:  [0.0, 0.59, 0.0, 0.33, 0.33]
Epoch:  21
Epoch:  22
Epoch:  23
Epoch:  24
Epoch:  25
---------------------------------------------------------------------------------------------------------
 [1m(0)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (in a Set of GTV)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'type': 'quantitative'}}, 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(1)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7952}, {'x': 'Year', 'y': 7952}, {'x': 'Y': 'Total unemployed youth population of Colombia', 'y': 7952}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(2)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Irrational Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.23}, {'x': 'Field', 'y': 60.33}, {'x': 'Y': 20.69}, {'x': 'Y': 24.58}, {'x': 'Field', 'y': 55.23}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(3)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m Arable land ('Seychelles') 
---------------------------------------------------------------------------------------------------------
 [1m(4)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Percentage of Production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 265.45}, {'x': 'field': 'Year', 'y': 304.19}, {'x': 'y': 234.14}, {'x': 'field': 'Year', 'y': 265.45}, {'x': 'field': 'Year', 'y': 304.19}, {'x': 'field': 'Value', 'y': 304.19}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(5)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 1.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 0.93 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
 {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.02}, {'x': 'Year', 'y': 12.02}, {'x': 'Type', 'y': 50.06}, {'x': 'Type', 'y': 100.06}]}}
---------------------------------------------------------------------------------------------------------
 [1m(6)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.06}, {'x': 'Field', 'y': 48.17}, {'x': 'Y': 20.75}, {'x': 'Y': 20.75}, {'x': 'Y': 20.75}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(7)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m ##########################################################################################<0x0A># TODO: Make a bar plot of the bill of the Grenada from Development Assistance Committee.<0x0A>##########################################################################<0x0A><0x0A># Create a bar plot of the bill of the Grenada from Development Assistance Committee.<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the bar plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create the plot layout<0x0A>############################################################################<0x0A><0x0A># Create 
---------------------------------------------------------------------------------------------------------
 [1m(8)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31m Country_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(18,18),color='green')<0x0A>plt.xlabel('Country')<0x0A>plt.ylabel('Yield by per Phenomena')<0x0A>plt.title('Cereal yield in different countries as per the survey of 1981')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(9)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31m grupo_df = grupo_df.sort_values('Year', ascending=False)<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133333', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133333', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133333', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133333', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133333', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133333', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133333', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133333', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133333', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133333', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133333', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133333', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133333', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133333', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', color='#133333', figsize=(15,15))<0x0A><0x0A># Plot<0x0A>g = grupo_df 
---------------------------------------------------------------------------------------------------------
 [1m(10)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 0.12 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
 {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Sales', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6.6}, {'x': 'Nominal', 'y': 7.0}]}}
---------------------------------------------------------------------------------------------------------
 [1m(11)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Number of procedures to build a warehouse in Congo (Republic)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 13.42}, {'x': 'Y': 20.48}, {'x': 'Y': 14.17}, {'x': 'Y': 14.17}, {'x': 'Y': 20.48}, {'x': 'Y': 14.17}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(12)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m %matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['top'].set_color('none')<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['bottom'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['left'].set_linewidth(2 
---------------------------------------------------------------------------------------------------------
 [1m(13)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((demand for housing)), 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 1035}, {'x': 'Y': 206}, {'x': 'Y': 206}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(14)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Percentage of babies born with low-birthweight in Sri Lanka', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 21.77}, {'x': 'Year', 'y': 17.55}, {'x': 'Y': 17.55}, {'x': 'Y': 21.75}, {'x': 'Y': 21.75}, {'x': 'Y': 17.55}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(15)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 11.03}, {'x': 'Year', 'y': 11.03}, {'x': 'Y': 20.43}, {'x': 'Y': 60.32}, {'x': 'Y': 14.69}, {'x': 'Y': 14.69}, {'x': 'Y': 20.43}, {'x': 'Y': 14.69}, {'x': 'Y': 20.43}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(16)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m fecha_date = '2016-01-01'<0x0A><0x0A># Create a new DataFrame containing only the date of the last meeting.<0x0A>df_date = pd.DataFrame(date_table, columns = ['Date', 'Year'])<0x0A><0x0A># Create a new DataFrame containing only the date of the last meeting.<0x0A>df_date = df_date.sort_values(by='Date', ascending=False)<0x0A><0x0A># Create a new DataFrame containing only the date of the last meeting.<0x0A>df_date['Date'] = pd.to_datetime(df_date['Date'])<0x0A><0x0A># Create a new DataFrame containing only the date of the last meeting.<0x0A>df_date['Date'] = pd.to_datetime(df_date['Date'])<0x0A><0x0A># Create a new DataFrame containing only the date of the last meeting.<0x0A>df_date['Date'] = pd.to_datetime(df_date['Date'])<0x0A><0x0A># Create a new DataFrame containing only the date of the last meeting.<0x0A>df_date['Date'] = pd.to_datetime(df_date['Date'])<0x0A><0x0A># Create a new DataFrame containing only the date of the last meeting.<0x0A>df_date['Date'] = pd.to_datetime(df_date['Date'])<0x0A><0x0A># Create a new DataFrame containing only the date of the last meeting.<0x0A>df_date['Date'] = pd.to_datetime(df_date['Date'])<0x0A><0x0A># Create a new DataFrame containing only the date of the last meeting.<0x0A>df_date['Date'] = pd.to_datetime(df_date['Date'])<0x0A><0x0A># Create a new DataFrame containing only the date of the last meeting.<0x0A>df_date['Date'] = pd.to_datetime(df_date['Date'])<0x0A><0x0A># Create a new DataFrame containing only the date of the last meeting.<0x0A>df_date['Date'] = pd.to_datetime(df_date['Date'])<0x0A><0x0A># Create a new DataFrame containing only the date of the last meeting.<0x0A>df_date['Date'] = pd.to_datetime(df_date['Date'])<0x0A><0x0A># Create a new DataFrame containing only the date of the last meeting.<0x0A>df_date['Date'] = pd.to_datetime(df_date['Date'])<0x0A><0x0A># Create a new DataFrame containing only the date of the last meeting.<0x0A>df_date['Date'] = pd.to_datetime(df_date['Date'])<0x0A><0x0A># Create a new DataFrame containing only the date of the last meeting.<0x0A>df_date['Date'] = pd.to_datetime(df_date['Date'])<0x0A><0x0A># Create a 
---------------------------------------------------------------------------------------------------------
 [1m(17)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m Country_2016_2017 = 'United Kingdom'<0x0A>Country_2017_2018 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_201 
---------------------------------------------------------------------------------------------------------
 [1m(18)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (per KG of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.42}, {'x': 'Y': 20.69}, {'x': 'Y': 20.69}, {'x': 'Y': 20.69}, {'x': 'Y': 20.69}, {'x': 'Y': 20.69}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(19)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Rating regarding strength of legal rights index in Croatia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.03}, {'x': 'Y': 20.79}, {'x': 'Y': 150.59}, {'x': 'Y': 150.59}, {'x': 'Y': 240.87}, {'x': 'Y': 150.59}, {'x': 'Y': 150.59}, {'x': 'Y': 240.87}]}} 
---------------- RESULTS --------------------
accuracy mark type : 1.0
accuracy var types (x) : 0.5
accuracy var types (y) : 1.0
accuracy var names (x) : 1.0
accuracy var names (y) : 0.53
accuracy structure : 0.1
---------------------------------------------
accuracies test:  [0.0, 0.59, 0.0, 0.33, 0.33, 0.5]
Epoch:  26
Epoch:  27
Epoch:  28
Epoch:  29
Epoch:  30
---------------------------------------------------------------------------------------------------------
 [1m(0)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (in a Set of GTV)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field': 'Year', 'y': 0.01}, {'x': 'field': 'Value', 'y': 0.01}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(1)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 798}, {'x': 'Y': 'Total unemployed youth population of Colombia', 'y': 798}, {'x': 'Y': 'Year', 'y': 244}, {'x': 'Y': 'Total unemployed youth population of Colombia', 'y': 144}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(2)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of total non-fertilized resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.26}, {'x': 'Y': 90.70}, {'x': 'Y': 62.48}, {'x': 'Y': 23.46}, {'x': 'Y': 53.21}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(3)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m Arable land ('Seychelles') 
---------------------------------------------------------------------------------------------------------
 [1m(4)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Percentage of Production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 265.45}, {'x': 'field': 'Year', 'y': 304.75}, {'x': 'y': 234.13}, {'x': 'y': 106.63}, {'x': 'y': 234.13}, {'x': 'y': 304.75}, {'x': 'y': 234.13}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(5)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.02}, {'x': 'Y': 20.48}, {'x': 'Y': 20.48}, {'x': 'Y': 20.48}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(6)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': 'Cost of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.06}, {'x': 'Field', 'y': 67.79}, {'x': 'Y': 40.06}, {'x': 'Y': 90.23}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(7)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m ##########################################################################################<0x0A># TODO: Load the example dataset into the subprocess and plot it here.<0x0A>###########################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A><0x0A># Load the example dataset into the subprocess and 
---------------------------------------------------------------------------------------------------------
 [1m(8)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31m Country_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(18,18),color='green')<0x0A>plt.xlabel('Country')<0x0A>plt.ylabel('Yield by per Phenomena')<0x0A>plt.title('Cereal yield in different countries as per the survey of 1981')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(9)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31m grupo_df = grupo_df.sort_values('Year', ascending=False)<0x0A><0x0A># Plot<0x0A>ax = grupo_df.plot(kind='bar', color='#173345', figsize=(15,15))<0x0A>ax.set_ylabel('55/poverty lines')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_title('Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A>ax.set_ylim(0, 3)<0x0A><0x0A># Save Figure<0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A># Plot<0x0A>ax.bar(x= grupo_df.Year, height= grupo_df.mean_shortfall, color='#173345', edgecolor='black', linewidth=1)<0x0A><0x0A># Plot<0x0A>ax.set_ylim(0, 3)<0x0A><0x0A># Add a legend<0x0A>ax.legend(prop={'size': 15})<0x0A><0x0A># Display the plot<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(10)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Sales', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 64}, {'x': 'Nominal', 'y': 7.05}, {'x': 'Y': 25}, {'x': 'Y': 64}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(11)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Number of procedures to build a warehouse in Congo (Republic)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 13.42}, {'x': 'Y': 20.48}, {'x': 'Y': 60.79}, {'x': 'Y': 14.17}, {'x': 'Y': 14.17}, {'x': 'Y': 23.45}, {'x': 'Y': 13.42}, {'x': 'Y': 20.48}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(12)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m estados = {'x': 'Year', 'y': 'Producción in python book', 'data': {'x': 'Year', 'y': 10000}, {'x': 'Year', 'y': 7000}, {'x': 'Year', 'y': 10000}, {'x': 'Year', 'y': 7000}, {'x': 'Year', 'y': 10000}, {'x': 'Year', 'y': 7000}, {'x': 'Year', 'y': 10000}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(13)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((fromward to forwards)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 103}, {'x': 'Y': 248}, {'x': 'Y': 248}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(14)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m {'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': 'Percentage of babies born with low-birthweight in Sri Lanka', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 21.73}, {'x': 'Y': 17.67}, {'x': 'Y': 20.64}, {'x': 'Y': 16.87}, {'x': 'Y': 21.74}, {'x': 'Y': 16.87}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(15)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Percentage of children ages 12-23 months who received DPT vaccinations in Denmark }<0x0A>       }<0x0A>       }<0x0A><0x0A>ggplot(data = df, aes(x = 'Year', y = 'Percentage of children ages 12-23 months who received DPT vaccinations in Denmark', color = 'green')) + \<0x0A>        geom_point() + facet_wrap('~Year', ncol=1) + \<0x0A>        scale_x_date(date_labels = {'x': 'Year', 'y': 'quantitative', 'data': {'x': 'Year', 'y': 'quantitative', 'data': 'quantitative', 'y': 'quantitative', 'data')) + \<0x0A>        scale_color_breaths(data = 'Percentage of children ages 12-23 months who received DPT vaccinations in Denmark', 'data': {'x': 'Year', 'y': 'quantitative', 'data': 'quantitative', 'y': 'quantitative', 'data')) + \<0x0A>        scale_color_breaths(data = 'Percentage of children ages 12-23 months who received DPT vaccinations in Denmark', 'data': {'x': 'Year', 'y': 'quantitative', 'y': 'quantitative', 'data': 'quantitative', 'y': 'quantitative', 'data')) + \<0x0A>        coord_flip() + facet_wrap('~Year', ncol=1) + \<0x0A>        ggtitle('Percentage of children ages 12-23 months who received DPT vaccinations in Denmark', 'y': 'quantitative', 'y': 'quantitative', 'y': 'quantitative', 'y': 'quantitative', 'y': 'quantitative', 'y': 'quantitative', 'y': 'quantitative', 'y': 'quantitative', 'y': 
---------------------------------------------------------------------------------------------------------
 [1m(16)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m fecha_date = '2016-01-01'<0x0A><0x0A># Create a new DataFrame containing only the date of the meeting.<0x0A>df_new = pd.DataFrame(index=range(len(date_list)))<0x0A><0x0A># Create a new column that contains the date of the meeting.<0x0A>df_new['Date'] = date_list<0x0A><0x0A># Create a new column that contains the percentage of households in Russian Federation that uses salt<0x0A>df_new['Percentage'] = ((df_new['Households'] / df_new['Percentage'].sum()) * 100)<0x0A><0x0A># Create a new column that contains the percentage of households in Russian Federation that uses salt<0x0A>df_new['Year'] = ((df_new['Households'] / df_new['Percentage'].sum()) * 100)<0x0A><0x0A># Create a new column that contains the percentage of households in Russian Federation that uses salt<0x0A>df_new['Percentage'] = ((df_new['Households'] / df_new['Percentage'].sum()) * 100)<0x0A><0x0A># Create a new column that contains the percentage of households in Russian Federation that uses salt<0x0A>df_new['Year'] = ((df_new['Households'] / df_new['Percentage'].sum()) * 100)<0x0A><0x0A># Create a new column that contains the percentage of households in Russian Federation that uses salt<0x0A>df_new['Percentage'] = ((df_new['Households'] / df_new['Percentage'].sum()) * 100)<0x0A><0x0A># Create a new column that contains the percentage of households in Russian Federation that uses salt<0x0A>df_new['Percentage'] = ((df_new['Households'] / df_new['Percentage'].sum()) * 100)<0x0A><0x0A># Create a new column that contains the percentage of households in Russian Federation that uses salt<0x0A>df_new['Percentage'] = ((df_new['Households'] / df_new['Percentage'].sum()) * 100)<0x0A><0x0A># Create a new column that contains the percentage of households in Russian Federation that uses salt<0x0A>df_new['Percentage'] = ((df_new['Households'] / df_new['Percentage'].sum()) * 100)<0x0A><0x0A># Create a new column that contains the percentage of households in Russian Federation that uses salt<0x0A>df_new['Percentage'] = ((df_new['Households'] / df_new['Percentage']. 
---------------------------------------------------------------------------------------------------------
 [1m(17)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m Country_2016_2017 = 'United Kingdom'<0x0A>Country_2017_2018 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_201 
---------------------------------------------------------------------------------------------------------
 [1m(18)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m {'x': 'Year', 'y': 'Cost (per KG of GW)', 'data': {'x': 'Year', 'y': 'COST (per KG of GW)', 'data': {'x': 'Year', 'y': 'Cost (per KG of GW)', 'data': {'x': 'Year', 'y': 'COST (per KG of GW)', 'data': {'x': 'Year', 'y': 'COST (per KG of GW)', 'data': {'x': 'Year', 'y': 'COST (per KG of GW)', 'data': {'x': 'Year', 'y': 'COST (per KG of GW)', 'data': {'x': 'Year', 'y': 'COST (per KG of GW)', 'data': {'x': 'Year', 'y': 'COST (per KG of GW)', 'data
---------------------------------------------------------------------------------------------------------
 [1m(19)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength based (O. value $12 = value $13 = value $14 = value $15 = value $16 = value $17 = value $18 = value $19 = value $20 = value $21 = value $22 = value $27 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 
---------------- RESULTS --------------------
accuracy mark type : 0.0
accuracy var types (x) : 0.0
accuracy var types (y) : 0.0
accuracy var names (x) : 0.0
accuracy var names (y) : 0.0
accuracy structure : 0.0
---------------------------------------------
accuracies test:  [0.0, 0.59, 0.0, 0.33, 0.33, 0.5, 0.0]
---------------------------------------------------------------------------------------------------------
 [1m(0)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (in a Set of GTV)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field': 'Year', 'y': 0.01}, {'x': 'field': 'Value', 'y': 0.01}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(1)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 798}, {'x': 'Y': 'Total unemployed youth population of Colombia', 'y': 798}, {'x': 'Y': 'Year', 'y': 244}, {'x': 'Y': 'Total unemployed youth population of Colombia', 'y': 144}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(2)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of total non-fertilized resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.26}, {'x': 'Y': 90.70}, {'x': 'Y': 62.48}, {'x': 'Y': 23.46}, {'x': 'Y': 53.21}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(3)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m Arable land ('Seychelles') 
---------------------------------------------------------------------------------------------------------
 [1m(4)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Percentage of Production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 265.45}, {'x': 'field': 'Year', 'y': 304.75}, {'x': 'y': 234.13}, {'x': 'y': 106.63}, {'x': 'y': 234.13}, {'x': 'y': 304.75}, {'x': 'y': 234.13}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(5)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.02}, {'x': 'Y': 20.48}, {'x': 'Y': 20.48}, {'x': 'Y': 20.48}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(6)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': 'Cost of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.06}, {'x': 'Field', 'y': 67.79}, {'x': 'Y': 40.06}, {'x': 'Y': 90.23}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(7)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m ##########################################################################################<0x0A># TODO: Load the example dataset into the subprocess and plot it here.<0x0A>###########################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A><0x0A># Load the example dataset into the subprocess and 
---------------------------------------------------------------------------------------------------------
 [1m(8)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31m Country_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(18,18),color='green')<0x0A>plt.xlabel('Country')<0x0A>plt.ylabel('Yield by per Phenomena')<0x0A>plt.title('Cereal yield in different countries as per the survey of 1981')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(9)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31m grupo_df = grupo_df.sort_values('Year', ascending=False)<0x0A><0x0A># Plot<0x0A>ax = grupo_df.plot(kind='bar', color='#173345', figsize=(15,15))<0x0A>ax.set_ylabel('55/poverty lines')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_title('Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A>ax.set_ylim(0, 3)<0x0A><0x0A># Save Figure<0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A># Plot<0x0A>ax.bar(x= grupo_df.Year, height= grupo_df.mean_shortfall, color='#173345', edgecolor='black', linewidth=1)<0x0A><0x0A># Plot<0x0A>ax.set_ylim(0, 3)<0x0A><0x0A># Add a legend<0x0A>ax.legend(prop={'size': 15})<0x0A><0x0A># Display the plot<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(10)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Sales', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 64}, {'x': 'Nominal', 'y': 7.05}, {'x': 'Y': 25}, {'x': 'Y': 64}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(11)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Number of procedures to build a warehouse in Congo (Republic)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 13.42}, {'x': 'Y': 20.48}, {'x': 'Y': 60.79}, {'x': 'Y': 14.17}, {'x': 'Y': 14.17}, {'x': 'Y': 23.45}, {'x': 'Y': 13.42}, {'x': 'Y': 20.48}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(12)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m estados = {'x': 'Year', 'y': 'Producción in python book', 'data': {'x': 'Year', 'y': 10000}, {'x': 'Year', 'y': 7000}, {'x': 'Year', 'y': 10000}, {'x': 'Year', 'y': 7000}, {'x': 'Year', 'y': 10000}, {'x': 'Year', 'y': 7000}, {'x': 'Year', 'y': 10000}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(13)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((fromward to forwards)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 103}, {'x': 'Y': 248}, {'x': 'Y': 248}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(14)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m {'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': 'Percentage of babies born with low-birthweight in Sri Lanka', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 21.73}, {'x': 'Y': 17.67}, {'x': 'Y': 20.64}, {'x': 'Y': 16.87}, {'x': 'Y': 21.74}, {'x': 'Y': 16.87}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(15)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Percentage of children ages 12-23 months who received DPT vaccinations in Denmark }<0x0A>       }<0x0A>       }<0x0A><0x0A>ggplot(data = df, aes(x = 'Year', y = 'Percentage of children ages 12-23 months who received DPT vaccinations in Denmark', color = 'green')) + \<0x0A>        geom_point() + facet_wrap('~Year', ncol=1) + \<0x0A>        scale_x_date(date_labels = {'x': 'Year', 'y': 'quantitative', 'data': {'x': 'Year', 'y': 'quantitative', 'data': 'quantitative', 'y': 'quantitative', 'data')) + \<0x0A>        scale_color_breaths(data = 'Percentage of children ages 12-23 months who received DPT vaccinations in Denmark', 'data': {'x': 'Year', 'y': 'quantitative', 'data': 'quantitative', 'y': 'quantitative', 'data')) + \<0x0A>        scale_color_breaths(data = 'Percentage of children ages 12-23 months who received DPT vaccinations in Denmark', 'data': {'x': 'Year', 'y': 'quantitative', 'y': 'quantitative', 'data': 'quantitative', 'y': 'quantitative', 'data')) + \<0x0A>        coord_flip() + facet_wrap('~Year', ncol=1) + \<0x0A>        ggtitle('Percentage of children ages 12-23 months who received DPT vaccinations in Denmark', 'y': 'quantitative', 'y': 'quantitative', 'y': 'quantitative', 'y': 'quantitative', 'y': 'quantitative', 'y': 'quantitative', 'y': 'quantitative', 'y': 'quantitative', 'y': 
---------------------------------------------------------------------------------------------------------
 [1m(16)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m fecha_date = '2016-01-01'<0x0A><0x0A># Create a new DataFrame containing only the date of the meeting.<0x0A>df_new = pd.DataFrame(index=range(len(date_list)))<0x0A><0x0A># Create a new column that contains the date of the meeting.<0x0A>df_new['Date'] = date_list<0x0A><0x0A># Create a new column that contains the percentage of households in Russian Federation that uses salt<0x0A>df_new['Percentage'] = ((df_new['Households'] / df_new['Percentage'].sum()) * 100)<0x0A><0x0A># Create a new column that contains the percentage of households in Russian Federation that uses salt<0x0A>df_new['Year'] = ((df_new['Households'] / df_new['Percentage'].sum()) * 100)<0x0A><0x0A># Create a new column that contains the percentage of households in Russian Federation that uses salt<0x0A>df_new['Percentage'] = ((df_new['Households'] / df_new['Percentage'].sum()) * 100)<0x0A><0x0A># Create a new column that contains the percentage of households in Russian Federation that uses salt<0x0A>df_new['Year'] = ((df_new['Households'] / df_new['Percentage'].sum()) * 100)<0x0A><0x0A># Create a new column that contains the percentage of households in Russian Federation that uses salt<0x0A>df_new['Percentage'] = ((df_new['Households'] / df_new['Percentage'].sum()) * 100)<0x0A><0x0A># Create a new column that contains the percentage of households in Russian Federation that uses salt<0x0A>df_new['Percentage'] = ((df_new['Households'] / df_new['Percentage'].sum()) * 100)<0x0A><0x0A># Create a new column that contains the percentage of households in Russian Federation that uses salt<0x0A>df_new['Percentage'] = ((df_new['Households'] / df_new['Percentage'].sum()) * 100)<0x0A><0x0A># Create a new column that contains the percentage of households in Russian Federation that uses salt<0x0A>df_new['Percentage'] = ((df_new['Households'] / df_new['Percentage'].sum()) * 100)<0x0A><0x0A># Create a new column that contains the percentage of households in Russian Federation that uses salt<0x0A>df_new['Percentage'] = ((df_new['Households'] / df_new['Percentage']. 
---------------------------------------------------------------------------------------------------------
 [1m(17)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m Country_2016_2017 = 'United Kingdom'<0x0A>Country_2017_2018 = 'United States'<0x0A>Country_2017_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United States'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_2018_2019 = 'United Kingdom'<0x0A>Country_201 
---------------------------------------------------------------------------------------------------------
 [1m(18)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m {'x': 'Year', 'y': 'Cost (per KG of GW)', 'data': {'x': 'Year', 'y': 'COST (per KG of GW)', 'data': {'x': 'Year', 'y': 'Cost (per KG of GW)', 'data': {'x': 'Year', 'y': 'COST (per KG of GW)', 'data': {'x': 'Year', 'y': 'COST (per KG of GW)', 'data': {'x': 'Year', 'y': 'COST (per KG of GW)', 'data': {'x': 'Year', 'y': 'COST (per KG of GW)', 'data': {'x': 'Year', 'y': 'COST (per KG of GW)', 'data': {'x': 'Year', 'y': 'COST (per KG of GW)', 'data
---------------------------------------------------------------------------------------------------------
 [1m(19)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength based (O. value $12 = value $13 = value $14 = value $15 = value $16 = value $17 = value $18 = value $19 = value $20 = value $21 = value $22 = value $27 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 = value $29 
---------------- RESULTS --------------------
accuracy mark type : 0.0
accuracy var types (x) : 0.0
accuracy var types (y) : 0.0
accuracy var names (x) : 0.0
accuracy var names (y) : 0.0
accuracy structure : 0.0
---------------------------------------------
---------------------------------------------------------------------------------------------------------
 [1m(0)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'encoding': {'y': {'field': 'body_mass_g', 'type': 'quantitative'}, 'x': {'field': 'culmen_length_mm', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
[31m scatterplot(x=df_train.columns[1], y=df_train.columns[0],<0x0A>             title="Scatterplot-Relationship between two variables",<0x0A>             xlabel="culmen_length_mm",<0x0A>             ylabel="body mass_g",<0x0A>             title_f=["Scatterplot-Relationship between two variables"]) 
---------------------------------------------------------------------------------------------------------
 [1m(1)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'encoding': {'y': {'field': 'Youth unemployment rate', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
[31m graph = sns.relplot(x="Year", y="Month", data=df, kind="line", height=10, aspect=2, color="steelblue", kind="point", <0x0A>                    palette="muted", ci=None, height=10, aspect=2, data=df)<0x0A>graph.set(ylabel="Month unemployment rate", xlabel="Year", xlim=(0, 30) )<0x0A>graph.set_axis_labels("Year", "Month unemployment rate", "2018", "2019")<0x0A>graph.fig.suptitle('')<0x0A>graph.set_xticklabels(rotation=45)<0x0A>graph.fig.subplots_adjust(top=0.85)<0x0A>graph.fig.subplots_adjust(bottom=0.85)<0x0A>graph.fig.subplots_adjust(top=0.85)<0x0A>graph.fig.subplots_adjust(top=0.85)<0x0A>graph.fig.subplots_adjust(top=0.85)<0x0A>graph.fig.subplots_adjust(bottom=0.85)<0x0A>graph.fig.subplots_adjust(left=0.85)<0x0A>graph.fig.subplots_adjust(top=0.85)<0x0A>graph.fig.subplots_adjust(left=0.85)<0x0A>graph.fig.subplots_adjust(top=0.85)<0x0A>graph.fig.subplots_adjust(left=0.85)<0x0A>graph.fig.subplots_adjust(bottom=0.85)<0x0A>graph.fig.subplots_adjust(left=0.85)<0x0A>graph.fig.subplots_adjust(left=0.85)<0x0A>graph.fig.subplots_adjust(left=0.85)<0x0A>graph.fig.subplots_adjust(left=0.85)<0x0A>graph.fig.subplots_adjust(left=0.85)<0x0A>graph.fig.subplots_adjust(left=0.85)<0x0A>graph.fig.subplots_adjust(left=0.85)<0x0A>graph.fig.subplots_adjust(left=0.85)<0x0A>graph.fig.subplots_adjust(left=0.85)<0x0A>graph.fig.subplots_adjust(left=0.85)<0x0A>graph.fig.subplots_adjust(left=0.85)<0x0A>graph.fig.subplots_adjust 
---------------------------------------------------------------------------------------------------------
 [1m(2)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'encoding': {'y': {'field': 'Amount of daily sent messages in billions', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'ordinal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31m {'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Amount of daily percentage in tobacco', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Q4 '16', 'y': 50', 'data': 60'}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(3)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'nominal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31m rows = 10<0x0A>cols = 10<0x0A>fig, ax = plt.subplots(figsize=(15,20))<0x0A><0x0A># Plotting the distribution of the target variable<0x0A>ax.bar(df_train.columns, df_train.iloc[:,1])<0x0A>ax.set_xticklabels(df_train.columns)<0x0A>ax.set_xticklabels(df_train.columns)<0x0A><0x0A># Rotating the labels and displaying them<0x0A>ax.xaxis.label.set_fontsize(20)<0x0A>ax.yaxis.label.set_fontsize(20)<0x0A><0x0A># Rotating the ticks and labels<0x0A>ax.xaxis.tick_top()<0x0A>ax.xaxis.tick_bottom()<0x0A><0x0A># Rotating the tick labels and displaying them<0x0A>ax.xaxis.tick_top()<0x0A><0x0A># Saving the figure<0x0A>fig.savefig("../figures/fig1.png")<0x0A><0x0A># Display the figure<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(4)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'nominal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31m rows = df.groupby('type')['price'].mean().reset_index()<0x0A>fig, ax = plt.subplots(figsize=(15, 20))<0x0A>ax.bar(rows, rows, color='g', alpha=0.75)<0x0A>for i in range(0, len(rows)):<0x0A>    ax.text(rows[i], rows[i], str(round(rows[i],2)), ha='center', va='center', rotation=30)<0x0A>plt.xticks(rotation=45)<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(5)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 1.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 1.0 
[32m {'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
 {'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 734, 'y': 1170}, {'x': 2964, 'y': 2780}, {'x': 5135, 'y': 2780}, {'x': 3176, 'y': 873}, {'x': 11676, 'y': 1119}, {'x': 827, 'y': 1683}, {'x': 4486, 'y': 2868}, {'x': 3072, 'y': 2573}]}}
---------------------------------------------------------------------------------------------------------
 [1m(6)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.14 
[32m {'encoding': {'y': {'field': ',<mark>bar</mark><x><type>temporal</type></x><y><type>quantitative</type><field>Ticket price in U.S. dollars</field></y>', 'type': 'quantitative'}, 'x': {'field': 'Ticket price in U.S. dollars', 'type': 'temporal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
 {'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Treatment in US Children', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2006, 'y': 62.38}, {'x': 2007, 'y': 67.11}, {'x': 2008, 'y': 72.20}, {'x': 2009, 'y': 74.99}, {'x': 2010, 'y': 76.47}, {'x': 2011, 'y': 77.34}, {'x': 2012, 'y': 78.38}, {'x': 2013, 'y': 81.54}, {'x': 2014, 'y': 84.43}, {'x': 2015, 'y': 92.98}, {'x': 2016, 'y': 92.98}, {'x': 2017, 'y': 102.35}, {'x': 2019, 'y': 102.35}]}}
---------------------------------------------------------------------------------------------------------
 [1m(7)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 0.19 
[32m {'encoding': {'y': {'field': 'Revenue in billions U.S. dollars', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'ordinal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
 {'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'African nations', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2019', 'y': 20.51}, {'x': '31-01-19', 'y': 9.64}, {'x': '2019', 'y': 19.64}]}}
---------------------------------------------------------------------------------------------------------
 [1m(8)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'encoding': {'y': {'field': 'Number of users in millions', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31m meses_2017 = {'x': '2017', 'y': 67.2, 'data': {'x': 2017, 'y': 67.2, 'data': {'x': 2018, 'y': 72.38, 'data': {'x': 2019, 'y': 76.29, 'data': {'x': 2019, 'y': 76.29, 'data': {'x': 2019, 'y': 76.29, 'data': {'x': 2019, 'y': 76.29, 'data': {'x': 2019, 'y': 76.29, 'data': {'x': 2019, 'y': 76.29, 'data': {'x': 2019, 'y': 76.29, 'data': {'x': 2019, 'y': 76.29, 'data': {'x': 2019, 'y': 76.29, 'data': {'x': 2019, 'y': 76.29, 'data': {'x': 2019, 'y': 76.29, 'data':fixedPRICES.query('STATUS =='+ str(year)] + 'Value':'sum': 90.04}}}}}<0x0A>       }<0x0A>       }<0x0A><0x0A>meses_2018 = {'x': '2018', 'y': 72.38, 'data': {'x': 2018, 'y': 72.38, 'data': FORMAL_DATASETS.query('STATUS =='+ str(year) + 'Value': '2022*', 'y': 84.67, 'data': FORMAL_DATASETS.query('STATUS =='+ str(year) + 'Value': 86.68, 'y': 88. 
---------------------------------------------------------------------------------------------------------
 [1m(9)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 0.77 
[32m {'encoding': {'y': {'field': 'Number of vehicles in thousands', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
 {'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Number of violation thousands', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2016, 'y': 48.4}, {'x': 2017, 'y': 95}, {'x': 2018, 'y': 87.8}, {'x': 2019, 'y': 84.7}, {'x': 2020, 'y': 77.8}, {'x': 2021, 'y': 87.3}]}}
---------------------------------------------------------------------------------------------------------
 [1m(10)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'encoding': {'y': {'field': 'Number of retail stores', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'nominal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31m {'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Number of transactions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Emerging Markets', 'y': 5})}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(11)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'encoding': {'y': {'field': 'Outpatient Satisfaction', 'type': 'quantitative'}, 'x': {'field': 'Time (minutes) with Doctor in Outpatient Clinic Consultation', 'type': 'temporal'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
[31m {'mark': 'circle', 'encoding': {'x': {'field': 'Time (minutes) with Doctor in Outpatient Clinic Consultation \n (Independent Variable)': 'Outpatient Score of to 5)\n (Ulbert Score of to 9)\n (Independent Variable)': 'y': {'field': 'Outpatient Satisfaction', 'type': 'quantitative'}, 'y': {'field': 'quantitative', 'type': 'quantitative'}}, 'data': {'values': [{'x': 13.42, 'y': 4.12}, {'x': 50.32, 'y': 2.18}, {'x': 9.60, 'y': 2.8}, {'x': 30.43, 'y': 4.12}, {'x': 13.43, 'y': 3.43}, {'x': 13.43, 'y': 3.43}, {'x': 13.43, 'y': 4.12}, {'x': 13.43, 'y': 2.75}, {'x': 13.43, 'y': 3.43}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(12)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'nominal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31m grupo_bairro = dados.query("CITY == 'C3'")<0x0A><0x0A># Código de barras<0x0A>d = grupo_bairro.groupby("C3")["C3"].sum()<0x0A><0x0A># Código de barras<0x0A>d = {'y': 'value', 'x': 'total', 'data': {'x': 'total', 'y': 'value', 'data': {'x': 'total', 'y': 'value', 'data': {'x': 'total', 'y': 'value', 'data': {'x': 'total', 'y': 'value', 'data': {'x': 'total', 'y': 'value', 'data': {'x': 'total', 'y': 18.7 }<0x0A>       }<0x0A><0x0A># Parametros<0x0A>d = {'x': 'total', 'y': 'value', 'x': 'value', 'y': 18.7 }<0x0A><0x0A># Parametros<0x0A>d = {'x': 'total', 'y': 'value', 'x': 'value', 'y': 18.7 }<0x0A><0x0A># Parametros<0x0A>d = {'x': 'total', 'y': 'value', 'x': 'value', 'y': 18.7 }<0x0A><0x0A># Parametros<0x0A>d = {'x': 'total', 'y': 'value', 'x': 'value', 'y': 18.7 }<0x0A><0x0A># Parametros<0x0A>d = {'x': 'total', 'y': 'value', 'x': 'value', 'y': 18.7 }<0x0A><0x0A># Parametros<0x0A>d = {'x': 'total', 'y': 'value', 'x': 'value', 'y': 18.7 }<0x0A><0x0A># Parametros<0x0A>d = {'x': 'total', 'y': 'value', 'x': 'value', 'y': 18.7 }<0x0A><0x0A># Parametros<0x0A>d = {'x': 
---------------------------------------------------------------------------------------------------------
 [1m(13)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'encoding': {'y': {'field': 'Number of fatalities', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
[31m graph = ggplot(df, aes(x='Year', y='Value')) + geom_line() + geom_text(aes(label='Year', fill='Year')) + geom_text(aes(label='Year')) + geom_text(aes(label='Year')) + geom_text(aes(label='Year')) 
---------------------------------------------------------------------------------------------------------
 [1m(14)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'encoding': {'y': {'field': 'Inflation rate compared to previous year', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
[31m {'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': 'Utilities and completed tonnes/year', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2025', 'y': 17.55}, {'x': '2025': '-2.5%': 17.55}, {'x': '2025': '-2.5%': 17.55}, {'x': '2025': '-2.5%': 17.55}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(15)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'encoding': {'y': {'field': 'Unemployment rate', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
[31m graph = sns.relplot(x="year", y="bremployment_rate", data=df, kind="line", height=7, aspect=2.5, color="steelblue")<0x0A>graph.set(ylabel="bremployment rate")<0x0A>graph.set(xlabel="")<0x0A>graph.set_xticklabels(rotation=360)<0x0A>graph.set(ylabel="bremployment rate")<0x0A>graph.fig.suptitle('')<0x0A>graph.set_yticklabels(["1999","2000","2010","2011","2012","2013","2014","2015","2016","2017","2018","2019","2020","2025","2026","2027","2028","2029","2030","2031","2032","2036","2037","2038","2039","2031","2036","2039"] )<0x0A>graph.set(xlabel="")<0x0A>graph.set(ylabel="bremployment rate")<0x0A>graph.savefig("graph.png") 
---------------------------------------------------------------------------------------------------------
 [1m(16)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'encoding': {'y': {'field': 'Unemployment rate', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
[31m %%time<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A># Setting the positions and width for the bars<0x0A>pos = 'center'<0x0A>width = 0.25<0x0A><0x0A># Setting the positions and width for the bars<0x0A>pos_pos = 'center'<0x0A>width = 0.25<0x0A><0x0A># Setting the positions and width for the bars<0x0A>pos_pos = 'center'<0x0A>width = 0.25<0x0A><0x0A># Setting the positions and width for the bars<0x0A>pos_pos = 'pos'<0x0A><0x0A># Setting the positions and width for the bars<0x0A>pos_pos = 'center'<0x0A>width = 0.25<0x0A><0x0A># Setting the positions and width for the bars<0x0A>pos_pos = 'center'<0x0A>width = 0.25<0x0A><0x0A># Setting the positions and width for the bars<0x0A>pos_pos = 'center'<0x0A>width = 0.25<0x0A><0x0A># Setting the positions and width for the bars<0x0A>pos_pos = 'center'<0x0A>pos_pos = 'pos'<0x0A><0x0A># Setting the positions and width for the bars<0x0A>pos_pos = 'center'<0x0A>pos_pos = 'pos'<0x0A><0x0A># Setting the positions and width for the bars<0x0A>pos_pos = 'center'<0x0A>pos_pos = 'center'<0x0A><0x0A># Setting the positions and width for the bars<0x0A>pos_pos = 'center'<0x0A>pos_pos = 'pos'<0x0A><0x0A># Setting the positions and width for the bars<0x0A>pos_pos = 'center'<0x0A>pos_pos = 'pos'<0x0A><0x0A># Setting the positions and width for the bars<0x0A>pos_pos = 'center'<0x0A>pos_pos = 'pos'<0x0A><0x0A># Setting the positions and width for the bars<0x0A>pos_pos = 'center'<0x0A>pos_pos = 'pos'<0x0A><0x0A># Setting the positions and width for the bars<0x0A>pos_pos = 'center'<0x0A>pos_pos = 'pos'<0x0A><0x0A># Setting the positions and width for the bars<0x0A>pos_pos = 'center'<0x0A>pos_pos = 'pos'<0x0A><0x0A># Setting the positions and width for the bars<0x0A>pos_pos = 'center'<0x0A>pos_pos = 'pos'<0x0A><0x0A># Setting the positions and width for the bars<0x0A>pos_pos = 'center'<0x0A>pos_pos = 'pos'<0x0A><0x0A># Setting the positions and width for the bars<0x0A>pos_pos = 'center'<0x0A>pos_pos = 'pos'<0x0A><0x0A># Setting the positions and width for the bars<0x0A>pos_pos = 'pos'<0x0A><0x0A># Setting the positions and width for the bars<0x0A> 
---------------------------------------------------------------------------------------------------------
 [1m(17)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 0.54 
[32m {'encoding': {'y': {'field': 'Quarterly revenue in million U.S. dollars', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'ordinal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
 {'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': 'Quantity median in those US dollars', 'type': 'quantitative'}}, 'data': {'values': [{'x': 232.25, 'y': 924.54}, {'x': 277.8, 'y': 47.99}, {'x': 326.43, 'y': 1044.28}, {'x': 404.07, 'y': 1301.78}, {'x': 546.74, 'y': 434.91}, {'x': 114.07, 'y': 828.74}, {'x': 134.74, 'y': 1774.28}]}}
---------------------------------------------------------------------------------------------------------
 [1m(18)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 1.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 0.83 
[32m {'encoding': {'y': {'field': 'Average annual wages in euros', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
 {'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': 'Average annual wage in each', 'type': 'quantitative'}}, 'data': {'values': [{'x': 8606, 'y': 8606}, {'x': 9052, 'y': 9052}]}}
---------------------------------------------------------------------------------------------------------
 [1m(19)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 1.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 0.74 
[32m {'encoding': {'y': {'field': 'Number of nominations', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'nominal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
 {'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Number of Presentations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Multi Doody', 'y': 8}, {'x': 'Focus Features', 'y': 7}, {'x': 'Aza', 'y': 6}, {'x': 'Sony Picture Classic', 'y': 6}, {'x': 'Universal', 'y': 4}, {'x': 'Semiset Colby', 'y': 3}]}}
---------------------------------------------------------------------------------------------------------
 [1m(20)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 1.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 0.79 
[32m {'encoding': {'y': {'field': 'Mileage (mpg)', 'type': 'quantitative'}, 'x': {'field': 'Weight (lbs.)', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
 {'mark': 'circle', 'encoding': {'x': {'field': 'Weight (lbs.)', 'type': 'quantitative'}, 'y': {'field': 'Mileage (mgs.)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 40.01, 'y': 34.34}, {'x': 2000, 'y': 28.53}, {'x': 5001, 'y': 28.53}, {'x': 2001, 'y': 10.02}, {'x': 40.01, 'y': 34.34}, {'x': 40.01, 'y': 28.53}, {'x': 5001, 'y': 28.53}, {'x': 40.01, 'y': 10.02}]}}
---------------------------------------------------------------------------------------------------------
 [1m(21)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 1.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 1.0 
[32m {'encoding': {'y': {'field': 'tip', 'type': 'quantitative'}, 'x': {'field': 'total_bill', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
 {'mark': 'circle', 'encoding': {'x': {'field': 'total_bill', 'type': 'quantitative'}, 'y': {'field': 'tip', 'type': 'quantitative'}}, 'data': {'values': [{'x': 46, 'y': 3.0}, {'x': 34, 'y': 4.0}]}}
---------------------------------------------------------------------------------------------------------
 [1m(22)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 1.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.92 
[32m {'encoding': {'y': {'field': 'hopkins$wind', 'type': 'quantitative'}, 'x': {'field': 'hopkins$day', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
 {'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': 'hopkinsSwind', 'type': 'quantitative'}}, 'data': {'values': [{'x': 202, 'y': 322}, {'x': 322, 'y': 60}, {'x': 202, 'y': 246}, {'x': 322, 'y': 444}]}}
---------------------------------------------------------------------------------------------------------
 [1m(23)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
[31m boxplot(data = df, x = "price", y = "price", col = "green", lwd = 2, col_wrap = 1, ylim = c(0, 1000), xlab = "", ylab = "", xlim = c(0, 1000), ylab = "", xlab = "", ylim = c(0, 1000), xlim = c(0, 1000), ylab = "", ylim = c(0, 1000), ylab = "", ylim = c(0, 1000), ylab = "", ylim = c(0, 1000), ylim = c(0, 1000), ylim = c(0, 1000), ylab = "", ylab = "", ylim = c(0, 1000), ylim = c(0, 1000), ylim = c(0, 1000), ylab = "", ylab = "", ylim = c(0, 1000), ylim = c(0, 1000), ylim = c(0, 1000), ylim = c(0, 1000), ylab = "", ylab = "", ylim = c(0, 1000), ylim = c(0, 1000), ylim = c(0, 1000), ylab = "", ylab = "", ylim = c(0, 1000), ylim = c(0, 1000), ylim = c(0, 1000), ylab = "", ylab = "", ylim = c(0, 1000), ylim = c(0, 1000), ylim = c(0, 1000), ylab = "", ylab = "", ylim = c(0, 1000), ylim = c(0, 1000), ylab = "", ylab = "", ylim = c(0, 1000), ylim = c(0, 1000), ylab = "", ylab = "", ylim = c(0, 1000), ylim = c(0, 1000), ylab = "", ylab = "", ylim = c(0, 1000), ylab = "", ylab = "", ylim = c(0, 1000), ylab = "", ylab = "", ylab = "", ylim = c(0, 1000), y 
---------------------------------------------------------------------------------------------------------
 [1m(24)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 1.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 1.0 
[32m {'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
 {'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6, 'y': 86.01}, {'x': 4, 'y': 99.03}, {'x': 8, 'y': 110.44}, {'x': 13, 'y': 86.01}, {'x': 17, 'y': 110.44}]}}
---------------------------------------------------------------------------------------------------------
 [1m(25)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 1.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 1.0 
[32m {'encoding': {'y': {'field': 'success', 'type': 'quantitative'}, 'x': {'field': 'length', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
 {'mark': 'circle', 'encoding': {'x': {'field': 'length', 'type': 'quantitative'}, 'y': {'field':'success', 'type': 'quantitative'}}, 'data': {'values': [{'x': 13.42, 'y': 82.06}, {'x': 7.35, 'y': 55.6}, {'x': 13.42, 'y': 91.94}, {'x': 13.42, 'y': 82.06}, {'x': 13.42, 'y': 10.01}, {'x': 13.42, 'y': 91.94}]}}
---------------------------------------------------------------------------------------------------------
 [1m(26)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 1.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 1.0 
[32m {'encoding': {'y': {'field': 'Temperature °C', 'type': 'quantitative'}, 'x': {'field': 'Time', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
 {'mark': 'circle', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': 'Temperature °C', 'type': 'quantitative'}}, 'data': {'values': [{'x': '10am', 'y': 2.4}, {'x': '9am', 'y': 10.44}, {'x': '10am', 'y': 4.3}, {'x': '11am', 'y': 10.44}, {'x': '12pm', 'y': 9.64}, {'x': '1pm', 'y': 10.44}, {'x': '12pm', 'y': 9.64}, {'x': '1pm', 'y': 10.44}, {'x': '1pm', 'y': 16.38}]}}
---------------------------------------------------------------------------------------------------------
 [1m(27)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 1.0 
[32m {'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
 {'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2017, 'y': 3.02}, {'x': 2018, 'y': 47.54}, {'x': 2019, 'y': 94.23}, {'x': 2020, 'y': 118.07}, {'x': 2021, 'y': 136.41}, {'x': 2022, 'y': 181.84}]}}
---------------------------------------------------------------------------------------------------------
 [1m(28)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'quantitative'}}, 'mark': 'line', 'data': {'url': '<url>'}}
[31m {'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4.94, 'y': 14.03}, {'x': 3.9 }, {'y': 6.12, 'data': {'x': 140.02, 'y': 99.53}, {'x': 2.45, 'y': 100.02}, {'x': 3.9 }, {'x': 5.29, 'y': 220.38}, {'x': 1.51, 'y': 38.63}, {'x': 2.77, 'y': 14.51}, {'x': 4.45, 'y': 152.01}, {'x': 3.45, 'y': 286.0}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(29)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 1.0 
[32m {'encoding': {'y': {'field': 'Average Monthly Temperature', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'ordinal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
 {'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': 'Average Monthly Temperature', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'May', 'y': 14.43}, {'x': 'Feb', 'y': 8.12}, {'x': 'Mar', 'y': 9.80}, {'x': 'Apr', 'y': 12.34}, {'x': 'May', 'y': 14.43}, {'x': 'Jun', 'y': 15.64}, {'x': 'Aug', 'y': 20.64}, {'x': 'Sep', 'y': 20.64}, {'x': 'Oct', 'y': 16.18}, {'x': 'Oct', 'y': 20.64}]}}
---------------------------------------------------------------------------------------------------------
 [1m(30)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 1.0 
[32m {'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'quantitative'}}, 'mark': 'line', 'data': {'url': '<url>'}}
 {'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 40.61}, {'y': 50.31}, {'x': 30.02}, {'x': 70.06}, {'x': 54.53}, {'x': 90.03}, {'y': 59.63}, {'x': 20.08}, {'x': 58.23}, {'x': 71.38}, {'x': 59.08}]}}
---------------------------------------------------------------------------------------------------------
 [1m(31)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 1.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 1.0 
[32m {'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
 {'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6.66, 'y': 4.2}, {'x': 4.87, 'y': 7.4}, {'x': 5.95, 'y': 6.66}, {'x': 4.24, 'y': 4.24}, {'x': 5.95, 'y': 4.24}]}}
---------------------------------------------------------------------------------------------------------
 [1m(32)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'encoding': {'y': {'field': 'Inhabitants in millions', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
[31m graph = sns.relplot(x="Year", y="Webbanne in millions", data=df, kind="line", height=7, aspect=2, color="blue")<0x0A>graph.set(ylabel="Webbanne in millions", xlabel="")<0x0A>graph.set_axis_labels("2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019")<0x0A>graph.fig.suptitle('')<0x0A>graph.set_xlabel("")<0x0A>graph.set_ylabel("Webbanne in millions")<0x0A>graph.set_title("")<0x0A>graph.set_xticklabels(graph.get_xticklabels(), rotation=360)<0x0A>graph.set_yticklabels(graph.get_yticklabels(), rotation=360)<0x0A>graph.savefig("Graph.png") 
---------------------------------------------------------------------------------------------------------
 [1m(33)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'encoding': {'y': {'field': 'Life expectancy in years', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'nominal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31m {'mark': 'bar', 'encoding': {'x': {'field': 'Europe (total)', 'type': 'nominal'}, 'y': {'field': 'Life expectancy in years', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Western Europe', 'y': 84', 'data': 78.02}, {'x': 'Western Europe', 'y': 78.02}, {'x': 'Nominal Universe (%)', 'y': 84', 'type': 'quantitative'}}, 'data': {'x': 'Europe (total)', 'y': 78.02}, {'x': 'Total', 'y': 82.08}, {'x': 'Total', 'y': 78.02}, {'x': 'Nominal Universe (%)', 'y': 84.02}, {'x': 'Nominal Universe (%)', 'y': 84.02}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(34)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'encoding': {'y': {'field': 'Percentage of votes', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'nominal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31m {'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'average of counts', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Black', 'y': 88% Bagels parametric scales', 'data': {'x': 'Latino', 'y': 65% Bagels parametric scales', 'data': 29% Bagels parametric scales', 'y': 65% Bagels parametric scales', 'data': 29% Bagels parametric scales', 'y': 65% Bagels parametric scales', 'ratios': {'x': 'White', 'y': 37% Bagels parametric scales', 'data': 58% Bagels parametric scales', 'y': 65% Bagels parametric scales', 'ratios': {'x': 'Asian', 'y': 29% Bagels parametric scales', 'type': 'quantitative'}}, 'data': 29% Bagels parametric scales', 'y': 65% Bagels parametric scales', 'type': 'quantitative'}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(35)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'encoding': {'y': {'field': 'Average daily rate in U.S. dollars', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
[31m {'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': 'Average daily rates in this state': 169}, {'x': {'field': 'Q1', 'type': 'quantitative'}}, 'y': {'field': 'Q4', 'type': 'quantitative'}}, 'data': {'values': [{'x': 168.62, 'y': 169}, {'x': 169.32, 'y': 169}, {'x': 169.77, 'y': 169}, {'x': 169.77, 'y': 169}, {'x': 169.77, 'y': 169}, {'x': 169.77, 'y': 169}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(36)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'encoding': {'y': {'field': 'Gross profit margin', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'nominal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31m {'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Cross-profit margin', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Boohoo', 'y': 55%', 'data': 'ASOS', 'x': 50%', 'y': 50%', 'ratio': {'x': 'Ted Baker', 'y': 60%', 'data': 'Boohoo', 'y': 58%', 'ratio': 60%otrangewaniechanical}, {'x': 'Inditax', 'y': 58%', 'type': 'quantitative'}}, 'x': 'H&M', 'y': 57%', 'data': 55%otrangewaniechanical}, {'x': 'H&M', 'y': 57%', 'type': 'H&M', 'y': 55%otrangewaniechanical}, {'x': 'ASOS', 'y': 50%', 'type': 'Zalando'}]}} 
---------------- RESULTS --------------------
accuracy mark type : 0.88
accuracy var types (x) : 0.59
accuracy var types (y) : 1.0
accuracy var names (x) : 0.88
accuracy var names (y) : 0.82
accuracy structure : 0.46
---------------------------------------------
---------------------------------------------------------------------------------------------------------
 [1m(0)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total reserves (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1987', 'y': 36748875.4}, {'x': '1988', 'y': 39619764.0}, {'x': '1989', 'y': 26162212.8}, {'x': '1990', 'y': 17599674.8}, {'x': '1991', 'y': 8542562.3}, {'x': '1992', 'y': 23497500.0}, {'x': '1993', 'y': 20068808.52}, {'x': '1994', 'y': 17418040.14}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total reserves (including gold) of Solomon Islands', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 825227}, {'x': 'Y': 1526847}, {'x': 'Y': 1526847}, {'x': 'Y': 2017687}, {'x': 'Y': 1526847}, {'x': 'Y': 6405720}, {'x': 'Y': 3644656}, {'x': 'Y': 1526847}, {'x': 'Y': 6405720}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(1)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Time (in hours)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 424}, {'x': '2007', 'y': 424}, {'x': '2008', 'y': 424}, {'x': '2009', 'y': 424}, {'x': '2010', 'y': 424}, {'x': '2011', 'y': 424}, {'x': '2012', 'y': 424}]}}
[31m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Trail (/house)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 21}, {'x': 'Y': 21}, {'x': 'Y': 21}, {'x': 'Y': 21}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(2)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (in a Set of GTV)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field': 'Year', 'y': 0.01}, {'x': 'field': 'Value', 'y': 0.01}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(3)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 1.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 0.57 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2005', 'y': 64.61}, {'x': '2006', 'y': 69.38}, {'x': '2007', 'y': 60.8}, {'x': '2008', 'y': 54.98}, {'x': '2009', 'y': 56.12}, {'x': '2010', 'y': 61.52}, {'x': '2011', 'y': 65.44}, {'x': '2012', 'y': 68.9}]}}
 {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications and computers with respect to service imports of Papua New Guinea', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 64}]}}
---------------------------------------------------------------------------------------------------------
 [1m(4)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 798}, {'x': 'Y': 'Total unemployed youth population of Colombia', 'y': 798}, {'x': 'Y': 'Year', 'y': 244}, {'x': 'Y': 'Total unemployed youth population of Colombia', 'y': 144}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(5)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Net GHG emissions or removals (Mt of CO2 equivalent)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1993', 'y': -60.26}, {'x': '1994', 'y': -62.2}, {'x': '1995', 'y': -61.84}, {'x': '1996', 'y': -62.43}, {'x': '1997', 'y': -64.34}]}}
[31m {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Net GHG emissions or removals by LUCF in Turkey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 61.99}, {'x': 'Y': 54.15}, {'x': 'Y': 54.15}, {'x': 'Y': 54.16}, {'x': 'Y': 54.25}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(6)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of total non-fertilized resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.26}, {'x': 'Y': 90.70}, {'x': 'Y': 62.48}, {'x': 'Y': 23.46}, {'x': 'Y': 53.21}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(7)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2011', 'y': 118}, {'x': '2012', 'y': 118}, {'x': '2013', 'y': 118}, {'x': '2014', 'y': 118}, {'x': '2015', 'y': 118}]}}
[31m graph = pd.DataFrame({'Year': 'Time required', 'Monthly of downvoting': 'Year', 'Monthly of downvotes': 'Time required'})<0x0A>graph.set_index('Year', inplace=True)<0x0A>graph.plot(kind='bar', figsize=(25, 25), color='red')<0x0A>graph.set_xlabel('Year')<0x0A>graph.set_ylabel('Monthly of downvotes')<0x0A>graph.set_title('Time required to register a property in Barbados')<0x0A>graph.grid(False)<0x0A>graph.show() 
---------------------------------------------------------------------------------------------------------
 [1m(8)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of repeaters', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2008', 'y': 0.22}, {'x': '2009', 'y': 0.17}, {'x': '2010', 'y': 0.4}, {'x': '2011', 'y': 0.52}, {'x': '2012', 'y': 0.84}]}}
[31m fecha_graph(st_lucia_df, 'St. Lucia', 'Repeaters in secondary general education of St. Lucia', 'Percentage of repeaters in secondary general education of St. Lucia', 'Year', 'Percentage of repeaters in secondary general education of St. Lucia', 'Percentage of repeaters in secondary general education of St. Lucia', 'Percentage of repeaters in secondary general education of St. Lucia', 'Percentage of repeaters in secondary general education of St. Lucia', 'Percentage of repeaters in secondary general education of St. Lucia', 'Year', 'Percentage of repeaters in secondary general education of St. Lucia', 'Percentage of repeaters in secondary general education of St. Lucia', 'Percentage of repeaters in secondary general education of St. Lucia', 'Percentage of repeaters in secondary general education of St. Lucia', 'Year', 'Percentage of repeaters in secondary general education of St. Lucia', 'Percentage of repeaters in secondary general education of St. Lucia', 'Percentage of repeaters in secondary general education of St. Lucia', 'Percentage of repeaters in secondary general education of St. Lucia', 'Percentage of repeaters in secondary general education of St. Lucia', 'Year', 'Percentage of repeaters in secondary general education of St. Lucia', 'Percentage of repeaters in secondary general education of St. Lucia', 'Percentage of repeaters in secondary general education of St. Lucia', 'Year', 'Percentage of repeaters in secondary general education of St. Lucia', 'Year', 'Percentage of repeaters in secondary general education of St. Lucia', 'Year', 'Percentage of repeaters in secondary general education of St. Lucia', 'Year', 'Percentage of repeaters in secondary general education of St. Lucia', 'Year', 'Percentage of repeaters in secondary general education of St. Lucia', 'Year', 'Percentage of repeaters in secondary general education of St. Lucia', 'Year', 'Percentage of repeaters in secondary general education of St. Lucia', 'Year', 'Percentage of repeaters in secondary general education of St. Lucia', 'Year', 'Percentage of repeaters in secondary general education of St. Lucia', 'Year', 'Percentage of repeaters in secondary 
---------------------------------------------------------------------------------------------------------
 [1m(9)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1987', 'y': 0.06}, {'x': '2002', 'y': 0.07}, {'x': '2013', 'y': 0.07}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (%) in Liberia}}, 'type': 'quantitative'}, 'data': {'values': [{'x': 'Year', 'y': 6.96}, {'x': 'Y': 0.25}, {'x': 'Y': 200.66}, {'x': 'Y': 2.06}, {'x': 'Y': 6.96}, {'x': 'Y': 154.39}, {'x': 'Y': 200.66}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(10)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed males(% of male labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 16.8}, {'x': '1991', 'y': 17.0}, {'x': '1992', 'y': 18.6}, {'x': '1993', 'y': 23.6}, {'x': '1994', 'y': 27.2}, {'x': '1995', 'y': 23.7}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed male youth population of France', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 28.82}, {'x': 'Y': 21.96}, {'x': 'Y': 21.96}, {'x': 'Y': 21.96}, {'x': 'Y': 21.96}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(11)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m Arable land ('Seychelles') 
---------------------------------------------------------------------------------------------------------
 [1m(12)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total Vulnerable employment (% of total employment)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1996', 'y': 80.1}, {'x': '2001', 'y': 75.9}, {'x': '2005', 'y': 79.8}, {'x': '2010', 'y': 73.6}]}}
[31m percentage_employment_poverty = pd.DataFrame(<0x0A>    {'x': 'Year', 'y': 'Total Vulnerable employment (% of total employment)', 'data': {'x': 'Year', 'y': '80', 'data': {'x': 'Year', 'y': 'Total Vulnerable employment (% of total employment)', 'data': {'x': 'Year', 'y': '73.40', 'data': {'x': 'Year', 'y': 73.40', 'data': {'x': 'Year', 'y': 73.40', 'data': {'x': 'Year', 'y': 73.40', 'data': CODDFED}]}}<0x0A>       }<0x0A>     .sort_values(['Year'], ascending=False, axis=0, inplace=True)<0x0A>     .drop('Year', axis=1)<0x0A>     .drop('Year', axis=1)<0x0A>     .drop('Year', axis=1)<0x0A>     .drop('Year', axis=1)<0x0A><0x0A>g = sns.relplot(x="Year", y="Total Vulnerable employment (% of total employment)", data=percentage_employment_poverty, kind="line", height=15, aspect=1.5, aspect=1.5, color='steelblue', kind="line", data=percentage_employment_poverty, height=15, aspect=1.5, kind="line", palette="ch:.25", height=15, aspect=1.5)<0x0A>g.set_xticklabels(rotation=90, labels=False)<0x0A>g.fig.suptitle('Percentage of employed workers in Cameroon that are vulnerable to fall into poverty')<0x0A>g.set(ylim=(0, 80))<0x0A>g.set(xlabel='Year', ylabel='Total Vulnerable employment (% of total employment)', xlim=(0, 80))<0x0A>g.set(ylim=(0, 80))<0x0A>g.set(xlim=(0, 80))<0x0A>g.set(ylim=(0, 80))<0x0A>plt.xticks(rotation=90)<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(13)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Domestic credit (% of GDP)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 13.87}, {'x': '2003', 'y': 15.0}, {'x': '2004', 'y': 17.17}, {'x': '2005', 'y': 17.56}, {'x': '2006', 'y': 18.24}, {'x': '2007', 'y': 17.91}, {'x': '2008', 'y': 18.18}, {'x': '2009', 'y': 20.0}, {'x': '2010', 'y': 22.66}]}}
[31m domestic_credit_by_financial_sector = 'Central African Republic'<0x0A><0x0A>fig, ax = plt.subplots(figsize=(25,25))<0x0A><0x0A>Domestic_credit_by_financial_sector.plot(ax=ax, kind='line', x='Year', y='Domestic credit (%) (GD)', color='tab:red', lw=0.8, linestyle='-')<0x0A>Domestic_credit_by_financial_sector.plot(ax=ax, kind='line', x='Year', y='Domestic credit (%) (GD)', color='tab:green', lw=0.8, linestyle='-')<0x0A>Domestic_credit_by_financial_sector.plot(ax=ax, kind='line', x='Year', y='Domestic credit (%) (GD)', color='tab:red', lw=0.8, linestyle='-')<0x0A>Domestic_credit_by_financial_sector.plot(ax=ax, kind='line', x='Year', y='Domestic credit (%) (GD)', color='tab:red', lw=0.8, linestyle='-')<0x0A>Domestic_credit_by_financial_sector.plot(ax=ax, kind='line', x='Year', y='Domestic credit (%) (GD)', color='tab:green', lw=0.8, linestyle='-')<0x0A>Domestic_credit_by_financial_sector.plot(ax=ax, kind='line', x='Year', y='Domestic credit (%) (GD)', color='tab:red', lw=0.8, linestyle='-')<0x0A>Domestic_credit_by_financial_sector.plot(ax=ax, kind='line', x='Year', y='Domestic credit (%) (GD)', color='tab:red', lw=0.8, linestyle='-')<0x0A>Domestic_credit_by_financial_sector.plot(ax=ax, kind='line', x='Year', y='Domestic credit (%) (GD)', color='tab:red', lw=0.8)<0x0A>Domestic_credit_by_financial_sector.plot(ax=ax, kind='line', x='Year', y='Domestic credit (%) (GD)', color='tab:red')<0x0A>Domestic_credit_by_financial_sector.plot(ax=ax, kind='line', x='Year', 
---------------------------------------------------------------------------------------------------------
 [1m(14)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Birth Registration (in %)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 31.8}, {'x': '2012', 'y': 63.9}]}}
[31m percentage_of_births_by_age_5 = births_by_age_5.groupby('Year')['Births','Age'].sum()<0x0A>percentage_of_births_by_age_5 = percentage_of_births_by_age_5.unstack()<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20,20))<0x0A>ax.set_title('Percentage of children under age 5 whose births were registered at the time of the survey in Niger')<0x0A>ax.set_ylabel('Birth Registration (in. %s)')<0x0A>ax.set_xlabel('Year')<0x0A>ax.plot(percentage_of_births_by_age_5.index, percentage_of_births_by_age_5, color='black')<0x0A>ax.tick_params(axis='x', labelsize=15)<0x0A>ax.tick_params(axis='y', labelsize=15)<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'] 
---------------------------------------------------------------------------------------------------------
 [1m(15)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Birth Registration (in %)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 64.0}, {'x': '2010', 'y': 76.9}]}}
[31m percentage_of_children_by_birth_year = df.groupby('Year')['Birth Registration in %'].sum()<0x0A>percentage_of_children_by_birth_year = percentage_of_children_by_birth_year.sort_values(ascending=False)<0x0A>percentage_of_children_by_birth_year.plot(kind='line', x='Year', y='Birth Registration in %', figsize=(25, 25), color='black')<0x0A>plt.title('Percentage of children under age 5 whose births were registered at the time of the survey in Burkina Faso')<0x0A>plt.ylabel('Birth Registration in %')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(16)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of repeaters', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 0.24}, {'x': '2000', 'y': 0.22}, {'x': '2001', 'y': 0.23}, {'x': '2002', 'y': 0.17}]}}
[31m fecha_year = 2014<0x0A>fecha_year = 2015<0x0A><0x0A># Create a bar plot showing Percentage of repeaters in secondary general education of Kyrgyz Republic<0x0A># Note: this is not a bar chart, it is a bar chart.<0x0A># 1. Use the `barplot` function to visualize the percentage of repeaters in secondary general education of Kyrgyz Republic<0x0A># 2. Use the `barplot` function to visualize the percentage of repeaters in secondary general education of Kyrgyz Republic<0x0A># 3. Use the `barplot` function to visualize the percentage of repeaters in secondary general education of Kyrgyz Republic<0x0A># 4. Use the `barplot` function to visualize the percentage of repeaters in secondary general education of Kyrgyz Republic<0x0A><0x0A># Set the style and format of the bar plot<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.bar(fecha_year,repeaters_per_year, color='#000000', edgecolor='black', linewidth=1.2)<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Percentage of repeaters in secondary general education of Kyrgyz Republic')<0x0A>plt.title('Percentage of repeaters in secondary general education of Kyrgyz Republic')<0x0A>plt.xticks(fecha_year, rotation='vertical')<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(17)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Workers(% of total employed)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2001', 'y': 46.5}, {'x': '2008', 'y': 36.1}, {'x': '2012', 'y': 1.5}]}}
[31m estados = {'x': 'Year', 'y': 'Working life of foster children', 'data': {'x': 'Year', 'y': 'Contributing total family workers in Samoa', 'data': {'x': 'Year', 'y': 'Working life of foster children', 'data': {'x': 'Year', 'y': 'Contributing total family workers in Samoa', 'data': {'x': 'Year', 'y': 'Contributing total family workers in Samoa', 'data': {'x': 'Year', 'y': 'Working life of foster children', 'data': {'x': 'Year', 'y': 'Contributing total family workers in Samoa', 'data': {'x': 'Year', 'y': 'Working life of foster children', 'data': {'x': 'Year', 'y': 'Contributing total family workers in Samoa', 'y': 'Working life of foster children', 'data': {'x': 'Year', 'y': 'Contributing total family workers in Samoa', 'y': 'Working life of foster children', 'data': {'x': 'Year', 'y': 'Contributing total family workers in Samoa', 'y': 'Working life of foster children', 'y': 'Contributing total family workers in Samoa', 'y': 'Contributing total family workers in Samoa', 'y': 'Working life of foster children', 'y': 'Contributing total family workers in Samoa', 'y': 'Working life of foster children', 'y': 'Working life of foster children', 'y': 'Working life of foster children', 'y': 'Working life of foster children', 'y': 'Working life of foster children', 'y': 'Working life of foster children', 'y': 'Working life of foster children', 'y': 'Working life of foster children', 'y': 'Working life of foster children', 'y': 'Working life of foster children', 'y' 
---------------------------------------------------------------------------------------------------------
 [1m(18)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Global Equity Indices (annual % change)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 48.8}, {'x': '1998', 'y': -38.9}, {'x': '1999', 'y': 78.5}, {'x': '2000', 'y': -21.48}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Global Equity Indices of Mexico', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.03}, {'x': 'Y': 2.48}, {'x': 'Y': 2.48}, {'x': 'Y': 2.48}, {'x': 'Y': 2.48}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(19)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of reported total deaths to estimated total deaths', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2005', 'y': 82.05}, {'x': '2007', 'y': 80.48}]}}
[31m fig = plt.figure(figsize=(25,25))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color 
---------------------------------------------------------------------------------------------------------
 [1m(20)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Percentage of Production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 265.45}, {'x': 'field': 'Year', 'y': 304.75}, {'x': 'y': 234.13}, {'x': 'y': 106.63}, {'x': 'y': 234.13}, {'x': 'y': 304.75}, {'x': 'y': 234.13}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(21)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 0.09 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Elevated land area (as % of total land area)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 4.46}, {'x': '2000', 'y': 4.46}]}}
 {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Energy', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6430}, {'x': 'Year', 'y': 2056}]}}
---------------------------------------------------------------------------------------------------------
 [1m(22)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Vulnerable female employment (% of total female employment)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 73}, {'x': '2008', 'y': 15}]}}
[31m percentage_female_poverty = pd.DataFrame(<0x0A>    {"Year": "Year", "Vulnerable": ["0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1.2", "1.4", "2.4", "2.9", "3.4", "4.5", "5.7", "6.7", "7.2", "8.7", "9.7", "10.7", "11.7", "12.7", "13.7", "14.7", "15.7", "16.7", "17.7", "18.7", "19.7", "20.7", "21.7", "22.7", "23.7", "24.7", "25.7", "26.7", "27.7", "28.7", "29.7", "30.7", "31.7", "32.7", "33.7", "34.7", "41.7", "43.7", "45.7", "46.7", "47.7", "48.7", "49.7", "51.7", "53.7"],<0x0A>                {"Work": "Year", "Vulnerable": ["Unvulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", "Vulnerable Female", 
---------------------------------------------------------------------------------------------------------
 [1m(23)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.02}, {'x': 'Y': 20.48}, {'x': 'Y': 20.48}, {'x': 'Y': 20.48}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(24)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m {'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': 'Cost of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.06}, {'x': 'Field', 'y': 67.79}, {'x': 'Y': 40.06}, {'x': 'Y': 90.23}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(25)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m ##########################################################################################<0x0A># TODO: Load the example dataset into the subprocess and plot it here.<0x0A>###########################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A>#################################################################################<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A><0x0A># Load the example dataset into the subprocess and plot it here.<0x0A><0x0A><0x0A># Load the example dataset into the subprocess and 
---------------------------------------------------------------------------------------------------------
 [1m(26)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Expenditure (as % of GDP per capita)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 208.0}, {'x': '2001', 'y': 225.25}, {'x': '2004', 'y': 274.43}]}}
[31m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Government expenditure per student as % of GDP per capita in Kenya', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 215.65}, {'x': 'Year', 'y': 542.83}, {'x': 'Y': 151.82}, {'x': 'Y': 215.65}, {'x': 'Y': 151.82}, {'x': 'Y': 215.65}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(27)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Earning from trade(% of GDP)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Burundi', 'y': 26.99}, {'x': 'Cabo Verde', 'y': 43.48}, {'x': 'Cambodia', 'y': 96.39}, {'x': 'Cameroon', 'y': 34.19}, {'x': 'Canada', 'y': 47.12}]}}
[31m Country_Earning_of_countries_from_merchandise_trade_in_the_year_2009 = Country_Earning_of_countries_from_merchandise_trade_in_the_year_2009.sort_values(by='Country', ascending=False)<0x0A>Country_Earning_of_countries_from_merchandise_trade_in_the_year_2009 = Country_Earning_of_countries_from_merchandise_trade_in_the_year_2009.sort_values(by='Country', ascending=False)<0x0A>Country_Earning_of_countries_from_merchandise_trade_in_the_year_2009 = Country_Earning_of_countries_from_merchandise_trade_in_the_year_2009.drop_duplicates()<0x0A>Country_Earning_of_countries_from_merchandise_trade_in_the_year_2009.drop_duplicates()<0x0A>Country_Earning_of_countries_from_merchandise_trade_in_the_year_2009.drop_duplicates()<0x0A>Country_Earning_of_countries_from_merchandise_trade_in_the_year_2009.drop_duplicates()<0x0A>Country_Earning_of_countries_from_merchandise_trade_in_the_year_2009.drop_duplicates()<0x0A>Country_Earning_of_countries_from_merchandise_trade_in_the_year_2009.drop_duplicates()<0x0A>Country_Earning_of_countries_from_merchandise_trade_in_the_year_2009.drop_duplicates()<0x0A>Country_Earning_of_countries_from_merchandise_trade_in_the_year_2009.drop_duplicates()<0x0A>Country_Earning_of_countries_from_merchandise_trade_in_the_year_2009.drop_duplicates()<0x0A>Country_Earning_of_countries_from_merchandise_trade_in_the_year_2009.drop_duplicates()<0x0A>Country_Earning_of_countries_from_merchandise_trade_in_the_year_2009.drop_duplicates 
---------------------------------------------------------------------------------------------------------
 [1m(28)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Energy consumed(% of total)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Cameroon', 'y': 16.11}, {'x': 'Canada', 'y': 74.26}, {'x': 'Chile', 'y': 66.36}, {'x': 'China', 'y': 75.43}, {'x': 'Colombia', 'y': 70.81}]}}
[31m ################################################################################<0x0A>###################################################################################<0x0A>####################################################################################################<0x0A>####################################################################################################<0x0A>####################################################################################################################<0x0A>####################################################################################################################<0x0A>####################################################################################################################################<0x0A>####################################################################################################################################<0x0A>######################################################################################################################################################<0x0A>######################################################################################################################################################<0x0A>########################################################################################################################################################################<0x0A>############################################################################################################################################################################<0x0A>##############################################################################################################################################################################<0x
---------------------------------------------------------------------------------------------------------
 [1m(29)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'IMF credit(in current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Bangladesh', 'y': 67856000}, {'x': 'Bolivia', 'y': 8555000}, {'x': 'Chad', 'y': 2367000}, {'x': 'Congo (Democratic)', 'y': 30649000}, {'x': 'Dominican Republic', 'y': 4071000}]}}
[31m {'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Use of IMF credit in 1972 in the Department of Defense of different countries', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Nominal', 'y': 6.01}, {'x': 'Nominal', 'y': 4.41}, {'x': 'Y': 6.01}, {'x': 'Nominal', 'y': 1.44}, {'x': 'Y': 6.01}, {'x': 'Nominal', 'y': 10.48}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(30)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households with a female head', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1994', 'y': 15.1}, {'x': '1999', 'y': 14.4}, {'x': '2005', 'y': 18.4}, {'x': '2012', 'y': 18.0}]}}
[31m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Percentage of households with a female as a head in Cote d_Ivoire', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18}, {'x': 'Y': 25}, {'x': 'Y': 25}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(31)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Debt(current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Sri Lanka', 'y': 1769910000.0}, {'x': 'St. Lucia', 'y': 24373000.0}, {'x': 'St. Vincent and the Grenadines', 'y': 26240000.0}, {'x': 'Sudan', 'y': 1548887000.0}, {'x': 'Swaziland', 'y': 65058000.0}, {'x': 'Syrian Arab Republic', 'y': 544265000.0}]}}
[31m Country_total_undisbursed_external_debt = pd.DataFrame(country_total_undisbursed, columns = ['Country', 'Undisbursed external debt of countries as per the survey of 1989'])<0x0A>Country_total_undisbursed_external_debt.sort_values(by = 'Undisbursed external debt of countries as per the survey of 1989', ascending = False)<0x0A>Country_total_undisbursed_external_debt.plot(kind = 'bar', title = 'Total undisbursed external debt of countries as per the survey of 1989', color = 'purple', figsize = (20,20))<0x0A>Country_total_undisbursed_external_debt.plot(kind = 'bar', title = 'Total undisbursed external debt of countries as per the survey of 1989', color = 'purple', figsize = (20,20))<0x0A>Country_total_undisbursed_external_debt.sort_values(by = 'Undisbursed external debt of countries as per the survey of 1989', ascending = False) 
---------------------------------------------------------------------------------------------------------
 [1m(32)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Total subscribers (per 100 people)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Ecuador', 'y': 0.05}, {'x': 'Egypt, Arab Rep.', 'y': 0.07}, {'x': 'Estonia', 'y': 3.45}, {'x': 'Faeroe Islands', 'y': 0.24}, {'x': 'Finland', 'y': 5.26}, {'x': 'France', 'y': 2.76}]}}
[31m Country_plot(Fixed_broadband_subscriptions_per_100_people, 'Fixed broadband subscriptions (per 100 people) in the year 2002', 'Country', 'Fixed broadband subscriptions (per 100 people) in the year 2002') 
---------------------------------------------------------------------------------------------------------
 [1m(33)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Part-time female workers(% of females employed)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2003', 'y': 13.2}, {'x': '2004', 'y': 10.8}, {'x': '2005', 'y': 12.2}, {'x': '2006', 'y': 13.1}, {'x': '2007', 'y': 11.8}]}}
[31m percentage_female_part_time_workers_SA = percentage_female_part_time_workers_SA.sort_values(by='Percentage of female part-time workers in South Africa', ascending=False)<0x0A><0x0A>plt.figure(figsize=(15,15))<0x0A>plt.bar(x=percentage_female_part_time_workers_SA['Year'], height=percentage_female_part_time_workers_SA['Percentage of female part-time workers in South Africa'], color='#111111')<0x0A>plt.xticks(rotation='vertical')<0x0A>plt.title('Percentage of female part-time workers in South Africa')<0x0A>plt.ylabel('Percentage of female part-time workers in South Africa')<0x0A>plt.xlabel('Year')<0x0A>plt.grid(True)<0x0A>plt.show() 
---------------------------------------------------------------------------------------------------------
 [1m(34)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Debt(% of exports of goods, services and primary income)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1996', 'y': 6.52}, {'x': '1997', 'y': 6.27}, {'x': '1998', 'y': 6.21}, {'x': '1999', 'y': 7.79}, {'x': '2000', 'y': 7.91}, {'x': '2001', 'y': 8.91}]}}
[31m title = 'Long-term public and publicly guaranteed debt and repayments of Lao PDR to the IMF'<0x0A>xlabel = 'Year'<0x0A>ylabel = 'Daily % of unpaid (adjusted) expenses (current US$)'<0x0A>title = (title +'- Long-term public and publicly guaranteed debt and repayments of Lao PDR to the IMF')<0x0A><0x0A>df = pd.DataFrame(data = [df.groupby(['Year', 'Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])['Public Debt'].sum() / df.groupby(['Year'])[' 
---------------------------------------------------------------------------------------------------------
 [1m(35)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Number of flight takeoffs', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Australia', 'y': 18700}, {'x': 'Austria', 'y': 21000}, {'x': 'Bahamas', 'y': 15900}, {'x': 'Bahrain', 'y': 5400}]}}
[31m {'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Number of domestic takeoffs and takeoffs abroad of air carriers registered in countries', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'country', 'y': 1863}, {'x': 'country', 'y': 2092}, {'x': 'y': 1590}, {'x': 'y': 5444}, {'x': 'y': 1590}, {'x': 'y': 2092}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(36)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Amount (in current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1987', 'y': 174653000}, {'x': '1988', 'y': -110802000}, {'x': '1989', 'y': 164303000}, {'x': '1990', 'y': 21902000}, {'x': '1991', 'y': -38847000}]}}
[31m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Amount (in common ($$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 1755566}, {'x': 'Y': 15555666}, {'x': 'Y': 2017591}, {'x': 'Y': 17555666}, {'x': 'Y': 17555666}, {'x': 'y': 2017591}, {'x': 'y': 17555666}, {'x': 'y': 17555666}, {'x': 'y': 17555666}, {'x': 'y': 17555666}, {'x': 'y': 17555666}, {'x': 'y': 17555666}, {'x': 'y': 17555666}, {'x': 'y': 17555666}, {'x': 'y': 17555666}, {'x': 'y': 17555666}, {'x': 'y': 17555666}, {'x': 'y': 17555666}, {'x': 'y': 17555666}, {'x': 'y': 17555666}, {'x': 'y': 17555666}, {'x': 'y': 17555666}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(37)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of children', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}, {'x': '1999', 'y': 1000}, {'x': '2000', 'y': 1000}, {'x': '2001', 'y': 1000}]}}
[31m mosaic(data, ['Year', 'Sex', 'Age', 'Infected with HIV in Jamaica'], 'Number of children ages 0-14 who are infected with HIV in Jamaica', 'Number of children ages 0-14 who are infected with HIV in Jamaica']) 
---------------------------------------------------------------------------------------------------------
 [1m(38)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Proportion of dependents per 100 working-age population', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 50.35}, {'x': '2010', 'y': 50.68}, {'x': '2011', 'y': 51.42}, {'x': '2012', 'y': 52.46}, {'x': '2013', 'y': 53.73}, {'x': '2014', 'y': 55.06}]}}
[31m grupo_df = grupo_df.groupby(['Year'])['Age'].mean()<0x0A><0x0A># Plotagem de grafico<0x0A>fig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A># Plotagem de grafico<0x0A>ax.bar( grupo_df.Year, grupo_df.Age, color='purple')<0x0A><0x0A># Plotagem de grafico<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Proportion of dependants for 100 and 300 households per 100 inhabitants')<0x0A>ax.set_title('Age dependency ratio in Greece')<0x0A><0x0A># Plotagem de grafico<0x0A>ax.grid(False)<0x0A><0x0A># Plotagem de grafico<0x0A>ax.set_ylim(0, 300)<0x0A><0x0A># Plotagem de grafico<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Age', 'Year'])<0x0A><0x0A># Plotagem de grafico<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A># Plotagem de grafico<0x0A>ax.set_ylim(0, 300)<0x0A><0x0A># Plotagem de grafico<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A># Plotagem de grafico<0x0A>ax.set_yticklabels(['Age', 'Year'])<0x0A><0x0A># Plotagem de grafico<0x0A>ax.set_yticklabels(['Age', 'Year'])<0x0A><0x0A># Plotagem de grafico<0x0A>ax.set_yticklabels(['Age', 'Year'])<0x0A><0x0A># Plotagem de grafico<0x0A>ax.set_yticklabels(['Age', 'Year'])<0x0A><0x0A># Plotagem de grafico<0x0A>ax.set_yticklabels(['Age', 'Year'])<0x0A><0x0A># Plotagem de grafico<0x0A><0x0A><0x0A># Plotagem de grafico<0x0A><0x0A><0x0A># Plotagem de grafico<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A> 
---------------------------------------------------------------------------------------------------------
 [1m(39)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'new registrations per 1,000 people ages 15-64', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2005', 'y': 0.59}, {'x': '2006', 'y': 0.56}, {'x': '2007', 'y': 0.58}, {'x': '2008', 'y': 0.62}]}}
[31m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Densiy of new businesses in Uganda}, {'x': {'field': 'Year', 'type': 'quantitative'}}, 'y': {'field': 'Densiy of new businesses in Uganda}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(40)   [22mMARK: [36m 1.0 [39m TYPE-X: [36m 1.0 [39m TYPE-Y: [36m 1.0 [39m NAME-X: [36m 1.0 [39m NAME-Y: [36m 0.88 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Amount (in current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Mali', 'y': 252581000.0}, {'x': 'Mauritania', 'y': 450743000.0}, {'x': 'Mauritius', 'y': 492046000.0}, {'x': 'Mexico', 'y': 50479571000.0}]}}
 {'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Amount (in current ($$$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '404815000', 'y': 5060073296}, {'x': '545814300', 'y': 4950073296}, {'x': '545814300', 'y': 5060073296}, {'x': '404814300', 'y': 930006384}, {'x': '545814300', 'y': 4950073296}, {'x': '404814300', 'y': 930006384}]}}
---------------------------------------------------------------------------------------------------------
 [1m(41)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of children', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 1100}, {'x': '2003', 'y': 1100}, {'x': '2004', 'y': 1200}, {'x': '2005', 'y': 1300}]}}
[31m {'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Number of children ages 0-14 who are infected with HIV in Djibouti}}, 'data': {'values': [{'x': 1000, 'y': 1000}, {'x': 1000, 'y': 1000}, {'x': 1000, 'y': 1000}, {'x': 1000, 'y': 1000}]}} 
---------------------------------------------------------------------------------------------------------
 [1m(42)   [22mMARK: [36m 0.0 [39m TYPE-X: [36m 0.0 [39m TYPE-Y: [36m 0.0 [39m NAME-X: [36m 0.0 [39m NAME-Y: [36m 0.0 
[32m {'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31m Country_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(18,18),color='green')<0x0A>plt.xlabel('Country')<0x0A>plt.ylabel('Yield by per Phenomena')<0x0A>plt.title('Cereal yield in different countries as per the survey of 1981')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show() 
Traceback (most recent call last):
  File "/mnt/disk2/msinnona/visdecode/eurographics/trainer.py", line 377, in <module>
    eval_model(visdecode_dataset_test3, print_output = True)
  File "/mnt/disk2/msinnona/visdecode/eurographics/trainer.py", line 262, in eval_model
    generated_ids = model.generate(flattened_patches=flattened_patches, attention_mask=attention_mask, max_length=MAX_LENGTH)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/transformers/generation/utils.py", line 1544, in generate
    return self.greedy_search(
           ^^^^^^^^^^^^^^^^^^^
  File "/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/transformers/generation/utils.py", line 2467, in greedy_search
    if stopping_criteria(input_ids, scores):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/transformers/generation/stopping_criteria.py", line 130, in __call__
    @add_start_docstrings(STOPPING_CRITERIA_INPUTS_DOCSTRING)
KeyboardInterrupt