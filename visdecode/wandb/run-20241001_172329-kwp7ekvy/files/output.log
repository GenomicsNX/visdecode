
[36m[1mEpoch :[39m[22m 0 [32m[1m | Loss :[39m[22m 12.146766662597656
[36m[1mEpoch :[39m[22m 0 [32m[1m | Loss :[39m[22m 6.8729753494262695


















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [03:58<00:00, 11.94s/it]
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.set_title('Damage caused due to forest depletion in Belgium')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Coal (in a $% of GW)')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.tick_params(bottom=False, left=False, right=False, left_on='bottom')<0x0A>ax.tick_params(top=False, left=False, right=False, left_on='bottom')<0x0A><0x0A>ax.tick_params(bottom=False, left=False, right=False, left_on='bottom')<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False, right=False, left_on='bottom')<0x0A><0x0A>ax.spines['bottom'].set_visible(False, left=False, right_on='bottom')<0x0A><0x0A>ax.spines['left'].set_visible(False, left=False, right_on='bottom')<0x0A><0x0A>ax.spines['left'].set_visible(False, left=False, right_on='bottom')<0x0A><0x0A>ax.spines['left'].set_visible(False, left=False, right_on='bottom')<0x0A><0x0A>ax.spines['left'].set_visible(False, left=False, right_on='bottom')<0x0A><0x0A>ax.spines['left'].set_visible(False, left=False, right_on='bottom')<0x0A><0x0A>ax.spines['left'].set_visible(False, left=False, right_on='bottom')<0x0A><0x0A>ax.spines['left'].set_visible(False, left=False, right_on='bottom')<0x0A><0x0A>ax.spines['left'].set_visible(False, left=False, right_on='bottom')<0x0A><0x0A>ax.spines['left'].set_visible(False, left=False, right_on='bottom')<0x0A><0x0A>ax.spines['left'].set_visible(False, left=False, right_on='bottom')<0x0A><0x0A>ax.spines['left'].set_visible(False, left=False, right_on='bottom')<0x0A><0x0A>ax.spines['left'].set_visible(False, left=False,
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Unemployed body mass index from 15:24')<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=90)<0x0A><0x0A>ax.set
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31mfig, ax = plt.subplots(figsize=(18, 18))<0x0A><0x0A>ax.plot(df_filtered.groupby(['Year'])['Freshwater withdrawal'].sum(), '--', color='#006699')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Annual Freshwater withdrawal (%) of Irkooms Resources)')<0x0A>ax.set_title('Annual freshwater withdrawals (%) of Irkooms Resources')<0x0A><0x0A>ax.tick_params(axis='x', labelsize=15)<0x0A>ax.tick_params(axis='y', labelsize=15)<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Annual Freshwater withdrawal (%) of Irkooms Resources)<0x0A>ax.set_title('Annual freshwater withdrawals (%) of Irkooms Resources')<0x0A><0x0A>ax.tick_params(axis='x', labelsize=15)<0x0A><0x0A>ax.tick_params(axis='y', labelsize=15)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=15)<0x0A><0x0A>ax.tick_params(axis='y', labelsize=15)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=15)<0x0A><0x0A>ax.tick_params(axis='y', labelsize=15)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=15)<0x0A><0x0A>ax.tick_params(axis='y', labelsize=15)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=15)<0x0A><0x0A>ax.tick_params(axis='y', labelsize=15)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=15)<0x0A><0x0A>ax.tick_params(axis='y', labelsize=15)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=15)<0x0A><0x0A>ax.tick_params(axis='y', labelsize=15)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=15)<0x0A><0x0A>ax.tick_params(axis='y', labelsize=15)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=15)<0x0A><0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plot the table<0x0A>table_table = table_table.sort_values('Year', ascending=False)<0x0A>table_table.plot(kind='bar', figsize=(20,20), colormap='tab10')<0x0A>plt.title('Arable land (hectares) in Seychelles', fontsize=20)<0x0A>plt.xlabel('Year', fontsize=20)<0x0A>plt.ylabel('Ave of land (hectares)', fontsize=20)<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A>ax.plot(df_brasil.Year, df_brasil.Fertilizer_consumption_per_production, linewidth=0.5)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A>ax.set_xticklabels(df_brasil.Year, rotation=90)<0x0A><0x0A>ax.set_xticklabels(df_brasil.Year, rotation=90)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31m# Plot the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.set_title('Time required to register a property in Samoa')<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of Days')<0x0A><0x0A>ax.set_xticklabels(['Year'], rotation=0)<0x0A>ax.set_yticklabels(['Year'], rotation=0)<0x0A><0x0A>ax.plot(property_year_range, property_year_range, color='black', linewidth=1)<0x0A>ax.set_xticklabels(['Year'], rotation=0)<0x0A>ax.set_yticklabels(['Year'], rotation=0)<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of Days')<0x0A>ax.set_xticklabels(['Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=0)<0x0A><0x0A>ax.set_ylabel('Number of Days')<0x0A>ax.set_ylabel('Number of Days')<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of Days')<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A><0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=18)<0x0A>ax.tick_params(axis='y', labelsize=18)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=18)<0x0A><0x0A>ax.tick_params(axis='y', labelsize=18)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=18)<0x0A><0x0A>ax.tick_params(axis='y', labelsize=18)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=18)<0x0A><0x0A>ax.tick_params(axis='y', labelsize=18)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=18)<0x0A><0x0A>ax.tick_params(axis='y', labelsize=18)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=18)<0x0A><0x0A>ax.tick_params(axis='y', labelsize=18)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=18)<0x0A><0x0A>ax.tick_params(axis='y', labelsize=18)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=18)<0x0A><0x0A>ax.tick_params(axis='y', labelsize=18)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=18)<0x0A><0x0A>ax.tick_params(axis='y', labelsize=18)<0x0A><0x0A>ax.tick_params(axis='y', labelsize=18)<0x0A><0x0A>ax.tick_params(axis='y', labelsize=18)<0x0A><0x0A>ax.tick_params(axis='y', labelsize=18)<0x0A><0x0A>ax.tick_params(axis='y', labelsize
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the year vs. the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the bill of the
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31m# Create a bar chart with ax.<0x0A>fig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A># Create a bar plot.<0x0A>ax.bar(x=country_names, height=cereal_yield_per_country, color='green', edgecolor='black', linewidth=1)<0x0A><0x0A># Add a title and axes labels.<0x0A>ax.set_title('Cereal yield in different countries as per the survey of 1981')<0x0A>ax.set_xlabel('Country')<0x0A>ax.set_ylabel('Yield kept per hectare')<0x0A><0x0A># Add a legend.<0x0A>ax.legend(loc='upper left')<0x0A><0x0A># Display the chart.<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mpoverty_line_year = poverty_line_year.groupby(['Year']).mean().sort_values(ascending=False)<0x0A>poverty_line_year.plot(kind='bar', title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka', color='#1f77b4', figsize=(20,20))<0x0A>poverty_line_year.plot(kind='bar', title='Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka', color='#1f77b4', figsize=(20,20))<0x0A>poverty_line_year.plot(kind='bar', title='Mean Poverty Lines', color='#1f77b4', figsize=(20,20))<0x0A>poverty_line_year.plot(kind='bar', title='Mean Poverty Lines', color='#1f77b4', figsize=(20,20))<0x0A>poverty_line_year.plot(kind='bar', title='Mean Poverty Lines', color='#1f77b4', figsize=(20,20))<0x0A>poverty_line_year.plot(kind='bar', title='Mean Poverty Lines', color='#1f77b4', figsize=(20,20))<0x0A>poverty_line_year.plot(kind='bar', title='Mean Poverty Lines', color='#1f77b4', figsize=(20,20))<0x0A>poverty_line_year.plot(kind='bar', title='Mean Poverty Lines', color='#1f77b4', figsize=(20,20))<0x0A>poverty_line_year.plot(kind='bar', title='Mean Poverty Lines', color='#1f77b4', figsize=(20,20))<0x0A>poverty_line_year.plot(kind='bar', title='Mean Poverty Lines', color='#1f77b4', figsize=(20,20))<0x0A>poverty_line_year.plot(kind='bar', title='Mean Poverty Lines', color='#1f77b4', figsize=(20,20))<0x0A>poverty_line_year.plot(kind='bar', title='Mean Poverty Lines', color='#1f77b4', figsize=(20,20))<0x0A>poverty_line_year.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(import_plot, 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m#barplot of number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A>barplot = top_procedures_building_republic.plot(kind='bar', title='Number of procedures to build a warehouse in Congo (Republic)', color='green', figsize=(20,20), fontsize=15)<0x0A>barplot.set_xlabel('Year', fontsize=15)<0x0A>barplot.set_ylabel('Number of procedures to build a warehouse', fontsize=15)<0x0A>barplot.set_xticklabels(top_procedures_building_republic.index, rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.scatter(df['Year'],df['Prod'],color='#000000')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Proded by in mynkk train')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_xlim(0, 200000)<0x0A>ax.set_ylim(0, 20000)<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_xticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_ylabel('Proded by in mynk train')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Proded by in mynk train')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A>ax.set_ylabel('Proded by in mynk train')<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Proded by in mynk train')<0x0A><0x0A>ax.set_ylim(0, 20000)<0x0A><0x0A>ax.set_xticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Proded by in mynk train')<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot the distribution of distance to frontier score (on scale of 100) of Armenia<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.scatter(df_sm['Year'], df_sm['Distance to Frontier score (on scale of 100) of Armenia'])<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (demand for re-housing)')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mfig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.set_title('Percentage of babies born with low-birthweight in Sri Lanka')<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of births')<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=0)<0x0A><0x0A>ax.set_xlim([-1, 20])<0x0A>ax.set_ylim([-1, 20])<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=0)<0x0A><0x0A>ax.set_ylabel('% of births')<0x0A><0x0A>ax.set_xlabel('Year')<0x0A><0x0A>ax.set_ylabel('% of births')<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=0)<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=0)<0x0A><0x0A>ax.set_ytick
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m# Plot percentage of children ages 12-23 months who received DPT vaccinations in Denmark<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.set_title('Percentage of children ages 12-23 months who received DPT vaccinations in Denmark')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of children who received DPT vaccine')<0x0A><0x0A>ax.set_xticklabels(ax.get_xticklabels(), rotation=90)<0x0A><0x0A>ax.set_yticklabels(ax.get_yticklabels(), rotation=90)<0x0A><0x0A>ax.scatter(x=df_vaccines['Year'], y=df_vaccines['DPT_vaccines'], color='green')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m# Create a plot<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a bar plot<0x0A>sns.barplot(x='Year', y='Percentage of households in Russian Federation that uses iodized salt', data=df, ax=ax)<0x0A><0x0A># Add labels to the plot<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Percentage of households')<0x0A>ax.set_title('Percentage of households in Russian Federation that uses iodized salt')<0x0A><0x0A># Save the plot to a PNG<0x0A>plt.savefig('Percentage of households in Russian Federation that uses iodized salt')<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.scatter(df_UK['Year'], df_UK['Capitals'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the y-axis label<0x0A>ax.set_ylabel('Consumption of (and capital) (as % of CND)')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.05, 1), shadow=True, ncol=1)<0x0A><0x0A># Setting the axis title<0x0A>ax.set_ylabel('Consumption of (and capital) (as % of CND)')<0x0A><0x0A># Setting the axis title<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axis title<0x0A>ax.set_ylabel('Consumption of (and capital) (as % of CND)')<0x0A><0x0A># Setting the title<0x0A>ax.set_ylabel('Consumption of (and capital) (as % of CND)')<0x0A><0x0A># Setting the title<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the title<0x0A>ax.set_ylabel('Consumption of (and capital) (as % of CND)')<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the axis labels<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axis title<0x0A>ax.set_ylabel('Consumption of (and capital) (as % of CND)')<0x0A><0x0A># Setting the axis title<0x0A>ax.set_ylabel('Consumption of (and capital) (as % of CND)')<0x0A><0x0A># Setting the axis title<0x0A>ax.set_ylabel('Consumption of (and capital) (as % of CND)')<0x0A><0x0A># Setting the axis title<0x0A>ax.set_ylabel('Consumption of (and capital) (as % of CND)')<0x0A><0x0A># Setting the axis title<0x0A>ax.set_ylabel('Consumption of (and capital) (as % of CND)')<0x0A><0x0A># Setting the axis title<0x0A>ax.set_ylabel('Consumption of (and capital) (as % of CND)')<0x0A><0x0A># Setting the axis title
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31myear_damage_df = pd.DataFrame(year_damage_df)<0x0A>year_damage_df.columns = ['Year', 'Damage caused due to forest depletion in South Asia']<0x0A>year_damage_df.plot(kind='scatter', x='Year', y='Damage caused due to forest depletion in South Asia', color='DarkBlue', figsize=(20,20), title='Damage caused due to forest depletion in South Asia')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Cost (e$% of GW)')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m# Create a new DataFrame with the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame<0x0A># Create a pivot table to display the dataframe as the DataFrame
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
