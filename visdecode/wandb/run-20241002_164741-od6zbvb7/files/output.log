
[36m[1mEpoch :[39m[22m 0 [32m[1m | Loss :[39m[22m 12.146766662597656


















 95%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ| 19/20 [03:28<00:07,  7.06s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(18, 20))<0x0A><0x0A>ax.set_title('Damage caused due to forest depletion in Belgium')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Coal (in as % of GNI)')<0x0A>ax.set_xticks(np.arange(0, 100, 10))<0x0A>ax.set_yticks(np.arange(0, 100, 10))<0x0A><0x0A>ax.plot(df_2019.Year, df_2019.Coal, color='grey', linestyle='dashed', linewidth=1)<0x0A>ax.plot(df_2019.Year, df_2019.Coal, color='grey', linestyle='dashed', linewidth=1)<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A>ax.set_xlim(0, 100000)<0x0A>ax.set_ylim(0, 100000)<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_ylim(0, 100000)<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plotting the graph of the total unemployed youth population of Colombia<0x0A><0x0A># Plotting the graph of the total unemployed youth population of Colombia<0x0A><0x0A># Plotting the graph of the total unemployed youth population of Colombia<0x0A><0x0A><0x0A># Plotting the graph of the total unemployed youth population of Colombia<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31mfig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A>ax.plot(df_filtered.groupby(['Year'])['Freshwater_Withdrawals'].sum(), '--', color='#000000')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Annual Freshwater Withdrawals (%) of 1199mm')<0x0A>ax.set_title('Annual freshwater withdrawals (%) of 1199mm in Kazakhstan')<0x0A>ax.set_xticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mfig, ax = plt.subplots(figsize=(20, 30))<0x0A><0x0A># Plotting the graph<0x0A>ax.set_title('Arable land (hectares) in Seychelles.', fontsize=20)<0x0A>ax.set_xlabel('Year', fontsize=20)<0x0A>ax.set_ylabel('Arable land (hectares) in Seychelles.', fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A>sns.barplot(x='Year', y='Arable land (hectares) in Seychelles.', data=df_arable_land, ax=ax)<0x0A><0x0A># Plotting the graph<0x0A>ax.set_xticklabels(ax.get_xticklabels(), rotation=90, fontsize=20)<0x0A>ax.set_yticklabels(ax.get_yticklabels(), fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A>ax.set_ylim(0, 400)<0x0A><0x0A># Plotting the graph<0x0A>ax.set_yticklabels(ax.get_yticklabels(), fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A>ax.set_yticklabels(ax.get_yticklabels(), fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A>ax.set_ylim(0, 400)<0x0A><0x0A># Plotting the graph<0x0A>ax.set_yticklabels(ax.get_yticklabels(), fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A>ax.set_yticklabels(ax.get_yticklabels(), fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A>ax.set_yticklabels(ax.get_yticklabels(), fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A>ax.set_yticklabels(ax.get_yticklabels(), fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A>ax.set_yticklabels(ax.get_yticklabels(), fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A>ax.set_yticklabels(ax.get_yticklabels(), fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A>ax.set_yticklabels(ax.get_yticklabels(), fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A>ax.set_yticklabels(ax.get_yticklabels(), fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A>ax.set_yticklabels(ax.get_yticklabels(), fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A>ax.set
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph of fertility consumption in Brazil as a percentage of production<0x0A>fig, ax = plt.subplots(figsize=(18, 24))<0x0A><0x0A># Plotting the graph of fertility consumption in Brazil as a percentage of production<0x0A>ax.plot(df_brazil.groupby(['Year'])['fertilizer consumption'].sum().sort_values().index, df_brazil.groupby(['Year'])['fertilizer consumption'].sum().sort_values().values)<0x0A><0x0A># Plotting the graph of fertility consumption in Brazil as a percentage of production<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of fertilizer/fertilizer production')<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A># Plotting the graph of fertility consumption in Brazil as a percentage of production<0x0A>ax.set_xticklabels(['year', 'year'])<0x0A>ax.set_yticklabels(['year', 'year'])<0x0A><0x0A># Plotting the graph of fertility consumption in Brazil as a percentage of production<0x0A>ax.set_xticklabels(['year', 'year'])<0x0A><0x0A># Plotting the graph of fertility consumption in Brazil as a percentage of production<0x0A>ax.set_xticklabels(['year', 'year'])<0x0A><0x0A># Plotting the graph of fertility consumption in Brazil as a percentage of production<0x0A>ax.set_xticklabels(['year', 'year'])<0x0A><0x0A># Plotting the graph of fertility consumption in Brazil as a percentage of production<0x0A>ax.set_xticklabels(['year', 'year'])<0x0A><0x0A># Plotting the graph of fertility consumption in Brazil as a percentage of production<0x0A>ax.set_xticklabels(['year', 'year'])<0x0A><0x0A># Plotting the graph of fertility consumption in Brazil as a percentage of production<0x0A>ax.set_xticklabels(['year', 'year'])<0x0A><0x0A># Plotting the graph of fertility consumption in Brazil as a percentage of production<0x0A>ax.set_xticklabels(['year', 'year'])<0x0A><0x0A># Plotting the graph of fertility consumption in Brazil as a percentage of production<0x0A>ax.set_xticklabels(['year', 'year'])<0x0A><0x0A># Plotting the graph of fertility consumption in Brazil as a percentage of production<0x0A>ax.set_xticklabels(['year', 'year'])<0x0A><0x0A># Plotting the graph of fertility consumption in Brazil as a percentage of production<0x0A>ax.set_xticklabels(['year', 'year'])<0x0A><0x0A># Plotting the graph of fertility consumption in Brazil as a percentage of production<0x0A>ax.set_xticklabels(['year', 'year'])<0x0A><0x0A># Plotting the graph
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mfig, ax = plt.subplots(figsize=(20, 30))<0x0A><0x0A>ax.plot(df_sanos['Year'], df_sanos['Average_time'], color='black', linewidth=1)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Average of Days')<0x0A>ax.set_title('Time required to register a property in Sanoa')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_xticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Average of Days')<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_xticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A>ax.set_
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the cost of communications and computers with respect to service imports of Lebanon<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.plot(cost_comm_lebanon['Year'], cost_comm_lebanon['Cost'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xticklabels(cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(cost_comm_lebanon['Cost'], rotation=90)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31mfig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the bar graph<0x0A>ax.bar(df_grenad.Year, df_grenad.Aff_flow_from_development_assistance, color='#000000', edgecolor='black')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Aff flow from Development Assistance Committee')<0x0A>ax.set_title('Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A>ax.grid(True)<0x0A><0x0A># Plotting the bar graph<0x0A>ax.bar(df_grenad.Year, df_grenad.Aff_flow_from_development_assistance, color='#000000', edgecolor='black')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Aff flow from Development Assistance Committee')<0x0A>ax.set_title('Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A>ax.set_xticklabels(df_grenad.Year, rotation='horizontal')<0x0A><0x0A># Plotting the bar graph<0x0A>ax.set_ylim(0,1200000)<0x0A><0x0A># Plotting the bar graph<0x0A>ax.set_yticklabels(df_grenad.Aff_flow_from_development_assistance.Aff_flow_from_development_assistance.Aff_flow_from_development_assistance.Aff_flow_from_development_assistance.Aff_flow_from_development_assistance.Aff_flow_from_development_assistance.Aff_flow_from_development_assistance.Aff_flow_from_development_assistance.Aff_flow_from_development_assistance.Aff_flow_from_development_assistance.Aff_flow_from_development_assistance.Aff_flow_from_development_assistance.Aff_flow_from_development_assistance.Aff_flow_from_development_assistance.Aff_flow_from_development_assistance.Aff_flow_from_development_assistance.Aff_flow_from_development_assistance.Aff_flow_from_development_assistance.Aff_flow_from_development_assistance.Aff_flow_from_development_assistance.Aff_flow_from_development_assistance.Aff_flow_from_development_assistance.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mfig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A>ax.bar(df_1981.Country, df_1981.Yield, color='green', width=0.5, edgecolor='black', linewidth=1)<0x0A>ax.set_xlabel('Country')<0x0A>ax.set_ylabel('Yield by per hectome')<0x0A>ax.set_title('Cereal yield in different countries as per the survey of 1981')<0x0A>ax.set_xticklabels(df_1981.Country, rotation=90)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mfig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A>ax.bar(df_sri_lanka['Year'], df_sri_lanka['Survived'], color='#008888', edgecolor='black')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Survived')<0x0A>ax.set_title('Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(import_plot, 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m# Plot number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A>plt.figure(figsize=(20,25))<0x0A>plt.bar(df_congo_republic['Year'], df_congo_republic['Number of procedures to build a warehouse in Congo (Republic)'], color='g', edgecolor='black')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Number of procedures to build a warehouse in Congo (Republic)')<0x0A>plt.title('Number of procedures to build a warehouse in Congo (Republic)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig, ax = plt.subplots(figsize=(18, 24))<0x0A><0x0A>ax.scatter(x=df['Year'], y=df['Production in production'], color='#000000')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in production')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A>ax.grid(False)<0x0A><0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A>ax.set_yticklabels(df['Production in production'], rotation=90)<0x0A><0x0A>ax.set_ylim(0, 10000)<0x0A>ax.set_xlim(0, 10000)<0x0A><0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A>ax.set_ylim(0, 10000)<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in production')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A>ax.set_ylim(0, 10000)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31mfig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.scatter(df['Year'], df['Score (p)'], s=50)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (p)')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A>ax.set_xticklabels(df['Year'].unique())<0x0A>ax.set_yticklabels(df['Year'].unique())<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mfig = plt.figure(figsize=(15,20))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.set_title('Percentage of babies born with low-birthweight in Sri Lanka')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of births')<0x0A><0x0A>ax.scatter(df_srl['Year'], df_srl['Number of births'], color='purple')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of births')<0x0A>ax.set_xticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_yticklabels(['Year'])<0x0A><0x0A>ax.set_ytick
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m# Plotting the percentage of children ages 12-23 months who received DPT vaccinations in Denmark<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15, 15))<0x0A><0x0A>ax.scatter(x=df_DPT_vaccinations.Year, y=df_DPT_vaccinations.DPT_vaccinations, color='green')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of children who received DPT vaccine')<0x0A>ax.set_title('Percentage of children ages 12-23 months who received DPT vaccinations in Denmark')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m# Create a plot<0x0A>plt.figure(figsize=(20,20))<0x0A><0x0A># Create a plot<0x0A>plt.scatter(df.Year, df.Percentage, color='m')<0x0A><0x0A># Set title<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A><0x0A># Set x-axis label<0x0A>plt.xlabel('Year')<0x0A><0x0A># Set y-axis label<0x0A>plt.ylabel('% of households')<0x0A><0x0A># Set y-axis tick labels<0x0A>plt.xticks(rotation=90)<0x0A><0x0A># Set x-axis tick labels<0x0A>plt.xticks(rotation=90)<0x0A><0x0A># Set y-axis tick labels<0x0A>plt.yticks(rotation=90)<0x0A><0x0A># Set y-axis tick labels<0x0A>plt.ylabel('% of households')<0x0A><0x0A># Set y-axis tick labels<0x0A>plt.ylabel('% of households')<0x0A><0x0A># Set y-axis tick labels<0x0A>plt.yticks(rotation=90)<0x0A><0x0A># Set y-axis tick labels<0x0A>plt.yticks(rotation=90)<0x0A><0x0A># Set y-axis tick labels<0x0A>plt.yticks(rotation=90)<0x0A><0x0A># Set y-axis tick labels<0x0A>plt.ylabel('% of households')<0x0A><0x0A># Set y-axis tick labels<0x0A>plt.ylabel('% of households')<0x0A><0x0A># Set y-axis tick labels<0x0A>plt.ylabel('% of households')<0x0A><0x0A># Set y-axis tick labels<0x0A>plt.ylabel('% of households')<0x0A><0x0A># Set y-axis tick labels<0x0A>plt.ylabel('% of households')<0x0A><0x0A># Set y-axis tick labels<0x0A>plt.ylabel('% of households')<0x0A><0x0A># Set y-axis tick labels<0x0A>plt.ylabel('% of households')<0x0A><0x0A># Set y-axis tick labels<0x0A>plt.xlabel('Year')<0x0A><0x0A># Set y-axis tick labels<0x0A>plt.ylabel('% of households')<0x0A><0x0A># Set y-axis tick labels<0x0A>plt.tick_params(labelsize=16)<0x0A><0x0A># Set y-axis tick labels<0x0A>plt.tick_params(labelsize=16)<0x0A><0x0A># Set y-axis tick labels<0x0A>plt.tick_params(labelsize=16)<0x0A><0x0A># Set y-axis tick labels<0x0A>plt.tick_params(labelsize=16)<0x0A><0x0A># Set y-axis tick labels<0x0A>plt.tick_params(labelsize=16)<0x0A><0x0A>#
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m# Plotting the graph of capital used up in the process of production in United Kingdom<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.scatter(df_UK['Year'], df_UK['Capital used up in the process of production in United Kingdom'])<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of / and capital (the % of CPM)')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31mfig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.scatter(df['Year'], df['Cost (in % of GW)'], color='red')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost (in % of GW)')<0x0A>ax.set_title('Damage caused due to forest depletion in South Asia')<0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A>ax.set_yticklabels(df['Year'], rotation=90)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mfig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.scatter(df['Year'], df['Strength'], color='green')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Strength index (C-10000)')<0x0A>ax.set_title('Rating regarding strength of legal rights index in Croatia')<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Strength index (C-10000)', 'Strength index (C-10000)'])<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Strength index (C-10000)'])<0x0A><0x0A>ax.set_ylim(0, 1)<0x0A><0x0A>ax.set_xlim(0, 1)<0x0A><0x0A>ax.set_yticklabels(['Strength index (C-10000)', 'Strength index (C-10000)'])<0x0A><0x0A>ax.set_yticklabels(['Strength index (C-10000)'])<0x0A><0x0A>ax.set_yticklabels(['Strength index (C-10000)'])<0x0A><0x0A>ax.set_yticklabels(['Strength index (C-10000)'])<0x0A><0x0A>ax.set_yticklabels(['Strength index (C-10000)'])<0x0A><0x0A>ax.set_yticklabels(['Strength index (C-10000)'])<0x0A><0x0A>ax.set_yticklabels(['Strength index (C-10000)'])<0x0A><0x0A>ax.set_yticklabels(['Strength index (C-10000)'])<0x0A><0x0A>ax.set_yticklabels(['Strength index (C-10000)'])<0x0A><0x0A>ax.set_yticklabels(['Strength index (C-10000)'])<0x0A><0x0A>ax.set_yticklabels(['Strength index (C-10000)'])<0x0A><0x0A>ax.set_yticklabels(['Strength index (C-10000)'])<0x0A><0x0A>ax.set_yticklabels(['Strength index (C-10000)'])<0x0A><0x0A>ax.set_yticklabels(['Strength index (C-10000)'])<0x0A><0x0A>ax.set_yticklabels(['Strength index (C-10000
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [03:46<00:00, 11.31s/it]
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)





 25%|â–ˆâ–ˆâ–Œ       | 5/20 [00:33<01:40,  6.68s/it]
Token will not been saved to git credential helper. Pass `add_to_git_credential=True` if you want to set the git credential as well.
Token is valid (permission: write).
Your token has been saved to /home/msinnona/.cache/huggingface/token
Login successful
[32m[1m[Train] :[39m[22m 20
[32m[1m[Val] :[39m[22m 20
[32m[1m[Test #1] :[39m[22m 100
[32m[1m[Test #2] :[39m[22m 37
> Using model:  [31m[1mvisdecode_C
[34m[1mwandb[39m[22m: [33mWARNING[39m Calling wandb.login() after wandb.init() has no effect.