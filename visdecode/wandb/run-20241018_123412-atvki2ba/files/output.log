
[36m[1mEpoch :[39m[22m 0 [32m[1m | Loss :[39m[22m 3.9742891788482666















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [02:01<00:00,  6.07s/it]
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
[31mMode_Age = sns.lmplot(x='Mode Age', y='Alcohol Consumption', data=df, fit_reg=False)<0x0A>Mode_Age.set(xlim=(0, None), ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None), xlim=(0, None))<0x0A>Mode_Age.set(xlabel='Mode Age', ylabel='Alcohol Consumption')<0x0A>Mode_Age.set(ylabel='Alcohol Consumption', xlabel='Mode Age')<0x0A>Mode_Age.set(ylabel='Alcohol Consumption', xlabel='Mode Age')<0x0A>Mode_Age.set(xlim=(0, None), ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None), xlabel='Mode Age')<0x0A>Mode_Age.set(ylabel='Alcohol Consumption', xlabel='Mode Age')<0x0A>Mode_Age.set(ylabel='Alcohol Consumption', xlabel='Mode Age')<0x0A>Mode_Age.set(ylabel='Alcohol Consumption', xlabel='Mode Age')<0x0A>Mode_Age.set(ylabel='Alcohol Consumption', xlabel='Mode Age')<0x0A>Mode_Age.set(ylabel='Alcohol Consumption', xlabel='Mode Age')<0x0A>Mode_Age.set(ylabel='Alcohol Consumption', xlabel='Mode Age')<0x0A>Mode_Age.set(ylabel='Alcohol Consumption', xlabel='Mode Age')<0x0A>Mode_Age.set(ylabel='Alcohol Consumption', xlabel='Mode Age')<0x0A>Mode_Age.set(ylabel='Alcohol Consumption', xlabel='Mode Age')<0x0A>Mode_Age.set(ylabel='Alcohol Consumption', xlabel='Mode Age')<0x0A>Mode_Age.set(ylabel='Alcohol Consumption', xlabel='Mode Age')<0x0A>Mode_Age.set(ylabel='Alcohol Consumption', xlabel='Mode Age')<0x0A>Mode_Age.set(ylabel='Alcohol Consumption', xlabel='Mode Age')<0x0A>Mode_Age.set(ylabel='Alcohol Consumption', xlabel='Mode Age')<0x0A>Mode_Age.set(ylabel='Alcohol Consumption')<0x0A>Mode_Age.set(ylabel='Alcohol Consumption')<0x0A>Mode_Age.set(ylabel='Alcohol Consumption')<0x0A>Mode_Age.set(ylabel='Alcohol Consumption')<0x0A>Mode_Age.set(ylabel='Alcohol Consumption')<0x0A>Mode_Age.set(ylabel='
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
[31mfacet = sns.FacetGrid(data, height=7, aspect=4)<0x0A>facet.map(sns.barplot, "Water Usage", "CO2 Emissions", color="steelblue")<0x0A>facet.set(xlim=(0,8000))<0x0A>facet.set(ylim=(0,8000))<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
[31mgrupos = ['Dog', 'Red', 'USA']<0x0A><0x0A># Create a bar plot of the dataframe<0x0A>df_bar = pd.DataFrame(<0x0A>    [<0x0A>        df_merged['Dog'],<0x0A>        df_merged['Red'],<0x0A>        df_merged['USA']]<0x0A>    ],<0x0A>    columns = grupos<0x0A>)<0x0A><0x0A># Create a bar plot of the dataframe<0x0A>df_bar.plot(kind='bar',<0x0A>        figsize=(6, 6),<0x0A>        rot=90,<0x0A>        xlabel='',<0x0A>        ylabel='',<0x0A>        legend=False,<0x0A>        colormap='tab10')<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
[31mgrouped_df = pd.DataFrame(grouped_df, columns=['Country', 'Rating'])<0x0A>grouped_df.index = ['Apple', 'Dog', 'Nike', 'Rock', 'Sedan', 'Spanish', 'USA']<0x0A>grouped_df.sort_values(by='Rating', ascending=False, inplace=True)<0x0A>grouped_df.plot(kind='bar', figsize=(10,10))<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(10,10))<0x0A><0x0A># Creating a bar plot<0x0A>sns.set(style="ticks")<0x0A><0x0A># Plotting the graph<0x0A>ax = sns.barplot(x=df_USA.index, y=df_USA.Bond_Yeld, data=df_USA)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Saving the graph<0x0A>plt.savefig("Charts/Charts/USA_Bond_Yeld.png")<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, top=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, top=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, top=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Saving the graph<0x0A>sns.despine(bottom=True, top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despin
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
[31mfig, ax = plt.subplots(figsize=(8, 8))<0x0A><0x0A># Plot bar graph<0x0A>sns.barplot(x='Cost', y='Quantile Regression Estimates Of Salary By Experience Level', data=df, ax=ax)<0x0A><0x0A># Customize the plot<0x0A>sns.despine(left=True, bottom=True)<0x0A>plt.xticks(rotation=90)<0x0A>plt.ylabel('Quantile Regression Estimates Of Salary By Experience Level')<0x0A>plt.xlabel('Cost')<0x0A>plt.tight_layout()<0x0A>plt.savefig('figs/fig_cost.png')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
[31mheights.plot(kind='scatter', x='Height', y='Height', figsize=(10,10), alpha=0.7, s=100)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
[31mfig = plt.figure(figsize=(10,10))<0x0A>ax = fig.add_subplot(111)<0x0A>ax.scatter(x,y,s=100)<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_ylim(0,400)<0x0A>ax.set_xlabel('')<0x0A>ax.set_ylabel('')<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_ylabel('')<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_ylim(0,400)<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_ylim(0,400)<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_ylim(0,400)<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_ylim(0,400)<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_ylim(0,400)<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_ylim(0,400)<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_ylim(0,400)<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_ylim(0,400)<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_ylim(0,400)<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_xlim(0,1000)<0x0A>ax.set_xlim
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
[31mempirical_bar_chart(df, 'Smoking Rate', 'Simulation Results Of Variable Interest Interest Rates On Bond Prices', '1915', '1920', '1925', '1930')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
[31mfacet = sns.FacetGrid(data, row = 'CO2 Emissions', size = 5)<0x0A>facet.map(plt.plot, 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'CO2 Emissions', color = 'C0', linewidth = 1)<0x0A>facet.add_legend()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
[31mfacet = sns.FacetGrid(df, height=8)<0x0A>facet.map(sns.lineplot, "Time", "Count")<0x0A>facet.add_legend()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
[31mg = sns.relplot(x="Predictive Accuracy Of Seasonal Demand Forecasting Models", y="Heterogeneity In Clinical Trial Populations By Gender And Age",<0x0A>                   data=df_predictive_accuracy_seasonal_demand_forecasting_models_heterogeneity_in_clinical_trial_populations_by_gender_and_age",<0x0A>                   kind="scatter", size="Predictive Accuracy Of Seasonal Demand Forecasting Models",<0x0A>                   palette="muted", height=7, aspect=1.5)<0x0A>g.set(xlim=(0, 900))<0x0A>g.set(ylim=(0, 700))
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
[31mg = sns.relplot(x="Distance", y="Probability Density Density Function OYA Age Distribution in Population Survey", data=df, kind="line", height=7, aspect=1.5)<0x0A>g.set(xlabel="Distance", ylabel="Probability Density Density Function OYA Age Distribution in Population Survey")<0x0A>g.set(ylim=(0, 600))<0x0A>g.set(xlim=(1, 1810), ylim=(0, 600))
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
[31mempirical_plot(data, 'Growth Rate', 'GDP')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
[31mimport seaborn as sns<0x0A>import matplotlib.pyplot as plt<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
[31mfacet = ggplot(df, aes(x='Assessment Of Healthcare Utilization Rates By Demographic Groups', y='Demographic Groups')) + \<0x0A>    geom_point()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
[31mpoverty_rate_plot = pd.DataFrame(poverty_rate_df, columns=['Poverty Rate', 'USA'])<0x0A>poverty_rate_plot.index = poverty_rate_df['USA']<0x0A>poverty_rate_plot.plot(kind='bar', figsize=(6, 6), layout=(1, 2), legend=False, fontsize=10)<0x0A>poverty_rate_plot.set_xlabel('')<0x0A>poverty_rate_plot.set_ylabel('')<0x0A>poverty_rate_plot.set_xticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_plot.set_yticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_plot.set_yticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_plot.set_xticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_plot.set_yticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_plot.set_yticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_plot.set_yticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_plot.set_yticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_plot.set_yticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_plot.set_yticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_plot.set_yticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_plot.set_yticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_plot.set_yticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_plot.set_yticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_plot.set_y
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
[31mfacet = sns.FacetGrid(data=df, col='time', height=7, aspect=1.5)<0x0A>facet.map(plt.plot, 'Impact Of Temperature Variability On Crop Yield Statistics', 'Drennted Analysis Of Yearly Weather Weather In Normalies In Temperature Data', linewidth=2)<0x0A>facet.add_legend()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
[31mfig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.plot(x,y)<0x0A><0x0A>ax.set_xlim(1825,1840)<0x0A>ax.set_ylim(0,5000)<0x0A><0x0A>ax.set_xticks(x)<0x0A>ax.set_xticklabels(x)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
[31mfacet = sns.relplot(x="Literacy Rate", y="Ep_Vol", size="Ep_Vol", data=df, height=8, aspect=1.5)<0x0A>facet.set(xlim=(0, 5000))<0x0A>facet.set(ylim=(0, 620))<0x0A>facet.fig.set_figwidth(10)<0x0A>facet.fig.set_figheight(10)<0x0A>plt.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------




















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [03:54<00:00, 11.75s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.set_title('Damage caused due to forest depletion in Belgium')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Coal (total $% of GPV)')<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='grey', linestyle='dotted', linewidth=1, alpha=0.5)<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='grey', linestyle='dotted', linewidth=1, alpha=0.5)<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='grey', linestyle='dotted', linewidth=1, alpha=0.5)<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='grey', linestyle='dotted', linewidth=1, alpha=0.5)<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='grey', linestyle='dotted', linewidth=1, alpha=0.5)<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='grey', linestyle='dotted', linewidth=1, alpha=0.5)<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='grey', linestyle='dotted', linewidth=1, alpha=0.5)<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='grey', linestyle='dotted', linewidth=1, alpha=0.5)<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='grey', linestyle='dotted', linewidth=1, alpha=0.5)<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='grey', linestyle='dotted', linewidth=
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31mfig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.plot(df_filtered.groupby(['Year', 'Year']).sum()['Freshwater_Withdrawals'].sum(), '--', color='black', alpha=0.7, label='Freshwater Withdrawals')<0x0A>ax.set_xlabel('Year', fontsize=16)<0x0A>ax.set_ylabel('Annual Freshwater Withdrawals (%) of 1990/2000', fontsize=16)<0x0A>ax.set_title('Annual freshwater withdrawals (%) of 1990/2000', fontsize=16)<0x0A>ax.tick_params(axis='x', labelsize=16)<0x0A>ax.tick_params(axis='y', labelsize=16)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=16)<0x0A>ax.tick_params(axis='y', labelsize=16)<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'], fontsize=16)<0x0A>ax.set_yticklabels(['Year', 'Year'], fontsize=16)<0x0A>ax.set_yticklabels(['Year', 'Year'], fontsize=16)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=16)<0x0A><0x0A>ax.tick_params(axis='y', labelsize=16)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=16)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=16)<0x0A><0x0A>ax.tick_params(axis='y', labelsize=16)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=16)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=16)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=16)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=16)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=16)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=16)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=16)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=16)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=16)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=16)<0x0A><0x0A>ax.tick_
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plot the graph<0x0A><0x0A># Plot the graph<0x0A><0x0A># Plot the graph<0x0A><0x0A><0x0A># Plot the graph<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mfig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.plot(df_sanos['Year'], df_sanos['Number of Days'], color='black', linewidth=1)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of Days')<0x0A>ax.set_title('Time required to register a property in Sanos')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_xlim(0, 1000)<0x0A>ax.set_ylim(0, 1000)<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year',
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the cost of communications and computers with respect to service imports of Lebanon<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_com
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar chart of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g_bar_plot = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g_bar_plot.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.02)<0x0A>g_bar_plot.set_xticklabels(g_bar_plot.get_xticklabels(), rotation=90)<0x0A>g_bar_plot.set_ylabels("AID flow from Development Assistance Committee")<0x0A>g_bar_plot.set_xlabels("Year")<0x0A>g_bar_plot.set_ylabels("AID flow from Development Assistance Committee")<0x0A>g_bar_plot.set_xticklabels(g_bar_plot.get_xticklabels(), rotation=90)<0x0A><0x0A># Save the chart<0x0A>g_bar_plot.savefig("net_bil_grenada_net_bilateral_aid_flow_Grenada_from_development_assistance_committee.png")
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield'].sum().sort_values(ascending=False)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31m# Create a bar chart of mean shortfall from the poverty lines in Sri Lanka<0x0A><0x0A># Create a bar chart of mean poverty lines in Sri Lanka<0x0A><0x0A># Create a bar chart of mean poverty lines in Sri Lanka<0x0A><0x0A># Create a bar chart of mean poverty lines in Sri Lanka<0x0A><0x0A># Create a bar chart of mean poverty lines in Sri Lanka<0x0A><0x0A><0x0A># Create a bar chart of mean poverty lines in Sri Lanka<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot = pd.DataFrame({'Year': df.groupby('Year').sum().index, 'Customs and other import duties (as % of tax revenue) of Indonesia': df.groupby('Year').sum().values})<0x0A>import_plot.index = df.groupby('Year').sum().index<0x0A>import_plot.plot(kind='bar', color='#111111', figsize=(20,20), title='Customs and other import duties (as % of tax revenue) of Indonesia', xlabel='Year', ylabel='5% of tax revenue', title='Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m# Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the figure size<0x0A>plt.rcParams['figure.figsize'] = (25, 15)<0x0A><0x0A># Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the graph<0x0A><0x0A># Setting up the axes<0x0A><0x0A># Setting up the title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.scatter(df['Year'],df['Production in production'],color='#000000')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in production')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A>ax.grid(True)<0x0A><0x0A>ax.set_xticklabels(['Year','Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year','Production in production'], rotation=90)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot the distance to frontier score (on scale of 100) of Armenia<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the distance to frontier score (on scale of 100) of Armenia<0x0A><0x0A>ax.scatter(df['Year'], df['Distance to Frontier score (on scale of 100) of Armenia'])<0x0A><0x0A># Set the title<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A># Set the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Score (intranet for redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of redevelopment of 
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m#Plotting the percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A><0x0A>sns.catplot(x="Year", y="Birth Weight", data=df, kind="point", palette="mako", height=15, aspect=1.5)<0x0A>plt.title("Percentage of babies born with low-Birthweight in Sri Lanka")<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m# Plotting the percentage of children ages 12-23 months who received DPT vaccinations in Denmark<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.scatter(x=df_children_DPT_vaccinations.Year, y=df_children_DPT_vaccinations.DPT_vaccinations, color='green')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of children who received DPT vaccinations')<0x0A>ax.set_title('Percentage of children ages 12-23 months who received DPT vaccinations in Denmark')<0x0A>ax.set_xticklabels(df_children_DPT_vaccinations.Year, rotation='vertical')<0x0A>ax.set_yticklabels(df_children_DPT_vaccinations.Year, rotation='vertical')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m# Create a scatter plot of Percentage of households in Russian Federation that uses iodized salt<0x0A>sns.catplot(x="Year", y="Percentage of households in Russian Federation that uses iodized salt", data=df, height=15, aspect=1.5, palette="muted")<0x0A>plt.title("Percentage of households in Russian Federation that uses iodized salt")<0x0A>plt.xlabel("Year")<0x0A>plt.ylabel("% of households")<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.scatter(df_UK['Year'], df_UK['Consumption of/and capital (age % of CWD)'])<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of/and capital (age % of CWD)')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m# Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A><0x0A># Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m# Create a scatter plot of rating strength of legal rights index in Croatia<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a scatter plot of rating strength of legal rights index in Croatia<0x0A>sns.scatterplot(data=df, x='Year', y='Strength', color='green', ax=ax)<0x0A><0x0A># Add a title<0x0A>plt.title('Rating regarding strength of legal rights index in Croatia')<0x0A><0x0A># Add a legend<0x0A>plt.legend(loc='upper left')<0x0A><0x0A># Display the plot<0x0A>plt.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|          | 0/20 [00:00<?, ?it/s]


















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [03:22<00:00, 10.11s/it]
  0%|          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m80.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.2 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.95 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
[31mMode_Age = sns.lmplot(x='Mode Age', y='Alcohol Consumption', data=df, fit_reg=False)<0x0A>Mode_Age.set(xlim=(0, None), ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None), xlim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None), xlim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None), xlim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None), xlim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None), xlim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None), xlim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None), xlim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None), xlim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None), xlim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None), xlim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None), xlim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Apple', 'y': 6200}, {'x': 'Dog', 'y': 6200}, {'x': 'Male', 'y': 4200}, {'x': 'Nike', 'y': 7700}, {'x': 'Rock', 'y': 4200}, {'x': 'Sedana', 'y': 4200}, {'x': 'Sedana', 'y': 4200}, {'x': 'Sedana', 'y': 4200}, {'x': 'Sedana', 'y': 4200}, {'x': 'Sedana', 'y': 6200}, {'x': 'Dog', 'y': 6200}, {'x': 'Male', 'y': 6200}, {'x': 'Nike', 'y': 6200}, {'x': 'Nike', 'y': 6200}, {'x': 'Sedana', 'y': 4200}, {'x': 'Sedana', 'y': 4200}, {'x': 'Sedana', 'y': 4200}, {'x': 'Sedana', 'y': 4200}, {'x': 'Sedana', 'y': 6200}, {'x': 'Sedana', 'y': 6200}, {'x': 'Sedana', 'y': 6200}, {'x': 'Sedana', 'y': 6200}, {'x': 'Sedana', 'y': 6200}, {'
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
[31mgrupos = ['Dog', 'Red', 'USA']<0x0A><0x0A># Create a DataFrame of the 'Profit' and 'Skewness'<0x0A>df = pd.DataFrame(data= grupos, columns=['Profit', 'Skewness', 'Skewness'])<0x0A><0x0A># Groupe des barras<0x0A>df_prof = df.groupby(['Profit']).sum()<0x0A><0x0A># Plot<0x0A>df_prof.plot(kind='bar', color='steelblue', rot=90)<0x0A><0x0A># Label<0x0A>plt.ylabel('Kurtosis And Skewness Of Annual Corporate Profit Margins')<0x0A>plt.xlabel('')<0x0A><0x0A># Label<0x0A>plt.ylabel('')<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
[31mgrouped_df = pd.DataFrame(data=train_df, columns=['USN', 'USA'])<0x0A><0x0A># groupby the USN and USA<0x0A>grouped_df['USN'] = train_df['USN'].astype(str).str.split(',', expand=True).apply(lambda x: x.lower())<0x0A>grouped_df['USA'] = train_df['USA'].astype(str).str.replace(',','').astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).astype(str).
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'temporal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type': 'quantiles', 'type':
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
[31mfacet = sns.FacetGrid(data, height=7, aspect=1.5)<0x0A>facet.map(plt.scatter, 'Height', 'Survived')<0x0A>facet.add_legend()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
[31mfacet ='scatterplot'<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.set_xlim([0, 9000])<0x0A>ax.set_ylim([0, 400])<0x0A><0x0A>ax.set_xlabel('')<0x0A>ax.set_ylabel('')<0x0A><0x0A>ax.set_ylim([0, 400])<0x0A><0x0A>ax.set_xlim([0, 9000])<0x0A>ax.set_ylim([0, 400])<0x0A><0x0A>fig.savefig('figs/fig1.png', dpi=300)
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 1915, 'data': 1915, 'y': 1915, 'data': 1915, 'y': 1915, 'data': 1915, 'y': 1915, 'data': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, 'y': 1915, '
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
[31mfacet = sns.FacetGrid(data, row = 'CO2 Emissions', size = 4)<0x0A>facet.map(plt.plot, 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'CO2 Emissions', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'Adjusted R Squared For Linear Regression Model
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
[31mfacet = sns.FacetGrid(df, height=7)<0x0A>facet.map(sns.lineplot, "Time", "Count")<0x0A>facet.add_legend()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'temporal'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 822, 'y': 622}, {'x': 822, 'y': 622}, {'x': 822, 'y': 622}, {'x': 822, 'y': 622}, {'x': 822, 'y': 622}, {'x': 822, 'y': 622}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
[31mfacet = sns.FacetGrid(data=survey_data, hue='Survey_Name', height=5)<0x0A>facet.map(plt.plot, 'Distance', 'Probability Density Density Function OYA Age Distribution In Population Survey')<0x0A>facet.add_legend()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
[31mimport pandas as pd<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>import numpy as np<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
[31mfacet = sns.FacetGrid(data=df, size=7, col="variable", )<0x0A>facet.map(plt.scatter, "Assessment Of Healthcare Utilization Rates By Demographic Groups", <0x0A>                       "Assessment Of Healthcare Utilization Rates By Demographic Groups", <0x0A>                       "Figure 1", <0x0A>                       "Figure 2", <0x0A>                       "Figure 3", <0x0A>                       "Figure 4", <0x0A>                       "Figure 5", <0x0A>                       "Figure 6", <0x0A>                       "Figure 7", <0x0A>                       "Figure 8", <0x0A>                       "Figure 9", <0x0A>                       "Figure 10", <0x0A>                       "Figure 11", <0x0A>                       "Figure 12", <0x0A>                       "Figure 13", <0x0A>                       "Figure 14", <0x0A>                       "Figure 15", <0x0A>                       "Figure 16", <0x0A>                       "Figure 17", <0x0A>                       "Figure 18", <0x0A>                       "Figure 19", <0x0A>                       "Figure 20", <0x0A>                       "Figure 21", <0x0A>                       "Figure 22", <0x0A>                       "Figure 23", <0x0A>                       "Figure 24", <0x0A>                       "Figure 25", <0x0A>                       "Figure 26", <0x0A>                       "Figure 27", <0x0A>                       "Figure 28", <0x0A>                       "Figure 29", <0x0A>                       "Figure 29", <0x0A>                       "Figure 30", <0x0A>                       "Figure 31", <0x0A>                       "Figure 31", <0x0A>                       "Figure 32", <0x0A>                       "Figure 33", <0x0A>                       "Figure 34", <0x0A>                       "Figure 35", <0x0A>                       "Figure 36", <0x0A>                       "Figure 37", <0x0A>                       "Figure 38", <0x0A>                       "Figure 39", <0x0A>                       "Figure 40", <0x0A>                       "Figure 41", <0x0A>                       "Figure 41", <0x0A>                       "Figure 42", <0x0A>                       "Figure 43", <0x0A>                       "Figure 44", <0x0A>                       "Figure 45", <0x0A>                       "Figure 46", <0x0A>                       "Figure 47", <0x0A>                       "Figure 49", <0x0A>                       "Figure 41", <0x0A>                       "Figure 47", <0x0A>                       "Figure
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
[31mpoverty_rate_plot(df, 'USA')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
[31mfacet = sns.FacetGrid(data=df, col='time', height=5)<0x0A>facet.map(plt.plot, 'Impact Of Temperature Variability On Crop Yield Statistics', 'Drennted Analysis Of Yearly Weather Temperature In Temperature Data', linewidth=2)<0x0A>facet.add_legend()<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
[31mfig = plt.figure(figsize=(10,10))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Epoch Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1100, 'y': 570, 'type': 'quantitative'}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.2 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.95 [35m|




















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [04:05<00:00, 12.25s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.set_title('Damage caused due to forest depletion in Belgium')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Coal (total $\Gas$ of GW)')<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.tick_params(bottom=False, top=False, left=False, right=False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='grey', linestyle='dotted', linewidth=1)<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='grey', linestyle='dotted', linewidth=1)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.tick_params(bottom=False, top=False, left=False, right=False)<0x0A>ax.tick_params(bottom=False, top=False, left=False)<0x0A><0x0A>ax.tick_params(bottom=False, top=False, left=False)<0x0A>ax.tick_params(bottom=False, top=False, left=False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a line plot of unemployment_df.plot(x='Year', y='Unemployed youth population of Colombia', figsize=(25,25), color='#008080', title='Total unemployed youth population of Colombia')<0x0A><0x0A># Set the x-axis label<0x0A>x_axis = 'Year'<0x0A><0x0A># Set the y-axis label<0x0A>y_axis = 'Unemployed youth population of Colombia'<0x0A><0x0A># Set the title of the graph<0x0A>plt.title('Total unemployed youth population of Colombia')<0x0A><0x0A># Set the y-axis label<0x0A>plt.xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>plt.ylabel('Unemployed youth % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31mfig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.plot(df_filtered.year, df_filtered.freshwater_withdrawals, linestyle='--', color='black')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Annual Freshwater withdrawals (%) of 1199mm
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_title('Arable land (hectares) in Seychelles', fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xlabel('Year', fontsize=20)<0x0A>ax.set_ylabel('Ave of land (hectares)', fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.plot(df['Year'], df['Arable land'], '-', color='black')<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_ylim(0, 500)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xlim(0, 1000)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_ylim(0, 500)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A>ax.set_ylim(0, 500)<0x0A><0x0A>ax.set_ylabel('Ave of land (hectares)', fontsize=20)<0x0A><0x0A>ax.set_xlabel('Year', fontsize=20)<0x0A><0x0A>ax.set_ylabel('Ave of land (hectares)', fontsize=20)<0x0A><0x0A>ax.set_ylim(0, 500)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(25,25))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of Days')<0x0A>ax.set_title('Time required to register a property in Sanos')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>ax.set_ylim(0, 150)<0x0A><0x0A>ax.set_xlim(0, 150)<0x0A><0x0A>ax.set_ylim(0, 150)<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_ylim(0, 150)<0x0A><0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>ax.set_ytick
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the cost of communications and computers with respect to service imports of Lebanon<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost_of_communications_and_computers_imports_of_Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_imports_of_Lebanon'])<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_imports_of_Lebanon'])<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_imports_of_Lebanon'])<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_imports_of
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar chart of net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.02)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the chart<0x0A>g.savefig("net_bilateral_aid_flow_Grenada_from_Development_Assistance_Committee.png", bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield'].sum().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='green', figsize=(20,20))<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='blue', figsize=(20,20))<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31m# Create a bar chart with mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka<0x0A><0x0A># Create a bar chart with mean poverty lines (as a percentage of the poverty lines) in Sri Lanka<0x0A><0x0A># Create a bar chart with mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka<0x0A><0x0A># Create a bar chart with mean poverty lines (as a percentage of the poverty lines) in Sri Lanka<0x0A><0x0A># Create a bar chart with mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka<0x0A><0x0A><0x0A># Create a bar chart with mean poverty lines (as a percentage of the poverty lines) in Sri Lanka<0x0A><0x0A><0x0A># Create a bar chart with mean poverty lines (as a percentage of the poverty lines) in Sri Lanka<0x0A><0x0A><0x0A><0x0A># Create a bar chart with mean poverty lines (as a percentage of the poverty lines) in Sri Lanka<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot = pd.DataFrame({'Year':['1959', '1960', '1961', '1962', '1963', '1964', '1965', '1966'], 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia'], 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as %
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m# Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the figure size<0x0A>plt.rcParams['figure.figsize'] = (25, 15)<0x0A><0x0A># Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the graph<0x0A><0x0A># Setting up the graph title<0x0A>plt.title('Number of procedures to build a warehouse in Congo (Republic)')<0x0A><0x0A># Setting up the graph title<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Number of procedures to build a warehouse in Congo (Republic)')<0x0A><0x0A># Setting up the graph title<0x0A>plt.gca().set_title('Number of procedures to build a warehouse in Congo (Republic)')<0x0A><0x0A># Setting up the graph title<0x0A>plt.gca().set_xlabel('Year')<0x0A><0x0A># Setting up the graph title<0x0A>plt.gca().set_ylabel('Number of procedures to build a warehouse in Congo (Republic)')<0x0A><0x0A># Setting up the graph title<0x0A>plt.gca().set_ylim(0, 1)<0x0A><0x0A># Setting up the graph title<0x0A>plt.gca().set_xlim(0, 1)<0x0A><0x0A># Setting up the graph title<0x0A>plt.gca().set_ylim(0, 1)<0x0A><0x0A># Setting up the graph title<0x0A>plt.gca().set_ylim(0, 1)<0x0A><0x0A># Setting up the graph title<0x0A>plt.gca().set_xlabel('Year')<0x0A><0x0A># Setting up the graph title<0x0A>plt.gca().set_ylabel('Number of procedures to build a warehouse in Congo (Republic)')<0x0A><0x0A># Setting up the graph title<0x0A>plt.gca().set_ylabel('Number of procedures to build a warehouse in Congo (Republic)')<0x0A><0x0A># Setting up the graph title<0x0A>plt.gca().set_ylabel('Number of procedures to build a warehouse in Congo (Republic)')<0x0A><0x0A># Setting up the graph title<0x0A>plt.gca().set_ylabel('Number of procedures to build a warehouse in Congo (Republic)')<0x0A><0x0A># Setting up the graph title<0x0A>plt.gca().set_xlabel('Year')<0x0A><0x0A># Setting up the graph title<0x0A>plt.gca().set_ylabel('Number of procedures to build a warehouse in Congo (Republic)')<0x0A><0x0A># Setting up the graph title<0x0A>plt.gca().set_ylabel('Number of procedures to build a warehouse in Congo (Republic)')<0x0A><0x0A># Setting up the graph title<0x0A>pl
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.scatter(df['Year'], df['Production in production'], color='#000000')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in production')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A>ax.grid(True)<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Production in production'], rotation=90)<0x0A><0x0A>ax.set_ylim(0, 12000)<0x0A><0x0A>ax.set_xlim(0, 12000)<0x0A>ax.set_ylim(0, 12000)<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_ylabel('Production in production')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in production')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot the distance to frontier score (on scale of 100) of Armenia<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the distance to frontier score (on scale of 100) of Armenia<0x0A><0x0A>ax.scatter(df['Year'], df['Distance to Frontier score (on scale of 100) of Armenia'])<0x0A><0x0A># Set the title<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A># Set the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Score (intranet for redevelopment of redevelopment)')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Score (intranet for redevelopment of redevelopment of redevelopment)')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Score (intranet for redevelopment of redevelopment of redevelopment)')<0x0A><0x0A># Set the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the title<0x0A>ax.set_ylabel('Score (intranet for redevelopment of redevelopment of redevelopment)')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Score (intranet for redevelopment of redevelopment of redevelopment)')<0x0A><0x0A># Set the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the title<0x0A>ax.set_ylabel('Score (intranet for redevelopment of redevelopment of redevelopment)')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Score (intranet for redevelopment of redevelopment of redevelopment)')<0x0A><0x0A># Set the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Score (intranet for redevelopment of redevelopment of redevelopment)')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Score (intranet for redevelopment of redevelopment
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m# Plot scatter plot<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Set up the matplotlib axis labels<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_title('Percentage of babies born with low-Birthweight in Sri Lanka')<0x0A><0x0A># Plot the scatter plot<0x0A>sns.catplot(x='Year', y='SrLanka', data=df, kind='point', color='purple', height=15, aspect=1.5)<0x0A><0x0A># Add a title<0x0A>ax.set_title('Percentage of babies born with low-Birthweight in Sri Lanka')<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a title<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_title('Percentage of babies born with low-Birthweight in Sri Lanka')<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Display the plot<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m# Plotting the percentage of children ages 12-23 months who received DPT vaccinations in Denmark<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.scatter(x=df_children_DPT_vaccinations.Year, y=df_children_DPT_vaccinations.DPT_vaccinations, color='green')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of children who received DPT vaccinations')<0x0A>ax.set_title('Percentage of children ages 12-23 months who received DPT vaccinations in Denmark')<0x0A>ax.set_xticklabels(df_children_DPT_vaccinations.Year, rotation='vertical')<0x0A>ax.set_yticklabels(df_children_DPT_vaccinations.Year, rotation='vertical')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m# Create a scatter plot of Percentage of households in Russian Federation that uses iodized salt<0x0A>sns.catplot(x="Year", y="Percentage of households in Russian Federation that uses iodized salt", data=df, height=15, aspect=1.5, palette="muted")<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.scatter(df_UK['Year'], df_UK['Consumption of/and capital (age % of CWD)'])<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of/and capital (age % of CWD)')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m# Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A>ggplot(df, aes(x=Year, y=Cost, color=Year)) +<0x0A>    geom_point() +<0x0A>    labs(title="Damage caused due to forest depletion in South Asia", x="Year", y="Cost (per 1000)") +<0x0A>    scale_x_continuous(limits=c(0, 10)) +<0x0A>    scale_y_continuous(limits=c(0, 10)) +<0x0A>    labs(x="Year", y="Cost (per 1000)", title="Damage caused due to forest depletion in South Asia", x="Year") +<0x0A>    scale_color_discrete(name="Damage caused due to forest depletion in South Asia", x="Year") +<0x0A>    scale_fill_discrete(name="Damage caused due to forest depletion in South Asia", x="Year") +<0x0A>    scale_color_discrete(name="Damage caused due to forest depletion in South Asia", x="Year") +<0x0A>    scale_fill_discrete(name="Damage caused due to forest depletion in South Asia", x="Year") +<0x0A>    scale_fill_discrete(name="Damage caused due to forest depletion in South Asia", x="Year") +<0x0A>    scale_fill_discrete(name="Damage caused due to forest depletion in South Asia", x="Year") +<0x0A>    scale_fill_discrete(name="Damage caused due to forest depletion in South Asia", x="Year") +<0x0A>    scale_fill_discrete(name="Damage caused due to forest depletion in South Asia", x="Year") +<0x0A>    scale_fill_discrete(name="Damage caused due to forest depletion in South Asia", x="Year") +<0x0A>    scale_fill_discrete(name="Damage caused due to forest depletion in South Asia", x="Year") +<0x0A>    scale_fill_discrete(name="Damage caused due to forest depletion in South Asia", x="Year") +<0x0A>    scale_fill_discrete(name="Damage caused due to forest depletion in South Asia", x="Year") +<0x0A>    scale_fill_discrete(name="Damage caused due to forest depletion in South Asia", x="Year") +<0x0A>    scale_fill_discrete(name="Damage caused due to forest depletion in South Asia", x="Year") +<0x0A>    scale_fill_discrete(name="Damage caused due to forest depletion in South Asia", x="Year") +<0x0A>    scale_fill_discrete(name="Damage caused due to forest depletion in South Asia", x
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m# Create a figure with two scatter plots, one for each year and one for Croatia.<0x0A>fig, ax = plt.subplots(figsize=(20,15))<0x0A><0x0A># Create a scatter plot of the dataframe.<0x0A>scatter_chart = df_cleaned.plot(kind='scatter', x='Year', y='Strength rating (12 Â± 10000)', color='green', ax=ax)<0x0A>scatter_chart.set_xlabel('Year')<0x0A>scatter_chart.set_ylabel('Strength rating (12 Â± 10000)')<0x0A>scatter_chart.set_title('Rating regarding strength of legal rights index in Croatia')<0x0A><0x0A># Add the legend.<0x0A>scatter_chart.legend(title='Rating regarding strength of legal rights index in Croatia', loc='upper left', bbox_to_anchor=(1, 1))<0x0A><0x0A># Save the figure.<0x0A>fig.savefig('Croatia_Rating_Report.png')<0x0A><0x0A># Show the figure.<0x0A>plt.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 2 [32m[1m | Loss :[39m[22m 3.2321150302886963


















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:50<00:00,  5.54s/it]
  0%|          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m10.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.71 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.94 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
[31mModeAge = ['Mode Age', 'Alcohol Consumption', 'Alcohol Consumption']<0x0A>x = ['Mode Age', 'Alcohol Consumption']<0x0A>y = ['Alcohol Consumption']<0x0A>ggplot(data=df, aes(x=ModeAge, y=AlcoholConsumption, group=ModeAge)) +<0x0A>    geom_point() + facet_wrap(~ModeAge)
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 699}, {'x': 'Dog', 'y': 699}, {'x': 'Male', 'y': 4199}, {'x': 'Rock', 'y': 699}, {'x': 'Sedan', 'y': 4199}, {'x': 'USA', 'y': 4199}, {'x': 'Rock', 'y': 699}, {'x': 'USA', 'y': 699}, {'x': 'Dog', 'y': 699}, {'x': 'Male', 'y': 699}, {'x': 'Dog', 'y': 699}, {'x': 'Male', 'y': 699}, {'x': 'Rock', 'y': 699}, {'x': 'Sedan', 'y': 4199}, {'x': 'USA', 'y': 699}, {'x': 'Sedan', 'y': 699}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Dog', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 5000}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.91}, {'x': 'Dog', 'y': 121.91}, {'x': 'Nike', 'y': 191.91}, {'x': 'USA', 'y': 23.75}, {'x': 'USA', 'y': 23.75}, {'x': 'Nike', 'y': 191.91}, {'x': 'Nike', 'y': 191.91}, {'x': 'Nike', 'y': 191.91}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 152.5}, {'x': 'USA', 'y': 152.5}, {'x': 'Red', 'y': 152.5}, {'x': 'USA', 'y': 152.5}, {'x': 'Red', 'y': 152.5}, {'x': 'USA', 'y': 152.5}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 8.37}, {'x': 'USA', 'y': 8.37}, {'x': 'Dog', 'y': 8.37}, {'x': 'Nike', 'y': 12.12}, {'x': 'Dog', 'y': 8.37}, {'x': 'Nike', 'y': 12.12}, {'x': 'Red', 'y': 12.12}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255, 'y': 60.2}, {'x': 55, 'y': 60.2}, {'x': 55, 'y': 60.2}, {'x': 155, 'y': 59.2}, {'x': 155, 'y': 60.2}, {'x': 155, 'y': 60.2}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4, 'y': 222.25}, {'x': 8, 'y': 191.25}, {'x': 11, 'y': 191.25}, {'x': 12, 'y': 222.25}, {'x': 13, 'y': 222.25}, {'x': 14, 'y': 222.25}, {'x': 15, 'y': 222.25}, {'x': 17, 'y': 222.25}, {'x': 18, 'y': 222.25}, {'x': 19, 'y': 222.25}, {'x': 19, 'y': 222.25}, {'x': 18, 'y': 222.25}, {'x': 19, 'y': 222.25}, {'x': 19, 'y': 222.25}, {'x': 19, 'y': 222.25}, {'x': 19, 'y': 222.25}, {'x': 19, 'y': 222.25}, {'x': 19, 'y': 222.25}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 191.99}, {'x': 1920, 'y': 192.99}, {'x': 1925, 'y': 192.99}, {'x': 1930, 'y': 34.3}, {'x': 1930, 'y': 34.3}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 80.2}, {'x': 1818, 'y': 72.2}, {'x': 1822, 'y': 12.2}, {'x': 1822, 'y': 72.2}, {'x': 1822, 'y': 72.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 255.2}, {'x': 1870, 'y': 106.2}, {'x': 1880, 'y': 255.2}, {'x': 1880, 'y': 255.2}, {'x': 1880, 'y': 255.2}, {'x': 1880, 'y': 255.2}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 822, 'y': 622}, {'x': 822, 'y': 622}, {'x': 822, 'y': 622}, {'x': 822, 'y': 622}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function OYAg Disirition In Population In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1810, 'y': 600.0}, {'x': 1820, 'y': 120.0}, {'x': 1830, 'y': 120.0}, {'x': 1840, 'y': 300.0}, {'x': 1850, 'y': 300.0}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'quantitative'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2870}, {'x': 1920, 'y': 2870}, {'x': 1920, 'y': 2870}, {'x': 1920, 'y': 2870}, {'x': 1920, 'y': 2870}, {'x': 1920, 'y': 2870}, {'x': 1920, 'y': 2870}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1500, 'y': 380.3}, {'x': 1500, 'y': 380.3}, {'x': 1500, 'y': 380.3}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2950}, {'x': 'USA', 'y': 2950}, {'x': 'Dog', 'y': 895}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2950}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentled Analysis Of Yearly Weather In Normalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4266}, {'x': 1806, 'y': 3826}, {'x': 1808, 'y': 3626}, {'x': 1810, 'y': 5826}, {'x': 1812, 'y': 5826}, {'x': 1813, 'y': 5826}, {'x': 1814, 'y': 5826}, {'x': 1812, 'y': 5826}, {'x': 1814, 'y': 5826}, {'x': 1814, 'y': 5826}, {'x': 1813, 'y': 5826}, {'x': 1814, 'y': 5826}, {'x': 1814, 'y': 5826}, {'x': 1814, 'y': 5826}, {'x': 1814, 'y': 5826}, {'x': 1814, 'y': 5826}, {'x': 1814, 'y': 5826}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
[31mfacet = sns.FacetGrid(data=df, size=12)<0x0A>facet.map(plt.plot, 'Height', 'Weight')<0x0A>facet.add_legend()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Epoch Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1100, 'y': 570, 'type': 'quantitative'}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.71 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.94 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|



















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [03:48<00:00, 11.41s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.set_title('Damage caused due to forest depletion in Belgium')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Coal (total $\Gas$ of GW)')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a line plot of unemployment_df.plot(x='Year', y='Unemployed youth population of Colombia', kind='line', figsize=(25, 25), color='#008080')<0x0A><0x0A># Set the x-axis label<0x0A>x_axis = 'Year'<0x0A><0x0A># Set the y-axis label<0x0A>y_axis = 'Unemployed youth population of Colombia'<0x0A><0x0A># Set the title of the graph<0x0A>plt.title('Total unemployed youth population of Colombia')<0x0A><0x0A># Set the y-axis label<0x0A>plt.ylabel('Unemployed youth % of total labor force were %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %em
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31maux1 = df4[(df4['Country']=='Kazakhstan') & (df4['Country_Paid']=='Kazakhstan')]<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.title('Annual freshwater withdrawals (%) in Kazakhstan')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Annual freshwater withdrawals (%) of withdrawal (% of Ihnenmonial Resources)')<0x0A>plt.grid(True)<0x0A>plt.xticks(rotation=90)<0x0A>plt.plot(aux1['Year'], aux1['Annual freshwater withdrawals'], '--', color='black')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_title('Arable land (hectares) in Seychelles', fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xlabel('Year', fontsize=20)<0x0A>ax.set_ylabel('Ave of land (hectares)', fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.plot(df['Year'], df['Arable land'], '-', color='black')<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A>ax.set_yticklabels(df['Arable land'], rotation=90)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption in Brazil as a percentage of production'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mreg_sanos = pd.DataFrame(reg_sanos.groupby(['Year'])['Time required to register a property in Sanos'].sum())<0x0A>reg_sanos.reset_index(inplace=True)<0x0A>reg_sanos.columns = reg_sanos.columns.droplevel(0)<0x0A>reg_sanos.columns = reg_sanos.columns.droplevel(0)<0x0A><0x0A>reg_sanos.plot(kind='line', x='Year', y='Time required to register a property in Sanos', title='Time required to register a property in Sanos', color='black', figsize=(25, 25))<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the cost of communications and computers with respect to service imports of Lebanon<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost Of Communications and computers with respect to service imports of Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications imports (Imports)')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost Of communications and computers with respect to service imports of Lebanon'], rotation=90)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar chart of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=20)<0x0A>g.set_xlabels("Year", fontsize=15)<0x0A>g.set_xticklabels(rotation=90)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield'].sum().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='black')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_count = pd.DataFrame(<0x0A>    [<0x0A>        df_congo_building_republic["Year"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Year"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig = plt.figure(figsize=(20,15))<0x0A>ax = fig.add_subplot(111)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in number texts')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A>ax.set_ylim(0, 11000)<0x0A>ax.set_xticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A><0x0A>ax.scatter(df['Year'], df['Production in number texts'], color='#000000')<0x0A>ax.set_xticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Production in number texts'], color='#000000')<0x0A>ax.set_ylim(0, 11000)<0x0A>ax.set_ylabel('Production in number texts')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in number texts')<0x0A>ax.set_ylim(0, 11000)<0x0A>ax.grid(True)<0x0A><0x0A>ax.set_xlim(0, 11000)<0x0A>ax.set_ylim(0, 11000)<0x0A>ax.set_ylabel('Production in number texts')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in number texts')<0x0A>ax.set_ylabel('Production in number texts')<0x0A>ax.set_ylabel('Production in number texts')<0x0A>ax.set_xticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot the graph<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the graph<0x0A>ax.scatter(df['Year'], df['Score ((thousands) of Romainong)'])<0x0A><0x0A># Plot the graph<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (thousands) of Romainong)')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A># Plot the graph<0x0A>ax.scatter(df['Year'], df['Distance to Frontier score (on scale of 100) of Armenia'])<0x0A><0x0A># Plot the graph<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (thousands to Romainong)')<0x0A><0x0A># Plot the graph<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A># Plot the graph<0x0A>ax.set_xticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m# Plot scatter plot<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Set up the matplotlib axis labels<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_title('Percentage of babies born with low-Birthweight in Sri Lanka')<0x0A><0x0A># Plot the scatter plot<0x0A>sns.catplot(x='Year', y='SrLanka', data=df, kind='point', color='purple', height=15, aspect=1.5)<0x0A><0x0A># Add a title<0x0A>ax.set_title('Percentage of babies born with low-Birthweight in Sri Lanka')<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a title<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_title('Percentage of babies born with low-Birthweight in Sri Lanka')<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Display the plot<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m# Plotting the percentage of children ages 12-23 months who received DPT vaccinations in Denmark<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.set_title('Percentage of children ages 12-23 months who received DPT vaccinations in Denmark')<0x0A><0x0A>ax.set_ylabel('% of children who received DPT vaccines')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A>ax.set_xticklabels(ax.get_xticklabels(), rotation=90)<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.set_facecolor('white')<0x0A>ax.set_facecolor('white')<0x0A><0x0A>ax.set_facecolor('white')<0x0A><0x0A>ax.set_ylabel('% of children who received DPT vaccinations')<0x0A><0x0A>ax.set_xlabel('Year')<0x0A><0x0A>ax.set_ylabel('% of children who received DPT vaccinations')<0x0A><0x0A>ax.set_xlabel('Year')<0x0A><0x0A>ax.set_ylabel('% of children who received DPT vaccinations')<0x0A><0x0A>ax.set_xticklabels(ax.get_xticklabels(), rotation=90)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m# Create a scatter plot of Percentage of households in Russian Federation that uses iodized salt<0x0A>sns.catplot(x="Year", y="Percentage of households in Russian Federation that uses iodized salt", data=df, height=15, aspect=1.5, palette="muted")<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.scatter(df_UK['Year'], df_UK['Consumption of/and capital (age % of CWD)'])<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of/and capital (age % of CWD)')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m# Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A>ggplot(df, aes(x=Year, y=Cost_per_GW)) +<0x0A>    geom_point() +<0x0A>    labs(title="Damage caused due to forest depletion in South Asia", x="Year", y="Cost (per % of GW)") +<0x0A>    scale_x_discrete(labels=c("Year", "Cost (per % of GW)"))
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m# Create a scatter plot of the ratings of Croatia<0x0A>fig, ax = plt.subplots(figsize=(20,15))<0x0A><0x0A># Create a scatter plot of the ratings of Croatia<0x0A>sns.stripplot(data=df, x='Year', y='Strength rating (12+ %0.0f)', color='green', ax=ax)<0x0A><0x0A># Add a title<0x0A>ax.set_title('Rating regarding strength of legal rights index in Croatia')<0x0A><0x0A># Add a grid<0x0A>ax.grid(False)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a grid<0x0A>ax.grid(False)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a grid<0x0A>ax.grid(False)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|          | 0/20 [00:00<?, ?it/s]



















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:54<00:00,  5.71s/it]
  0%|          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.95 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2000, 'y': 2100}, {'x': 2000, 'y': 2100}, {'x': 2000, 'y': 2100}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7000}, {'x': 'Dog', 'y': 6000}, {'x': 'Male', 'y': 4100}, {'x': 'Rock', 'y': 7000}, {'x': 'Sedan', 'y': 4100}, {'x': 'USA', 'y': 4100}, {'x': 'Rock', 'y': 7000}, {'x': 'Sedan', 'y': 4100}, {'x': 'USA', 'y': 4100}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Dog', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1000}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'Dog', 'y': 121.11}, {'x': 'Nike', 'y': 191.11}, {'x': 'Dog', 'y': 121.11}, {'x': 'Nike', 'y': 191.11}, {'x': 'Nike', 'y': 191.11}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 152.52}, {'x': 'USA', 'y': 152.52}, {'x': 'Red', 'y': 152.52}, {'x': 'USA', 'y': 152.52}, {'x': 'Red', 'y': 152.52}, {'x': 'USA', 'y': 152.52}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.17}, {'x': 'USA', 'y': 8.37}, {'x': 'Dog', 'y': 8.37}, {'x': 'Nike', 'y': 12.17}, {'x': 'Apple', 'y': 3.67}, {'x': 'Dog', 'y': 8.37}, {'x': 'Nike', 'y': 12.17}, {'x': 'Red', 'y': 12.17}, {'x': 'Red', 'y': 12.17}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255, 'y': 60.2}, {'x': 57.2, 'y': 60.2}, {'x': 57.2, 'y': 60.2}, {'x': 57.2, 'y': 60.2}, {'x': 57.2, 'y': 60.2}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6, 'y': 111.11}, {'x': 6, 'y': 111.11}, {'x': 6, 'y': 111.11}, {'x': 6, 'y': 111.11}, {'x': 6, 'y': 111.11}, {'x': 6, 'y': 111.11}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 191.99}, {'x': 1920, 'y': 192.99}, {'x': 1925, 'y': 192.99}, {'x': 1930, 'y': 34.3}, {'x': 1930, 'y': 34.3}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 29.06}, {'x': 1816, 'y': 28.06}, {'x': 1818, 'y': 70.06}, {'x': 1820, 'y': 18.06}, {'x': 1822, 'y': 18.06}, {'x': 1822, 'y': 28.06}, {'x': 1822, 'y': 28.06}, {'x': 1822, 'y': 28.06}, {'x': 1822, 'y': 28.06}, {'x': 1822, 'y': 28.06}, {'x': 1822, 'y': 28.06}, {'x': 1822, 'y': 28.06}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.3}, {'x': 1870, 'y': 108.6}, {'x': 1880, 'y': 263.3}, {'x': 1880, 'y': 263.3}, {'x': 1880, 'y': 263.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1810, 'y': 600.01}, {'x': 1820, 'y': 126.01}, {'x': 1830, 'y': 126.01}, {'x': 1840, 'y': 106.01}, {'x': 1850, 'y': 310.01}, {'x': 1860, 'y': 146.01}, {'x': 1860, 'y': 146.01}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 11000, 'y': 61.56}, {'x': 11000, 'y': 61.56}, {'x': 11000, 'y': 61.56}, {'x': 11000, 'y': 61.56}, {'x': 11000, 'y': 61.56}, {'x': 11000, 'y': 61.56}, {'x': 11000, 'y': 61.56}, {'x': 11000, 'y': 61.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 111.11, 'y': 38.11}, {'x': 111.11, 'y': 38.11}, {'x': 111.11, 'y': 38.11}, {'x': 111.11, 'y': 38.11}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentled Analysis Of Yearly Weather In Normalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1806, 'y': 3822}, {'x': 1808, 'y': 3626}, {'x': 1812, 'y': 4822}, {'x': 1813, 'y': 5822}, {'x': 1814, 'y': 5822}, {'x': 1814, 'y': 5822}, {'x': 1814, 'y': 5822}, {'x': 1813, 'y': 4266}, {'x': 1813, 'y': 5822}, {'x': 1814, 'y': 5822}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Expon Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1100, 'y': 570.27}, {'x': 1100, 'y': 520.27}, {'x': 1100, 'y': 570.27}, {'x': 1100, 'y': 520.27}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.95 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|




















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [04:10<00:00, 12.53s/it]
[35m|[39m JSON to Vega conversion error rate: [31m90.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.86 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a line plot of Unemployed youth population of Colombia<0x0A><0x0A># Create a title, x label, and y label for the chart<0x0A><0x0A># Create a title, x label, and y label for the chart<0x0A><0x0A># Create a title, x label, and y label for the chart<0x0A><0x0A><0x0A># Create a title, x label, and y label for the chart<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual Freshwater Withdrawals (% of Ihilnommal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.31}, {'x': 'field', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_title('Arable land (hectares) in Seychelles', fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xlabel('Year', fontsize=20)<0x0A>ax.set_ylabel('Ave of land (hectares)', fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.plot(df['Year'], df['Arable land'], '-', color='black')<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A>#
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption in Brazil as a percentage of production'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(25, 25))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of Days')<0x0A>ax.set_title('Time required to register a property in Sanos')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the cost of communications and computers with respect to service imports of Lebanon<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.plot(cost_comm_imports_df.Year, cost_comm_imports_df.Cost_of_comm_imports_imports_by_year, '-', color='blue', label='Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xlabel('Year', fontsize=16)<0x0A>ax.set_ylabel('Cost Of communications imports (Imports)', fontsize=16)<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon', fontsize=16)<0x0A>ax.tick_params(axis='x', labelsize=16)<0x0A>ax.tick_params(axis='y', labelsize=16)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=16)<0x0A>ax.tick_params(axis='y', labelsize=16)<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the bar graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar = sns.barplot(x="Year", y="AID_flow_from_development_assistance_committee", data=g_bar, palette="rocket")<0x0A>g_bar.set_xticklabels(g_bar.get_xticklabels(), rotation=90)<0x0A>g_bar.set_title("Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.set_yticklabels(g_bar.get_yticklabels(), rotation=0)<0x0A>g_bar.set_xlabel("Year")<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.grid(axis='x', alpha=0.75)<0x0A>g_bar.set_yticklabels(g_bar.get_yticklabels(), rotation=0)<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.set_xlabel("Year")<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A>g_bar.set_xticklabels(g_bar.get_xticklabels(), rotation=0)<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.set_ylim(0, 1200000)<0x0A>g_bar.set_xlim(0, 1200000)<0x0A>g_bar.set_ylim(0, 1200000)<0x0A>g_bar.set_xticklabels(g_bar.get_xticklabels(), rotation=0)<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.bar_label(g_bar.containers[0], fontsize=15)<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A>g_bar.set_xlabel("Year")<0x0A>g_bar.set_title("Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.bar_label(g_bar.containers[0], fontsize=15)<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A>g_bar.set_xlabel("Year")<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.bar_label(g_bar.containers[0], fontsize=15)<0x0A>
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='black')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar',
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_count = pd.DataFrame(<0x0A>    [<0x0A>        df_congo_building_republic["Year"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Year"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig = plt.figure(figsize=(20,15))<0x0A>ax = fig.add_subplot(111)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in number texts')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A>ax.set_ylim(0, 11000)<0x0A>ax.set_xticklabels(['ais', 'ais', 'ais', 'ais', 'ais'], rotation=90)<0x0A>ax.grid(True)<0x0A><0x0A>ax.scatter(df['year'], df['production'], color='#000000')<0x0A>ax.set_xticklabels(['ais', 'ais', 'ais', 'ais'], rotation=90)<0x0A>ax.set_yticklabels(['ais', 'ais', 'ais'], rotation=90)<0x0A>ax.set_ylabel('Production in number texts')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in number texts')<0x0A>ax.set_ylim(0, 11000)<0x0A>ax.set_yticklabels(['ais', 'ais'], rotation=90)<0x0A>ax.set_yticklabels(['ais', 'ais'], rotation=90)<0x0A>ax.set_yticklabels(['ais', 'ais'], rotation=90)<0x0A>ax.set_yticklabels(['ais', 'ais'], rotation=90)<0x0A>ax.set_yticklabels(['ais', 'ais'], rotation=90)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in number texts')<0x0A>ax.set_yticklabels(['ais', 'ais'], rotation=90)<0x0A>ax.set_yticklabels(['ais', 'ais'], rotation=90)<0x0A>ax.set_yticklabels(['ais', 'ais'], rotation=90)<0x0A>ax.set_yticklabels(['ais', 'ais'], rotation=90)<0x0A>ax.set_yticklabels(['ais', 'ais'], rotation=90)<0x0A>ax.set_yticklabels(['ais', 'ais'], rotation=90)<0x0A>ax.set_yticklabels(['ais', 'ais'], rotation=90)<0x0A>ax.set_yticklabels(['ais', 'ais'], rotation=90)<0x0A>ax.set_yticklabels(['ais', 'ais'], rotation
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot the graph<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the graph<0x0A>ax.scatter(df['Year'], df['Score ((thousands) of Romainong)'])<0x0A><0x0A># Plot the graph<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (thousands) of Romainong)')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A># Plot the graph<0x0A>ax.scatter(df['Year'], df['Distance to Frontier score (on scale of 100) of Armenia'])<0x0A><0x0A># Plot the graph<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (thousands to Romainong)')<0x0A><0x0A># Plot the graph<0x0A>ax.set_ylim(0, 1000)<0x0A><0x0A># Plot the graph<0x0A>ax.set_xticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m# Plot the percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>g = sns.catplot(x="Year", y="Survived", data=df, height=15, aspect=1.5, palette="mako")<0x0A>g.set_axis_labels("Year", "Survived")<0x0A>g.set_title("Percentage of babies born with low-Birthweight in Sri Lanka")<0x0A>g.set_xticklabels(rotation=90)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("Images/Percentage of babies born with low-Birthweight in Sri Lanka.png")<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 13.6}, {'x': 'Year', 'y': 13.6}, {'x': 'Year', 'y': 13.6}, {'x': 'Year', 'y': 13.6}, {'x': 'Year', 'y': 13.6}, {'x': 'Year', 'y': 13.6}, {'x': 'Year', 'y': 13.6}, {'x': 'Year', 'y': 13.6}, {'x': 'Year', 'y': 13.6}, {'x': 'Year', 'y': 13.6}, {'x': 'Year', 'y': 13.6}, {'x': 'Year', 'y': 13.6}, {'x': 'Year', 'y': 13.6}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(20,20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of/and capital (set % of CWD)', figsize=(25,25), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of/and capital (set % of CWD)')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m# Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m# Create a scatterplot with the ratings of Croatia<0x0A>fig, ax = plt.subplots(figsize=(20,15))<0x0A><0x0A># Create a scatterplot with the ratings of Croatia<0x0A>scatter_plot = df.plot(kind='scatter', x='Year', y='Strength rating (12 Â± 10000)', color='green', ax=ax)<0x0A><0x0A># Add a title<0x0A>scatter_plot.set_title('Rating regarding strength of legal rights index in Croatia')<0x0A><0x0A># Add a legend<0x0A>scatter_plot.legend(loc='upper left', bbox_to_anchor=(1, 1), ncol=1)<0x0A><0x0A># Add a grid<0x0A>scatter_plot.grid(True)<0x0A><0x0A># Save the figure<0x0A>scatter_plot.savefig('Croatia_Rating_Report.png')<0x0A><0x0A># Show the figure<0x0A>plt.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.86 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 4 [32m[1m | Loss :[39m[22m 3.170153856277466



















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:52<00:00,  5.63s/it]
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
  0%|          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2000, 'y': 2100}, {'x': 2000, 'y': 4100}, {'x': 2000, 'y': 2100}, {'x': 2000, 'y': 2100}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7000}, {'x': 'Dog', 'y': 6300}, {'x': 'Nike', 'y': 4170}, {'x': 'Apple', 'y': 6300}, {'x': 'Male', 'y': 6300}, {'x': 'Rock', 'y': 6300}, {'x': 'Sedan', 'y': 4170}, {'x': 'USA', 'y': 4170}, {'x': 'Rock', 'y': 6300}, {'x': 'Sedan', 'y': 4170}, {'x': 'USA', 'y': 4170}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1000}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 47.11}, {'x': 'Nike', 'y': 47.11}, {'x': 'Rock', 'y': 23.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 47.11}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 132.52}, {'x': 'USA', 'y': 152.52}, {'x': 'Red', 'y': 152.52}, {'x': 'USA', 'y': 152.52}, {'x': 'Red', 'y': 132.52}, {'x': 'USA', 'y': 152.52}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.17}, {'x': 'USA', 'y': 8.39}, {'x': 'Dog', 'y': 8.39}, {'x': 'Nike', 'y': 12.17}, {'x': 'Apple', 'y': 3.67}, {'x': 'Nike', 'y': 12.17}, {'x': 'Red', 'y': 12.17}, {'x': 'Apple', 'y': 3.67}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255, 'y': 60.2}, {'x': 57.2, 'y': 60.2}, {'x': 57.2, 'y': 60.2}, {'x': 57.2, 'y': 60.2}, {'x': 255, 'y': 13.3}, {'x': 57.2, 'y': 60.2}, {'x': 57.2, 'y': 60.2}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6, 'y': 111.11}, {'x': 22, 'y': 365.61}, {'x': 21, 'y': 365.61}, {'x': 22, 'y': 111.11}, {'x': 21, 'y': 365.61}, {'x': 21, 'y': 365.61}, {'x': 21, 'y': 365.61}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200.00}, {'x': 1915, 'y': 18.00}, {'x': 1920, 'y': 18.00}, {'x': 1925, 'y': 18.00}, {'x': 1925, 'y': 18.00}, {'x': 1925, 'y': 34.00}, {'x': 1925, 'y': 18.00}, {'x': 1925, 'y': 18.00}, {'x': 1925, 'y': 18.00}, {'x': 1925, 'y': 18.00}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 28.62}, {'x': 1816, 'y': 28.62}, {'x': 1818, 'y': 70.62}, {'x': 1820, 'y': 18.62}, {'x': 1822, 'y': 80.62}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.1}, {'x': 1868, 'y': 253.1}, {'x': 1870, 'y': 108.1}, {'x': 1878, 'y': 253.1}, {'x': 1880, 'y': 268.1}, {'x': 1883, 'y': 268.1}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}, {'x': 788, 'y': 63.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1810, 'y': 600.01}, {'x': 1820, 'y': 128.01}, {'x': 1830, 'y': 128.01}, {'x': 1840, 'y': 108.01}, {'x': 1850, 'y': 310.01}, {'x': 1860, 'y': 148.01}, {'x': 1860, 'y': 148.01}, {'x': 1870, 'y': 148.01}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 11000, 'y': 55.000}, {'x': 11000, 'y': 61.000}, {'x': 11000, 'y': 55.000}, {'x': 11000, 'y': 61.000}, {'x': 11000, 'y': 55.000}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2880}, {'x': 1920, 'y': 2880}, {'x': 1920, 'y': 2880}, {'x': 1920, 'y': 2880}, {'x': 1920, 'y': 2880}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 111.81, 'y': 38.61}, {'x': 111.81, 'y': 38.61}, {'x': 111.81, 'y': 38.61}, {'x': 111.81, 'y': 38.61}, {'x': 111.81, 'y': 38.61}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentled Analysis Of Yearly Weather In Normalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1806, 'y': 3818}, {'x': 1808, 'y': 3626}, {'x': 1812, 'y': 4886}, {'x': 1813, 'y': 5848}, {'x': 1814, 'y': 5848}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 2000}, {'x': 1840, 'y': 3400}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Exponential Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1100, 'y': 560.01}, {'x': 1100, 'y': 520.01}, {'x': 1100, 'y': 520.01}, {'x': 1100, 'y': 520.01}, {'x': 1100, 'y': 520.01}, {'x': 1100, 'y': 520.01}, {'x': 1100, 'y': 520.01}, {'x': 1100, 'y': 520.01}, {'x': 1100, 'y': 520.01}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|



















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [04:11<00:00, 12.57s/it]
[35m|[39m JSON to Vega conversion error rate: [31m95.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.87 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spin
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a line plot of Unemployed youth population of Colombia<0x0A><0x0A># Create a title, x label, and y label for the chart<0x0A><0x0A># Create a title, x label, and y label for the chart<0x0A><0x0A># Create a title, x label, and y label for the chart<0x0A><0x0A><0x0A># Create a title, x label, and y label for the chart<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) of (hittermedians from 180000) to 190000}, {'mark': 'line', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Ave of land (hectares)')<0x0A>ax.set_title('Arable land (hectares) in Seychelles')<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.plot(df['Year'], df['Arable land (hectares)'], '-', color='black')<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption in Brazil as a percentage of production'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the cost of communications and computers with respect to service imports of Lebanon<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.plot(cost_comm_imports_df.Year, cost_comm_imports_df.Cost_of_comm_imports_imports_by_year, '-', color='blue', label='Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xlabel('Year', fontsize=16)<0x0A>ax.set_ylabel('Cost Of communications imports (Imports)', fontsize=16)<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon', fontsize=16)<0x0A>ax.tick_params(axis='x', labelsize=16)<0x0A>ax.tick_params(axis='y', labelsize=16)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=16)<0x0A>ax.tick_params(axis='y', labelsize=16)<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the bar graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar = sns.barplot(x="Year", y="AID_flow_from_development_assistance_committee", data=g_bar, palette="rocket")<0x0A>g_bar.set_xticklabels(g_bar.get_xticklabels(), rotation=90)<0x0A>g_bar.set_title("Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.set_yticklabels(g_bar.get_yticklabels(), rotation=0)<0x0A>g_bar.set_xlabel("Year")<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.grid(False)<0x0A>g_bar.set_xticklabels(g_bar.get_xticklabels(), rotation=90)<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A>g_bar.set_xlabel("Year")<0x0A>g_bar.set_title("Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.bar_label(ax.containers[0], facecolor="black", fontsize=15)<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.bar_label(ax.containers[0], facecolor="black", fontsize=15)<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.bar_label(ax.containers[0], facecolor="black", fontsize=15)<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.bar_label(ax.containers[0], facecolor="black", fontsize=15)<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.bar_label(ax.containers[0], facecolor="black", fontsize=15)<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.bar_label(ax.containers[0], facecolor="black", fontsize=15)<0x0A>g_bar.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar',
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_count = pd.DataFrame(<0x0A>    groupby(<0x0A>        'Year',<0x0A>        'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>        'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>        'Year',<0x0A>    index=['2015','2016','2017','2018','2019','2020','2021','2022','2023','2024','2025','2026','2027','2028','2029','2030','2031','2032','2033','2035','2036','2037','2038','2039','2041','2042','2043','2045','2046','2047','2048','2049','2049','2051','2052','2053','2055','2057','2058','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059','2059
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig = plt.figure(figsize=(20,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in python-text')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_color('black')<0x0A>ax.spines['left'].set_color('black')<0x0A>ax.spines['left'].set_color('black')<0x0A><0x0A>ax.xaxis.set_tick_params(bottom=False, top=False, left=False, right=False)<0x0A>ax.xaxis.set_tick_params(top=False, left=False, right=False)<0x0A>ax.xaxis.set_tick_params(top=False, left=False, right=False)<0x0A><0x0A>ax.yaxis.set_tick_params(bottom=False, left=False, right=False)<0x0A>ax.yaxis.set_tick_params(top=False, left=False, right=False)<0x0A><0x0A>ax.grid(True, which='both')<0x0A>ax.grid(False, which='major')<0x0A><0x0A>ax.spines['bottom'].set_color('black')<0x0A>ax.spines['left'].set_color('black')<0x0A>ax.spines['bottom'].set_color('black')<0x0A><0x0A>ax.xaxis.set_tick_params(top=False, left=False, right=False)<0x0A>ax.xaxis.set_tick_params(top=False, left=False, right=False)<0x0A><0x0A>ax.xaxis.set_tick_params(top=False, left=False, right=False)<0x0A><0x0A>ax.xaxis.set_tick_params(top=False, left=False, right=False)<0x0A><0x0A>ax.xaxis.set_tick_params(top=False, left=False, right=False)<0x0A><0x0A>ax.xaxis.set_tick_params(top=False, left=False, right=False)<0x0A><0x0A>ax.xaxis.set_tick_params(top=False, left=False, right=False)<0x0A><0x0A>ax.xaxis.set_tick_params(top=False, left=False, right=False
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot the graph<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the graph<0x0A>ax.scatter(df['Year'], df['Score ((thousands of thousand)/yr)'])<0x0A><0x0A># Plot the graph<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (thousands of thousand)')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A># Plot the graph<0x0A>ax.scatter(df['Year'], df['Distance to Frontier score (on scale of 100) of Armenia'])<0x0A><0x0A># Plot the graph<0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.set_ylim(0, 1000)<0x0A><0x0A># Display the graph<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m# Plot the percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>g = sns.catplot(x="Year", y="Survived", data=df, height=15, aspect=1.5, palette="mako")<0x0A>g.set_axis_labels("Year", "Survived")<0x0A>g.set_title("Percentage of babies born with low-Birthweight in Sri Lanka")<0x0A>g.set_xticklabels(rotation=90)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("Images/Percentage of babies born with low-Birthweight in Sri Lanka.png")<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt', color='#1f77b4')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of/and capital (set % of CWD)', figsize=(25,25), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of/and capital (set % of CWD)')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m# Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph_df = pd.DataFrame(columns = ['Year', 'Strength rating (C = %0.0f)', 'Rating regarding strength of legal rights index in Croatia'])<0x0A>graph_df.plot(kind ='scatter', x = 'Year', y = 'Strength rating (C = %0.0f)', color = 'green', figsize = (25, 25))<0x0A>graph_df.set_title('Rating regarding strength of legal rights index in Croatia')<0x0A>graph_df.set_xlabel('Year')<0x0A>graph_df.set_ylabel('Strength rating (C = %0.0f)')<0x0A>graph_df.set_ylim(0, 1)<0x0A>graph_df.set_xlim(0, 1)<0x0A>graph_df.set_ylim(0, 1)<0x0A>graph_df.set_xticklabels([''] + ['' + str(x) for x in graph_df.get_xticklabels()])<0x0A>graph_df.set_yticklabels([''] + ['' + str(x) for x in graph_df.get_yticklabels()])<0x0A>graph_df.set_yticklabels([''] + [''] + [''] + ['+str(x) for x in graph_df.get_yticklabels()])<0x0A>graph_df.set_yticklabels([''] + [''] + ['+str(x) for x in graph_df.get_yticklabels()])<0x0A>graph_df.set_yticklabels([''] + [''] + ['+str(x) for x in graph_df.get_yticklabels()])<0x0A>graph_df.set_yticklabels([''] + [''] + ['+str(x) for x in graph_df.get_yticklabels()])<0x0A>graph_df.set_yticklabels([''] + [''] + ['+str(x) for x in graph_df.get_yticklabels()])<0x0A>graph_df.set_yticklabels([''] + [''] + ['+str(x) for x in graph_df.get_yticklabels()])<0x0A>graph_df.set_yticklabels([''] + [''] + ['+str(x) for x in graph_df.get_yticklabels()])<0x0A>graph_df.set_yticklabels([''] + [''] + ['+str(x) for x in graph_df.get_yticklabels()])<0x0A>graph_df.set_yticklabels
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.87 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|          | 0/20 [00:00<?, ?it/s]



















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [02:05<00:00,  6.28s/it]
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
  0%|          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2000, 'y': 860}, {'x': 2000, 'y': 4190}, {'x': 2000, 'y': 2130}, {'x': 2000, 'y': 2130}, {'x': 2000, 'y': 4190}, {'x': 2000, 'y': 2130}, {'x': 2000, 'y': 2130}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7000}, {'x': 'USA', 'y': 4200}, {'x': 'Dog', 'y': 6300}, {'x': 'Nike', 'y': 4190}, {'x': 'Apple', 'y': 6300}, {'x': 'Male', 'y': 6300}, {'x': 'Rock', 'y': 6300}, {'x': 'Sedan', 'y': 4200}, {'x': 'USA', 'y': 4200}, {'x': 'Rock', 'y': 6300}, {'x': 'Sedan', 'y': 4200}, {'x': 'Male', 'y': 6300}, {'x': 'Rock', 'y': 6300}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1000}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 47.11}, {'x': 'Apple', 'y': 47.11}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 191.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 47.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Rock', 'y': 191.1}, {'x': 'Spanish', 'y': 23.11}, {'x': 'Male', 'y': 23.11}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 130.62}, {'x': 'USA', 'y': 152.52}, {'x': 'Red', 'y': 152.52}, {'x': 'USA', 'y': 152.52}, {'x': 'Red', 'y': 130.62}, {'x': 'USA', 'y': 152.52}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.17}, {'x': 'USA', 'y': 8.39}, {'x': 'Dog', 'y': 8.39}, {'x': 'Nike', 'y': 12.17}, {'x': 'Apple', 'y': 3.67}, {'x': 'Nike', 'y': 12.17}, {'x': 'Red', 'y': 12.17}, {'x': 'Apple', 'y': 3.67}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 150, 'y': 60.2}, {'x': 150, 'y': 57.6}, {'x': 255, 'y': 13.3}, {'x': 255, 'y': 60.2}, {'x': 255, 'y': 60.2}, {'x': 255, 'y': 60.2}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6650, 'y': 43.66}, {'x': 8750, 'y': 111.6}, {'x': 8750, 'y': 111.6}, {'x': 6650, 'y': 43.66}, {'x': 8750, 'y': 111.6}, {'x': 8750, 'y': 43.66}, {'x': 8750, 'y': 111.6}, {'x': 8750, 'y': 111.6}, {'x': 8750, 'y': 43.66}, {'x': 8750, 'y': 111.6}, {'x': 8750, 'y': 111.6}, {'x': 8750, 'y': 43.66}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200}, {'x': 1915, 'y': 18}, {'x': 1920, 'y': 18}, {'x': 1920, 'y': 18}, {'x': 1920, 'y': 34}, {'x': 1920, 'y': 18}, {'x': 1920, 'y': 18}, {'x': 1920, 'y': 34}, {'x': 1920, 'y': 18}, {'x': 1920, 'y': 18}, {'x': 1920, 'y': 18}, {'x': 1920, 'y': 18}, {'x': 1920, 'y': 18}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 80.2}, {'x': 1816, 'y': 28.6}, {'x': 1817, 'y': 70.2}, {'x': 1818, 'y': 70.2}, {'x': 1819, 'y': 80.2}, {'x': 1820, 'y': 80.2}, {'x': 1822, 'y': 80.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.1}, {'x': 1868, 'y': 253.1}, {'x': 1870, 'y': 108.1}, {'x': 1878, 'y': 268.1}, {'x': 1880, 'y': 268.1}, {'x': 1887, 'y': 268.1}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788, 'y': 63.33}, {'x': 241, 'y': 23.33}, {'x': 241, 'y': 63.33}, {'x': 241, 'y': 63.33}, {'x': 241, 'y': 63.33}, {'x': 241, 'y': 63.33}, {'x': 241, 'y': 63.33}, {'x': 241, 'y': 63.33}, {'x': 241, 'y': 63.33}, {'x': 241, 'y': 63.33}, {'x': 241, 'y': 63.33}, {'x': 241, 'y': 63.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1810, 'y': 600.01}, {'x': 1820, 'y': 128.01}, {'x': 1830, 'y': 28.01}, {'x': 1840, 'y': 108.01}, {'x': 1850, 'y': 310.01}, {'x': 1860, 'y': 148.01}, {'x': 1870, 'y': 310.01}, {'x': 1870, 'y': 28.01}, {'x': 1870, 'y': 28.01}, {'x': 1870, 'y': 28.01}, {'x': 1870, 'y': 28.01}, {'x': 1870, 'y': 28.01}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4500, 'y': 58.14}, {'x': 1100, 'y': 58.14}, {'x': 2200, 'y': 58.14}, {'x': 3000, 'y': 61.74}, {'x': 4500, 'y': 58.14}, {'x': 5500, 'y': 58.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 288}, {'x': 1926, 'y': 288}, {'x': 1929, 'y': 288}, {'x': 1930, 'y': 288}, {'x': 1935, 'y': 288}, {'x': 1939, 'y': 288}, {'x': 1939, 'y': 288}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 120.0, 'y': 36.0}, {'x': 120.0, 'y': 360}, {'x': 120.0, 'y': 40.0}, {'x': 120.0, 'y': 360}, {'x': 120.0, 'y': 360}, {'x': 120.0, 'y': 360}, {'x': 120.0, 'y': 360}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentled Analysis Of Yearly Weather In Normalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1806, 'y': 3812}, {'x': 1808, 'y': 3626}, {'x': 1812, 'y': 4886}, {'x': 1813, 'y': 5752}, {'x': 1814, 'y': 5842}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 2000}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 2000}, {'x': 1847, 'y': 3400}, {'x': 1849, 'y': 2000}, {'x': 1850, 'y': 2000}, {'x': 1851, 'y': 3400}, {'x': 1852, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Exponential Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1000, 'y': 565.1}, {'x': 1000, 'y': 527.6}, {'x': 3000, 'y': 621.2}, {'x': 4000, 'y': 621.2}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|



















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [04:07<00:00, 12.38s/it]
[35m|[39m JSON to Vega conversion error rate: [31m95.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.87 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a line plot of the total unemployed youth population of Colombia<0x0A>ax.plot(df_unemployed['Year'], df_unemployed['Unemployed Youth'], color='#008888')<0x0A><0x0A># Set the title and labels<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Unemployed youth % of total labor force were %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) of Hitomonal Resources', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 30.33}, {'x': 'field', 'y': 55.33}, {'x': 'x': 'Year', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Average land (hectares)')<0x0A>ax.set_title('Arable land (hectares) in Seychelles')<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption in Brazil as a percentage of production'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the cost of communications and computers with respect to service imports of Lebanon<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.plot(cost_comm_imports_df.Year, cost_comm_imports_df.Cost_of_comm_imports_imports_by_year, '-', color='blue', label='Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xlabel('Year', fontsize=16)<0x0A>ax.set_ylabel('Cost Of communications imports (Imports)', fontsize=16)<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon', fontsize=16)<0x0A>ax.tick_params(axis='x', labelsize=16)<0x0A>ax.tick_params(axis='y', labelsize=16)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=16)<0x0A>ax.tick_params(axis='y', labelsize=16)<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="Net bilateral aid flow", data=net, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(20, 20)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee',
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar',
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_congo = pd.DataFrame(<0x0A>    [<0x0A>        df_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count(),<0x0A>        df_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A>    ]<0x0A>)<0x0A><0x0A>g = grupo_congo.plot.bar(<0x0A>    figsize=(25, 40),<0x0A>    title='Number of procedures to build a warehouse in Congo (Republic)',<0x0A>    xlabel='Year',<0x0A>    ylabel='Number of procedures to build a warehouse',<0x0A>    yticks=np.arange(0, 1.5, 0.5),<0x0A>    grid=False,<0x0A>    color='green',<0x0A>    grid=False,<0x0A>    edgecolor='black',<0x0A>    alpha=0.75,<0x0A>    fontsize=15,<0x0A>    colormap=plt.cm.Accent<0x0A>)<0x0A><0x0A>g.set_yticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig = plt.figure(figsize=(20,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in python-text')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot the graph<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the graph<0x0A>ax.scatter(df['Year'], df['Score ((discounted to 100)/dramatically poor memory)'])<0x0A><0x0A># Plot the graph<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score ((dramatically poor memory)')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A># Plot the graph<0x0A>ax.scatter(df['Year'], df['Distance to Frontier score (on scale of 100) of Armenia'])<0x0A><0x0A># Plot the graph<0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.set_ylim(0, 100)<0x0A><0x0A># Display the graph<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m# Plot the percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>g = sns.catplot(x="Year", y="Survived", data=df, height=15, aspect=1.5, palette="mako")<0x0A>g.set_axis_labels("Year", "Survived")<0x0A>g.set_title("Percentage of babies born with low-Birthweight in Sri Lanka")<0x0A>g.set_xticklabels(rotation=90)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("Images/Percentage of babies born with low-Birthweight in Sri Lanka.png")<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 14.65}, {'x': 'field', 'y': 14.65}, {'x': 'field', 'y': 14.65}, {'x': 'field', 'y': 14.65}, {'x': 'field', 'y': 14.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt', color='#1f77b4')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atmospheric Air and Capital (less % of CMV)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atmospheric Air and Capital (less % of CMV)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m# Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A>ggplot(df, aes(x = Year, y = Cost, color = Damage)) +<0x0A>    geom_point() +<0x0A>    labs(title = "Damage caused due to forest depletion in South Asia", x = "Year", y = "Cost (y = % of GW)") +<0x0A>    scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +<0x0A>    scale_y_continuous(limits = scales::pretty_breaks(n = 10)) +<0x0A>    scale_color_discrete(name = scales::pretty_breaks(n = 10)) +<0x0A>    labs(x = "Year", y = "Cost (y = % of GW)") +<0x0A>    labs(title = "Damage caused due to forest depletion in South Asia", x = "Year", y = "Cost (y = % of GW)") +<0x0A>    scale_y_continuous(limits = scales::pretty_breaks(n = 10)) +<0x0A>    labs(x = "Year", y = "Cost (y = % of GW)") +<0x0A>    labs(x = "Year", y = "Cost (y = % of GW)") +<0x0A>    labs(x = "Year", y = "Cost (y = % of GW)") +<0x0A>    labs(x = "Year", y = "Cost (y = % of GW)") +<0x0A>    labs(x = "Year", y = "Cost (y = % of GW)") +<0x0A>    labs(x = "Year", y = "Cost (y = % of GW)") +<0x0A>    labs(x = "Year", y = "Cost (y = % of GW)") +<0x0A>    labs(x = "Year", y = "Cost (y = % of GW)") +<0x0A>    theme_minimal() +<0x0A>    coord_flip() +<0x0A>    labs(title = "Damage caused due to forest depletion in South Asia", x = "Year", y = "Cost (y = % of GW)") +<0x0A>    theme(legend.position = "bottom") +<0x0A>    theme(legend.position = "top") +<0x0A>    theme(legend.position = "bottom") +<0x0A>    theme(legend.position = "top") +<0x0A>    theme(legend.position = "bottom") +<0x0A>    theme(legend.position = "top") +<0x0A>    theme(legend.position = "bottom") +<0x0A>    theme(legend.position = "top") +<0x0A>    theme(legend.position = "bottom") +<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph_df = pd.DataFrame(columns = ['Year', 'Strength rating (0-1 ratio)', 'Rating regarding strength of legal rights index in Croatia'])<0x0A>graph_df.plot(x = 'Year', y = 'Strength rating (0-1 ratio)', kind ='scatter', ylim = (0, 10000), xlim = (0, 10000), figsize = (25, 25))<0x0A>graph_df.set_title('Rating regarding strength of legal rights index in Croatia')<0x0A>graph_df.set_xlabel('Year')<0x0A>graph_df.set_ylabel('Strength rating (0-1 ratio)')<0x0A>graph_df.set_ylim(0, 10000)<0x0A>graph_df.set_xticklabels([''] + ['' + str(x) for x in graph_df.get_xticklabels()])<0x0A>graph_df.set_yticklabels([''] + ['' + str(y) for y in graph_df.get_yticklabels()])<0x0A>graph_df.grid(axis='y', axis='x', tight=True)<0x0A>graph_df.grid(axis='x', axis='y', tight=True)<0x0A>graph_df.grid(axis='x', axis='y', tight=True)<0x0A>graph_df.grid(axis='x', axis='y', tight=True)<0x0A>graph_df.grid(axis='x', axis='y', tight=True)<0x0A>graph_df.grid(axis='x', axis='y', tight=True)<0x0A>graph_df.grid(axis='x', axis='y', tight=True)<0x0A>graph_df.grid(axis='x', axis='y', tight=True)<0x0A>graph_df.grid(axis='x', axis='y', tight=True)<0x0A>graph_df.grid(axis='x', axis='y', tight=True)<0x0A>graph_df.plot(x = 'Year', y = 'Strength rating (0-1 ratio)', kind ='scatter', ylim = (0, 10000), xlim = (0, 10000), xlim = (0, 10000), xlim = (0, 10000), ylim = (0, 10000), xlim = (0, 10000), xlim = (0, 
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.87 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 6 [32m[1m | Loss :[39m[22m 2.5786194801330566



















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:53<00:00,  5.65s/it]
  0%|          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4350, 'y': 2980}, {'x': 4350, 'y': 2980}, {'x': 5450, 'y': 4210}, {'x': 5450, 'y': 2980}, {'x': 4350, 'y': 2980}, {'x': 5450, 'y': 4210}, {'x': 4350, 'y': 2980}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7000}, {'x': 'USA', 'y': 4200}, {'x': 'Dog', 'y': 6300}, {'x': 'Nike', 'y': 4190}, {'x': 'Apple', 'y': 6300}, {'x': 'Male', 'y': 6300}, {'x': 'Rock', 'y': 6300}, {'x': 'Sedan', 'y': 4200}, {'x': 'USA', 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1000}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 47.11}, {'x': 'Apple', 'y': 47.11}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 23.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 47.11}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.62}, {'x': 'USA', 'y': 152.62}, {'x': 'Red', 'y': 152.62}, {'x': 'USA', 'y': 152.62}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.12}, {'x': 'USA', 'y': 8.38}, {'x': 'Dog', 'y': 8.38}, {'x': 'Nike', 'y': 12.12}, {'x': 'Apple', 'y': 3.66}, {'x': 'Nike', 'y': 12.12}, {'x': 'Red', 'y': 12.12}, {'x': 'Apple', 'y': 3.66}, {'x': 'Dog', 'y': 8.38}, {'x': 'Nike', 'y': 12.12}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 57.6}, {'x': 55.3, 'y': 60.3}, {'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 60.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6650, 'y': 42}, {'x': 8700, 'y': 112}, {'x': 6650, 'y': 112}, {'x': 8700, 'y': 112}, {'x': 6650, 'y': 42}, {'x': 8700, 'y': 112}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200.03}, {'x': 1919, 'y': 16.64}, {'x': 1921, 'y': 16.64}, {'x': 1926, 'y': 16.64}, {'x': 1929, 'y': 34.14}, {'x': 1930, 'y': 34.14}, {'x': 1931, 'y': 34.14}, {'x': 1932, 'y': 16.64}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 80.2}, {'x': 1816, 'y': 28.62}, {'x': 1817, 'y': 70.2}, {'x': 1818, 'y': 70.2}, {'x': 1819, 'y': 80.2}, {'x': 1820, 'y': 80.2}, {'x': 1822, 'y': 80.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.14}, {'x': 1868, 'y': 268.14}, {'x': 1871, 'y': 107.14}, {'x': 1878, 'y': 268.14}, {'x': 1882, 'y': 268.14}, {'x': 1889, 'y': 268.14}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1810, 'y': 600.03}, {'x': 1820, 'y': 128.03}, {'x': 1828, 'y': 20.03}, {'x': 1830, 'y': 128.03}, {'x': 1838, 'y': 128.03}, {'x': 1840, 'y': 108.03}, {'x': 1848, 'y': 310.03}, {'x': 1850, 'y': 310.03}, {'x': 1858, 'y': 148.03}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4500, 'y': 58.14}, {'x': 1100, 'y': 58.14}, {'x': 2200, 'y': 61.74}, {'x': 3000, 'y': 58.14}, {'x': 4500, 'y': 58.14}, {'x': 5500, 'y': 58.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2880}, {'x': 1926, 'y': 2880}, {'x': 1929, 'y': 2880}, {'x': 1930, 'y': 2880}, {'x': 1932, 'y': 2880}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 37.54}, {'x': 1570, 'y': 43.54}, {'x': 1570, 'y': 37.54}, {'x': 1570, 'y': 37.54}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentled Analysis Of Yearly Weather In Normalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1806, 'y': 3812}, {'x': 1808, 'y': 3626}, {'x': 1808, 'y': 3626}, {'x': 1808, 'y': 3626}, {'x': 1808, 'y': 4266}, {'x': 1808, 'y': 4266}, {'x': 1808, 'y': 3626}, {'x': 1808, 'y': 4266}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 2000}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 2000}, {'x': 1847, 'y': 3400}, {'x': 1849, 'y': 2000}, {'x': 1850, 'y': 2000}, {'x': 1851, 'y': 3400}, {'x': 1852, 'y': 2000}, {'x': 1853, 'y': 2000}, {'x': 1856, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Exponential Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1070, 'y': 565.1}, {'x': 1070, 'y': 527.6}, {'x': 3000, 'y': 621.6}, {'x': 3000, 'y': 527.6}, {'x': 4000, 'y': 621.6}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|



















 95%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ| 19/20 [04:17<00:11, 11.67s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a line plot of the total unemployed youth population of Colombia<0x0A>ax.plot(df_unemployed['Year'], df_unemployed['Unemployed Youth'], color='#008888')<0x0A><0x0A># Set the title and labels<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Unemployed youth % of total labor force were %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) of (fragments) from Russian River Basins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field': 'Annual freshwater withdrawals (%) of (fragments) from Russian River Basins', 'y': 55.33}, {'x': 'field': 'Year', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(25,25))<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Average land (hectares)')<0x0A>ax.set_title('Arable land (hectares) in Seychelles')<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption in Brazil as a percentage of production'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the graph<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the graph<0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications imports (Imports)')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications imports (Imports)')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], color='blue')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="Net bilateral aid flow", data=net_grenada_df, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(20, 15)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=16)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=16)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=16)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=16)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=16)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=16)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=16)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=16)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=16)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=16)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=16)<0x0A>
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar',
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_congo = pd.DataFrame(<0x0A>    [<0x0A>        df_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count(),<0x0A>        df_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A>    ]<0x0A>)<0x0A><0x0A>g = grupo_congo.plot.bar(<0x0A>    figsize=(25, 40),<0x0A>    title='Number of procedures to build a warehouse in Congo (Republic)',<0x0A>    xlabel='Year',<0x0A>    ylabel='Number of procedures to build a warehouse',<0x0A>    yticks=np.arange(0, 1.5, 0.5),<0x0A>    grid=False,<0x0A>    color='green',<0x0A>    grid=False,<0x0A>    edgecolor='black',<0x0A>    alpha=0.75,<0x0A>    fontsize=15,<0x0A>    colormap=plt.cm.Accent<0x0A>)<0x0A><0x0A>g.set_yticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig = plt.figure(figsize=(20,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Producer in production')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31mtitle = 'Distance to Frontier score (on scale of 100) of Armenia'<0x0A>ylabel = 'Score ((retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size().reset_index()<0x0A>percentage_sr_lanka = percentage_sr_lanka.pivot(index='Year', columns='Country', values='Survived')<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by='Survived', ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.set_title('Percentage of babies born with low-Birthweight in Sri Lanka')<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_xticks([0, 1, 2])<0x0A>ax.set_yticks([0, 20])<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 14.65}, {'x': 'field', 'y': 14.65}, {'x': 'x': 'Year', 'y': 14.65}, {'x': 'field', 'y': 14.65}, {'x': 'field', 'y': 14.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt', color='#1f77b4')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atmospheric Air and Capital (less % of CMV)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atmospheric Air and Capital (less % of CMV)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m# Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A>ggplot(df, aes(x = Year, y = Cost, color = Damage)) +<0x0A>    geom_point() +<0x0A>    labs(title = "Damage caused due to forest depletion in South Asia", x = "Year", y = "Cost (y = % of GW)") +<0x0A>    scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +<0x0A>    scale_y_continuous(limits = scales::pretty_breaks(n = 10)) +<0x0A>    scale_color_discrete(name = scales::pretty_breaks(n = 10)) +<0x0A>    labs(x = "Year", y = "Cost (y = % of GW)") +<0x0A>    labs(title = "Damage caused due to forest depletion in South Asia", x = "Year", y = "Cost (y = % of GW)") +<0x0A>    scale_y_continuous(limits = scales::pretty_breaks(n = 10)) +<0x0A>    labs(x = "Year", y = "Cost (y = % of GW)") +<0x0A>    labs(x = "Year", y = "Cost (y = % of GW)") +<0x0A>    labs(x = "Year", y = "Cost (y = % of GW)") +<0x0A>    labs(x = "Year", y = "Cost (y = % of GW)") +<0x0A>    labs(x = "Year", y = "Cost (y = % of GW)") +<0x0A>    theme_minimal() +<0x0A>    coord_flip() +<0x0A>    labs(title = "Damage caused due to forest depletion in South Asia", x = "Year", y = "Cost (y = % of GW)") +<0x0A>    theme(legend.position = "bottom") +<0x0A>    theme(legend.position = "top") +<0x0A>    theme(legend.position = "bottom") +<0x0A>    theme(legend.position = "top") +<0x0A>    theme(legend.position = "bottom") +<0x0A>    theme(legend.position = "top") +<0x0A>    theme(legend.position = "bottom") +<0x0A>    theme(legend.position = "top") +<0x0A>    theme(legend.position = "bottom") +<0x0A>    theme(legend.position = "top") +<0x0A>    theme(legend.position = "bottom") +<0x0A>    theme(legend.position = "top") +<0x0A>    theme(legend.position = "bottom") +<0x0A>    theme(legend.position = "
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = df.plot(kind='scatter', x='Year', y='Strength rating (12 Â± 9000)', color='green', figsize=(20, 20), s=50)<0x0A>graph.set_xlabel('Year')<0x0A>graph.set_ylabel('Strength rating (12 Â± 9000)')<0x0A>graph.set_title('Rating regarding strength of legal rights index in Croatia')<0x0A>graph.grid(True)<0x0A>graph.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|

100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [04:21<00:00, 13.05s/it]
  0%|          | 0/20 [00:00<?, ?it/s]



















 95%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ| 19/20 [01:41<00:05,  5.24s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4386, 'y': 2960}, {'x': 5456, 'y': 4210}, {'x': 1280, 'y': 838}, {'x': 1280, 'y': 2110}, {'x': 4386, 'y': 2110}, {'x': 5456, 'y': 2960}, {'x': 4386, 'y': 2110}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4200}, {'x': 'Dog', 'y': 6900}, {'x': 'Nike', 'y': 4190}, {'x': 'Apple', 'y': 6300}, {'x': 'Male', 'y': 7080}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4200}, {'x': 'USA', 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 23.14}, {'x': 'Dog', 'y': 120.64}, {'x': 'Nike', 'y': 47.64}, {'x': 'Apple', 'y': 47.64}, {'x': 'Male', 'y': 23.14}, {'x': 'Rock', 'y': 23.14}, {'x': 'Sedan', 'y': 23.14}, {'x': 'Spanish', 'y': 47.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.62}, {'x': 'Red', 'y': 152.62}, {'x': 'USA', 'y': 152.62}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.12}, {'x': 'USA', 'y': 8.38}, {'x': 'Dog', 'y': 8.38}, {'x': 'Nike', 'y': 12.12}, {'x': 'Apple', 'y': 3.91}, {'x': 'Nike', 'y': 12.12}, {'x': 'Red', 'y': 12.12}, {'x': 'USA', 'y': 8.38}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 57.6}, {'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 60.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 755, 'y': 365}, {'x': 1555, 'y': 365}, {'x': 2555, 'y': 365}, {'x': 1555, 'y': 365}, {'x': 6555, 'y': 425}, {'x': 8555, 'y': 112}, {'x': 8555, 'y': 365}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200.03}, {'x': 1920, 'y': 16.56}, {'x': 1925, 'y': 16.56}, {'x': 1930, 'y': 35.01}, {'x': 1931, 'y': 35.01}, {'x': 1932, 'y': 16.56}, {'x': 1932, 'y': 16.56}, {'x': 1932, 'y': 16.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 80.2}, {'x': 1816, 'y': 28.62}, {'x': 1817, 'y': 70.2}, {'x': 1818, 'y': 70.2}, {'x': 1819, 'y': 80.2}, {'x': 1822, 'y': 8.22}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.14}, {'x': 1868, 'y': 253.14}, {'x': 1871, 'y': 107.64}, {'x': 1878, 'y': 268.64}, {'x': 1882, 'y': 268.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788.13, 'y': 63.14}, {'x': 788.13, 'y': 63.14}, {'x': 788.13, 'y': 63.14}, {'x': 788.13, 'y': 63.14}, {'x': 788.13, 'y': 63.14}, {'x': 788.13, 'y': 63.14}, {'x': 788.13, 'y': 63.14}, {'x': 788.13, 'y': 63.14}, {'x': 788.13, 'y': 63.14}, {'x': 788.13, 'y': 63.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1810, 'y': 600}, {'x': 1820, 'y': 128}, {'x': 1828, 'y': 28}, {'x': 1830, 'y': 28}, {'x': 1838, 'y': 108}, {'x': 1840, 'y': 108}, {'x': 1850, 'y': 311}, {'x': 1858, 'y': 311}, {'x': 1860, 'y': 150}, {'x': 1868, 'y': 150}, {'x': 1870, 'y': 311}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4500, 'y': 58.14}, {'x': 1100, 'y': 58.14}, {'x': 2200, 'y': 61.74}, {'x': 3000, 'y': 58.14}, {'x': 4500, 'y': 58.14}, {'x': 5500, 'y': 58.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2880}, {'x': 1926, 'y': 2880}, {'x': 1929, 'y': 2880}, {'x': 1930, 'y': 2880}, {'x': 1932, 'y': 2880}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 120.8, 'y': 37.5}, {'x': 120.8, 'y': 37.5}, {'x': 120.8, 'y': 42.5}, {'x': 120.8, 'y': 365.5}, {'x': 120.8, 'y': 365.5}, {'x': 120.8, 'y': 37.5}, {'x': 120.8, 'y': 37.5}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather In Normalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1806, 'y': 3812}, {'x': 1808, 'y': 3626}, {'x': 1810, 'y': 4886}, {'x': 1812, 'y': 5758}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 2000}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 2000}, {'x': 1847, 'y': 3400}, {'x': 1850, 'y': 2000}, {'x': 1856, 'y': 3400}, {'x': 1860, 'y': 1900}, {'x': 1870, 'y': 1900}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Expent Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1070, 'y': 527.62}, {'x': 1070, 'y': 527.62}, {'x': 3000, 'y': 627.62}, {'x': 3000, 'y': 527.62}, {'x': 4000, 'y': 627.62}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:49<00:00,  5.47s/it]



















 95%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ| 19/20 [04:17<00:11, 11.49s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a bar plot of the total unemployed youth population of Colombia<0x0A>ax.bar(x=df_col_unemployed['Year'], height=df_col_unemployed['Unemployed Youth'], color='#008888')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Unemployed youth population of Colombia')<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A><0x0A># Set the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Unemployed youth population of Colombia')<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_ylabel('Unemployed youth population of Colombia')<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Unemployed youth population of Colombia')<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_ylabel('Unemployed youth population of Colombia')<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Unemployed youth population of Colombia')<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_ylabel('Unemployed youth population of Colombia')<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_ylabel('Unemployed youth population of Colombia')<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_ylabel('Unemployed youth population of Colombia')<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Unemployed youth population of Colombia')<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_ylabel('Unemployed youth population of Colombia')<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_ylabel('Unemployed youth population of Colombia')<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_ylabel('Unemployed youth population of Colombia')<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_ylabel('Unemployed youth population of Colombia')<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_y
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of trillemmonial Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 30.33}, {'x': 'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 55.33}, {'x': 'field', 'y': 55.33}, {'x': 'field', 'y': 55.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(25,25))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.set_style("whitegrid")<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df['Year'], df['fertilizer consumption'])<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df['Year'], df['fertilizer consumption'])<0x0A><0x0A># Adding a title<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A># Labelling the x-axis<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Labelling the y-axis<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Displaying the plot<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the graph<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the graph<0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], color='red')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], color='red')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bilateral_aid_flow, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (A$/Population) from US$ US$")<0x0A>g.set_xticklabels(g.get_xticklabels(), rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bilateral_aid_flow, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (A$/Population) from US$ US$")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (A$/Population) from US$ US$")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (A$/Population) from US$ US$")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (A$/Population) from US$ US$")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (A$/Population) from US$ US$")<0x0A>g.set_xticklabels(g.get_xticklabels(), rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bilateral_aid_flow, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (A$/Population) from US$ US$")<0x0A>g.set_ylabels("AID flow (A$/Population) from US$ US$")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (A$/Population) from US$ US$")<0x0A>g.set_ylabels
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar',
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_congo = pd.DataFrame(<0x0A>    [<0x0A>        df_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count(),<0x0A>        df_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A>    ]<0x0A>)<0x0A><0x0A>g = grupo_congo.plot(<0x0A>    kind='bar',<0x0A>    figsize=(25, 40),<0x0A>    colormap='Greens',<0x0A>    title='Number of procedures to build a warehouse in Congo (Republic)',<0x0A>    xlabel='Year',<0x0A>    ylabel='Number of procedures to build a warehouse',<0x0A>    grid=False,<0x0A>    grid_kws={'xticks': [], 'yticks': []},<0x0A>    title='Number of procedures to build a warehouse in Congo (Republic)',<0x0A>    figsize=(25, 40),<0x0A>    grid_alpha=0.8,<0x0A>    figsize=(25, 40),<0x0A>    grid_kws={'xticks': [], 'yticks': []},<0x0A>    title='Number of procedures to build a warehouse in Congo (Republic)',<0x0A>    figsize=(25, 40),<0x0A>    grid_xticks=[],<0x0A>    xticklabels=False,<0x0A>    yticklabels=False,<0x0A>    grid_xticklabels=False,<0x0A>    xticklabels=False,<0x0A>    yticklabels=False,<0x0A>    figsize=(25, 40),<0x0A>    grid_yticklabels=False,<0x0A>    fontsize=18,<0x0A>    fontweight='bold',<0x0A>    fontsize=25,<0x0A>    fontweight='bold',<0x0A>    fontsize=25,<0x0A>    fontweight='bold',<0x0A>    fontsize=25,<0x0A>    fontweight='bold',<0x0A>    fontsize=25,<0x0A>    fontweight='bold',<0x0A>    fontsize=25,<0x0A>    fontweight='bold',<0x0A>    fontsize=25,<0x0A>    fontweight='bold',<0x0A>    fontsize=25,<0x0A>    fontweight='bold',<0x0A>    fontsize=25,<0x0A>    fontweight='bold',<0x0A>    fontsize=25,<0x0A>    fontweight='bold',<0x0A>    fontsize=25,<0x0A>    fontweight='bold',<0x0A>    fontsize=25,<0x0A>    fontweight='bold',<0x0A>    fontsize=25,<0x0A>    fontweight='bold',<0x0A>    fontsize=25,<0x0A>    fontweight='bold',
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig = plt.figure(figsize=(20,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Producer in production')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31mtitle = 'Distance to Frontier score (on scale of 100) of Armenia'<0x0A>ylabel = 'Score ((retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(retrained to 100)/(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size().reset_index()<0x0A>percentage_sr_lanka = percentage_sr_lanka.pivot(index='Year', columns='Country', values='Survived')<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by='Survived', ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(18, 20))<0x0A><0x0A>ax.set_title('Percentage of babies born with low-Birthweight in Sri Lanka')<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 10.06}, {'x': 'field', 'y': 10.06}, {'x': 'x': 'Year', 'y': 10.06}, {'x': 'field', 'y': 10.06}, {'x': 'field', 'y': 10.06}, {'x': 'field', 'y': 10.06}, {'x': 'field', 'y': 10.06}, {'x': 'field', 'y': 10.06}, {'x': 'field', 'y': 10.06}, {'x': 'field', 'y': 10.06}, {'x': 'field', 'y': 10.06}, {'x': 'field', 'y': 10.06}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt', color='#1f77b4')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atmospheric Air and Capital (less % of CMV)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atmospheric Air and Capital (less % of CMV)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m# Plot the damage caused due to forest depletion in South Asia<0x0A><0x0A>ggplot(df, aes(x = Year, y = Cost, color = Damage)) +<0x0A>    geom_point() +<0x0A>    labs(title = "Damage caused due to forest depletion in South Asia", x = "Year", y = "Cost (y = % of GW)") +<0x0A>    scale_x_date() +<0x0A>    scale_y_jitter() +<0x0A>    theme_minimal() +<0x0A>    theme(axis.text.x = element_text(angle = 90, hjust = 1)) +<0x0A>    scale_color_brewer() +<0x0A>    labs(title = "Damage caused due to forest depletion in South Asia", x = "Year", y = "Cost (y = % of GW)") +<0x0A>    labs(title = "Damage caused due to forest depletion in South Asia", x = "Year", y = "Cost (y = % of GW)") +<0x0A>    theme(axis.text.x = element_text(angle = 90, hjust = 1)) +<0x0A>    labs(title = "Damage caused due to forest depletion in South Asia", x = "Year", y = "Cost (y = % of GW)") +<0x0A>    theme(axis.text.y = element_text(angle = 90, hjust = 1)) +<0x0A>    labs(title = "Damage caused due to forest depletion in South Asia", x = "Year", y = "Cost (y = % of GW)") +<0x0A>    theme(axis.text.x = element_text(angle = 90, hjust = 1)) +<0x0A>    labs(title = "Damage caused due to forest depletion in South Asia", x = "Year", y = "Cost (y = % of GW)") +<0x0A>    theme(axis.text.y = element_text(angle = 90, hjust = 1)) +<0x0A>    labs(title = "Damage caused due to forest depletion in South Asia", x = "Year", y = "Cost (y = % of GW)") +<0x0A>    theme(axis.text.x = element_text(angle = 90, hjust = 1)) +<0x0A>    labs(title = "Damage caused due to forest depletion in South Asia", x = "Year", y = "Cost (y = % of GW)") +<0x0A>    theme(axis.text.y = element_text(angle = 90, hjust = 1)) +<0x0A>    labs(title = "Damage caused due to forest depletion in South Asia", x = "Year", y =
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = pd.DataFrame({'Year':['2017', '2018', '2019', '2020', '2021', '2022', '2023', '2024', '2025', '2026', '2027', '2028', '2029', '2030', '2031', '2032', '2033', '2034', '2035', '2036', '2037', '2038', '2039', '2041', '2042', '2043', '2044', '2045', '2046', '2047', '2048', '2049', '2051', '2052', '2053', '2055', '2057', '2058', '2059', '2061', '2062', '2063', '2064', '2065', '2066', '2067', '2068', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '20
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|

100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [04:35<00:00, 13.78s/it]
[36m[1mEpoch :[39m[22m 8 [32m[1m | Loss :[39m[22m 2.953256845474243



















 95%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ| 19/20 [01:46<00:05,  5.53s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4386, 'y': 2960}, {'x': 5256, 'y': 4210}, {'x': 1280, 'y': 838}, {'x': 4386, 'y': 2960}, {'x': 5256, 'y': 4210}, {'x': 4386, 'y': 2960}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4190}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 7080}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 23.14}, {'x': 'Dog', 'y': 120.24}, {'x': 'Nike', 'y': 47.64}, {'x': 'Apple', 'y': 47.64}, {'x': 'Male', 'y': 23.14}, {'x': 'Rock', 'y': 23.14}, {'x': 'Sedan', 'y': 23.14}, {'x': 'Spanish', 'y': 47.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.12}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.12}, {'x': 'USA', 'y': 8.38}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.12}, {'x': 'Apple', 'y': 3.91}, {'x': 'Nike', 'y': 12.12}, {'x': 'Red', 'y': 12.12}, {'x': 'USA', 'y': 8.38}, {'x': 'Dog', 'y': 8.38}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 13.3}, {'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 60.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6620, 'y': 42}, {'x': 8750, 'y': 112}, {'x': 6620, 'y': 112}, {'x': 8750, 'y': 364}, {'x': 6620, 'y': 42}, {'x': 8750, 'y': 112}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200.03}, {'x': 1920, 'y': 16.56}, {'x': 1925, 'y': 16.56}, {'x': 1930, 'y': 35.01}, {'x': 1931, 'y': 35.01}, {'x': 1932, 'y': 16.56}, {'x': 1936, 'y': 16.56}, {'x': 1940, 'y': 16.56}, {'x': 1941, 'y': 16.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 80.2}, {'x': 1816, 'y': 28.5}, {'x': 1817, 'y': 68.5}, {'x': 1818, 'y': 70.2}, {'x': 1819, 'y': 80.2}, {'x': 1822, 'y': 8.5}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.14}, {'x': 1868, 'y': 253.14}, {'x': 1871, 'y': 107.64}, {'x': 1878, 'y': 268.64}, {'x': 1881, 'y': 268.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788.13, 'y': 63.14}, {'x': 686.44, 'y': 56.14}, {'x': 686.44, 'y': 63.14}, {'x': 686.44, 'y': 63.14}, {'x': 686.44, 'y': 24.14}, {'x': 686.44, 'y': 24.14}, {'x': 686.44, 'y': 63.14}, {'x': 686.44, 'y': 63.14}, {'x': 686.44, 'y': 63.14}, {'x': 686.44, 'y': 63.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1810, 'y': 580.03}, {'x': 1820, 'y': 135.03}, {'x': 1825, 'y': 26.03}, {'x': 1830, 'y': 26.03}, {'x': 1835, 'y': 108.03}, {'x': 1840, 'y': 310.03}, {'x': 1850, 'y': 310.03}, {'x': 1860, 'y': 148.03}, {'x': 1865, 'y': 150.03}, {'x': 1870, 'y': 580.03}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 55.01}, {'x': 4488, 'y': 61.53}, {'x': 4488, 'y': 55.01}, {'x': 2488, 'y': 58.14}, {'x': 3248, 'y': 61.53}, {'x': 4488, 'y': 55.01}, {'x': 2488, 'y': 55.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2880}, {'x': 1926, 'y': 2880}, {'x': 1929, 'y': 2880}, {'x': 1930, 'y': 2880}, {'x': 1932, 'y': 2880}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 123.56, 'y': 37.54}, {'x': 123.56, 'y': 365.5}, {'x': 123.56, 'y': 37.54}, {'x': 123.56, 'y': 365.5}, {'x': 123.56, 'y': 365.5}, {'x': 123.56, 'y': 365.5}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1806, 'y': 3626}, {'x': 1808, 'y': 3626}, {'x': 1810, 'y': 4866}, {'x': 1812, 'y': 5758}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 1900}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 2000}, {'x': 1847, 'y': 3400}, {'x': 1850, 'y': 2000}, {'x': 1855, 'y': 4900}, {'x': 1860, 'y': 1900}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Expent Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1280, 'y': 530}, {'x': 3200, 'y': 625}, {'x': 3200, 'y': 525}, {'x': 4200, 'y': 625}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:50<00:00,  5.51s/it]



















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [03:41<00:00, 11.09s/it]
[35m|[39m JSON to Vega conversion error rate: [31m95.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.25 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.73 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (in a Set of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable': 'Value', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable': 'Value', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a bar plot of the total unemployed youth population of Colombia<0x0A>ax.bar(x=df_col_unemployed['Year'], height=df_col_unemployed['Unemployed Youth'], color='#008888')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Unemployed youth population of Colombia')<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A><0x0A># Set the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the title<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Set the title<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Set the title<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihilomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 30.33}, {'x': 'field', 'y': 55.33}, {'x': 'variable': 'Value', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(25,25))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.set_style("whitegrid")<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df['Year'], df['fertilizer consumption'])<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df['Year'], df['fertilizer consumption'])<0x0A><0x0A># Adding a title<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A># Labelling the x-axis<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Labelling the y-axis<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Displaying the plot<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 15.66}, {'x': 'field', 'y': 15.66}, {'x': 'variable', 'y': 47.66}, {'x': 'variable', 'y': 15.66}, {'x': 'variable', 'y': 47.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="Net bilateral aid flow", data=net, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(20, 15)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set(xlabel='Year', ylabel='Net Net bilateral aid flow of Grenada from Development Assistance Committee', title='Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A>g.set_xticklabels(rotation=90)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per hectare')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_congo = pd.DataFrame(<0x0A>    [<0x0A>        df_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count(),<0x0A>        df_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A>    ]<0x0A>)<0x0A><0x0A>g = grupo_congo.plot(<0x0A>    kind='bar',<0x0A>    figsize=(20, 40),<0x0A>    colormap='Greens',<0x0A>    title='Number of procedures to build a warehouse in Congo (Republic)',<0x0A>    xlabel='Year',<0x0A>    ylabel='Number of procedures to build a warehouse',<0x0A>    grid=False,<0x0A>    grid_kws={'xticks': [], 'yticks': []},<0x0A>    title='Number of procedures to build a warehouse in Congo (Republic)',<0x0A>    figsize=(20, 40),<0x0A>    title_fontsize=20,<0x0A>    fontweight='bold',<0x0A>    fontsize=20,<0x0A>    grid_alpha=0.8,<0x0A>    figsize=(20, 10),<0x0A>    grid_kws={'xticks': [], 'yticks': [], 'xticklabels': [],<0x0A>    fontsize=18,<0x0A>    fontweight='bold',<0x0A>    fontsize=20,<0x0A>    grid_color='black',<0x0A>    fontsize=20,<0x0A>    grid_color='black',<0x0A>    fontsize=20,<0x0A>    grid_color='black',<0x0A>    fontsize=20,<0x0A>    grid_color='black',<0x0A>    fontsize=20,<0x0A>    grid_color='black',<0x0A>    fontsize=20,<0x0A>    grid_color='black',<0x0A>    fontsize=20,<0x0A>    grid_color='black',<0x0A>    fontsize=20,<0x0A>    grid_color='black',<0x0A>    fontsize=20,<0x0A>    grid_color='black',<0x0A>    fontsize=20,<0x0A>    fontsize=20,<0x0A>    fontsize=20,<0x0A>    fontsize=20,<0x0A>    fontsize=20,<0x0A>    fontsize=20,<0x0A>    fontsize=20,<0x0A>    fontsize=20,<0x0A>    fontsize=20,<0x0A>    fontsize=20,<0x0A>    fontsize=20,<0x0A>    fontsize=20,<0x0A>    fontsize=20,<0x0A>    fontsize=20,<0x0A>    fontsize=20,<0x0A>    fontsize=20
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import os<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31mtitle = 'Distance to Frontier score (on scale of 100) of Armenia'<0x0A>ylabel = 'Score ((intranetted to NORMALLY Allowed)'<0x0A>xlabel = 'Year'<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20,15))<0x0A>ax.scatter(df['Year'], df['Distance to Frontier score (on scale of 100) of Armenia'], s=100)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (intranetted to NORMALLY Allowed)')<0x0A>ax.set_title(title)<0x0A>ax.set_xticklabels(xlabel)<0x0A>ax.set_yticklabels(ylabel)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size().reset_index()<0x0A>percentage_sr_lanka = percentage_sr_lanka.pivot(index='Year', columns='Country', values='Survived')<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by='Survived', ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(18, 20))<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 10.03}, {'x': 'field', 'y': 10.03}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'data': {'x': 'Year', 'y': 10.03}, {'x': 'field', 'y': 10.03}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'y': 10.03}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt', color='#1f77b4')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atmospheric Air and Capital (less % of CMV)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atmospheric Air and Capital (less % of CMV)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.63}, {'x': 'field', 'y': 18.63}, {'x': 'variable': 'Year', 'type': 'quantitative'}}, 'data': {'x': 'variable': 'Value', 'y': 18.63}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = pd.DataFrame({'Year':['2017', '2018', '2019', '2020', '2021', '2022', '2023', '2024', '2025', '2026', '2027', '2028', '2029', '2030', '2031', '2032', '2033', '2034', '2035', '2036', '2037', '2038', '2039', '2041', '2042', '2043', '2044', '2045', '2046', '2047', '2048', '2049', '2051', '2052', '2053', '2055', '2057', '2058', '2059', '2061', '2062', '2063', '2064', '2065', '2066', '2067', '2068', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '2069', '20
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.25 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.73 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 9 [32m[1m | Loss :[39m[22m 2.389160633087158



















 95%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ| 19/20 [01:59<00:06,  6.77s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4386, 'y': 2960}, {'x': 5256, 'y': 4210}, {'x': 1280, 'y': 838}, {'x': 4386, 'y': 2960}, {'x': 5256, 'y': 4210}, {'x': 1280, 'y': 838}, {'x': 4386, 'y': 2960}, {'x': 5256, 'y': 4210}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4190}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 7080}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 23.14}, {'x': 'Dog', 'y': 120.24}, {'x': 'Nike', 'y': 47.64}, {'x': 'Apple', 'y': 47.64}, {'x': 'Male', 'y': 23.14}, {'x': 'Rock', 'y': 23.14}, {'x': 'Sedan', 'y': 23.14}, {'x': 'Spanish', 'y': 47.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.12}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.12}, {'x': 'USA', 'y': 8.38}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.12}, {'x': 'Apple', 'y': 3.91}, {'x': 'Nike', 'y': 12.12}, {'x': 'Red', 'y': 12.12}, {'x': 'USA', 'y': 8.38}, {'x': 'Apple', 'y': 3.91}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.8}, {'x': 255.3, 'y': 13.3}, {'x': 255.3, 'y': 60.8}, {'x': 255.3, 'y': 60.8}, {'x': 255.3, 'y': 60.8}, {'x': 255.3, 'y': 60.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7556, 'y': 364.66}, {'x': 1156, 'y': 364.66}, {'x': 6756, 'y': 41.6}, {'x': 8756, 'y': 114.1}, {'x': 6756, 'y': 41.6}, {'x': 8756, 'y': 364.66}, {'x': 2256, 'y': 364.66}, {'x': 2256, 'y': 364.66}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200.03}, {'x': 1920, 'y': 16.56}, {'x': 1925, 'y': 16.56}, {'x': 1930, 'y': 35.66}, {'x': 1931, 'y': 35.66}, {'x': 1932, 'y': 16.56}, {'x': 1934, 'y': 16.56}, {'x': 1936, 'y': 16.56}, {'x': 1940, 'y': 16.56}, {'x': 1941, 'y': 16.56}, {'x': 1942, 'y': 16.56}, {'x': 1944, 'y': 16.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 80.2}, {'x': 1816, 'y': 28.5}, {'x': 1817, 'y': 48.5}, {'x': 1818, 'y': 70.2}, {'x': 1819, 'y': 80.2}, {'x': 1820, 'y': 8.5}, {'x': 1822, 'y': 8.5}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.14}, {'x': 1866, 'y': 253.14}, {'x': 1870, 'y': 108.14}, {'x': 1876, 'y': 268.14}, {'x': 1880, 'y': 268.14}, {'x': 1886, 'y': 268.14}, {'x': 1890, 'y': 268.14}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788.13, 'y': 63.14}, {'x': 686.44, 'y': 56.14}, {'x': 686.44, 'y': 63.14}, {'x': 686.44, 'y': 24.14}, {'x': 686.44, 'y': 63.14}, {'x': 686.44, 'y': 56.14}, {'x': 686.44, 'y': 63.14}, {'x': 686.44, 'y': 24.14}, {'x': 686.44, 'y': 63.14}, {'x': 686.44, 'y': 63.14}, {'x': 686.44, 'y': 63.14}, {'x': 686.44, 'y': 63.14}, {'x': 686.44, 'y': 23.84}, {'x': 686.44, 'y': 23.84}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.01}, {'x': 1821, 'y': 135.64}, {'x': 1828, 'y': 26.6}, {'x': 1834, 'y': 26.6}, {'x': 1839, 'y': 108.1}, {'x': 1846, 'y': 311.44}, {'x': 1852, 'y': 311.44}, {'x': 1865, 'y': 148.64}, {'x': 1869, 'y': 150.01}, {'x': 1871, 'y': 584.01}, {'x': 1875, 'y': 584.01}, {'x': 1877, 'y': 148.01}, {'x': 1881, 'y': 108.01}, {'x': 1887, 'y': 148.01}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 55.01}, {'x': 1488, 'y': 61.14}, {'x': 3348, 'y': 78.74}, {'x': 4488, 'y': 55.01}, {'x': 1488, 'y': 61.14}, {'x': 2488, 'y': 58.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1924, 'y': 2888}, {'x': 1926, 'y': 2888}, {'x': 1928, 'y': 2888}, {'x': 1929, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 123.56, 'y': 37.54}, {'x': 123.56, 'y': 365.5}, {'x': 123.56, 'y': 42.54}, {'x': 123.56, 'y': 365.5}, {'x': 123.56, 'y': 42.54}, {'x': 123.56, 'y': 365.5}, {'x': 123.56, 'y': 365.5}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4276}, {'x': 1804, 'y': 4086}, {'x': 1805, 'y': 3628}, {'x': 1806, 'y': 3812}, {'x': 1807, 'y': 3628}, {'x': 1808, 'y': 3628}, {'x': 1810, 'y': 4886}, {'x': 1812, 'y': 5848}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 1900}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 1900}, {'x': 1850, 'y': 2000}, {'x': 1855, 'y': 4900}, {'x': 1860, 'y': 1900}, {'x': 1870, 'y': 1900}, {'x': 1875, 'y': 3400}, {'x': 1880, 'y': 1900}, {'x': 1885, 'y': 1900}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Expent Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1280, 'y': 530}, {'x': 3200, 'y': 625}, {'x': 3200, 'y': 530}, {'x': 1280, 'y': 565}, {'x': 3200, 'y': 625}, {'x': 4000, 'y': 625}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [02:03<00:00,  6.15s/it]



















 95%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ| 19/20 [03:07<00:04,  4.40s/it]
[35m|[39m JSON to Vega conversion error rate: [31m90.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.76 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (in a Set of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable': 'Value', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable': 'Value', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a bar plot of the total unemployed youth population of Colombia<0x0A>ax.bar(x=df_col_unemployed_pop['Year'], height=df_col_unemployed_pop['Unemployed Youth'], color='#008888')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Unemployed Youth Population')<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A><0x0A># Set the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_xticklabels([''] + 'Year')<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the title<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Set the title<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihilomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 30.33}, {'x': 'field', 'y': 55.33}, {'x': 'variable': 'Value', 'type': 'quantitative'}}, 'data': {'x': 'variable': 'Value', 'y': 55.33}, {'x': 'field', 'y': 30.33}, {'x': 'variable': 'Value', 'y': 55.33}]}}

100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [03:28<00:00, 10.40s/it]
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df['Year'], df['fertilizer consumption'])<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df['Year'], df['fertilizer consumption'])<0x0A><0x0A># Adding a title<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A># Labelling the x-axis<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Labelling the y-axis<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Saving the plot<0x0A>plt.savefig('fertilizer consumption in Brazil as a percentage of production.png')<0x0A><0x0A># Saving the plot<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 15.66}, {'x': 'field', 'y': 15.66}, {'x': 'variable', 'y': 47.66}, {'x': 'variable', 'y': 15.66}, {'x': 'variable', 'y': 47.66}, {'x': 'variable', 'y': 15.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(g.get_xticklabels(), rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(g.get_xticklabels(), rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(g.get_xticklabels(), rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(g.get_xticklabels(), rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(g.get_xticklabels(), rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_ylabels("AID flow (Avg. US$)
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per hectare')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15,20), color='green', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15,20), color='red', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15,20), color='red', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15,20), color='red', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15,20), color='red', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15,20), color='red', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15,20), color='red', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15,20), color='red', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15,20), color='red', title='Number of procedures to build a warehouse in
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.set_title('Cereal production in Swaziland', fontsize=16)<0x0A>ax.set_xlabel('Year', fontsize=14)<0x0A>ax.set_ylabel('Production in python-tem', fontsize=14)<0x0A>ax.set_ylim(0, 15000)<0x0A><0x0A>ax.set_xticklabels(['ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais', 'ais'
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31mtitle = 'Distance to Frontier score (on scale of 100) of Armenia'<0x0A>ylabel = 'Score ((intranetted to relabeled for relabeled)'<0x0A>xlabel = 'Year'<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 15))<0x0A>ax.scatter(x=df['Year'], y=df['Distance to Frontier score (on scale of 100) of Armenia'], alpha=0.8)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (intranetted to relabeled for relabeled)')<0x0A>ax.set_title(title)<0x0A>ax.set_xticklabels(xlabel)<0x0A>ax.set_yticklabels(ylabel)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_birth_sr_lanka = percentage_birth_sr_lanka.plot(kind='bar', title='Percentage of babies born with low-birthweight in Sri Lanka', color='purple', figsize=(15,15))<0x0A>percentage_birth_sr_lanka.set_xlabel('Year')<0x0A>percentage_birth_sr_lanka.set_ylabel('% of babies')<0x0A>percentage_birth_sr_lanka.set_xticklabels([''] + labels)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 10.03}, {'x': 'field', 'y': 10.03}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'data': {'x': 'Year', 'y': 10.03}, {'x': 'field', 'y': 10.03}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'y': 10.03}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt', color='#1f77b4')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atmospheric Air and Capital (less % of CMV)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atmospheric Air and Capital (less % of CMV)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'variable', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = pd.DataFrame({'Year':['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020', '2021', '2022', '2023', '2024', '2025', '2026', '2027', '2028', '2029', '2030', '2031', '2032', '2033', '2034', '2035', '2036', '2037', '2038', '2039', '2041', '2042', '2043', '2044', '2045', '2046', '2047', '2048', '2049', '2051', '2052', '2053', '2055', '2057', '2058', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '2059', '20
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.76 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 10 [32m[1m | Loss :[39m[22m 2.287510871887207



















 95%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ| 19/20 [01:44<00:06,  6.16s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5380, 'y': 4210}, {'x': 1280, 'y': 838}, {'x': 4380, 'y': 2960}, {'x': 5380, 'y': 4210}, {'x': 2280, 'y': 2110}, {'x': 2280, 'y': 838}, {'x': 4380, 'y': 2110}, {'x': 5380, 'y': 4210}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 7080}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 23.14}, {'x': 'Dog', 'y': 120.24}, {'x': 'Nike', 'y': 48.54}, {'x': 'Apple', 'y': 48.54}, {'x': 'Male', 'y': 23.14}, {'x': 'Rock', 'y': 239.74}, {'x': 'Sedan', 'y': 23.14}, {'x': 'Spanish', 'y': 48.54}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.12}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.07}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.07}, {'x': 'Apple', 'y': 3.86}, {'x': 'Nike', 'y': 12.07}, {'x': 'Red', 'y': 12.07}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.8}, {'x': 255.3, 'y': 13.3}, {'x': 255.3, 'y': 60.8}, {'x': 255.3, 'y': 60.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7556, 'y': 364.56}, {'x': 6756, 'y': 41.59}, {'x': 8756, 'y': 112.11}, {'x': 6756, 'y': 364.56}, {'x': 8756, 'y': 364.56}, {'x': 6756, 'y': 112.11}, {'x': 6756, 'y': 41.59}, {'x': 6756, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200.03}, {'x': 1920, 'y': 16.56}, {'x': 1925, 'y': 16.56}, {'x': 1930, 'y': 35.66}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 59.18}, {'x': 1816, 'y': 28.52}, {'x': 1817, 'y': 69.18}, {'x': 1818, 'y': 79.94}, {'x': 1819, 'y': 80.12}, {'x': 1820, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.14}, {'x': 1866, 'y': 253.14}, {'x': 1870, 'y': 108.14}, {'x': 1876, 'y': 268.62}, {'x': 1879, 'y': 268.62}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 798, 'y': 63.59}, {'x': 698, 'y': 56.14}, {'x': 798, 'y': 63.59}, {'x': 698, 'y': 63.59}, {'x': 798, 'y': 24.14}, {'x': 798, 'y': 63.59}, {'x': 698, 'y': 56.14}, {'x': 798, 'y': 63.59}, {'x': 798, 'y': 63.59}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.01}, {'x': 1821, 'y': 135.64}, {'x': 1828, 'y': 26.62}, {'x': 1835, 'y': 26.62}, {'x': 1841, 'y': 108.64}, {'x': 1847, 'y': 311.14}, {'x': 1854, 'y': 311.14}, {'x': 1861, 'y': 148.64}, {'x': 1867, 'y': 148.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 55.01}, {'x': 1488, 'y': 61.14}, {'x': 3348, 'y': 78.74}, {'x': 4488, 'y': 55.01}, {'x': 2488, 'y': 58.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1924, 'y': 2888}, {'x': 1926, 'y': 2888}, {'x': 1928, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 37.54}, {'x': 1570, 'y': 40.14}, {'x': 1570, 'y': 365.88}, {'x': 1570, 'y': 40.14}, {'x': 1570, 'y': 365.88}, {'x': 1570, 'y': 365.88}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1804, 'y': 4086}, {'x': 1805, 'y': 3628}, {'x': 1806, 'y': 3812}, {'x': 1807, 'y': 3628}, {'x': 1808, 'y': 3628}, {'x': 1810, 'y': 4986}, {'x': 1812, 'y': 4986}, {'x': 1813, 'y': 5758}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 1900}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 1900}, {'x': 1850, 'y': 3400}, {'x': 1855, 'y': 4900}, {'x': 1860, 'y': 1900}, {'x': 1870, 'y': 1900}, {'x': 1875, 'y': 3400}, {'x': 1875, 'y': 1900}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Expent Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1880, 'y': 530}, {'x': 3200, 'y': 625}, {'x': 3200, 'y': 530}, {'x': 1880, 'y': 565}, {'x': 3200, 'y': 625}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:48<00:00,  5.43s/it]



















 95%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ| 19/20 [02:54<00:05,  5.77s/it]
[35m|[39m JSON to Vega conversion error rate: [31m90.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.76 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field': 'Year', 'y': 0.01}, {'x': 'field': 'Value', 'y': 0.01}, {'x': 'field': 'Value', 'y': 0.01}, {'x': 'field': 'Value', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a bar plot of the total unemployed youth population of Colombia<0x0A>ax.bar(x=df_total_unemployed_pop['Year'], height=df_total_unemployed_pop['Unemployed Youth'], color='#008888')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Unemployed Youth Population')<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A><0x0A># Set the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_xticklabels([''] + 'Year')<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the title<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Set the title<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihilomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 30.33}, {'x': 'field', 'y': 55.33}, {'x': 'variable': 'Value', 'type': 'quantitative'}}, 'data': {'x': 'variable': 'Value', 'y': 55.33}, {'x': 'field', 'y': 30.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df['Year'], df['fertilizer consumption in Brazil as a percentage of production'])<0x0A><0x0A># Add a title<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A># Add a x label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Add a y label<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Display the graph<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 15.66}, {'x': 'field', 'y': 15.66}, {'x': 'variable', 'y': 47.66}, {'x': 'variable', 'y': 15.66}, {'x': 'variable', 'y': 47.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A><0x0A>g = sns.catplot(x="Year", y="Net bilateral aid flow", data=net_grenada_df, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(20, 15)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set(xlabel='Year', ylabel='Net Net bilateral aid flow of Grenada from Development Assistance Committee', title='Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A><0x0A># Save the figure<0x0A>plt.savefig("../Images/Net bilateral aid flow of Grenada from Development Assistance Committee.png")<0x0A><0x0A># Show plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per hectare')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse', legend=False, fontsize=16)<0x0A><0x0A># Plot<0x0A>g.set_ylabel('Number of procedures to build a warehouse in Congo (Republic)', fontsize=16)<0x0A>g.set_xlabel('Year', fontsize=16)<0x0A>g.set_xticklabels(['Year', 'Year', 'Year', 'Year'])<0x0A><0x0A># Save Figure<0x0A>plt.savefig('graphs/building_a_warehouse_congo_republic.png')
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((intramental to NORMALLY / NORMALLY)})': {'x': {'field': 'Year', 'type': 'quantitative'}}, 'y': {'field': 'Value', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 1001}, {'x': 'field': 'Value', 'y': 1001}, {'x': 'field': 'Value', 'y': 1001}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>percentage_sr_lanka.plot(kind='bar', ax=ax, color='purple')<0x0A>ax.set_title('Percentage of babies born with low-Birthweight in Sri Lanka')<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_xticklabels([''] + ['Year','Year','Country'])<0x0A>ax.set_yticklabels([''] + ['% of babies','% of babies','Country'])<0x0A>ax.set_xticklabels([''] + [''] + ['+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+'
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 10.03}, {'x': 'field', 'y': 7.8}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'data': {'x': 'Year', 'y': 10.03}, {'x': 'field', 'y': 7.8}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'y': 10.03}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt', color='#1f77b4')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atmospheric Air and Capital (less % of CMV)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atmospheric Air and Capital (less % of CMV)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'variable', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = pd.DataFrame({'Year':['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020'], 'Rating':[rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index]})<0x0A>graph.plot(kind='scatter', x='Year', y='Strength rating (12 Â± 10000)', color='green', s=100, label='Rating regarding strength of legal rights index in Croatia', figsize=(15,15))<0x0A>graph.spines['right'].set_visible(False)<0x0A>graph.spines['top'].set_visible(False)<0x0A>graph.spines['bottom'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['bottom'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.76 [35m|

100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [03:11<00:00,  9.56s/it]
[36m[1mEpoch :[39m[22m 11 [32m[1m | Loss :[39m[22m 1.8701552152633667



















 95%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ| 19/20 [01:40<00:05,  5.19s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4380, 'y': 2960}, {'x': 5360, 'y': 4210}, {'x': 1280, 'y': 838}, {'x': 4380, 'y': 2960}, {'x': 5360, 'y': 4210}, {'x': 4380, 'y': 2960}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 697}, {'x': 'Rock', 'y': 697}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 23.14}, {'x': 'Dog', 'y': 120.24}, {'x': 'Nike', 'y': 48.53}, {'x': 'Apple', 'y': 48.53}, {'x': 'Male', 'y': 23.14}, {'x': 'Rock', 'y': 239.74}, {'x': 'Sedan', 'y': 23.14}, {'x': 'Spanish', 'y': 48.53}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.12}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.02}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.02}, {'x': 'Apple', 'y': 3.86}, {'x': 'Dog', 'y': 8.29}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.8}, {'x': 255.3, 'y': 13.5}, {'x': 255.3, 'y': 60.8}, {'x': 255.3, 'y': 60.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 364.56}, {'x': 6750, 'y': 41.59}, {'x': 8750, 'y': 112.59}, {'x': 6750, 'y': 364.56}, {'x': 2250, 'y': 364.56}, {'x': 2250, 'y': 364.56}, {'x': 6750, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200.03}, {'x': 1920, 'y': 16.52}, {'x': 1925, 'y': 16.52}, {'x': 1930, 'y': 36.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 59.14}, {'x': 1816, 'y': 28.53}, {'x': 1817, 'y': 69.74}, {'x': 1818, 'y': 79.84}, {'x': 1820, 'y': 80.2}, {'x': 1822, 'y': 8.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 252.5}, {'x': 1866, 'y': 252.5}, {'x': 1870, 'y': 110.6}, {'x': 1876, 'y': 268.62}, {'x': 1879, 'y': 268.62}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788.11, 'y': 63.84}, {'x': 686.44, 'y': 32.18}, {'x': 788.11, 'y': 63.84}, {'x': 686.44, 'y': 56.14}, {'x': 788.11, 'y': 63.84}, {'x': 686.44, 'y': 24.14}, {'x': 788.11, 'y': 63.84}, {'x': 686.44, 'y': 56.14}, {'x': 686.44, 'y': 63.84}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1810, 'y': 585.1}, {'x': 1817, 'y': 147.64}, {'x': 1821, 'y': 137.64}, {'x': 1828, 'y': 26.42}, {'x': 1831, 'y': 26.42}, {'x': 1838, 'y': 108.14}, {'x': 1841, 'y': 311.42}, {'x': 1847, 'y': 311.42}, {'x': 1854, 'y': 311.42}, {'x': 1859, 'y': 147.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 55.01}, {'x': 1488, 'y': 61.14}, {'x': 3348, 'y': 78.74}, {'x': 4488, 'y': 55.01}, {'x': 1488, 'y': 61.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1924, 'y': 2888}, {'x': 1927, 'y': 2888}, {'x': 1929, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 37.54}, {'x': 1570, 'y': 40.06}, {'x': 1570, 'y': 365.88}, {'x': 1570, 'y': 40.06}, {'x': 1570, 'y': 365.88}, {'x': 1570, 'y': 365.88}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1804, 'y': 4086}, {'x': 1805, 'y': 3618}, {'x': 1806, 'y': 3812}, {'x': 1807, 'y': 3618}, {'x': 1808, 'y': 3618}, {'x': 1810, 'y': 4986}, {'x': 1812, 'y': 5850}, {'x': 1813, 'y': 5850}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 1950}, {'x': 1835, 'y': 1950}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 1950}, {'x': 1850, 'y': 3400}, {'x': 1855, 'y': 4900}, {'x': 1860, 'y': 1950}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1880, 'y': 565.69}, {'x': 3280, 'y': 624.8}, {'x': 3280, 'y': 527.9}, {'x': 1880, 'y': 527.9}, {'x': 3280, 'y': 624.8}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:45<00:00,  5.28s/it]



















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [04:10<00:00, 12.54s/it]
[35m|[39m JSON to Vega conversion error rate: [31m90.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.75 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable': 'Value', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable': 'Value', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31mgrupo_total_unemployed_pop_col_col = grupo_total_unemployed_pop_col.sort_values('Total unemployed youth population of Colombia', ascending=False)<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot<0x0A>ax.plot(groupe_total_unemployed_pop_col['Year'], groupe_total_unemployed_pop_col['Total unemployed youth population of Colombia'], color='#008755')<0x0A><0x0A># Plot<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.plot(groupe_total_unemployed_pop_col['Year'], groupe_total_unemployed_pop_col['Total unemployed youth population of Colombia'], color='#008755')<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihlomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 30.33}, {'x': 'field', 'y': 55.33}, {'x': 'variable': 'Value', 'type': 'quantitative'}}, 'data': {'x': 'variable': 'Value', 'y': 30.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plot
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df['Year'], df['fertilizer consumption'])<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df['Year'], df['fertilizer consumption'])<0x0A><0x0A># Adding labels<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A># Saving the plot<0x0A>ax.set_ylim(0, 360)<0x0A><0x0A># Saving the plot<0x0A>ax.set_xlim(0, 360)<0x0A><0x0A># Saving the plot<0x0A>ax.set_ylim(0, 360)<0x0A><0x0A># Saving the plot<0x0A>ax.set_xticks(df['Year'].unique())<0x0A>ax.set_xticklabels(['year', 'year','month','month', 'day', 'weekday','month', 'day', 'weekday', 'weekday','month', 'day','month', 'day','month', 'day','month', 'day','month','month', 'day','month','month', 'day','month','month', 'day','month','month', 'day','month','month', 'day','month','month', 'day','month','month','month', 'day','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month','month', 
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 15.66}, {'x': 'field', 'y': 15.66}, {'x': 'variable', 'y': 47.66}, {'x': 'variable', 'y': 15.66}, {'x': 'field', 'y': 47.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(g.get_xticklabels(), rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(g.get_xticklabels(), rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(g.get_xticklabels(), rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(g.get_xticklabels(), rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_ylabels("AID
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per hectare')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'customs_and_other_import_duties', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='red', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='red', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', title
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(18, 18))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31mgrupo_df = grupo_df.sort_values('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.scatter(x= grupo_df['Year'], y= grupo_df['Distance to Frontier score (on scale of 100) of Armenia'], s=100)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (integrated to 100/weighted average score)')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A>ax.set_xticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>percentage_sr_lanka.plot(kind='bar', ax=ax, color='purple')<0x0A>ax.set_title('Percentage of babies born with low-birthweight in Sri Lanka')<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_xticklabels([''] + ['Year','Year','Country'])<0x0A>ax.set_yticklabels([''] + ['% of babies','% of babies','Country'])<0x0A>ax.set_xticklabels([''] + [''] + ['+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 10.03}, {'x': 'field', 'y': 7.8}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'data': {'x': 'Year', 'y': 10.03}, {'x': 'field', 'y': 7.8}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'y': 10.03}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(15,15))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby('Year')['Capita','Capita'].sum()<0x0A><0x0A># Plotting the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.scatter( grupo_df.Year, grupo_df.Capita, color='green')<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Ather Capital (per % of CWD)')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'variable', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'variable', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = pd.DataFrame({'Year':['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020'], 'Rating':[rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index]})<0x0A>graph.plot(kind='scatter', x='Year', y='Rating', color='green', s=100, label='Rating regarding strength of legal rights index in Croatia', figsize=(15,15))<0x0A>graph.spines['right'].set_visible(False)<0x0A>graph.spines['top'].set_visible(False)<0x0A>graph.spines['bottom'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['bottom'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.75 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|          | 0/20 [00:00<?, ?it/s]



















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:41<00:00,  5.10s/it]
  0%|          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4380, 'y': 2960}, {'x': 5360, 'y': 4210}, {'x': 2480, 'y': 838}, {'x': 4380, 'y': 2960}, {'x': 5360, 'y': 4210}, {'x': 2480, 'y': 838}, {'x': 5360, 'y': 4210}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 697}, {'x': 'Rock', 'y': 697}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 23.14}, {'x': 'Dog', 'y': 120.24}, {'x': 'Nike', 'y': 48.74}, {'x': 'Apple', 'y': 48.74}, {'x': 'Male', 'y': 23.14}, {'x': 'Rock', 'y': 239.74}, {'x': 'Sedan', 'y': 23.14}, {'x': 'Spanish', 'y': 48.74}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.02}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.02}, {'x': 'Apple', 'y': 3.86}, {'x': 'Dog', 'y': 8.29}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 13.52}, {'x': 255.3, 'y': 60.52}, {'x': 255.3, 'y': 60.52}, {'x': 255.3, 'y': 60.52}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 364.56}, {'x': 6750, 'y': 41.59}, {'x': 8750, 'y': 112.51}, {'x': 6750, 'y': 364.56}, {'x': 755, 'y': 364.56}, {'x': 6750, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200.03}, {'x': 1920, 'y': 16.56}, {'x': 1925, 'y': 16.56}, {'x': 1930, 'y': 36.06}, {'x': 1931, 'y': 36.06}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 59.14}, {'x': 1816, 'y': 28.53}, {'x': 1817, 'y': 69.78}, {'x': 1818, 'y': 79.84}, {'x': 1820, 'y': 80.2}, {'x': 1822, 'y': 8.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.5}, {'x': 1866, 'y': 252.5}, {'x': 1871, 'y': 110.6}, {'x': 1875, 'y': 268.62}, {'x': 1879, 'y': 268.62}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 63.53}, {'x': 676, 'y': 56.12}, {'x': 712, 'y': 63.53}, {'x': 676, 'y': 56.12}, {'x': 712, 'y': 63.53}, {'x': 712, 'y': 63.53}, {'x': 676, 'y': 24.12}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 585.1}, {'x': 1821, 'y': 139.69}, {'x': 1828, 'y': 26.4}, {'x': 1835, 'y': 26.4}, {'x': 1841, 'y': 108.6}, {'x': 1849, 'y': 311.4}, {'x': 1856, 'y': 148.4}, {'x': 1865, 'y': 150.14}, {'x': 1870, 'y': 585.1}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 61.53}, {'x': 3248, 'y': 55.03}, {'x': 4488, 'y': 55.03}, {'x': 2488, 'y': 78.74}, {'x': 3248, 'y': 61.53}, {'x': 4488, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2890}, {'x': 1924, 'y': 2890}, {'x': 1928, 'y': 2890}, {'x': 1930, 'y': 2890}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 37.55}, {'x': 1570, 'y': 40.05}, {'x': 1570, 'y': 365.5}, {'x': 1570, 'y': 40.05}, {'x': 1570, 'y': 365.5}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1804, 'y': 4086}, {'x': 1806, 'y': 3622}, {'x': 1808, 'y': 3622}, {'x': 1810, 'y': 4964}, {'x': 1812, 'y': 5758}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 1900}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 3400}, {'x': 1850, 'y': 1900}, {'x': 1855, 'y': 4900}, {'x': 1860, 'y': 3400}, {'x': 1870, 'y': 1900}, {'x': 1875, 'y': 3400}, {'x': 1880, 'y': 1900}, {'x': 1885, 'y': 1900}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1780, 'y': 527.8}, {'x': 3780, 'y': 624.8}, {'x': 3780, 'y': 527.8}, {'x': 3780, 'y': 624.8}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|



















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [04:00<00:00, 12.03s/it]
[35m|[39m JSON to Vega conversion error rate: [31m80.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.1 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.83 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31mgrupo_total_unemployed_pop_col_col = grupo_total_unemployed_pop_col.sort_values('Total unemployed youth population of Colombia', ascending=False)<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15, 15))<0x0A><0x0A># Plot<0x0A>ax.plot(groupe_total_unemployed_pop_col['Year'], groupe_total_unemployed_pop_col['Total unemployed youth population of Colombia'], color='#11A6D9')<0x0A><0x0A># Plot<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.plot(groupe_total_unemployed_pop_col['Year'], groupe_total_unemployed_pop_col['Total unemployed youth population of Colombia'], color='#11A6D9')<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (% of trillemmonial Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.2}, {'x': 'field', 'y': 30.2}, {'x': 'variable', 'y': 30.2}, {'x': 'field', 'y': 55.2}, {'x': 'variable', 'y': 30.2}, {'x': 'field', 'y': 55.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(25,25))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.set_style("whitegrid")<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production', 'fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>g = grupo_bairro.plot(kind='line', x='Year', y='Number of Days', color='black', <0x0A>                   title='Time required to register a property in Sanoa', figsize=(15, 15))<0x0A><0x0A>g.set_xlabel('Year')<0x0A>g.set_ylabel('Number of Days')<0x0A><0x0A>g.set_title('Time required to register a property in Sanoa')<0x0A>g.set_xticklabels(['Year', 'Year'])<0x0A>g.set_yticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 15.66}, {'x': 'field', 'y': 15.66}, {'x': 'variable', 'y': 47.66}, {'x': 'variable', 'y': 15.66}, {'x': 'field', 'y': 47.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A><0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year", fontsize=16)<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year", fontsize=16)<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xlabels("Year", fontsize=16)<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year", fontsize=16)<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g.set_ylabels("AID flow (Avg. US$)")<0x0A>g.set_ylabels("A
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per hectare')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, x, y, ylabel, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># 1. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 2. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 3. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 4. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 5. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 6. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 7. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 8. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 9. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 10. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 11. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 12. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 13. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 14. Custom and other import duties (as % of revenue)<0x0A># 15. Custom and other import duties (as % of revenue)<0x0A># 16. Custom and other import duties (as % of revenue)<0x0A># 17. Custom and other import duties (as % of revenue)<0x0A># 18. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='red', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='red', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', title
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((intramental to housing) and recuperation)}}, 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 100}, {'x': 'field', 'y': 100}, {'x': 'type': 'quantitative'}}, 'y': 100}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>percentage_sr_lanka.plot(kind='bar', ax=ax, color='purple')<0x0A>ax.set_title('Percentage of babies born with low-birthweight in Sri Lanka')<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_xticklabels([''] + ['Year','Year','Country'])<0x0A>ax.set_yticklabels([''] + ['% of babies','% of babies','Country'])<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'variable', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(15,15))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby('Year')['Capita','Capita'].sum()<0x0A><0x0A># Plotting the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.scatter(grupos_df.Year, grupo_df.Capita, color='green')<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Ather Capital (per % of CWD)')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'variable', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'variable', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.1 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.83 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 13 [32m[1m | Loss :[39m[22m 1.7376481294631958



















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:42<00:00,  5.12s/it]
  0%|          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4380, 'y': 2960}, {'x': 5360, 'y': 4210}, {'x': 2480, 'y': 848}, {'x': 4380, 'y': 2960}, {'x': 5360, 'y': 4210}, {'x': 4380, 'y': 2960}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 697}, {'x': 'Rock', 'y': 697}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 23.14}, {'x': 'Dog', 'y': 120.24}, {'x': 'Nike', 'y': 48.06}, {'x': 'Apple', 'y': 48.06}, {'x': 'Male', 'y': 23.14}, {'x': 'Rock', 'y': 239.74}, {'x': 'Sedan', 'y': 23.14}, {'x': 'Spanish', 'y': 48.06}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.48}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.02}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.02}, {'x': 'Apple', 'y': 3.86}, {'x': 'Dog', 'y': 8.29}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 154.18, 'y': 60.5}, {'x': 243.18, 'y': 13.5}, {'x': 243.18, 'y': 60.5}, {'x': 154.18, 'y': 60.5}, {'x': 243.18, 'y': 60.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 364.56}, {'x': 6750, 'y': 41.59}, {'x': 755, 'y': 364.56}, {'x': 6750, 'y': 114.11}, {'x': 755, 'y': 364.56}, {'x': 6750, 'y': 41.59}, {'x': 755, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200.03}, {'x': 1919, 'y': 16.56}, {'x': 1922, 'y': 16.56}, {'x': 1929, 'y': 16.56}, {'x': 1932, 'y': 36.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 59.11}, {'x': 1816, 'y': 28.53}, {'x': 1818, 'y': 70.64}, {'x': 1819, 'y': 80.02}, {'x': 1820, 'y': 9.21}, {'x': 1822, 'y': 8.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1864, 'y': 252.5}, {'x': 1866, 'y': 252.5}, {'x': 1871, 'y': 110.69}, {'x': 1877, 'y': 268.69}, {'x': 1881, 'y': 268.69}, {'x': 1886, 'y': 268.69}, {'x': 1891, 'y': 268.69}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 710, 'y': 63.84}, {'x': 670, 'y': 56.14}, {'x': 710, 'y': 63.84}, {'x': 710, 'y': 24.14}, {'x': 710, 'y': 63.84}, {'x': 710, 'y': 24.14}, {'x': 710, 'y': 63.84}, {'x': 710, 'y': 63.84}, {'x': 710, 'y': 56.14}, {'x': 710, 'y': 63.84}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 585.1}, {'x': 1821, 'y': 139.69}, {'x': 1828, 'y': 27.9}, {'x': 1835, 'y': 27.9}, {'x': 1841, 'y': 106.4}, {'x': 1849, 'y': 311.4}, {'x': 1856, 'y': 150.25}, {'x': 1865, 'y': 148.5}, {'x': 1870, 'y': 585.1}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 61.53}, {'x': 3248, 'y': 55.03}, {'x': 1488, 'y': 55.03}, {'x': 3248, 'y': 61.53}, {'x': 4488, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2890}, {'x': 1924, 'y': 2890}, {'x': 1928, 'y': 2890}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.14}, {'x': 1570, 'y': 40.1}, {'x': 1570, 'y': 365.8}, {'x': 1570, 'y': 40.1}, {'x': 1570, 'y': 365.8}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1805, 'y': 3618}, {'x': 1808, 'y': 3618}, {'x': 1810, 'y': 4948}, {'x': 1812, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 1970}, {'x': 1835, 'y': 1970}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 4900}, {'x': 1850, 'y': 1970}, {'x': 1855, 'y': 3400}, {'x': 1860, 'y': 1970}, {'x': 1870, 'y': 1970}, {'x': 1880, 'y': 1970}, {'x': 1890, 'y': 1970}, {'x': 1895, 'y': 1970}, {'x': 1899, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1730, 'y': 530}, {'x': 3240, 'y': 625}, {'x': 3240, 'y': 530}, {'x': 1730, 'y': 565}, {'x': 3240, 'y': 625}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|




















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [03:34<00:00, 10.75s/it]
[35m|[39m JSON to Vega conversion error rate: [31m85.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.12 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.81 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31mgrupo_total_unemployed_pop_col_col = grupo_total_unemployed_pop_col.sort_values('Total unemployed youth population of Colombia', ascending=False)<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15, 15))<0x0A><0x0A># Plot<0x0A>ax.plot(groupe_total_unemployed_pop_col['Year'], groupe_total_unemployed_pop_col['Total unemployed youth population of Colombia'], color='#11A650')<0x0A><0x0A># Plot<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.plot(groupe_total_unemployed_pop_col['Year'], groupe_total_unemployed_pop_col['Total unemployed youth population of Colombia'], color='#11A650')<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (% of trillemmonal discharges)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.14}, {'x': 'field', 'y': 30.1}, {'x': 'type': 'quantitative', 'y': 55.14}, {'x': 'field', 'y': 30.1}, {'x': 'field', 'y': 55.14}, {'x': 'variable', 'y': 30.1}, {'x': 'field', 'y': 55.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plot
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production', 'Year', 'Performance of fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>g = grupo_bairro.plot(kind='line', x='Year', y='Number of Days', color='black', <0x0A>                   title='Time required to register a property in Sanoa', figsize=(15, 15))<0x0A><0x0A>g.set_xlabel('Year')<0x0A>g.set_ylabel('Number of Days')<0x0A><0x0A>g.set_title('Time required to register a property in Sanoa')<0x0A>g.set_xticklabels(['Year', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 18.14}, {'x': 'field', 'y': 18.14}, {'x': 'variable', 'y': 47.66}, {'x': 'variable', 'y': 18.14}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 18.14}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A><0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.set_size_inches(15,15)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set(xlabel='Year', ylabel='AID flow', title='Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A><0x0A># Save the figure<0x0A>plt.savefig("net_bil_grenada_net_bilateral_aid_flow_Grenada.png", dpi=300, bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per hectare')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, x, y, ylabel, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># 1. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 2. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 3. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 4. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 5. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 6. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 7. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 8. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 9. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 10. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 11. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 12. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 13. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 14. Custom and other import duties (as % of revenue)<0x0A># 15. Custom and other import duties (as % of revenue)<0x0A># 16. Custom and other import duties (as % of revenue)<0x0A># 17. Custom and other import duties (as % of revenue)<0x0A># 18. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', edgecolor='black', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='red', edgecolor='black', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='red', edgecolor='black', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', edgecolor='black', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', edgecolor='black', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', edgecolor='black', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', edgecolor='black', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', edgecolor='black', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', edgecolor='black
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((integrated to totalling)/maximum(y, axis=1)})': {'x': {'field': 'Year', 'type': 'quantitative'}}, 'y': {'field': 'Value', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.53}, {'x': 'field': 'Value', 'y': 18.53}, {'x': 'field': 'Value', 'y': 18.53}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Birthday']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>percentage_sr_lanka.plot(kind='bar', ax=ax, color='purple')<0x0A>ax.set_title('Percentage of babies born with low-birthweight in Sri Lanka')<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_xticklabels([''] + ['Year','Year','2000'])<0x0A>ax.set_yticklabels([''] + ['% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','% of babies','%
  0%|          | 0/20 [00:00<?, ?it/s]



















 95%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ| 19/20 [01:35<00:05,  5.68s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5380, 'y': 4200}, {'x': 2280, 'y': 838}, {'x': 4620, 'y': 2960}, {'x': 5380, 'y': 4200}, {'x': 2280, 'y': 838}, {'x': 4620, 'y': 2960}, {'x': 5380, 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 697}, {'x': 'Rock', 'y': 697}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 23.44}, {'x': 'Dog', 'y': 120.24}, {'x': 'Nike', 'y': 48.06}, {'x': 'Apple', 'y': 48.06}, {'x': 'Male', 'y': 23.44}, {'x': 'Rock', 'y': 239.74}, {'x': 'Sedan', 'y': 23.44}, {'x': 'Spanish', 'y': 48.06}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.62}, {'x': 'USA', 'y': 152.48}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.02}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.02}, {'x': 'Apple', 'y': 3.86}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.8}, {'x': 255.3, 'y': 13.5}, {'x': 255.3, 'y': 60.8}, {'x': 255.3, 'y': 60.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 364.56}, {'x': 6750, 'y': 41.59}, {'x': 3750, 'y': 364.56}, {'x': 6750, 'y': 114.11}, {'x': 755, 'y': 364.56}, {'x': 6750, 'y': 364.56}, {'x': 755, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 198.52}, {'x': 1919, 'y': 198.52}, {'x': 1924, 'y': 17.52}, {'x': 1928, 'y': 17.52}, {'x': 1930, 'y': 36.22}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.98}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 79.98}, {'x': 1820, 'y': 80.2}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.5}, {'x': 1866, 'y': 252.5}, {'x': 1869, 'y': 268.5}, {'x': 1871, 'y': 108.5}, {'x': 1875, 'y': 268.5}, {'x': 1879, 'y': 268.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 710, 'y': 63.84}, {'x': 690, 'y': 56.12}, {'x': 710, 'y': 63.84}, {'x': 710, 'y': 24.14}, {'x': 710, 'y': 63.84}, {'x': 710, 'y': 24.14}, {'x': 710, 'y': 63.84}, {'x': 710, 'y': 56.12}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1812, 'y': 585.5}, {'x': 1817, 'y': 147.5}, {'x': 1825, 'y': 25.5}, {'x': 1829, 'y': 25.5}, {'x': 1835, 'y': 25.5}, {'x': 1841, 'y': 109.5}, {'x': 1847, 'y': 310.5}, {'x': 1854, 'y': 310.5}, {'x': 1859, 'y': 147.5}, {'x': 1865, 'y': 150.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 61.53}, {'x': 3248, 'y': 55.03}, {'x': 1488, 'y': 55.03}, {'x': 3248, 'y': 61.53}, {'x': 4488, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2890}, {'x': 1927, 'y': 2890}, {'x': 1930, 'y': 2890}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 37.55}, {'x': 1570, 'y': 37.55}, {'x': 22000, 'y': 365.5}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1805, 'y': 3618}, {'x': 1808, 'y': 3618}, {'x': 1810, 'y': 4928}, {'x': 1812, 'y': 4928}, {'x': 1814, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3408}, {'x': 1835, 'y': 1912}, {'x': 1840, 'y': 3408}, {'x': 1845, 'y': 4884}, {'x': 1850, 'y': 1912}, {'x': 1860, 'y': 3408}, {'x': 1870, 'y': 1912}, {'x': 1880, 'y': 1912}, {'x': 1890, 'y': 1912}, {'x': 1895, 'y': 3408}, {'x': 1899, 'y': 3408}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1730, 'y': 527.8}, {'x': 373, 'y': 624.8}, {'x': 3730, 'y': 527.8}, {'x': 1730, 'y': 527.8}, {'x': 3730, 'y': 624.8}]}}
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:39<00:00,  4.96s/it]
  0%|          | 0/20 [00:00<?, ?it/s]
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|



















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [03:55<00:00, 11.78s/it]
[35m|[39m JSON to Vega conversion error rate: [31m75.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.81 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable', 'y': 0.03}, {'x': 'field', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31mgrupo_total_unemployed_pop_col_col = grupo_total_unemployed_pop_col.sort_values('Total unemployed youth population of Colombia', ascending=False)<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15, 15))<0x0A><0x0A># Plot<0x0A>ax.plot(groupe_total_unemployed_pop_col['Year'], groupe_total_unemployed_pop_col['Total unemployed youth population of Colombia'], color='#1f77b4')<0x0A><0x0A># Plot<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.plot(groupe_total_unemployed_pop_col['Year'], groupe_total_unemployed_pop_col['Total unemployed youth population of Colombia'], color='#1f77b4')<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihlomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.2}, {'x': 'field', 'y': 30.2}, {'x': 'variable', 'y': 30.2}, {'x': 'field', 'y': 55.2}, {'x': 'variable', 'y': 30.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plot
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production', 'Year', 'Performance of fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>g = grupo_bairro.plot(kind='line', x='Year', y='Number of Days', color='black', <0x0A>                   title='Time required to register a property in Sanoa', figsize=(15, 15))<0x0A><0x0A>g.set_xlabel('Year')<0x0A>g.set_ylabel('Number of Days')<0x0A><0x0A>g.set_title('Time required to register a property in Sanoa')<0x0A>g.set_xticklabels(['Year', '', 'Month', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 18.12}, {'x': 'field', 'y': 37.66}, {'x': 'variable', 'y': 49.66}, {'x': 'field', 'y': 18.12}, {'x': 'variable', 'y': 47.66}, {'x': 'variable', 'y': 18.12}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A><0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=10, aspect=1.5)<0x0A>g.fig.set_size_inches(15, 15)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.05, x=0.55, xtext=0.95, y=0.95)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.2, hspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.2)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per hectare')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, x, y, ylabel, ylabel, ylabel, title, ylabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># 1. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 2. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 3. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 4. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 5. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 6. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 7. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 8. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 9. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 10. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 11. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 12. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 13. Custom and other import duties (as % of revenue)<0x0A># 14. Custom and other import duties (as % of revenue)<0x0A># 15. Custom and other import duties (as % of revenue)<0x0A># 16. Custom and other import duties (as % of revenue)<0x0A># 17. Custom and other import duties (as % of revenue)<0x0A># 18. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', edgecolor='black', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='red', edgecolor='black', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='red', edgecolor='black', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', edgecolor='black', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', edgecolor='black', title='Number of procedures to build a warehouse in Congo (Republic)', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', edgecolor='black', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', edgecolor='black', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', edgecolor='black', xlabel='Year', ylabel='Number of procedures to build a warehouse')<0x0A><0x0A># Plot<0x0A>g = grupo_df.plot(kind='bar', figsize=(15, 20), color='green', edgecolor='black
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to totaling)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 100}, {'x': 'field', 'y': 100}, {'x': 'type': 'quantitative', 'y': 100}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_by_year = df.groupby(['Year', 'Country']).sum()<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_by_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.reset_index(inplace=True)<0x0A>percentage_by_year.reset_index(inplace=True)
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'variable', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat = pd.DataFrame(households_sat, columns = ["Year", "% of households"])<0x0A>percentage_households_sat.plot(kind = "bar", figsize = (20, 20), color = "purple")<0x0A>plt.title("Percentage of households in Russian Federation that uses iodized salt")<0x0A>plt.xlabel("Year")<0x0A>plt.ylabel("% of households")<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby('Year')<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Consumption of Atheritage (%) (Year of CGM)'], color='green')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Atheritage (%) (Year of CGM)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Consumption of Atheritage (%) (Year of CGM)'], color='red')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Atheritage (%) (Year of CGM)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Consumption of Atheritage (%) (Year of CGM)'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Atheritage (%) (Year of CGM)')<0x0A>ax.set_ylabel('Consumption of Atheritage (%) (Year of CGM)')<0x0A><0x0A># Plotting the graph<0x0A>ax.set_ylim(0, 16)<0x0A><0x0A># Plotting the graph<0x0A>ax.set_ylim(0, 16)<0x0A><0x0A># Plotting the graph<0x0A>ax.set_xticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'variable', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'variable', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C. weak (2e (0000)')}}, 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.01}, {'x': 'field', 'y': 2.01}, {'x': 'y': 2.01}, {'x': 'field', 'y': 2.01}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.81 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 15 [32m[1m | Loss :[39m[22m 1.8788403272628784



















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:46<00:00,  5.35s/it]
  0%|          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4380, 'y': 2960}, {'x': 5280, 'y': 4210}, {'x': 2280, 'y': 848}, {'x': 4380, 'y': 2100}, {'x': 5280, 'y': 4210}, {'x': 4380, 'y': 2960}, {'x': 5280, 'y': 4210}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 691}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.24}, {'x': 'Nike', 'y': 48.03}, {'x': 'Apple', 'y': 48.03}, {'x': 'Male', 'y': 24.11}, {'x': 'Rock', 'y': 24.11}, {'x': 'Sedan', 'y': 24.11}, {'x': 'Spanish', 'y': 48.03}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.02}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.02}, {'x': 'Apple', 'y': 3.86}, {'x': 'Dog', 'y': 8.29}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 154.18, 'y': 60.5}, {'x': 243.84, 'y': 13.49}, {'x': 243.84, 'y': 60.5}, {'x': 243.84, 'y': 60.5}, {'x': 243.84, 'y': 60.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 364.56}, {'x': 755, 'y': 364.56}, {'x': 6750, 'y': 41.59}, {'x': 6750, 'y': 114.11}, {'x': 755, 'y': 364.56}, {'x': 3750, 'y': 364.56}, {'x': 755, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 198.52}, {'x': 1919, 'y': 198.52}, {'x': 1923, 'y': 17.52}, {'x': 1928, 'y': 17.52}, {'x': 1929, 'y': 36.22}, {'x': 1932, 'y': 36.22}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'Co2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.1}, {'x': 1817, 'y': 28.52}, {'x': 1819, 'y': 80.1}, {'x': 1821, 'y': 8.52}, {'x': 1824, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.5}, {'x': 1866, 'y': 252.5}, {'x': 1871, 'y': 110.69}, {'x': 1875, 'y': 268.69}, {'x': 1879, 'y': 268.69}, {'x': 1883, 'y': 268.69}, {'x': 1887, 'y': 108.52}, {'x': 1891, 'y': 268.69}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712.57, 'y': 63.74}, {'x': 697.2, 'y': 56.12}, {'x': 712.57, 'y': 63.74}, {'x': 697.2, 'y': 63.74}, {'x': 712.57, 'y': 24.14}, {'x': 712.57, 'y': 63.74}, {'x': 697.2, 'y': 56.12}, {'x': 697.2, 'y': 63.74}, {'x': 697.2, 'y': 63.74}, {'x': 697.2, 'y': 63.74}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1810, 'y': 585.1}, {'x': 1817, 'y': 147.48}, {'x': 1825, 'y': 25.42}, {'x': 1828, 'y': 25.42}, {'x': 1835, 'y': 25.42}, {'x': 1840, 'y': 105.61}, {'x': 1847, 'y': 310.24}, {'x': 1855, 'y': 310.24}, {'x': 1860, 'y': 147.48}, {'x': 1865, 'y': 150.24}, {'x': 1870, 'y': 585.1}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4480, 'y': 61.53}, {'x': 3240, 'y': 55.03}, {'x': 4480, 'y': 55.03}, {'x': 3240, 'y': 61.53}, {'x': 1480, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1927, 'y': 2888}, {'x': 1933, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 37.55}, {'x': 1570, 'y': 37.55}, {'x': 1570, 'y': 40.25}, {'x': 1570, 'y': 365.85}, {'x': 1570, 'y': 40.25}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1805, 'y': 3618}, {'x': 1806, 'y': 3618}, {'x': 1807, 'y': 3618}, {'x': 1810, 'y': 4924}, {'x': 1813, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 3400}, {'x': 1833, 'y': 1900}, {'x': 1840, 'y': 3400}, {'x': 1846, 'y': 1900}, {'x': 1854, 'y': 3400}, {'x': 1864, 'y': 3400}, {'x': 1874, 'y': 3400}, {'x': 1884, 'y': 1900}, {'x': 1894, 'y': 1900}, {'x': 1898, 'y': 3400}, {'x': 1899, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1730, 'y': 527.8}, {'x': 373, 'y': 624.8}, {'x': 3730, 'y': 527.8}, {'x': 1730, 'y': 527.8}, {'x': 3730, 'y': 624.8}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|


















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [03:40<00:00, 11.01s/it]
[35m|[39m JSON to Vega conversion error rate: [31m80.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.8 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31mgrupo_total_unemployed_pop_col_col = grupo_total_unemployed_pop_col.sort_values('Total unemployed youth population of Colombia', ascending=False)<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15, 15))<0x0A><0x0A># Plot<0x0A>ax.plot(groupe_total_unemployed_pop_col['Year'], groupe_total_unemployed_pop_col['Total unemployed youth population of Colombia'], color='#1f77b4')<0x0A><0x0A># Plot<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.plot(groupe_total_unemployed_pop_col['Year'], groupe_total_unemployed_pop_col['Total unemployed youth population of Colombia'], color='#1f77b4')<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (% of trillemmonal discharges)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.13}, {'x': 'field', 'y': 30.2}, {'x': 'type': 'quantitative', 'y': 6.2}, {'x': 'field', 'y': 30.2}, {'x': 'field', 'y': 55.13}, {'x': 'variable', 'y': 30.2}, {'x': 'field', 'y': 55.13}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plot
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>g = grupo_bairro.plot(kind='line', x='Year', y='Number of Days', color='black', <0x0A>                   title='Time required to register a property in Sanoa', figsize=(15, 15))<0x0A><0x0A>g.set_xlabel('Year')<0x0A>g.set_ylabel('Number of Days')<0x0A><0x0A>g.set_title('Time required to register a property in Sanoa')<0x0A>g.set_xticklabels(['Year', '', 'Month', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'type', 'y': 37.4}, {'x': 'field', 'y': 49.66}, {'x': 'variable', 'y': 19.66}, {'x': 'field', 'y': 19.66}, {'x': 'variable', 'y': 47.66}, {'x': 'variable', 'y': 19.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A><0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=10, aspect=1.5)<0x0A>g.fig.set_size_inches(15, 15)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.05, x=0.55, xtext=0.95, y=0.95)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3, hspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per hectare')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, x, y, ylabel, ylabel, ylabel, title, ylabel, ylabel, ylabel, title, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># 1. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 2. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 3. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 4. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 5. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 6. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 7. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 8. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 9. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 10. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 11. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 12. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 13. Custom and other import duties (as % of revenue)<0x0A># 14. Custom and other import duties (as % of revenue)<0x0A># 15. Custom and other import duties (as % of revenue)<0x0A># 16. Custom and other import duties (as % of revenue)<0x0A># 17. Custom and other import duties (as % of revenue)<0x0A># 18. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plot<0x0A> grupo_df.plot(kind='bar', figsize=(15, 20), color='green')<0x0A>plt.title('Number of procedures to build a warehouse in Congo (Republic)', fontsize=20)<0x0A>plt.xlabel('Year', fontsize=15)<0x0A>plt.ylabel('Number of procedures to build a warehouse', fontsize=15)<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(fontsize=15)<0x0A>plt.ylabel('Number of procedures to build a warehouse', fontsize=15)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mvisualize_production_year(df_swa_production, 'Swa', 'Year', 'Cereal production in Swaziland', 'Cereal production in Swaziland', '')
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((demand for housing development) & (renovating)})': {'x': {'field': 'Year', 'type': 'quantitative'}}, 'y': {'field': 'Value', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.01}, {'x': 'field': 'Value', 'y': 12.01}, {'x': 'field': 'Value', 'y': 12.01}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_birth_year = df_birth.groupby(['Year', 'Country']).size()<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['Percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'variable', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat = pd.DataFrame(households_sat, columns = ["Year", "% of households"])<0x0A>percentage_households_sat.plot(kind = "bar", figsize = (20, 20), color = "purple")<0x0A>plt.title("Percentage of households in Russian Federation that uses iodized salt")<0x0A>plt.xlabel("Year")<0x0A>plt.ylabel("% of households")<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A>grupos = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A>grupos.plot(kind='scatter', x='Year', y='ConvertedCompensationOfAllAndCapitali(Per$^{'CITY', 'Year', 'Capital', 'Value', 'Median', 'Median', 'Median', 'Year', 'Median', 'Year', 'Median', 'Year', 'Median', 'Year', 'Median', 'Year', 'Median', 'Year', 'Median', 'Year', 'Median', 'Year', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median', 'Median'
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'data', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'data', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C. weak (C
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.8 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 16 [32m[1m | Loss :[39m[22m 1.8055633306503296




















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:39<00:00,  4.98s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4210}, {'x': 1844, 'y': 838}, {'x': 4676, 'y': 2950}, {'x': 2686, 'y': 2104}, {'x': 4676, 'y': 2950}, {'x': 5580, 'y': 4210}, {'x': 2686, 'y': 2104}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 708}, {'x': 'Rock', 'y': 691}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 23.44}, {'x': 'Dog', 'y': 120.24}, {'x': 'Nike', 'y': 48.06}, {'x': 'Apple', 'y': 48.06}, {'x': 'Male', 'y': 23.44}, {'x': 'Rock', 'y': 239.74}, {'x': 'Sedan', 'y': 23.44}, {'x': 'Spanish', 'y': 48.06}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.62}, {'x': 'USA', 'y': 152.47}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.02}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.02}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 154.57, 'y': 60.73}, {'x': 243.85, 'y': 13.48}, {'x': 54.57, 'y': 60.73}, {'x': 243.85, 'y': 60.73}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 115.11}, {'x': 6750, 'y': 41.19}, {'x': 2750, 'y': 364.19}, {'x': 6750, 'y': 115.11}, {'x': 755, 'y': 227.01}, {'x': 755, 'y': 364.19}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 200}, {'x': 1919, 'y': 194}, {'x': 1923, 'y': 16}, {'x': 1928, 'y': 16}, {'x': 1929, 'y': 36}, {'x': 1932, 'y': 36}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 69.99}, {'x': 1819, 'y': 80.1}, {'x': 1820, 'y': 9.2}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.5}, {'x': 1866, 'y': 268.69}, {'x': 1869, 'y': 268.69}, {'x': 1872, 'y': 110.66}, {'x': 1877, 'y': 268.69}, {'x': 1882, 'y': 268.69}, {'x': 1886, 'y': 268.69}, {'x': 1890, 'y': 268.69}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 710, 'y': 63.84}, {'x': 670, 'y': 32.18}, {'x': 710, 'y': 63.84}, {'x': 710, 'y': 24.01}, {'x': 710, 'y': 63.84}, {'x': 710, 'y': 56.12}, {'x': 710, 'y': 23.84}, {'x': 710, 'y': 63.84}, {'x': 710, 'y': 63.84}, {'x': 710, 'y': 23.84}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1810, 'y': 585.53}, {'x': 1817, 'y': 147.48}, {'x': 1825, 'y': 26.46}, {'x': 1830, 'y': 26.46}, {'x': 1837, 'y': 147.48}, {'x': 1845, 'y': 310.24}, {'x': 1850, 'y': 310.24}, {'x': 1857, 'y': 147.48}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 61.53}, {'x': 3244, 'y': 55.03}, {'x': 1488, 'y': 55.03}, {'x': 3244, 'y': 61.53}, {'x': 4488, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1924, 'y': 2888}, {'x': 1930, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 37.55}, {'x': 1570, 'y': 37.55}, {'x': 725, 'y': 121.51}, {'x': 1570, 'y': 365.85}, {'x': 1570, 'y': 40.15}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4296}, {'x': 1805, 'y': 3610}, {'x': 1808, 'y': 3610}, {'x': 1810, 'y': 4948}, {'x': 1813, 'y': 5760}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4870}, {'x': 1833, 'y': 3385}, {'x': 1840, 'y': 3400}, {'x': 1846, 'y': 1910}, {'x': 1856, 'y': 4870}, {'x': 1864, 'y': 3400}, {'x': 1874, 'y': 1910}, {'x': 1884, 'y': 1910}, {'x': 1894, 'y': 1910}, {'x': 1898, 'y': 3400}, {'x': 1899, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1730, 'y': 527.8}, {'x': 373, 'y': 624.8}, {'x': 1730, 'y': 564.64}, {'x': 3730, 'y': 624.8}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------

















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [02:57<00:00,  8.88s/it]
[35m|[39m JSON to Vega conversion error rate: [31m75.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.19 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.69 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (lbs. per GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable', 'y': 0.03}, {'x': 'field', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 18.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 18.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (% of trillemmonal discharges)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.53}, {'x': 'field', 'y': 30.2}, {'x': 'type': 'quantitative'}}, 'y': 55.53}, {'x': 'field', 'y': 30.2}, {'x': 'variable', 'y': 30.2}, {'x': 'field', 'y': 30.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plot
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production', 'Year', 'Performance of fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = {'x': 'Year', 'y': 'Number of Days', 'data': {'x': 'Year', 'y': 16.5, 'data': {'x': 'Year', 'y': 16.5, 'data': {'x': 'Year', 'y': 16.5, 'data': {'x': 'Year', 'y': 16.5, 'data': {'x': 'Year', 'y': 16.5, 'data': FORMAL_DATASETS','mode': 'lines'}},'mode': 'lines'}}, 'data': {'x': 'Year', 'y': 16.5, 'data': FORMAL_DATASETS','mode': 'lines'}}, 'data': {'x': 'Year', 'y': 16.5,'mode': 'lines Could Not Be Replaced', 'y': 16.5,'mode': 'lines Could Not Be Replaced','mode': 'lines Could Not Be Replaced','mode': 'lines Could Not Be Replaced','mode': 'lines Could Not Be Replaced','mode': 'lines Could Not Be Replaced','mode': 'lines Could Not Be Replaced','mode': 'lines Could Not Be Replaced','mode': 'lines Could Not Be Replaced','mode': 'lines Could Not Be Replaced','mode': 'lines Could Not Be Replaced','mode': 'lines Could Not Be Replaced','mode': 'lines Could Not Be Replaced','mode': 'lines Could Not Be Replaced','mode': 'lines Could Not Be Replaced','mode': 'lines Could Not Be Replaced','mode': 'lines Could Not Be Replaced','mode': 'lines Could Not Be Replaced','mode': 'lines Could Not Be Replaced','mode': 'lines Could Not Be Replaced','mode': 'lines Could Not Be Replaced','mode': 
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'field', 'y': 47.66}, {'x': 'type', 'y': 37.46}, {'x': 'field', 'y': 49.56}, {'x': 'type', 'y': 37.46}, {'x': 'field', 'y': 49.56}, {'x': 'type', 'y': 18.55}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 18.55}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A><0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bilateral_aid_flow_Grenada, kind="bar", palette="Reds_r", height=10, aspect=1.5)<0x0A>g.fig.set_size_inches(15, 15)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set(xlabel='Year', ylabel='AID flow', title='Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A><0x0A># Save the figure<0x0A>plt.savefig("../Images/net_bilateral_aid_flow_Grenada.png")<0x0A><0x0A># Show plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per hectare')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, x, y, ylabel, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># 1. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 2. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 3. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 4. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 5. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 6. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 7. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 8. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 9. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 10. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 11. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 12. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 13. Custom and other import duties (as % of revenue)<0x0A># 14. Custom and other import duties (as % of revenue)<0x0A># 15. Custom and other import duties (as % of revenue)<0x0A># 16. Custom and other import duties (as % of revenue)<0x0A># 17. Custom and other import duties (as % of revenue)<0x0A># 18. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plot<0x0A> grupo_df.plot(kind='bar', figsize=(15, 20), color='green')<0x0A>plt.title('Number of procedures to build a warehouse in Congo (Republic)')<0x0A>plt.ylabel('Number of procedures to build a warehouse')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mvisualize_production_year(df_swa_production, 'Swa', 'Year', 'Cereal production in Swaziland', '')
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to recharge memory)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 103.85}, {'x': 'field', 'y': 103.85}, {'x': 'type': 'quantitative', 'y': 103.85}, {'x': 'field', 'y': 103.85}, {'x': 'variable', 'y': 103.85}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_birth_year = df_sr_lanka[['year','birth_year']].groupby(['year','birth_year']).sum()<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.rename(columns={'index':'year','birth_year':'birth_year'},inplace=True)<0x0A>percentage_birth_year.rename(columns={'index':'birth_year','birth_year':'birth_year'},inplace=True)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A>fig.patch.set_facecolor('white')<0x0A>fig.patch.set_alpha(0.5)<0x0A>fig.subplots_adjust(top=0.95)<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_color('white')<0x0A>ax.spines['left'].set_color('white')<0x0A>ax.spines['right'].set_color('white')<0x0A>ax.spines['left'].set_color('white')<0x0A>ax.spines['right'].set_color('white')<0x0A>ax.spines['left'].set_color('white')<0x0A>ax.spines['right'].set_color('white')<0x0A>ax.spines['left'].set_color('white')<0x0A>ax.spines['right'].set_color('white')<0x0A>ax.spines['left'].set_color('white')<0x0A>ax.spines['right'].set_color('white')<0x0A>ax.spines['left'].set_color('white')<0x0A>ax.spines['right'].set_color('white')<0x0A>ax.spines['left'].set_color('white')<0x0A>ax.spines['right'].set_color('white')<0x0A>ax.spines['left'].set_color('white')<0x0A>ax.spines['right'].set_color('white')<0x0A>ax.spines['left'].set_color('white')<0x0A>ax.spines['right'].set_color('white')<0x0A>ax.spines['left'].set_color('white')<0x0A>ax.spines['right'].set_color
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 7.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 7.55}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(15,15))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of / and Capital (set % of CYD)')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() + grupo_df['Country'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Country'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_ylabel('Consumption of / and Capital (set % of CYD)')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs weak (2e kpop)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.01}, {'x': 'field', 'y': 2.01}, {'x': 'type': 'quantitative', 'y': 1.01}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.19 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.69 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 17 [32m[1m | Loss :[39m[22m 1.587194561958313




















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:45<00:00,  5.28s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4216}, {'x': 1844, 'y': 838}, {'x': 4676, 'y': 2956}, {'x': 2686, 'y': 2104}, {'x': 4676, 'y': 2956}, {'x': 5580, 'y': 4216}, {'x': 2686, 'y': 2104}, {'x': 5580, 'y': 4216}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 691}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.24}, {'x': 'Nike', 'y': 48.06}, {'x': 'Apple', 'y': 48.06}, {'x': 'Male', 'y': 24.11}, {'x': 'Rock', 'y': 24.11}, {'x': 'Sedan', 'y': 24.11}, {'x': 'Spanish', 'y': 48.06}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.46}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.02}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.02}, {'x': 'Apple', 'y': 3.86}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.8}, {'x': 157.55, 'y': 60.8}, {'x': 255.3, 'y': 13.55}, {'x': 255.8, 'y': 60.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 364.56}, {'x': 755, 'y': 364.56}, {'x': 755, 'y': 364.56}, {'x': 755, 'y': 364.56}, {'x': 755, 'y': 364.56}, {'x': 755, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 200}, {'x': 1919, 'y': 194}, {'x': 1924, 'y': 16}, {'x': 1928, 'y': 16}, {'x': 1930, 'y': 36}, {'x': 1931, 'y': 16}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.53}, {'x': 1818, 'y': 79.99}, {'x': 1820, 'y': 80.2}, {'x': 1822, 'y': 8.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1862, 'y': 252.5}, {'x': 1866, 'y': 252.5}, {'x': 1870, 'y': 110.69}, {'x': 1873, 'y': 268.74}, {'x': 1876, 'y': 268.74}, {'x': 1882, 'y': 268.74}, {'x': 1887, 'y': 108.51}, {'x': 1892, 'y': 268.74}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 63.84}, {'x': 676, 'y': 56.12}, {'x': 712, 'y': 63.84}, {'x': 676, 'y': 24.01}, {'x': 488, 'y': 16.22}, {'x': 676, 'y': 63.84}, {'x': 676, 'y': 56.12}, {'x': 676, 'y': 63.84}, {'x': 676, 'y': 24.01}, {'x': 676, 'y': 63.84}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1810, 'y': 585.52}, {'x': 1817, 'y': 147.48}, {'x': 1825, 'y': 26.62}, {'x': 1830, 'y': 26.62}, {'x': 1837, 'y': 147.48}, {'x': 1840, 'y': 310.2}, {'x': 1847, 'y': 310.2}, {'x': 1850, 'y': 147.48}, {'x': 1857, 'y': 150.22}, {'x': 1860, 'y': 147.48}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4460, 'y': 61.53}, {'x': 3240, 'y': 55.03}, {'x': 4460, 'y': 55.03}, {'x': 3240, 'y': 61.53}, {'x': 1446, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1927, 'y': 2888}, {'x': 1933, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.01}, {'x': 1570, 'y': 365.84}, {'x': 725, 'y': 121.89}, {'x': 1570, 'y': 75.84}, {'x': 1570, 'y': 37.51}, {'x': 1570, 'y': 37.51}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4296}, {'x': 1805, 'y': 3618}, {'x': 1808, 'y': 3618}, {'x': 1810, 'y': 4948}, {'x': 1812, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4870}, {'x': 1833, 'y': 3385}, {'x': 1840, 'y': 3400}, {'x': 1846, 'y': 1910}, {'x': 1856, 'y': 4870}, {'x': 1864, 'y': 3400}, {'x': 1874, 'y': 1910}, {'x': 1884, 'y': 1910}, {'x': 1894, 'y': 1910}, {'x': 1898, 'y': 3400}, {'x': 1899, 'y': 4870}, {'x': 1899, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1730, 'y': 527.8}, {'x': 373, 'y': 624.8}, {'x': 3730, 'y': 527.8}, {'x': 1730, 'y': 527.8}, {'x': 3730, 'y': 624.8}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------


















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [02:53<00:00,  8.67s/it]
[35m|[39m JSON to Vega conversion error rate: [31m80.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.72 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (lbs. per GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'type': 'quantitative'}}, 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 605}, {'x': 'field', 'y': 755}, {'x': 'variable', 'y': 755}, {'x': 'field', 'y': 605}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (% of trillemmonal discharges)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.53}, {'x': 'field', 'y': 30.2}, {'x': 'type': 'quantitative', 'y': 6.2}, {'x': 'field', 'y': 36.2}, {'x': 'field', 'y': 6.2}, {'x': 'variable', 'y': 36.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(df, 'Year', 'Arable land (hectares) in Seychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = {'axes': {'x': 'Year', 'y': 'Number of Days', 'data': {'x': 'Year', 'y': 'Number of Days', 'data': {'x': 'Year', 'y': 'Number of Days', 'data': {'x': 'Year', 'y': 'Number of Days', 'data': {'x': 'Year', 'y': 'Number of Days', 'data': {'x': 'Year', 'y': 'Number of Days', 'data': {'x': 'Year', 'y': 'Number of Days', 'data': {'x': 'Year', 'y': 'Number of Days', 'data': fixedprops)}}}<0x0A><0x0A>df_bairro = pd.DataFrame(<0x0A>    [ grupo_bairro, <0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>     grupo_bairro,<0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.86}, {'x': 'field', 'y': 47.66}, {'x': 'type', 'y': 37.01}, {'x': 'field', 'y': 49.56}, {'x': 'type', 'y': 37.01}, {'x': 'field', 'y': 49.56}, {'x': 'type', 'y': 19.56}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##############################################################################<0x0A>#################################################################################<0x0A>###################################################################################<0x0A>###########################<0x0A>###########################<0x0A>#########################<0x0A>#########################<0x0A>#######################<0x0A>#######################<0x0A>#####################<0x0A>###################<0x0A>###################<0x0A>#################<0x0A>#################<0x0A>###############<0x0A>###############<0x0A>###############<0x0A>###############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>#########<0x0A>#########<0x0A>#########<0x0A>#########<0x0A>#########<0x0A>#########<0x0A>#########<0x0A>#####
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per horogram')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, x, y, ylabel, ylabel, ylabel, title, ylabel, ylabel, ylabel, title, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># 1. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 2. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 3. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 4. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 5. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 6. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 7. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 8. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 9. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 10. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 11. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 12. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 13. Custom and other import duties (as % of revenue)<0x0A># 14. Custom and other import duties (as % of revenue)<0x0A># 15. Custom and other import duties (as % of revenue)<0x0A># 16. Custom and other import duties (as % of revenue)<0x0A># 17. Custom and other import duties (as % of revenue)<0x0A># 18. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plot<0x0A> grupo_df.plot(kind='bar', figsize=(15, 20), color='green')<0x0A>plt.title('Number of procedures to build a warehouse in Congo (Republic)')<0x0A>plt.ylabel('Number of procedures to build a warehouse')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mvisualize_production_year(df_swa_production, 'Swa', 'Year', 'Cereal production in Swaziland', '')
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((intramental to housing development)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.85}, {'x': 'field', 'y': 5.85}, {'x': 'type': 'quantitative', 'y': 18.15}, {'x': 'field', 'y': 18.15}, {'x': 'type': 'quantitative', 'y': 5.85}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_birth_year = df_sr_lanka[['year','birth_year']].groupby(['year','birth_year']).sum()<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['year','birth_year']<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 7.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 7.55}, {'x': 'field', 'y': 7.55}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(15, 15))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of / and Capital (set % of GNI)')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() <0x0A>ax.set_yticklabels([''] + grupo_df['Country'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_ylabel('Consumption of / and Capital (set % of GNI)')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs weak (2e kpop)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.01}, {'x': 'field', 'y': 2.01}, {'x': 'type': 'quantitative', 'y': 1.01}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.72 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|          | 0/20 [00:00<?, ?it/s]



















 95%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ| 19/20 [01:37<00:05,  5.83s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4210}, {'x': 2280, 'y': 838}, {'x': 4620, 'y': 2950}, {'x': 4620, 'y': 2950}, {'x': 5580, 'y': 4210}, {'x': 2280, 'y': 2100}, {'x': 4620, 'y': 2950}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 691}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 24.14}, {'x': 'Dog', 'y': 120.24}, {'x': 'Nike', 'y': 48.03}, {'x': 'Apple', 'y': 48.03}, {'x': 'Male', 'y': 24.14}, {'x': 'Rock', 'y': 24.14}, {'x': 'Sedan', 'y': 24.14}, {'x': 'Spanish', 'y': 48.03}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.02}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.02}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 13.55}, {'x': 59.67, 'y': 60.52}, {'x': 255.87, 'y': 60.52}, {'x': 153.67, 'y': 60.52}, {'x': 255.0, 'y': 60.52}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7150, 'y': 364.56}, {'x': 7150, 'y': 364.56}, {'x': 715, 'y': 364.56}, {'x': 715, 'y': 364.56}, {'x': 715, 'y': 364.56}, {'x': 715, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 199.79}, {'x': 1919, 'y': 199.79}, {'x': 1924, 'y': 17.54}, {'x': 1928, 'y': 17.54}, {'x': 1930, 'y': 36.22}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 79.99}, {'x': 1816, 'y': 28.53}, {'x': 1817, 'y': 62.69}, {'x': 1818, 'y': 79.99}, {'x': 1820, 'y': 80.2}, {'x': 1822, 'y': 8.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1862, 'y': 252.5}, {'x': 1866, 'y': 256.5}, {'x': 1869, 'y': 268.62}, {'x': 1872, 'y': 110.29}, {'x': 1877, 'y': 268.62}, {'x': 1882, 'y': 268.62}, {'x': 1886, 'y': 268.62}, {'x': 1890, 'y': 268.62}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 63.89}, {'x': 676, 'y': 56.12}, {'x': 712, 'y': 24.09}, {'x': 492, 'y': 16.22}, {'x': 676, 'y': 63.89}, {'x': 676, 'y': 52.78}, {'x': 712, 'y': 63.89}, {'x': 676, 'y': 56.12}, {'x': 492, 'y': 16.22}, {'x': 676, 'y': 63.89}, {'x': 676, 'y': 24.09}, {'x': 676, 'y': 63.89}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.01}, {'x': 1817, 'y': 147.48}, {'x': 1825, 'y': 27.01}, {'x': 1829, 'y': 27.01}, {'x': 1835, 'y': 27.01}, {'x': 1843, 'y': 108.61}, {'x': 1849, 'y': 310.24}, {'x': 1855, 'y': 310.24}, {'x': 1863, 'y': 147.48}, {'x': 1869, 'y': 584.01}, {'x': 1875, 'y': 584.01}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4470, 'y': 61.12}, {'x': 3340, 'y': 61.12}, {'x': 4470, 'y': 55.00}, {'x': 1440, 'y': 55.00}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1926, 'y': 2888}, {'x': 1930, 'y': 2888}, {'x': 1936, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 37.55}, {'x': 726, 'y': 121.59}, {'x': 1576, 'y': 365.85}, {'x': 1576, 'y': 40.15}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 3608}, {'x': 1809, 'y': 3608}, {'x': 1812, 'y': 4944}, {'x': 1816, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4870}, {'x': 1833, 'y': 3385}, {'x': 1840, 'y': 3400}, {'x': 1846, 'y': 1910}, {'x': 1856, 'y': 4870}, {'x': 1864, 'y': 3400}, {'x': 1874, 'y': 3400}, {'x': 1884, 'y': 1910}, {'x': 1890, 'y': 1910}, {'x': 1897, 'y': 3400}, {'x': 1899, 'y': 4870}, {'x': 1899, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1730, 'y': 527.9}, {'x': 3780, 'y': 624.9}, {'x': 1730, 'y': 527.9}, {'x': 3780, 'y': 624.9}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:40<00:00,  5.04s/it]



















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [03:00<00:00,  9.02s/it]
[35m|[39m JSON to Vega conversion error rate: [31m75.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.7 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (lbs. per GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'type': 'quantitative'}}, 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 60.06}, {'x': 'field', 'y': 60.06}, {'x': 'variable', 'y': 18.05}, {'x': 'field', 'y': 7.05}, {'x': 'variable', 'y': 7.05}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (% of trillemmonal discharges)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.53}, {'x': 'field', 'y': 30.2}, {'x': 'type': 'quantitative', 'y': 6.2}, {'x': 'field', 'y': 36.2}, {'x': 'field', 'y': 6.2}, {'x': 'variable', 'y': 28.53}, {'x': 'field', 'y': 36.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(df, 'Year', 'Arable land (hectares) in Seychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = {'x': 'Year', 'y': 'Number of Days', 'data': {'x': 'Year', 'y': 165}, {'x': 'Year', 'y': 165}, {'x': 'Year', 'y': 165}, {'x': 'Year', 'y': 165}, {'x': 'Year', 'y': 165}, {'x': 'Year', 'y': 165}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 52.05}, {'x': 'field', 'y': 47.05}, {'x': 'type', 'y': 37.05}, {'x': 'field', 'y': 52.05}, {'x': 'type', 'y': 37.05}, {'x': 'field', 'y': 52.05}, {'x': 'type', 'y': 40.75}, {'x': 'field', 'y': 47.05}, {'x': 'type', 'y': 52.05}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A><0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bilateral_aid_flow_Grenada, kind="bar", palette="Reds_r", height=10, aspect=1.5)<0x0A>g.fig.set_size_inches(15, 15)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set(xlabel='Year', ylabel='AID flow', title='Net bilateral aid flow of Grenada from Development Assistance Committee')<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.fig.suptitle('Net bilateral aid
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per horogram')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, x, y, ylabel, ylabel, ylabel, title, ylabel, ylabel, ylabel, title, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># 1. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 2. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 3. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 4. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 5. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 6. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 7. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 8. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 9. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 10. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 11. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 12. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 13. Custom and other import duties (as % of revenue)<0x0A># 14. Custom and other import duties (as % of revenue)<0x0A># 15. Custom and other import duties (as % of revenue)<0x0A># 16. Custom and other import duties (as % of revenue)<0x0A># 17. Custom and other import duties (as % of revenue)<0x0A># 18. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_df = grupo_df.sort_values('Year', ascending=False)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mvisualize_production_year(df_swa_production, 'Swa', 'Year', 'Cereal production in Swaziland', '')
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_birth_year = df_sr_lanka[['year','birth_year']].groupby(['year','birth_year']).sum()<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['year','birth_year']<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat_plot = percentage_households_sat.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(15,15))<0x0A>percentage_households_sat_plot.set_title('Percentage of households in Russian Federation that uses iodized salt', fontsize=16)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A>grupos = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A>grupos.plot(kind='scatter', x='Year', y='ConvertedCompensationOfAllAndCapital(Percentage of Assets of CGM)', color='#137558', figsize=(15,15))<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Allied Capital (Percentage of Assets of CGM)')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y) of GWI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 1.77}, {'x': 'field', 'y': 1.77}, {'x': 'variable', 'y': 1.77}, {'x': 'field', 'y': 1.77}, {'x': 'variable', 'y': 1.77}, {'x': 'field', 'y': 1.77}, {'x': 'variable', 'y': 1.77}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs weak (2e k/sq)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.01}, {'x': 'field', 'y': 2.01}, {'x': 'type', 'y': 2.01}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.7 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|          | 0/20 [00:00<?, ?it/s]



















 95%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ| 19/20 [01:45<00:06,  6.08s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4980, 'y': 2956}, {'x': 5720, 'y': 4216}, {'x': 2480, 'y': 838}, {'x': 4980, 'y': 2956}, {'x': 5720, 'y': 4216}, {'x': 3340, 'y': 3790}, {'x': 4340, 'y': 2104}, {'x': 5720, 'y': 2956}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 691}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 24.14}, {'x': 'Dog', 'y': 120.24}, {'x': 'Nike', 'y': 48.03}, {'x': 'Apple', 'y': 48.03}, {'x': 'Male', 'y': 24.14}, {'x': 'Rock', 'y': 24.14}, {'x': 'Sedan', 'y': 24.14}, {'x': 'Spanish', 'y': 48.03}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.02}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.02}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 13.55}, {'x': 59.69, 'y': 60.79}, {'x': 153.69, 'y': 60.79}, {'x': 255.0, 'y': 60.79}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7350, 'y': 114.12}, {'x': 6750, 'y': 41.09}, {'x': 3650, 'y': 363.13}, {'x': 735, 'y': 363.13}, {'x': 5950, 'y': 227.05}, {'x': 735, 'y': 363.13}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 199.52}, {'x': 1919, 'y': 199.52}, {'x': 1923, 'y': 16.53}, {'x': 1928, 'y': 16.53}, {'x': 1929, 'y': 16.53}, {'x': 1932, 'y': 36.06}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 79.99}, {'x': 1816, 'y': 28.52}, {'x': 1819, 'y': 79.99}, {'x': 1820, 'y': 80.2}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1862, 'y': 252.5}, {'x': 1866, 'y': 256.5}, {'x': 1869, 'y': 265.69}, {'x': 1872, 'y': 110.66}, {'x': 1877, 'y': 265.69}, {'x': 1882, 'y': 265.69}, {'x': 1886, 'y': 265.69}, {'x': 1890, 'y': 265.69}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 63.89}, {'x': 676, 'y': 56.12}, {'x': 712, 'y': 63.89}, {'x': 492, 'y': 16.22}, {'x': 676, 'y': 52.58}, {'x': 492, 'y': 16.22}, {'x': 676, 'y': 52.58}, {'x': 676, 'y': 63.89}, {'x': 676, 'y': 56.12}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1810, 'y': 585.52}, {'x': 1817, 'y': 147.48}, {'x': 1824, 'y': 25.42}, {'x': 1828, 'y': 25.42}, {'x': 1834, 'y': 25.42}, {'x': 1838, 'y': 147.48}, {'x': 1844, 'y': 310.24}, {'x': 1852, 'y': 310.24}, {'x': 1858, 'y': 147.48}, {'x': 1864, 'y': 150.24}, {'x': 1868, 'y': 150.24}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4470, 'y': 61.12}, {'x': 3430, 'y': 55.03}, {'x': 4470, 'y': 55.03}, {'x': 3430, 'y': 61.12}, {'x': 1444, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1924, 'y': 2888}, {'x': 1930, 'y': 2888}, {'x': 1934, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.01}, {'x': 1576, 'y': 37.01}, {'x': 726, 'y': 121.48}, {'x': 1576, 'y': 37.01}, {'x': 1576, 'y': 37.01}, {'x': 1576, 'y': 40.25}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4306}, {'x': 1805, 'y': 3612}, {'x': 1806, 'y': 3612}, {'x': 1807, 'y': 3612}, {'x': 1810, 'y': 4974}, {'x': 1813, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4870}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4870}, {'x': 1840, 'y': 3385}, {'x': 1845, 'y': 1890}, {'x': 1855, 'y': 3385}, {'x': 1859, 'y': 4870}, {'x': 1864, 'y': 3385}, {'x': 1874, 'y': 1910}, {'x': 1879, 'y': 4870}, {'x': 1883, 'y': 1910}, {'x': 1887, 'y': 3385}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1730, 'y': 527.9}, {'x': 3880, 'y': 624.99}, {'x': 3880, 'y': 527.9}, {'x': 1730, 'y': 527.9}, {'x': 3880, 'y': 624.99}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:49<00:00,  5.48s/it]


















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [02:49<00:00,  8.49s/it]
[35m|[39m JSON to Vega conversion error rate: [31m75.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.19 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.76 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'type': 'quantitative'}}, 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'field', 'y': 7.55}, {'x': 'type', 'y': 7.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 7.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of trillemmonal discharges)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.53}, {'x': 'field', 'y': 90.2}, {'x': 'type': 'quantitative', 'y': 62.83}, {'x': 'field', 'y': 62.83}, {'x': 'field', 'y': 62.83}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31marable_land_plot('Synthesis', 'Arable land (hectares) in Seychelles', 'Year', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 163}, {'x': 'field', 'y': 163}, {'x': 'variable', 'y': 163}, {'x': 'field', 'y': 163}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 52.05}, {'x': 'field', 'y': 47.05}, {'x': 'type', 'y': 37.05}, {'x': 'field', 'y': 52.05}, {'x': 'type', 'y': 37.05}, {'x': 'field', 'y': 52.05}, {'x': 'type', 'y': 40.75}, {'x': 'field', 'y': 47.05}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##############################################################################<0x0A>#################################################################################<0x0A>###################################################################################<0x0A>###########################<0x0A>###########################<0x0A>#########################<0x0A>#########################<0x0A>#######################<0x0A>#######################<0x0A>#####################<0x0A>###################<0x0A>###################<0x0A>#################<0x0A>#################<0x0A>###############<0x0A>###############<0x0A>###############<0x0A>###############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>#########<0x0A>#########<0x0A>#########<0x0A>#########
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per horogram')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, x, y, ylabel, ylabel, ylabel, title, ylabel, ylabel, ylabel, title, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># import duties<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import re<0x0A>import
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mvisualize_production_year(df_swa_production, 'Swa', 'Year', 'Cereal production in Swaziland', 'cer_production', 'cer_production', 'cer_production')
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((demand for housing development)/normalized)})': {'x': {'field': 'Year', 'type': 'quantitative'}}, 'y': {'field': 'Value', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.03}, {'x': 'field': 'Value', 'y': 5.03}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_birth_year = df_sr_lanka[['year','birth_year']].groupby(['year','birth_year']).sum()<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['year','birth_year']<0x0A>percentage_birth_year.columns = ['percentage','percentage']<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A>fig.patch.set_facecolor('white')<0x0A>fig.patch.set_alpha(0.5)<0x0A>fig.subplots_adjust(top=0.95)<0x0A><0x0A>ax.set_title('Percentage of babies born with low-birthweight in Sri Lanka')<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_xticks([0,1,2,3])<0x0A>ax.set_yticks([0,2,4,5])<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left']
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 7.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 7.55}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat = pd.DataFrame(households_sat, columns = ["Year", "% of households"])<0x0A>percentage_households_sat.plot(kind = "bar", figsize = (15,15), color = "purple")<0x0A>plt.title("Percentage of households in Russian Federation that uses iodized salt")<0x0A>plt.xlabel("Year")<0x0A>plt.ylabel("% of households")<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of / and Capital (set % of GVG)')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() <0x0A>ax.set_yticklabels([''] + grupo_df['Country'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of / and Capital (set % of GVG)')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y) of GWI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 1.9}, {'x': 'field', 'y': 1.9}, {'x': 'variable', 'y': 1.9}, {'x': 'field', 'y': 1.9}, {'x': 'variable', 'y': 1.9}, {'x': 'field', 'y': 1.9}, {'x': 'variable', 'y': 1.9}, {'x': 'variable', 'y': 1.9}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs were {'x': {'type': 'quantitative'}}, 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.01}, {'x': 'field', 'y': 2.01}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.19 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.76 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 20 [32m[1m | Loss :[39m[22m 1.5802181959152222



















 95%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ| 19/20 [01:38<00:05,  5.07s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5550, 'y': 4216}, {'x': 1850, 'y': 835}, {'x': 3340, 'y': 3785}, {'x': 4650, 'y': 2952}, {'x': 5550, 'y': 4216}, {'x': 2225, 'y': 2108}, {'x': 4650, 'y': 2952}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 708}, {'x': 'Rock', 'y': 708}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 24.14}, {'x': 'Dog', 'y': 120.33}, {'x': 'Nike', 'y': 48.03}, {'x': 'Apple', 'y': 48.03}, {'x': 'Male', 'y': 24.14}, {'x': 'Rock', 'y': 24.14}, {'x': 'Sedan', 'y': 24.14}, {'x': 'Spanish', 'y': 48.03}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.86}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 154.18, 'y': 60.73}, {'x': 269.24, 'y': 13.49}, {'x': 54.44, 'y': 60.73}, {'x': 269.24, 'y': 60.73}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7150, 'y': 363.59}, {'x': 6750, 'y': 41.19}, {'x': 3925, 'y': 363.59}, {'x': 6750, 'y': 114.19}, {'x': 3925, 'y': 227.0}, {'x': 7150, 'y': 363.59}, {'x': 6750, 'y': 114.19}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 199.56}, {'x': 1919, 'y': 193.88}, {'x': 1924, 'y': 17.51}, {'x': 1928, 'y': 17.51}, {'x': 1930, 'y': 36.22}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 79.99}, {'x': 1816, 'y': 28.52}, {'x': 1819, 'y': 79.99}, {'x': 1820, 'y': 80.2}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1862, 'y': 252.5}, {'x': 1866, 'y': 256.5}, {'x': 1869, 'y': 268.5}, {'x': 1872, 'y': 110.69}, {'x': 1877, 'y': 268.5}, {'x': 1882, 'y': 268.5}, {'x': 1886, 'y': 100.2}, {'x': 1890, 'y': 268.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 63.89}, {'x': 676, 'y': 56.11}, {'x': 676, 'y': 24.09}, {'x': 488, 'y': 16.21}, {'x': 676, 'y': 63.89}, {'x': 676, 'y': 52.78}, {'x': 488, 'y': 16.21}, {'x': 676, 'y': 56.11}, {'x': 676, 'y': 24.09}, {'x': 676, 'y': 63.89}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1810, 'y': 585.52}, {'x': 1817, 'y': 147.48}, {'x': 1824, 'y': 27.01}, {'x': 1828, 'y': 27.01}, {'x': 1832, 'y': 27.01}, {'x': 1838, 'y': 147.48}, {'x': 1844, 'y': 310.24}, {'x': 1850, 'y': 310.24}, {'x': 1856, 'y': 147.48}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4570, 'y': 61.12}, {'x': 3340, 'y': 61.12}, {'x': 4080, 'y': 55.00}, {'x': 1480, 'y': 55.00}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1926, 'y': 2888}, {'x': 1932, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 755, 'y': 37.55}, {'x': 1555, 'y': 37.55}, {'x': 1255, 'y': 121.55}, {'x': 1555, 'y': 37.55}, {'x': 1555, 'y': 37.55}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4306}, {'x': 1805, 'y': 3612}, {'x': 1806, 'y': 3612}, {'x': 1807, 'y': 3612}, {'x': 1810, 'y': 4974}, {'x': 1813, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4870}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4870}, {'x': 1840, 'y': 3385}, {'x': 1845, 'y': 1910}, {'x': 1855, 'y': 4870}, {'x': 1859, 'y': 3385}, {'x': 1864, 'y': 1910}, {'x': 1874, 'y': 3385}, {'x': 1879, 'y': 3385}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1710, 'y': 527.9}, {'x': 3850, 'y': 624.99}, {'x': 3850, 'y': 527.9}, {'x': 1710, 'y': 527.9}, {'x': 3850, 'y': 624.99}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:43<00:00,  5.17s/it]


















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [02:53<00:00,  7.73s/it]
[35m|[39m JSON to Vega conversion error rate: [31m70.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.74 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (lbs.$GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'type': 'quantitative'}}, 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable', 'y': 0.01}, {'x': 'field', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 605}, {'x': 'field', 'y': 755}, {'x': 'type', 'y': 755}, {'x': 'field', 'y': 605}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (% of trillemmals in Skookuos', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.53}, {'x': 'field', 'y': 90.2}, {'x': 'type': 'quantitative', 'y': 62.83}, {'x': 'field', 'y': 62.83}, {'x': 'field', 'y': 62.83}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31marable_land_plot('Sychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 165}, {'x': 'field', 'y': 165}, {'x': 'variable', 'y': 165}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 52.05}, {'x': 'field', 'y': 47.52}, {'x': 'type', 'y': 37.01}, {'x': 'field', 'y': 52.05}, {'x': 'type', 'y': 37.01}, {'x': 'field', 'y': 52.05}, {'x': 'type', 'y': 40.85}, {'x': 'field', 'y': 47.01}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##############################################################################<0x0A>#################################################################################<0x0A>###################################################################################<0x0A>#####################################################################################################<0x0A>###############################<0x0A>#################################<0x0A>#################################<0x0A>###################################<0x0A>#####################################<0x0A>#######################################<0x0A>#########################################<0x0A>###########################################<0x0A>#############################################<0x0A>###################################################<0x
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per householder')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, x, y, ylabel, ylabel, ylabel, title, ylabel, ylabel, ylabel, title, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Import duties<0x0A>import matplotlib.pyplot as plt<0x0A>import matplotlib.patches as mpatches<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties (as % of tax revenue) of Indonesia<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties (as % of tax revenue) of Indonesia<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ %
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_df = grupo_df.sort_values('Year', ascending=False)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mvisualize_production_year(df_swa_production, 'Swa', 'Year', 'Cereal production in Swaziland', 'cer')
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((demand for housing development)/normalized)})': {'x': {'field': 'Year', 'type': 'quantitative'}}, 'y': {'field': 'Value', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.05}, {'x': 'field': 'Value', 'y': 12.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_birth_country_2 = df_2.groupby(['Country'])['Birth Weight'].sum()<0x0A>percentage_birth_country_2 = percentage_birth_country_2.sort_values(by=['Country'], ascending=False)<0x0A>percentage_birth_country_2 = percentage_birth_country_2.reset_index()<0x0A>percentage_birth_country_2 = percentage_birth_country_2.rename(columns={'index':'Country', 'age':'Year', 'country':'Country'})<0x0A>percentage_birth_country_2 = percentage_birth_country_2.reset_index()<0x0A>percentage_birth_country_2 = percentage_birth_country_2.rename(columns={'index':'Country', 'age':'Year', 'country':'Country'})<0x0A>percentage_birth_country_2 = percentage_birth_country_2.reset_index()<0x0A>percentage_birth_country_2 = percentage_birth_country_2.reset_index()<0x0A>percentage_birth_country_2 = percentage_birth_country_2.reset_index()<0x0A>percentage_birth_country_2 = percentage_birth_country_2.reset_index()<0x0A>percentage_birth_country_2 = percentage_birth_country_2.reset_index()<0x0A>percentage_birth_country_2 = percentage_birth_country_2.reset_index()<0x0A>percentage_birth_country_2 = percentage_birth_country_2.reset_index()<0x0A>percentage_birth_country_2 = percentage_birth_country_2.reset_index()<0x0A>percentage_birth_country_2 = percentage_birth_country_2.reset_index()<0x0A>percentage_birth_country_2 = percentage_birth_country_2.reset_index()<0x0A>percentage_birth_country_2 = percentage_birth_country_2.reset_index()<0x0A>percentage_birth_country_2 = percentage_birth_country_2.reset_index()<0x0A>percentage_birth_country_2 = percentage_birth_country_2.reset_index()<0x0A>percentage_birth_country_2 = percentage_birth_country_2.reset_index()<0x0A>percentage_birth_country_2 = percentage_birth_country_2.reset_index()<0x0A>percentage_birth_country_2 = percentage_birth_country_2.reset_index()<0x0A>percentage_birth_country_2 = percentage_birth_country_2.reset_index()<0x0A>percentage_birth_country_2 = percentage_birth_country_2.reset_index()<0x0A>percentage_birth_country_2 = percentage_birth_country
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 7.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 7.55}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat_plot = percentage_households_sat.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(15,15))<0x0A>percentage_households_sat_plot.set_title('Percentage of households in Russian Federation that uses iodized salt', fontsize=16)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of / and Capital (set % of GVG)')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() <0x0A>ax.set_yticklabels([''] + grupo_df['Country'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of / and Capital (set % of GVG)')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right'
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y ~ % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs weak (2e k/sq0)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.01}, {'x': 'field', 'y': 2.01}, {'x': 'type', 'y': 2.01}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.74 [35m|

100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [02:53<00:00,  8.65s/it]
[36m[1mEpoch :[39m[22m 21 [32m[1m | Loss :[39m[22m 1.2728134393692017



















 95%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ| 19/20 [01:40<00:05,  5.83s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4216}, {'x': 2288, 'y': 831}, {'x': 4672, 'y': 2954}, {'x': 5580, 'y': 4216}, {'x': 3696, 'y': 3785}, {'x': 4672, 'y': 2954}, {'x': 2288, 'y': 2104}, {'x': 5580, 'y': 4216}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 691}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 24.14}, {'x': 'Dog', 'y': 120.34}, {'x': 'Nike', 'y': 48.09}, {'x': 'Apple', 'y': 48.09}, {'x': 'Male', 'y': 24.14}, {'x': 'Rock', 'y': 24.14}, {'x': 'Sedan', 'y': 24.14}, {'x': 'Spanish', 'y': 48.09}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.02}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.02}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 154.18, 'y': 60.73}, {'x': 269.24, 'y': 13.49}, {'x': 54.44, 'y': 60.73}, {'x': 269.24, 'y': 60.73}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7150, 'y': 114.12}, {'x': 7150, 'y': 363.15}, {'x': 715, 'y': 363.15}, {'x': 715, 'y': 225.05}, {'x': 715, 'y': 41.09}, {'x': 715, 'y': 363.15}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 199.79}, {'x': 1919, 'y': 199.79}, {'x': 1924, 'y': 17.54}, {'x': 1928, 'y': 17.54}, {'x': 1930, 'y': 36.22}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 79.99}, {'x': 1816, 'y': 28.52}, {'x': 1819, 'y': 80.2}, {'x': 1820, 'y': 9.2}, {'x': 1822, 'y': 9.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1862, 'y': 252.5}, {'x': 1866, 'y': 256.62}, {'x': 1869, 'y': 268.62}, {'x': 1872, 'y': 110.29}, {'x': 1877, 'y': 268.62}, {'x': 1882, 'y': 268.62}, {'x': 1886, 'y': 100.2}, {'x': 1890, 'y': 268.62}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56.11}, {'x': 676, 'y': 32.1}, {'x': 570, 'y': 64.0}, {'x': 570, 'y': 16.22}, {'x': 676, 'y': 56.11}, {'x': 498, 'y': 16.22}, {'x': 676, 'y': 64.0}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1810, 'y': 585.43}, {'x': 1817, 'y': 147.43}, {'x': 1824, 'y': 27.01}, {'x': 1828, 'y': 27.01}, {'x': 1832, 'y': 27.01}, {'x': 1838, 'y': 147.43}, {'x': 1844, 'y': 310.24}, {'x': 1852, 'y': 310.24}, {'x': 1858, 'y': 147.43}, {'x': 1864, 'y': 150.24}, {'x': 1868, 'y': 577.85}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4570, 'y': 61.12}, {'x': 3344, 'y': 61.12}, {'x': 4084, 'y': 55.00}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2886}, {'x': 1926, 'y': 2886}, {'x': 1930, 'y': 2886}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.01}, {'x': 762, 'y': 121.89}, {'x': 1576, 'y': 37.01}, {'x': 1576, 'y': 37.01}, {'x': 1576, 'y': 364.51}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Runomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4306}, {'x': 1806, 'y': 3608}, {'x': 1808, 'y': 3608}, {'x': 1812, 'y': 4964}, {'x': 1814, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4860}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4860}, {'x': 1840, 'y': 3385}, {'x': 1845, 'y': 1910}, {'x': 1854, 'y': 4860}, {'x': 1859, 'y': 3385}, {'x': 1865, 'y': 3385}, {'x': 1872, 'y': 3385}, {'x': 1879, 'y': 4860}, {'x': 1885, 'y': 1910}, {'x': 1889, 'y': 1910}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1736, 'y': 527.9}, {'x': 3780, 'y': 624.9}, {'x': 1736, 'y': 564.9}, {'x': 3780, 'y': 527.9}, {'x': 3780, 'y': 624.9}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:44<00:00,  5.25s/it]


















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [03:24<00:00, 10.21s/it]
[35m|[39m JSON to Vega conversion error rate: [31m70.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.74 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'type': 'quantitative'}}, 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable', 'y': 0.01}, {'x': 'field', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'type', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'variable', 'y': 6050}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (% of trillemmals in Skookuos', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.53}, {'x': 'field', 'y': 90.2}, {'x': 'type': 'quantitative', 'y': 62.83}, {'x': 'field', 'y': 62.83}, {'x': 'field', 'y': 62.83}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(df, 'Year', 'Arable land (hectares) in Seychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 165}, {'x': 'field', 'y': 165}, {'x': 'variable', 'y': 165}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 52.05}, {'x': 'field', 'y': 47.52}, {'x': 'type', 'y': 37.01}, {'x': 'field', 'y': 52.05}, {'x': 'type', 'y': 37.01}, {'x': 'field', 'y': 52.05}, {'x': 'type', 'y': 40.65}, {'x': 'field', 'y': 47.01}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##############################################################################<0x0A>#################################################################################<0x0A>###################################################################################<0x0A>###########################<0x0A>###########################<0x0A>###########################<0x0A>###########################<0x0A>#########################<0x0A>#########################<0x0A>#######################<0x0A>#######################<0x0A>#####################<0x0A>#####################<0x0A>###################<0x0A>###################<0x0A>#################<0x0A>#################<0x0A>###############<0x0A>###############<0x0A>###############<0x0A>###############<0x0A>###############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>#############<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>###########<0x0A>#########
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per horogram')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_xticklabels(['Year', 'Country'])<0x0A>ax.set_ylim(0, 1)<0x0A>ax.set_xticklabels(['Year', 'Country'])<0x0A>ax.set_yticklabels(['Year', 'Country'])<0x0A>ax.set_xticklabels(['Year', 'Country'])<0x0A>ax.set_yticklabels(['Year', 'Country'])<0x0A>ax.set_xlim(0, 1)<0x0A>ax.set_ylim(0, 1)<0x0A>ax.set_xticklabels(['Year', 'Country'])<0x0A>ax.set_yticklabels(['Year', 'Country'])<0x0A>ax.set_xticklabels(['Year', 'Country'])<0x0A>ax.set_yticklabels(['Year', 'Country'])<0x0A>ax.set_yticklabels(['Year', 'Country'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Country'])<0x0A>ax.set_yticklabels(['Year', 'Country'])<0x0A>ax.set_yticklabels(['Year', 'Country'])<0x0A>ax.set_yticklabels(['Year', 'Country'])<0x0A>ax.set_yticklabels(['Year', 'Country'])<0x0A>ax.set_yticklabels(['Year', 'Country'])<0x0A>ax.set_yticklabels(['Year', 'Country'])<0x0A>ax.set_yticklabels(['Year', 'Country'])<0x0A>ax.set_yticklabels(['Year', 'Country'])<0x0A>ax.set_yticklabels(['Year', 'Country'])<0x0A>ax.set_yticklabels(['Year', 'Country'])<0x0A>ax.set_yticklabels(['Year', 'Country'])<0x0A>ax.set_yticklabels(['Year', 'Country'])<0x0A>ax.set_yticklabels(['Year', 'Country'])<0x0A>ax.set_yticklabels(['Year', 'Country'])<0x0A>ax.set_yticklabels(['Year', 'Country'])<0x0A>ax.set_yticklabels(['Year', 'Country'])
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Import duties<0x0A>import matplotlib.pyplot as plt<0x0A>import matplotlib.patches as patches<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties (as % of tax revenue) of Indonesia<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties (as % of tax revenue) of Indonesia<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties (as % of tax
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mvisualize_production_year(df_swa_production, 'Swa', 'Year', 'Cereal production in Swaziland', '')
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_birth_year = df_sr_lanka[['year','birth_year']].groupby(['year','birth_year']).sum()<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['year','birth_year']<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['percentage of babies born with low-birthweight in Sri Lanka']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 7.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 7.55}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat_plot = percentage_households_sat.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(15,15))<0x0A>percentage_households_sat_plot.set_title('Percentage of households in Russian Federation that uses iodized salt', fontsize=16)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of / and Capital (as % of G2M)')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() <0x0A>ax.set_yticklabels([''] + grupo_df['Country'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of / and Capital (as % of G2M)')<0x0A>ax.set_ylabel('Consumption of / and Capital (as % of G2M)')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.2
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y ~ % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'data', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs weak (2e k/sq)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.01}, {'x': 'field', 'y': 2.01}, {'x': 'type', 'y': 2.01}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.74 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 22 [32m[1m | Loss :[39m[22m 1.215306282043457



















 95%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ| 19/20 [01:42<00:06,  6.74s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5550, 'y': 4218}, {'x': 2225, 'y': 835}, {'x': 4650, 'y': 2952}, {'x': 3650, 'y': 3785}, {'x': 4650, 'y': 2952}, {'x': 5550, 'y': 4218}, {'x': 2225, 'y': 2104}, {'x': 5550, 'y': 4218}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 691}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 24.14}, {'x': 'Dog', 'y': 120.34}, {'x': 'Nike', 'y': 48.09}, {'x': 'Apple', 'y': 48.09}, {'x': 'Male', 'y': 24.14}, {'x': 'Rock', 'y': 24.14}, {'x': 'Sedan', 'y': 24.14}, {'x': 'Spanish', 'y': 48.09}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.02}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.02}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 154.18, 'y': 60.5}, {'x': 269.24, 'y': 13.48}, {'x': 54.44, 'y': 60.5}, {'x': 269.24, 'y': 60.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7150, 'y': 364.01}, {'x': 3980, 'y': 364.01}, {'x': 6750, 'y': 41.15}, {'x': 6750, 'y': 114.11}, {'x': 3980, 'y': 227.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 200}, {'x': 1919, 'y': 194.01}, {'x': 1923, 'y': 16.51}, {'x': 1928, 'y': 16.51}, {'x': 1929, 'y': 16.51}, {'x': 1932, 'y': 36.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 59.11}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 79.89}, {'x': 1819, 'y': 80.18}, {'x': 1820, 'y': 9.38}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.51}, {'x': 1866, 'y': 265.61}, {'x': 1869, 'y': 265.61}, {'x': 1872, 'y': 110.66}, {'x': 1877, 'y': 265.61}, {'x': 1882, 'y': 269.38}, {'x': 1886, 'y': 100.78}, {'x': 1890, 'y': 265.61}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 710, 'y': 56.11}, {'x': 570, 'y': 64.09}, {'x': 570, 'y': 16.21}, {'x': 620, 'y': 32.18}, {'x': 570, 'y': 64.09}, {'x': 570, 'y': 16.21}, {'x': 570, 'y': 56.11}, {'x': 570, 'y': 24.09}, {'x': 570, 'y': 24.09}, {'x': 570, 'y': 64.09}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1810, 'y': 585.43}, {'x': 1817, 'y': 145.66}, {'x': 1824, 'y': 26.46}, {'x': 1828, 'y': 26.46}, {'x': 1832, 'y': 26.46}, {'x': 1838, 'y': 145.66}, {'x': 1844, 'y': 310.84}, {'x': 1852, 'y': 310.84}, {'x': 1857, 'y': 145.66}, {'x': 1864, 'y': 150.22}, {'x': 1868, 'y': 577.81}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4570, 'y': 61.12}, {'x': 3344, 'y': 61.12}, {'x': 1844, 'y': 55.00}, {'x': 3344, 'y': 61.12}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1927, 'y': 2885}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1556, 'y': 38.11}, {'x': 766, 'y': 122.11}, {'x': 1556, 'y': 37.51}, {'x': 1556, 'y': 37.51}, {'x': 766, 'y': 122.11}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4306}, {'x': 1806, 'y': 3618}, {'x': 1808, 'y': 3618}, {'x': 1812, 'y': 4964}, {'x': 1814, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4860}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4860}, {'x': 1840, 'y': 3385}, {'x': 1845, 'y': 1910}, {'x': 1854, 'y': 4860}, {'x': 1859, 'y': 3385}, {'x': 1865, 'y': 3385}, {'x': 1872, 'y': 1910}, {'x': 1879, 'y': 4860}, {'x': 1885, 'y': 1910}, {'x': 1889, 'y': 3385}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1736, 'y': 527.9}, {'x': 3846, 'y': 624.9}, {'x': 1736, 'y': 565.8}, {'x': 3846, 'y': 527.9}, {'x': 1736, 'y': 527.9}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:47<00:00,  5.36s/it]


















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [03:04<00:00,  9.22s/it]
[35m|[39m JSON to Vega conversion error rate: [31m70.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.69 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'type': 'quantitative'}}, 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable', 'y': 0.01}, {'x': 'field', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6.55}, {'x': 'field', 'y': 7.55}, {'x': 'variable', 'y': 12.05}, {'x': 'field', 'y': 6.55}, {'x': 'variable', 'y': 7.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (% of trillemmals in Skookuos')}}, 'data': {'values': [{'x': 'Year', 'y': 55.53}, {'x': 'field', 'y': 90.2}, {'x': 'type': 'quantitative'}}, 'y': 55.53}, {'x': 'field', 'y': 62.83}, {'x': 'field', 'y': 62.83}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(train_df, 'Year', 'Arable land (hectares) in Seychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 165}, {'x': 'field', 'y': 165}, {'x': 'variable', 'y': 165}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 50.86}, {'x': 'field', 'y': 47.28}, {'x': 'type', 'y': 37.06}, {'x': 'field', 'y': 50.86}, {'x': 'type', 'y': 39.51}, {'x': 'field', 'y': 50.86}, {'x': 'type', 'y': 19.51}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##############################################################################<0x0A>#################################################################################<0x0A>###################################################################################<0x0A>#####################################################################################################<0x
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per householder')<0x0A>Country_1981.grid(False)<0x0A>Country_1981.grid(False)<0x0A>Country_1981.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_title('Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Plot<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Plot<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year', 'Year'])<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_ylim(0, 1)<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_y
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Import duties<0x0A>import matplotlib.pyplot as plt<0x0A>import matplotlib.patches as mpatches<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties (as % of tax revenue) of Indonesia<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties (as % of tax revenue) of Indonesia<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year'
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mvisualize_production_year(df_swa_production, 'Swa', 'Year', 'Cereal production in Swaziland', '')
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling totaling
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_birth_year = df_sr_lanka[['year','birth_year']].groupby(['year','birth_year']).sum()<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['year','birth_year']<0x0A>percentage_birth_year.columns = ['percentage','percentage']<0x0A>percentage_birth_year.columns = ['percentage']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['year','birth_year']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['year','birth_year']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['percentage']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['percentage']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['percentage']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.columns = ['year','birth_year']<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.reset_index(inplace=True)<0x0A>percentage_birth_year.
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Percentage of children ages 12-23 months who received DPT vaccinations in Denmark', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat_plot = percentage_households_sat.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(15,15))<0x0A>percentage_households_sat_plot.set_title('Percentage of households in Russian Federation that uses iodized salt', fontsize=16)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of / and Capital (set % of GVG)')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() <0x0A>ax.set_yticklabels([''] + grupo_df['Country'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of / and Capital (set % of GVG)')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right'
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y ~ % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs weak (2e k/sq0)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.05}, {'x': 'field', 'y': 2.05}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.69 [35m|
