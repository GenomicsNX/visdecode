
[36m[1mEpoch :[39m[22m 0 [32m[1m | Loss :[39m[22m 4.553825855255127














100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:33<00:00,  4.68s/it]
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
[31mAlcohol_Consumption_Mode_Age = sns.lmplot(x='Mode Age', y='Alcohol Consumption', data=Alcohol_Consumption_Mode_Age, fit_reg=False)<0x0A>Alcohol_Consumption_Mode_Age.set(xlim=(0, None), ylim=(0, None))
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
[31mfacet = sns.FacetGrid(data, height=7, aspect=1.5)<0x0A>facet.map(sns.barplot, 'Water Usage', 'CO2 Emissions', color='steelblue')<0x0A>facet.set(xlim=(0, 80000))<0x0A>facet.set(ylim=(0, 80000))<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
[31mgrupos = ['Dog', 'Red', 'USA']<0x0A><0x0A># Create a bar plot of the dataframe<0x0A>df_bar = pd.DataFrame(<0x0A>    [<0x0A>        df_merged['Dog'],<0x0A>        df_merged['Red'],<0x0A>        df_merged['USA']]<0x0A>    ],<0x0A>    columns = grupos<0x0A>)<0x0A><0x0A># Create a bar plot of the dataframe<0x0A>df_bar.plot(kind='bar',<0x0A>        figsize=(6, 6),<0x0A>        rot=90,<0x0A>        xticks=range(1, 6),<0x0A>        yticks=range(0, 6),<0x0A>        rot=90,<0x0A>        xlim=(0, 6),<0x0A>        ylim=(0, 6))<0x0A><0x0A># Set the yticks to be formatted<0x0A>plt.ylabel('Kurtosis And Skewness Of Annual Corporate Profit Margins')<0x0A>plt.ylim(0, 6)<0x0A><0x0A># Save the figure<0x0A>plt.savefig('barplot_barplot.png')<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
[31mgrouped_df = pd.DataFrame(grouped_df, columns=['Product', 'Sales'])<0x0A>grouped_df.index = ['Product', 'Sales']<0x0A>grouped_df.sort_values(by='Product', ascending=False, inplace=True)<0x0A><0x0A>plt.figure(figsize=(10,10))<0x0A>plt.bar(grouped_df['Product'], grouped_df['Sales'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
[31m# Plot the data<0x0A>plt.figure(figsize=(10,10))<0x0A>data.groupby(['Regional_Inflation_Rates']).size().plot(kind='bar')<0x0A>plt.ylabel('')<0x0A>plt.xlabel('')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
[31m# Create a bar plot of the cost of salaries by experience level<0x0A>sns.set(style="ticks")<0x0A>fig, ax = plt.subplots(figsize=(8, 6))<0x0A><0x0A># Create a bar plot of the cost of salaries by experience level<0x0A>sns.barplot(x="Cost", y="Quantile Regression Estimates Of Salary By Experience Level", data=df_salary_experiment_cost_sal)<0x0A><0x0A># Add labels to the axes<0x0A>ax.set(xlabel="Cost", ylabel="Quantile Regression Estimates Of Salary By Experience Level")<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
[31mheights.plot(kind='scatter', x='Height', y='Height', figsize=(10,10), alpha=0.7, s=100)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
[31mfig, ax = plt.subplots(figsize=(10,10))<0x0A>ax.scatter(x, y, s=100)<0x0A>ax.set_xlim(0, 9000)<0x0A>ax.set_ylim(0, 400)<0x0A>ax.set_xticks(np.arange(0, 9000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_xlim(0, 9000)<0x0A>ax.set_ylim(0, 400)<0x0A>ax.set_xticks(np.arange(0, 9000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_xticks(np.arange(0, 9000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_xticks(np.arange(0, 9000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000,
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
[31mempirical_bar_chart(df, 'Smoking Rate', 'Simulation Results Of Variable IO1 Variable Interest Interest Rates On Bond Prices')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
[31mfacet = sns.FacetGrid(data, height=7, aspect=1.5)<0x0A>facet.map(sns.lineplot, "Adjusted R Squared For Linear Regression Model With Heteroscedasticity", "CO2 Emissions")<0x0A>facet.set(xlim=(1.814, 1.822))<0x0A>facet.set(ylim=(0, 90))<0x0A>facet.add_legend()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
[31mfacet = sns.FacetGrid(df, height=8)<0x0A>facet.map(sns.lineplot, "Time", "Count")<0x0A>facet.add_legend()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
[31mg = sns.relplot(x="Predictive Accuracy Of Seasonal Demand Forecasting Models", y="Heterogeneity In Clinical Trial Populations By Gender And Age",<0x0A>                   data=df_predictive_accuracy_seasonal_demand_forecasting_models_heterogeneity_in_clinical_trial_populations_by_gender_and_age",<0x0A>                   kind="scatter", height=6, aspect=1.5)<0x0A>g.set(xlim=(0, 900))<0x0A>g.set(ylim=(0, 700))
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
[31mg = sns.relplot(x="Distance", y="Probability Density Density Function OYA/Age Distribution in Population in Population Survey", data=df, kind="line", height=6, aspect=1.5)<0x0A>g.set(xlabel="Distance", ylabel="Probability Density Density Function OYA/Age Distribution in Population Survey")<0x0A>g.set(ylim=(0, 600))<0x0A>g.set(xlim=(1, 1810))
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
[31mempirical_plot(data, 'Growth Rate', 'GDP')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
[31mimport seaborn as sns<0x0A>import matplotlib.pyplot as plt<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
[31mfacet = 'Assessment Of Healthcare Utilization Rates By Demographic Groups'<0x0A><0x0A># Create a figure instance<0x0A>fig = plt.figure(facecolor='white', figsize=(10,10))<0x0A><0x0A># Create an axes instance<0x0A>ax = fig.add_subplot(1, 1, 1)<0x0A><0x0A># Create the scatter plot<0x0A>ax.scatter(x=df['Assessment Of Healthcare Utilization Rates By Demographic Groups'], y=df['Utilization Rates By Demographic Groups'], s=100)<0x0A><0x0A># Add the title<0x0A>ax.set_title('')<0x0A><0x0A># Add the axis<0x0A>ax.set_xlim(0, 400)<0x0A><0x0A># Add the axis<0x0A>ax.set_ylim(0, 400)<0x0A><0x0A># Add the axis<0x0A>ax.set_xlabel('')<0x0A><0x0A># Add the title<0x0A>ax.set_ylabel('')<0x0A><0x0A># Add the axis<0x0A>ax.set_ylabel('')<0x0A><0x0A># Add the axis<0x0A>ax.set_xlim(0, 2000)<0x0A><0x0A># Add the axis<0x0A>ax.set_ylabel('')<0x0A><0x0A># Add the axis<0x0A>ax.set_xlim(0, 2000)<0x0A><0x0A># Add the axis<0x0A>ax.set_ylabel('')<0x0A><0x0A># Add the axis<0x0A>ax.set_xlabel('')<0x0A><0x0A># Add the axis<0x0A>ax.set_ylabel('')<0x0A><0x0A># Add the axis<0x0A>ax.set_xlim(0, 2000)<0x0A><0x0A># Add the axis<0x0A>ax.set_ylabel('')<0x0A><0x0A># Add the axis<0x0A>ax.set_xlim(0, 2000)<0x0A><0x0A># Add the axis<0x0A>ax.set_ylabel('')<0x0A><0x0A># Add the axis<0x0A>ax.set_xlabel('')<0x0A><0x0A># Add the axis<0x0A>ax.set_ylabel('')<0x0A><0x0A># Add the axis<0x0A>ax.set_xlim(0, 2000)<0x0A><0x0A># Add the axis<0x0A>ax.set_ylabel('')<0x0A><0x0A># Add the axis<0x0A>ax.set_xlabel('')<0x0A><0x0A># Add the axis<0x0A>ax.set_ylabel('')<0x0A><0x0A># Add the axis<0x0A>ax.set_xlabel('')<0x0A><0x0A># Add the axis<0x0A>ax.set_ylabel('')<0x0A><0x0A># Add the axis<0x0A>ax.set_xlabel('')<0x0A><0x0A># Add the axis<0x0A>ax.set_ylabel('')<0x0A><0x0A># Add the axis<0x0A>ax.set_xlabel('')<0x0A><0x0A>
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
[31mpoverty_rate_plot = poverty_rate.plot(kind='bar', color='#003365', figsize=(6,6))<0x0A>poverty_rate_plot.set_xlabel('')<0x0A>poverty_rate_plot.set_ylabel('')<0x0A>poverty_rate_plot.set_xticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_plot.set_yticklabels(['Poverty Rate', 'Poverty Rate'], rotation=0)<0x0A>poverty_rate_plot.set_ylim([0, 3000])<0x0A>poverty_rate_plot.set_xlim([0, 3000])<0x0A>poverty_rate_plot.set_ylim([0, 3000])
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
[31mfacet = sns.FacetGrid(data=df, col='variable', height=7, aspect=1.5)<0x0A>facet.map(plt.plot, 'Impact Of Temperature Variability On Crop Yield Statistics', 'Drennted Analysis Of Yearly Weather Weather In Normalies')<0x0A>facet.add_legend()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
[31mfig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.plot(x,y)<0x0A><0x0A>ax.set_xlim(1825,1840)<0x0A>ax.set_ylim(0,5000)<0x0A><0x0A>ax.set_xticks(x)<0x0A>ax.set_xticklabels(x)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
[31mfacet = sns.FacetGrid(data=df, size=8, aspect=1.5)<0x0A>facet.map(plt.scatter, 'Literacy Rate', 'Epoch Volume')<0x0A>facet.add_legend()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:38<00:00, 10.94s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.set_title('Damage caused due to forest depletion in Belgium')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Coal (total $% of GW)')<0x0A>ax.set_xticks(np.arange(0, 100, 100))<0x0A>ax.set_yticks(np.arange(0, 0.05, 0.05))<0x0A><0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='#000000', linestyle='--')<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='#000000', linestyle='--')<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='#000000', linestyle='--')<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='#000000', linestyle='--')<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='#000000', linestyle='--')<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='#000000', linestyle='--')<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='#000000', linestyle='--')<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='#000000', linestyle='--')<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='#000000', linestyle='--')<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='#000000', linestyle='--')<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='#000000', linestyle='--')<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'],
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A><0x0A># Create a line plot of unemployment and youth unemployment for Colombia<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m# Create a line plot of annual freshwater withdrawals (% of total withdrawals) for the year 2012 to 2015<0x0A><0x0A># Create a line plot of annual freshwater withdrawals (% of total withdrawals) for the year 2012 to 2015<0x0A><0x0A># Create a line plot of annual freshwater withdrawals (% of total withdrawals) for the year 2015 to 2015<0x0A><0x0A># Create a line plot of annual freshwater withdrawals (% of total withdrawals) for the year 2015<0x0A><0x0A><0x0A># Create a line plot of annual freshwater withdrawals (% of total withdrawals) for the year 2015<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plot the graph<0x0A><0x0A># Plot the graph<0x0A><0x0A># Plot the graph<0x0A><0x0A><0x0A># Plot the graph<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mfig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.plot(df_sanos['Year'], df_sanos['Number of Days'], color='black', linewidth=1)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of Days')<0x0A>ax.set_title('Time required to register a property in Sanos')<0x0A>ax.set_xticklabels(['Year', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the cost of communications and computers with respect to service imports of Lebanon<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_commun
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar chart of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g_bar_plot = sns.barplot(x="Year", y="AID_flow_from_development_assistance_committee", data=net_bil_flow_from_development_assistance_committee, palette="RdYlBu_r")<0x0A>g_bar_plot.set_xticklabels(g_bar_plot.get_xticklabels(), rotation=90)<0x0A>g_bar_plot.set_title("Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A>g_bar_plot.set_xlabel("Year")<0x0A>g_bar_plot.set_ylabel("AID flow from Development Assistance Committee")<0x0A>g_bar_plot.set_ylim(0, 1200000)<0x0A>g_bar_plot.set_xticklabels(g_bar_plot.get_xticklabels(), rotation=90)<0x0A><0x0A># Save the chart<0x0A>g_bar_plot.savefig("net_bil_flow_from_development_assistance_committee.png")<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31m# Create a bar chart with proper labels<0x0A>locations = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 79, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 99, 101, 101, 102, 103, 104, 105, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31m# Create a bar chart of mean shortfall from the poverty lines in Sri Lanka<0x0A><0x0A># Create a bar chart of mean poverty lines in Sri Lanka<0x0A><0x0A># Create a bar chart of mean poverty lines in Sri Lanka<0x0A><0x0A># Create a bar chart of mean poverty lines in Sri Lanka<0x0A><0x0A><0x0A># Create a bar chart of mean poverty lines in Sri Lanka<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot = pd.DataFrame({'Year': df.groupby('Year').sum().index, 'Customs and other import duties (as % of tax revenue) of Indonesia': df.groupby('Year').sum().values})<0x0A>import_plot.index = df.groupby('Year').sum().index<0x0A>import_plot.plot(kind='bar', color='#111111', figsize=(20,20), legend=False)<0x0A>plt.title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>plt.ylabel('5% of tax revenue')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m# Plot number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Create a bar plot of number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A>bar_plot = pd.DataFrame(data=proc_building_counts, columns=['Year', 'Number of procedures to build a warehouse in Congo (Republic)'])<0x0A>bar_plot.index.name = 'Year'<0x0A>bar_plot.plot(kind='bar', title='Number of procedures to build a warehouse in Congo (Republic)', color='green', figsize=(20,20), legend=False)<0x0A>bar_plot.set_xlabel('Year')<0x0A>bar_plot.set_ylabel('Number of procedures to build a warehouse in Congo (Republic)')<0x0A>bar_plot.grid(False)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.scatter(df['Year'],df['Production in production'],color='#000000')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in production')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A>ax.grid(True)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot the distance to frontier score (on scale of 100) of Armenia<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the distance to frontier score (on scale of 100) of Armenia<0x0A><0x0A>ax.scatter(df.Year, df.DistanceToFrontierScore, s=100)<0x0A><0x0A># Plot the distance to frontier score (on scale of 100) of Armenia<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to 100) (intranetel to
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m#Plotting Percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.title('Percentage of babies born with low-birthweight in Sri Lanka')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of babies')<0x0A><0x0A>sns.scatterplot(x='Year',y='Birth Weight',data=df,color='purple')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m# Plotting the percentage of children ages 12-23 months who received DPT vaccinations in Denmark<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.scatter(x=df_children_DPT_vaccinations.Year, y=df_children_DPT_vaccinations.DPT_vaccinations, color='green')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of children who received DPT vaccinations')<0x0A>ax.set_title('Percentage of children ages 12-23 months who received DPT vaccinations in Denmark')<0x0A>ax.set_xticklabels(df_children_DPT_vaccinations.Year, rotation='vertical')<0x0A>ax.set_yticklabels(df_children_DPT_vaccinations.Year, rotation='vertical')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m# Create a scatter plot of Percentage of households in Russian Federation that uses iodized salt<0x0A>sns.catplot(x="Year", y="Percentage of households in Russian Federation that uses iodized salt", data=df, height=15, aspect=1.5, palette="muted")<0x0A>plt.title("Percentage of households in Russian Federation that uses iodized salt")<0x0A>plt.xlabel("Year")<0x0A>plt.ylabel("% of households")<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.scatter(df_UK['Year'], df_UK['Consumption of/ and capital (age % of CWD)'])<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of/ and capital (age % of CWD)')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m# Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A><0x0A># Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m# Create a scatter plot of rating strength of legal rights index in Croatia<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a scatter plot of rating strength of legal rights index in Croatia<0x0A>sns.scatterplot(data=df, x='Year', y='Strength', color='green', ax=ax[0])<0x0A><0x0A># Add a title<0x0A>plt.title('Rating regarding strength of legal rights index in Croatia')<0x0A><0x0A># Add a legend<0x0A>plt.legend(loc='upper left')<0x0A><0x0A># Display the plot<0x0A>plt.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:03<00:00,  6.20s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
[31mheights = ['Alcohol Consumption', 'Mode Age', 'Alcohol Consumption']<0x0A><0x0A>for i in heights:<0x0A>    plt.scatter(df[i], df['Alcohol Consumption'], alpha=0.7)<0x0A>    plt.xlim(0, 6000)<0x0A>    plt.xticks(np.arange(0, 6000, 1000))<0x0A>    plt.ylim(0, 45000)<0x0A>    plt.xlabel(i)<0x0A>    plt.ylabel(i)<0x0A>    plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
[31mfacet = sns.FacetGrid(data, height=7, aspect=4)<0x0A>facet.map(sns.barplot, "Water Usage", "CO2 Emissions", color="steelblue")<0x0A>facet.set(xlim=(0, 8000))<0x0A>facet.set(ylim=(0, 8000))<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
[31mgrupos = ['Dog', 'Red', 'USA']<0x0A><0x0A># Create a bar plot of the dataframe<0x0A>df_bar = pd.DataFrame(<0x0A>    [<0x0A>        df_merged['Dog'],<0x0A>        df_merged['Red'],<0x0A>        df_merged['USA']]<0x0A>    ],<0x0A>    columns = grupos<0x0A>)<0x0A><0x0A># Create a bar plot of the dataframe<0x0A>df_bar.plot(kind='bar',<0x0A>        figsize=(6, 6),<0x0A>        rot=90,<0x0A>        xlim=(0, 500000),<0x0A>        ylim=(0, 550000))<0x0A><0x0A># Set the yticks to be formatted<0x0A>plt.yticks(fontsize=12)<0x0A>plt.yticks(fontsize=12)<0x0A>plt.ylabel('Kurtosis And Skewness Of Annual Corporate Profit Margins')<0x0A>plt.ylabel('Kurtosis And Skewness Of Annual Corporate Profit Margins')<0x0A><0x0A># Save the figure<0x0A>plt.savefig('barplot_barplot.png')<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
[31mgrouped_df = pd.DataFrame(grouped_df, columns=['Product', 'Sales'])<0x0A>grouped_df.index = ['Product', 'Sales']<0x0A>grouped_df.drop('Sales', axis=1, inplace=True)<0x0A>grouped_df.drop('Sales', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=1, inplace=True)<0x0A>grouped_df.drop('Product', axis=
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
[31m# Create a facetgrid to plot the data<0x0A>facetgrid = sns.FacetGrid(df, row = 'Country', height = 8)<0x0A>facetgrid.map(plt.hist, 'Median Household Income Indexed By Regional Inflation Rates', bins = 20)<0x0A>facetgrid.add_legend()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
[31m# Create a bar plot using the seaborn library<0x0A>sns.set(context = 'notebook', style = 'ticks', <0x0A>        context = 'talk', <0x0A>        axis = 'x', <0x0A>        rot = 0, <0x0A>        ylim = (0, 12.5))<0x0A><0x0A># Create a bar plot using the seaborn library<0x0A>sns.barplot(x = 'Cost', y = 'Quantile Regression Estimates Of Salary By Experience Level', data = df, palette = 'Blues')<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
[31mheights.plot(kind='scatter', x='Height', y='Height', figsize=(10,10), color='steelblue', s=100)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
[31mfig, ax = plt.subplots(figsize=(10,10))<0x0A>ax.scatter(x, y, s=100)<0x0A>ax.set_xlim(0, 9000)<0x0A>ax.set_ylim(0, 400)<0x0A>ax.set_xticks(np.arange(0, 9000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_xlim(0, 9000)<0x0A>ax.set_ylim(0, 400)<0x0A>ax.set_xticks(np.arange(0, 9000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_xticks(np.arange(0, 9000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000, 1000))<0x0A>ax.set_yticks(np.arange(0, 4000,
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
[31m# Plot the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(1)<0x0A><0x0A>ax.spines['left'].set_xlabel('Smoking Rate')<0x0A>ax.spines['left'].set_ylabel('Simulation Results Of Variable Interest Interest Rates On Bond Prices')<0x0A>ax.spines['left'].set_xlim(1, 200)<0x0A>ax.spines['left'].set_ylim(0, 200)<0x0A><0x0A>ax.spines['left'].set_xlim(1, 930)<0x0A>ax.spines['left'].set_xlim(1, 930)<0x0A><0x0A>ax.spines['left'].set_xlim(0, 1930)<0x0A>ax.spines['left'].set_xlim(0, 1930)<0x0A><0x0A>ax.spines['left'].set_xlim(0, 1930)<0x0A>ax.spines['left'].set_xlim(0, 1930)<0x0A><0x0A>ax.spines['left'].set_xlim(0, 1930)<0x0A>ax.spines['left'].set_xlim(0, 1930)<0x0A><0x0A>ax.spines['left'].set_xlim(0, 1930)<0x0A>ax.spines['left'].set_xlim(0, 1930)<0x0A><0x0A>ax.spines['left'].set_xlim(0, 1930)<0x0A>ax.spines['left'].set_xlim(0, 1930)<0x0A><0x0A>ax.spines['left'].set_xlim(0, 1930)<0x0A>ax.spines['left'].set_xlim(0, 1930)<0x0A><0x0A>ax.spines['left'].set_xlim(0, 1930)<0x0A>ax.
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
[31mfacet = sns.FacetGrid(data, row = 'CO2 Emissions', size = 6)<0x0A>facet.map(plt.plot, 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'CO2 Emissions', color = 'C0')<0x0A>facet.set(xlim=(1.814, 1.822))<0x0A>facet.set(ylim=(0, 90))<0x0A>facet.add_legend()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
[31mfacet = sns.FacetGrid(data=df, size=8)<0x0A>facet.map(sns.lineplot, "Time", color="steelblue", linewidth=2)<0x0A>facet.add_legend()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
[31mfacet = sns.FacetGrid(data=df, height=7, aspect=1.5)<0x0A>facet.map(plt.scatter, 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'Heterogeneity In Clinical Trial Populations By Gender And Age')<0x0A>facet.add_legend()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
[31msubset = df.groupby(['Distance', 'Population']).sum()<0x0A><0x0A># Plot the Distance vs Population<0x0A>subset.plot(kind='line', x='Distance', y='Population', figsize=(10,10))<0x0A><0x0A># Add a title and axis labels<0x0A>plt.ylabel('Probability Density Density Function OYAg Distribution In Population In Population Survey')<0x0A>plt.xlabel('Distance')<0x0A><0x0A># Display the plot<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
[31mGrowthRate = pd.DataFrame(data.groupby(['Growth Rate']).mean()['GDP']).reset_index()<0x0A>GrowthRate.columns = ['Growth Rate', 'GDP']<0x0A><0x0A># Create a scatter plot of the dataframe and the target variable<0x0A>sns.lmplot('Growth Rate', 'GDP', data=GrowthRate, fit_reg=False, size=8, scatter_kws={'alpha':0.5,'s':50})
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
[31mimport seaborn as sns<0x0A>import matplotlib.pyplot as plt<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
[31mfacet = sns.FacetGrid(data=df, size=8)<0x0A>facet.map(plt.scatter, 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'Demographic Groups')<0x0A>facet.add_legend()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
[31mpoverty_rate_chart = pd.DataFrame(poverty_rate_chart, columns=['Poverty Rate', 'USA'])<0x0A>poverty_rate_chart.index = poverty_rate_chart.index.map(int)<0x0A>poverty_rate_chart.plot(kind='bar', figsize=(6, 6), layout=(1, 2), legend=False)<0x0A>poverty_rate_chart.set_xlabel('')<0x0A>poverty_rate_chart.set_ylabel('')<0x0A>poverty_rate_chart.set_xticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_chart.set_yticklabels(['Poverty Rate', 'USA'])<0x0A>poverty_rate_chart.set_ylim(0, 3000)<0x0A>poverty_rate_chart.set_ylim(0, 3000)<0x0A>poverty_rate_chart.set_xticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_chart.set_yticklabels(['Dog', 'Nike', 'Red', 'USA'])<0x0A>poverty_rate_chart.set_ylim(0, 3000)<0x0A>poverty_rate_chart.set_ylim(0, 3000)<0x0A>poverty_rate_chart.set_ylim(0, 3000)<0x0A>poverty_rate_chart.set_ylim(0, 3000)<0x0A>poverty_rate_chart.set_ylim(0, 3000)<0x0A>poverty_rate_chart.set_ylim(0, 3000)<0x0A>poverty_rate_chart.set_ylim(0, 3000)<0x0A>poverty_rate_chart.set_ylim(0, 3000)<0x0A>poverty_rate_chart.set_ylim(0, 3000)<0x0A>poverty_rate_chart.set_ylim(0, 3000)<0x0A>poverty_rate_chart.set_ylim(0, 3000)<0x0A>poverty_rate_chart.set_ylim(0, 3000)<0x0A>poverty_rate_chart.set_ylim(0, 3000)<0x0A>poverty_rate_chart.set_ylim(0, 3000)
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
[31mfacet = sns.FacetGrid(data=df, col='time', height=6)<0x0A>facet.map(plt.plot, 'Impact Of Temperature Variability On Crop Yield Statistics', 'Drennted Analysis Of Yearly Weather Temperature In Response To Data', linewidth=2)<0x0A>facet.add_legend()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
[31mfig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.plot(x,y)<0x0A><0x0A>ax.set_xlim(1825,1840)<0x0A>ax.set_ylim(0,5000)<0x0A><0x0A>ax.set_xticks(x)<0x0A>ax.set_xticklabels(x)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
[31mfacet = sns.FacetGrid(data=df, size=7, aspect=1.5)<0x0A>facet.map(plt.scatter, 'Literacy Rate', 'Epoch Volume')<0x0A>facet.add_legend()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:39<00:00, 10.98s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.set_title('Damage caused due to forest depletion in Belgium')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Coal (total $\Gas$ of GHV)')<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='grey', linestyle='dotted', linewidth=2)<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='grey', linestyle='dotted', linewidth=2)<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='grey', linestyle='dotted', linewidth=2)<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='grey', linestyle='dotted', linewidth=2)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spin
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a line plot of unemployment_df.plot(x='Year', y='Unemployed youth population of Colombia', kind='line', figsize=(25,25), color='#003399', lw=2, alpha=0.7, <0x0A>#                                                      title='Total unemployed youth population of Colombia', <0x0A>#                                                      grid=False, legend=False, fontsize=20, <0x0A>#                                                      title='Total unemployed youth population of Colombia', <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m# Create a line plot of annual freshwater withdrawals (% of total withdrawals) for the year 2011 to 2016<0x0A><0x0A># Create a line plot of annual freshwater withdrawals (% of total withdrawals) for the year 2011 to 2016<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a line plot of annual freshwater withdrawals (% of total withdrawals) for the year 2011 to 2016<0x0A><0x0A>ax.plot(annual_freshwater_withdrawals_df['Year'], annual_freshwater_withdrawals_df['Annual Freshwater Withdrawals (% of total withdrawals)'], linestyle='--', marker='o', color='black')<0x0A>ax.set_title('Annual freshwater withdrawals (%) in Kazakhstan')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Annual freshwater withdrawals (%) of total withdrawals')<0x0A>ax.grid(True)<0x0A><0x0A># Save the figure<0x0A>plt.savefig('Annual freshwater withdrawals (%) in Kazakhstan')<0x0A><0x0A># Show the figure<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plot the graph<0x0A><0x0A># Plot the graph<0x0A><0x0A># Plot the graph<0x0A><0x0A><0x0A># Plot the graph<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mfig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.plot(df_sanos['Year'], df_sanos['Number of Days'], color='black', linewidth=1)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of Days')<0x0A>ax.set_title('Time required to register a property in Sanos')<0x0A>ax.set_xticklabels(['Year', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the cost of communications and computers with respect to service imports of Lebanon<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_commun
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar chart of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g_bar_plot = sns.barplot(x="Year", y="AID_flow_from_development_assistance_committee", data=net_bil_flow_from_development_assistance_committee, palette="RdYlBu_r")<0x0A>g_bar_plot.set_xticklabels(g_bar_plot.get_xticklabels(), rotation=90)<0x0A>g_bar_plot.set_title("Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A>g_bar_plot.set_xlabel("Year")<0x0A>g_bar_plot.set_ylabel("AID flow from Development Assistance Committee")<0x0A>g_bar_plot.set_ylim(0, 1200000)<0x0A>g_bar_plot.set_xticklabels(g_bar_plot.get_xticklabels(), rotation=90)<0x0A><0x0A># Save the chart<0x0A>g_bar_plot.savefig("net_bil_flow_from_development_assistance_committee.png")<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='green', figsize=(20,20))<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='blue', figsize=(20,20))<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31m# Create a bar chart of mean shortfall from the poverty lines in Sri Lanka<0x0A><0x0A># Create a bar chart of mean poverty lines in Sri Lanka<0x0A><0x0A># Create a bar chart of mean poverty lines in Sri Lanka<0x0A><0x0A># Create a bar chart of mean poverty lines in Sri Lanka<0x0A><0x0A># Create a bar chart of mean poverty lines in Sri Lanka<0x0A><0x0A><0x0A># Create a bar chart of mean poverty lines in Sri Lanka<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot = pd.DataFrame({'Year':['1959', '1960', '1961', '1962', '1963', '1964', '1965', '1966'], 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m# Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the figure size<0x0A>plt.rcParams['figure.figsize'] = (25, 40)<0x0A><0x0A># Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the axes<0x0A>plt.rcParams['axes.grid'] = True<0x0A><0x0A># Setting up the title<0x0A>plt.title('Number of procedures to build a warehouse in Congo (Republic)')<0x0A><0x0A># Setting up the axes<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Number of procedures to build a warehouse in Congo (Republic)')<0x0A><0x0A># Setting up the legend<0x0A>plt.legend(<0x0A>    title='Number of procedures to build a warehouse in Congo (Republic)',<0x0A>    labels=['Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.scatter(df['Year'],df['Production in production'],color='#000000')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in production')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A>ax.grid(True)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot the distance to frontier score (on scale of 100) of Armenia<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the distance to frontier score (on scale of 100) of Armenia<0x0A><0x0A>ax.scatter(df.Year, df.DistanceToFrontierScore, s=100)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (intranetel to 100hbarong)')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A>ax.set_xticklabels(df.Year, rotation='vertical')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m#Plotting Percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.title('Percentage of babies born with low-birthweight in Sri Lanka')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of babies')<0x0A>sns.scatterplot(x='Year',y='Sr. Birthweight',data=df,color='purple')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m# Plotting the percentage of children ages 12-23 months who received DPT vaccinations in Denmark<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.scatter(x=df_children_DPT_vaccinations.Year, y=df_children_DPT_vaccinations.DPT_vaccinations, color='green')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of children who received DPT vaccinations')<0x0A>ax.set_title('Percentage of children ages 12-23 months who received DPT vaccinations in Denmark')<0x0A>ax.set_xticklabels(df_children_DPT_vaccinations.Year, rotation='vertical')<0x0A>ax.set_yticklabels(df_children_DPT_vaccinations.Year, rotation='vertical')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m# Create a scatter plot of Percentage of households in Russian Federation that uses iodized salt<0x0A>sns.catplot(x="Year", y="Percentage of households in Russian Federation that uses iodized salt", data=df, height=15, aspect=1.5, palette="muted")<0x0A>plt.title("Percentage of households in Russian Federation that uses iodized salt")<0x0A>plt.xlabel("Year")<0x0A>plt.ylabel("% of households")<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.scatter(df_UK['Year'], df_UK['Consumption of/ and capital (age % of CWD)'])<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of/ and capital (age % of CWD)')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m# Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A># Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A><0x0A># Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m# Create a scatter plot of the ratings of Croatia<0x0A>fig, ax = plt.subplots(figsize=(20,15))<0x0A><0x0A># Create a scatter plot of the ratings of Croatia<0x0A>sns.scatterplot(data=df, x='Year', y='Strength', color='green', ax=ax[0])<0x0A><0x0A># Add a title<0x0A>plt.title('Rating regarding strength of legal rights index in Croatia')<0x0A><0x0A># Add a legend<0x0A>plt.legend(loc='upper left')<0x0A><0x0A># Display the plot<0x0A>plt.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]

















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:25<00:00,  7.27s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
[31mMode_Age = sns.lmplot(x='Mode Age', y='Alcohol Consumption', data=df, fit_reg=False, height=7, aspect=1.5)<0x0A>Mode_Age.set(xlim=(0, None), ylim=(0, None))
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
[31mmglearn.plots.plot_grouped_co2_emissions()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
[31mgrupos = {'DOG': 'Red', 'USA': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'KURTOSIS AND SKEWNESS OF ANNUAL CORPORATE PROFIT MARGINS', 'Dog': 'Red', 'USA': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'USA': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'USA': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'USA': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'USA': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'USA': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'USA': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'USA': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'USA': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'USA': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'USA': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'USA': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'USA': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'USA': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'USA': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'USA': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'USA': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'USA': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'USA': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'USA': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'USA': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'USA': 
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
[31mgrouped_df = pd.DataFrame(grouped_df, columns=['USN', 'USH'])<0x0A>grouped_df.index = ['Apple', 'Dog', 'Nike', 'Rock', 'Sedan', 'Spanish', 'USA']<0x0A>grouped_df.sort_values(by='USN', inplace=True)<0x0A><0x0A>plt.figure(figsize=(10,10))<0x0A>sns.barplot(grouped_df.index, grouped_df.USN, palette='Blues')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
[31mfacet = sns.catplot(x="Country", y="Bond Yield", data=df, kind="bar", height=8, aspect=1.5)<0x0A>facet.set_axis_labels("Median Household Income Indexed By Regional Inflation Rates", "Bond Yield", "USA")<0x0A>facet.fig.set_figwidth(10)<0x0A>facet.fig.set_figheight(10)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
[31mfig, ax = plt.subplots(figsize=(8, 8))<0x0A><0x0A># Plot bar graph<0x0A>sns.barplot(x='Cost', y='Quantile Regression Estimates Of Salary By Experience Level Level', data=df, ax=ax)<0x0A><0x0A># Add some helpful info<0x0A>fmt = '${x:,.0f}'<0x0A>ax.set_xticklabels(df['Cost'], rotation=90)<0x0A><0x0A>ax.set_ylabel('Quantile Regression Estimates Of Salary By Experience Level Level')<0x0A>ax.set_xlabel('Cost')<0x0A><0x0A># Save the figure<0x0A>plt.savefig('figs/fig4.png')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
[31mheights_by_gender = pd.DataFrame(df.groupby(['Height']).mean()['Weight'])<0x0A>heights_by_gender.columns = ['Height']<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.columns = ['Height']<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.columns = ['Height']<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.columns = ['Height']<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.columns = ['Height']<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index(inplace=True)<0x0A>heights_by_gender.reset_index
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
[31mfig = plt.figure(figsize=(10,10))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.scatter(x,y,s=100)<0x0A><0x0A>ax.set_xlim(0, 9000)<0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_xticks(np.arange(0, 900, 100))<0x0A>ax.set_yticks(np.arange(0, 400, 100))<0x0A><0x0A>ax.set_xlim(0, 9000)<0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_xticks(np.arange(0, 900, 100))<0x0A>ax.set_yticks(np.arange(0, 400, 100))<0x0A><0x0A>ax.set_xlim(0, 9000)<0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_xlim(0, 9000)<0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_xlim(0, 9000)<0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_xlim(0, 9000)<0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_xlim(0, 9000)<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_xlim(0, 9000)<0x0A><0x0A>ax.set_xlim(0, 9000)<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_xlim(0, 9000)<0x0A><0x0A>ax.set_xlim(0, 9000)<0x0A><0x0A>ax.set_xlim(0, 9000)<0x0A><0x0A>ax.set_xlim(0, 9000)<0x0A><0x0A>ax.set_xlim(0, 9000)<0x0A><0x0A>ax.set_xlim(0, 9000)<0x0A><0x0A>ax.set_xlim(0, 9000)<0x0A><0x0A>ax.set_xlim(0, 9000)<0x0A><0x0A>ax.set_xlim(0, 9000)<0x0A><0x0A>ax.set_xlim(0, 9000)
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
[31mgraph = sns.relplot(x="Smoking Rate", y="Simulation Results Of Variable Interest Rates On Bond Prices",<0x0A>                   data=df, kind="line", height=6, aspect=.75)<0x0A>graph.set(ylim=(0, 200))<0x0A>graph.set(xlabel="Smoking Rate", ylabel="Simulation Results Of Variable Interest Rates On Bond Prices")<0x0A>graph.grid(True)<0x0A>graph.set_axis_labels("Smoking Rate", "Simulation Results Of Variable Interest Rates On Bond Prices")<0x0A>graph.savefig("simulation_results_bond_prices.png")
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
[31mfacet = sns.FacetGrid(data, row = 'CO2 Emissions', size = 5)<0x0A>facet.map(plt.plot, 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'CO2 Emissions', color = 'C0')<0x0A>facet.set(xlim=(1.814, 1.822))<0x0A>facet.set(ylim=(0, 90))<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
[31mfacet = sns.FacetGrid(df, height=8)<0x0A>facet.map(sns.lineplot, "Time", "Count")<0x0A>facet.add_legend()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
[31mheterogeneity_in_clinical_trial_populations_by_gender_and_age.plot(kind='scatter', x='Predictive Accuracy Of Seasonal Demand Forecasting Models', y='Heterogeneity In Clinical Trial Populations By Gender And Age', figsize=(10, 10), color='darkblue')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
[31msubset = df.groupby(['Distance', 'Population']).sum()<0x0A><0x0A># Plot the Distance vs Population Survey<0x0A>plot_1 = subset.plot(kind='line', x='Distance', y='Population', figsize=(10,10))<0x0A>plot_1.set(xlabel='Distance', ylabel='Probability Density Density Function OYAg Distribution In Population In Population Survey')<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
[31msubset = gdp_data[['Growth Rate', 'GDP']]<0x0A><0x0A># Declare a variable called 'gdp', and assign to it the result of plotting a scatter plot matrix for each pair of scatter plots.<0x0A>gdp_data = subset[['Growth Rate', 'GDP']]<0x0A><0x0A>#Declare a variable called 'Life Expectancy', and assign to it the result of plotting a scatter plot matrix for each pair of scatter plots.<0x0A>gdp_data['Life Expectancy'] = pd.cut(gdp_data.LifeExpectancy, bins=range(0, 60, 10))<0x0A><0x0A>#Now plot the relationship between 'Life Expectancy' and 'Gdp', as discussed earlier in the notebook<0x0A>gdp_data = pd.DataFrame(gdp_data.LifeExpectancy)<0x0A>gdp_data.columns = ['Life Expectancy', 'GDP']<0x0A><0x0A>#Now plot the relationship between 'Life Expectancy' and 'Life Expectancy', as discussed earlier in the notebook<0x0A>gdp_data.plot(kind='scatter', x='Life Expectancy', y='Life Expectancy', alpha=0.5, figsize=(10,10))<0x0A><0x0A># Add the legend and labels to the axes.<0x0A>plt.ylim(0, 80)<0x0A><0x0A># Label the axes.<0x0A>plt.xlabel('Growth Rate')<0x0A>plt.ylabel('GDP')<0x0A><0x0A>#Show the figure.<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
[31mimport seaborn as sns<0x0A>import matplotlib.pyplot as plt<0x0A><0x0A>sns.set(style="ticks", color_codes=True)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
[31mfacet = sns.FacetGrid(data=df, size=8, col="variable", <0x0A>                  height=8)<0x0A>facet.map(plt.scatter, "Assessment Of Healthcare Utilization Rates By Demographic Groups", <0x0A>                       "Assessment Of Healthcare Utilization Rates By Demographic Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", <0x0A>                       "Total_Utilization_Rates_By_Demographic_Groups", 
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
[31mpoverty_rate_plot(df, 'USA')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
[31mfacet = sns.FacetGrid(data=df, col='time', height=5)<0x0A>facet.map(plt.plot, 'Impact Of Temperature Variability On Crop Yield Statistics', 'Drennted Analysis Of Yearly Weather Temperature Data', linewidth=2)<0x0A>facet.add_legend()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
[31mfig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.plot(df['year'], df['total_bill'])<0x0A>ax.set_ylim(0, 5000)<0x0A><0x0A>ax.set_xlim(1825, 1840)<0x0A><0x0A>ax.set_xticks(np.arange(1825, 1840, 1))<0x0A>ax.set_xticklabels(df['year'])<0x0A><0x0A>ax.set_ylim(0, 5000)<0x0A><0x0A>ax.set_xticks(np.arange(1825, 1840, 1))<0x0A>ax.set_yticks(np.arange(0, 5000, 1))<0x0A><0x0A>ax.set_xticklabels(df['year'])<0x0A><0x0A>ax.set_yticklabels(df['total_bill'])<0x0A><0x0A>ax.set_ylim(0, 5000)<0x0A><0x0A>ax.set_xticks(np.arange(1825, 1840, 1))<0x0A><0x0A>ax.set_yticks(np.arange(0, 5000, 1))<0x0A><0x0A>ax.set_xticks(np.arange(1840, 1840, 1))<0x0A><0x0A>ax.set_yticks(np.arange(0, 5000, 1))<0x0A><0x0A>ax.set_yticks(np.arange(0, 5000, 1))<0x0A><0x0A>ax.set_xticks(np.arange(1840, 1840, 1))<0x0A><0x0A>ax.set_yticks(np.arange(0, 5000, 1))<0x0A><0x0A>ax.set_yticks(np.arange(0, 5000, 1))<0x0A><0x0A>ax.set_xticks(np.arange(1840, 1840, 1))<0x0A><0x0A>ax.set_xticks(np.arange(1840, 1840, 1))<0x0A><0x0A>ax.set_yticks(np.arange(1840, 1840, 1))<0x0A><0x0A>ax.set_yticks(np.arange(1840, 1840, 1))<0x0A><0x0A>ax.set_yticks(np.arange(1840, 1840, 1))<0x0A><0x0A>ax
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
[31mgraph = sns.relplot(x="Literacy Rate", y="Epcnt Vol", size="Literacy Rate",<0x0A>                   data=df, height=8, aspect=1.5,<0x0A>                   kind="scatter", size="Epcnt Vol",<0x0A>                   palette="muted")<0x0A>graph.set(xlabel="Literacy Rate", ylabel="Epcnt Vol")<0x0A>graph.set(ylim=(0, 650))<0x0A>graph.fig.subplots_adjust(top=0.9)<0x0A>graph.fig.suptitle('')<0x0A>graph.savefig('graph.png')
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:27<00:00, 10.36s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.set_title('Damage caused due to forest depletion in Belgium')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Coal (total $\Gas$ of GW)')<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.tick_params(bottom=False, top=False, left=False, right=False)<0x0A>ax.tick_params(bottom=False, left=False, right=False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='grey', linestyle='dotted', linewidth=1)<0x0A>ax.plot(df_Belgium['Year'], df_Belgium['Coal'], color='grey', linestyle='dotted', linewidth=1)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a line plot of unemployment_df.plot(x='Year', y='Unemployed youth population of Colombia', kind='line', figsize=(25, 25), color='#003399', lw=2, alpha=0.7, <0x0A>#                                                      title='Total unemployed youth population of Colombia', <0x0A>#                                                      grid=False, legend=False, fontsize=20, <0x0A>#                                                      title='Total unemployed youth population of Colombia', <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                      title_fontsize=20, fontsize=20, <0x0A>#                                                     
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m# Create a line plot of annual freshwater withdrawals (% of total withdrawals) for the year 2011 to 2016<0x0A><0x0A># Create a line plot of annual freshwater withdrawals (% of total withdrawals) for the year 2011 to 2016<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a line plot of annual freshwater withdrawals (% of total withdrawals) for the year 2011 to 2016<0x0A><0x0A>ax.plot(annual_freshwater_withdrawals_df['Year'], annual_freshwater_withdrawals_df['Annual Freshwater Withdrawals (% of total withdrawals)'], linestyle='--', marker='o', color='black')<0x0A>ax.set_title('Annual freshwater withdrawals (%) in Kazakhstan')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Annual freshwater withdrawals (%) of total withdrawals')<0x0A>ax.grid(True)<0x0A><0x0A># Save the figure<0x0A>plt.savefig('Annual freshwater withdrawals (%) in Kazakhstan')<0x0A><0x0A># Show the figure<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plot the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plot the graph<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plot the graph<0x0A><0x0A>ax.set_title('Arable land (hectares) in Seychelles', fontsize=20)<0x0A><0x0A># Plot the graph<0x0A><0x0A>ax.set_xlabel('Year', fontsize=20)<0x0A>ax.set_ylabel('Ave.Claim.(All Properties)', fontsize=20)<0x0A><0x0A># Plot the graph<0x0A><0x0A>ax.plot(df['Year'], df['Arable land'], '-', color='red')<0x0A><0x0A># Plot the graph<0x0A><0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land'], rotation=90)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mfig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.plot(df_sanos['Year'], df_sanos['Number of Days'], color='black', linewidth=1)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of Days')<0x0A>ax.set_title('Time required to register a property in Sanos')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_xlim(0, 1000)<0x0A>ax.set_ylim(0, 1000)<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the cost of communications and computers with respect to service imports of Lebanon<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_commun
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar chart of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=20)<0x0A>g.set_xlabels("Year", fontsize=15)<0x0A>g.set_xticklabels(rotation=90)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("net_bilateral_aid_flow_Grenada_from_Development_Assistance_Committee.png", bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield'].sum().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='green', figsize=(20,20))<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='blue', figsize=(20,20))<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31m# Create a bar chart with mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka<0x0A><0x0A># Create a bar chart with mean poverty lines (as a percentage of the poverty lines) in Sri Lanka<0x0A><0x0A># Create a bar chart with mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka<0x0A><0x0A># Create a bar chart with mean poverty lines (as a percentage of the poverty lines) in Sri Lanka<0x0A><0x0A># Create a bar chart with mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka<0x0A><0x0A><0x0A># Create a bar chart with mean poverty lines (as a percentage of the poverty lines) in Sri Lanka<0x0A><0x0A><0x0A># Create a bar chart with mean poverty lines (as a percentage of the poverty lines) in Sri Lanka<0x0A><0x0A><0x0A><0x0A># Create a bar chart with mean poverty lines (as a percentage of the poverty lines) in Sri Lanka<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot = pd.DataFrame({'Year':['1959', '1960', '1961', '1962', '1963', '1964', '1965', '1966'], 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia', 'Customs and other import duties (as
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m# Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the figure size<0x0A>plt.rcParams['figure.figsize'] = (25, 40)<0x0A><0x0A># Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the graph<0x0A><0x0A># Setting up the axes<0x0A><0x0A># Setting up the title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.scatter(df['Year'],df['Production in production'],color='#000000')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in production')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A>ax.grid(True)<0x0A><0x0A>ax.set_xticklabels(['Year','Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year','Production in production'], rotation=90)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot the distance to frontier score (on scale of 100) of Armenia<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the distance to frontier score (on scale of 100) of Armenia<0x0A><0x0A>ax.scatter(df.Year, df.DistanceToFrontierScore, s=100)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (intranet for redevelopment of redevelopment)')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A>ax.set_xticklabels(df.Year, rotation=90)<0x0A>ax.set_yticklabels(df.Year, rotation=90)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m#Plotting Percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A><0x0A>plt.title('Percentage of babies born with low-Birthweight in Sri Lanka')<0x0A><0x0A>sns.scatterplot(x='Year',y='Survived',data=df,color='purple')<0x0A><0x0A>plt.xticks(rotation=90)<0x0A><0x0A>plt.ylabel('% of babies')<0x0A>plt.xlabel('Year')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m# Plotting the percentage of children ages 12-23 months who received DPT vaccinations in Denmark<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.scatter(x=df_DPT_vaccinations.Year, y=df_DPT_vaccinations.DPT_vaccinations, color='green')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of children who received DPT vaccinations')<0x0A>ax.set_title('Percentage of children ages 12-23 months who received DPT vaccinations in Denmark')<0x0A>ax.set_xticklabels(df_DPT_vaccinations.Year, rotation='vertical')<0x0A>ax.set_yticklabels(df_DPT_vaccinations.Year, rotation='vertical')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m# Create a scatter plot of Percentage of households in Russian Federation that uses iodized salt<0x0A>sns.catplot(x="Year", y="Percentage of households in Russian Federation that uses iodized salt", data=df, height=15, aspect=1.5, palette="muted")<0x0A>plt.title("Percentage of households in Russian Federation that uses iodized salt")<0x0A>plt.xlabel("Year")<0x0A>plt.ylabel("% of households")<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.scatter(df_UK['Year'], df_UK['Consumption of/and capital (age % of CWD)'])<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of/and capital (age % of CWD)')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m# Plot Damage caused due to forest depletion in South Asia<0x0A><0x0A>ggplot(df, aes(x=Year, y=Cost, color=Year)) +<0x0A>    geom_point() +<0x0A>    labs(title="Damage caused due to forest depletion in South Asia", x="Year", y="Cost (s) of GWI)", color= "Damage caused due to forest depletion in South Asia", size=20) +<0x0A>    scale_x_continuous(limits=c(0, 10)) +<0x0A>    scale_y_continuous(limits=c(0, 10)) +<0x0A>    labs(x="Year", y="Cost (s) of GWI", title="Damage caused due to forest depletion in South Asia", y="Cost (s) of GWI") +<0x0A>    labs(x="Year", y="Cost (s) of GWI", title="Damage caused due to forest depletion in South Asia", y="Cost (s) of GWI") +<0x0A>    labs(x="Year", y="Cost (s) of GWI", title="Damage caused due to forest depletion in South Asia", y="Cost (s) of GWI") +<0x0A>    labs(x="Year", y="Cost (s) of GWI", title="Damage caused due to forest depletion in South Asia", y="Cost (s) of GWI") +<0x0A>    labs(x="Year", y="Cost (s) of GWI", title="Damage caused due to forest depletion in South Asia", y="Cost (s) of GWI") +<0x0A>    labs(x="Year", y="Cost (s) of GWI", title="Damage caused due to forest depletion in South Asia", y="Cost (s) of GWI") +<0x0A>    labs(x="Year", y="Cost (s) of GWI", title="Damage caused due to forest depletion in South Asia", y="Cost (s) of GWI") +<0x0A>    labs(x="Year", y="Cost (s) of GWI", title="Damage caused due to forest depletion in South Asia", y="Cost (s) of GWI") +<0x0A>    labs(x="Year", y="Cost (s) of GWI") +<0x0A>    labs(x="Year", y="Cost (s) of GWI") +<0x0A>    labs(x="Year", y="Cost (s) of GWI") +<0x0A>    labs(x="Year", y="Cost (s) of GWI") +<0x0A>    labs(x="Year", y="Cost (s) of GWI") +<0x0A>    labs(x="Year", y="Cost (s) of GWI") +<0x0A>    labs(x="Year", y="Cost (s)
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m# Create a scatter plot of the ratings of Croatia<0x0A>fig, ax = plt.subplots(figsize=(20,15))<0x0A><0x0A># Create a scatter plot of the ratings of Croatia<0x0A>sns.scatterplot(data=df, x='Year', y='Strength rating (12 ± 10000)', color='green', ax=ax[0])<0x0A><0x0A># Add a title<0x0A>plt.title('Rating regarding strength of legal rights index in Croatia')<0x0A><0x0A># Add a legend<0x0A>plt.legend(loc='upper left')<0x0A><0x0A># Display the plot<0x0A>plt.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:32<00:00,  7.64s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m45.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.6 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.91 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
[31mMode_Age = sns.lmplot(x='Mode Age', y='Alcohol Consumption', data=df, fit_reg=False)<0x0A>Mode_Age.set(xlim=(0, None), ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None), xlim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None), xlim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None), xlim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None), xlim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None), xlim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None), xlim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None), xlim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None), xlim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None), xlim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None), xlim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None), xlim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.set(ylim=(0, None))<0x0A>Mode_Age.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 6999}, {'x': 'Dog', 'y': 6999}, {'x': 'Male', 'y': 4149}, {'x': 'Rock', 'y': 6999}, {'x': 'Sedan', 'y': 4149}, {'x': 'USA', 'y': 6999}, {'x': 'Rock', 'y': 6999}, {'x': 'Sedan', 'y': 4149}, {'x': 'Male', 'y': 6999}, {'x': 'Dog', 'y': 6999}, {'x': 'Male', 'y': 6999}, {'x': 'Dog', 'y': 6999}, {'x': 'Male', 'y': 6999}, {'x': 'Sedan', 'y': 6999}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Dog', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 5000}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
[31mgrouped_df = pd.DataFrame(data=train_df, columns=['USN', 'USA'])<0x0A><0x0A>g = sns.FacetGrid(grouped_df, row='USN', height=10, aspect=1.5)<0x0A>g.map(plt.hist, 'USN', bins=10, ec='k')<0x0A>g.add_legend()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 8.37}, {'x': 'Dog', 'y': 8.37}, {'x': 'Nike', 'y': 12.22}, {'x': 'Dog', 'y': 8.37}, {'x': 'Nike', 'y': 12.22}, {'x': 'Red', 'y': 8.37}, {'x': 'Red', 'y': 8.37}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': 'Height', 'type': 'quantitative'}}, 'data': {'values': [{'x': 50, 'y': 60, 'data': 60, 'y': 60, 'data': 60, 'y': 60, 'data': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 60, 'y': 6
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6, 'y': 199.99}, {'x': 6, 'y': 199.99}, {'x': 6, 'y': 199.99}, {'x': 6, 'y': 199.99}, {'x': 6, 'y': 199.99}, {'x': 6, 'y': 199.99}, {'x': 6, 'y': 199.99}, {'x': 6, 'y': 199.99}, {'x': 6, 'y': 199.99}, {'x': 6, 'y': 199.99}, {'x': 6, 'y': 199.99}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 1915}, {'x': 1920, 'y': 1920}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1.814, 'y': 80.3}, {'x': 1.818, 'y': 70.3}, {'x': 1.818, 'y': 70.3}, {'x': 1.818, 'y': 70.3}, {'x': 1.818, 'y': 70.3}, {'x': 1.818, 'y': 70.3}, {'x': 1.818, 'y': 70.3}, {'x': 1.818, 'y': 70.3}, {'x': 1.818, 'y': 70.3}, {'x': 1.818, 'y': 70.3}, {'x': 1.818, 'y': 70.3}, {'x': 1.818, 'y': 70.3}, {'x': 1.818, 'y': 70.3}, {'x': 1.818, 'y': 70.3}, {'x': 1.818, 'y': 70.3}, {'x': 1.818, 'y': 70.3}, {'x': 1.818, 'y': 70.3}, {'x': 1.818, 'y': 70.3}, {'x': 1.818, 'y': 70.3}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
[31mfacet = sns.FacetGrid(df, row="Time", size=10, aspect=1.5)<0x0A>facet.map(plt.plot, "Time", "Count")
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'temporal'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 62.5, 'y': 62.5}, {'x': 62.5, 'y': 62.5}, {'x': 62.5, 'y': 62.5}, {'x': 62.5, 'y': 62.5}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function OYAg Distribution In Population In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 1811, 'type': 'quantitative'}], 'data': [{'x': 1811, 'y': 1811, 'type': 'quantitative'}], 'data': {'x': 1811, 'y': 1811, 'type': 'quantitative'}], 'data': {'x': 1811, 'y': 1811, 'type': 'quantitative'}], 'data': {'x': 1811, 'y': 1811, 'type': 'quantitative'}], 'data': {'x': 1811, 'y': 1811, 'type': 'quantitative'}], 'data': {'x': 1811, 'y': 1811, 'type': 'quantitative'}], 'data': {'x': 1811, 'y': 1811, 'type': 'quantitative'}], 'data': {'x': 1811, 'y': 1811, 'type': 'quantitative'}], 'data': {'x': 1811, 'y': 1811, 'type': 'quantitative'}], 'data': {'x': 1811, 'y': 1811, 'type': 'quantitative'}], '0': {'x': 1811, 'y': 1811, 'type': 'quantitative'}], '0': {'x': 1811, 'y': 1811, 'type': 
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}, {'x': 11000, 'y': 62.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'quantitative'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2870}, {'x': 1920, 'y': 2870}, {'x': 1920, 'y': 2870}, {'x': 1920, 'y': 2870}, {'x': 1920, 'y': 2870}, {'x': 1920, 'y': 2870}, {'x': 1920, 'y': 2870}, {'x': 1920, 'y': 2870}, {'x': 1920, 'y': 2870}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
[31mfacet = sns.FacetGrid(data=df, col='variable', size=7)<0x0A>facet.map(plt.scatter, 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'Demographic Groups')<0x0A>facet.add_legend()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
[31mCountry_Poverty_Rate = pd.DataFrame(country_poverty_rate)<0x0A>Country_Poverty_Rate.columns = ['Poverty Rate', 'USA']<0x0A>Country_Poverty_Rate.index = pd.Index(Country_Poverty_Rate.index)<0x0A>Country_Poverty_Rate.plot(kind='bar', colormap='Blues', figsize=(6, 6))<0x0A>Country_Poverty_Rate.plot(kind='bar', colormap='Blues', figsize=(6, 6))
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
[31mCancelled_Data = pd.read_csv('C:\Users\Arun\Desktop\Data\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\Data\Credential\
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
[31mfacet = sns.FacetGrid(data=df, size=12)<0x0A>facet.map(plt.plot, 'Height', 'Weight')<0x0A>facet.add_legend()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Epoch Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1100, 'y': 570, 'type': 'quantitative'}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.6 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.91 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [04:28<00:00, 13.45s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.set_title('Damage caused due to forest depletion in Belgium')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Coal (total $\Gas$ of GW)')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(25, 25))<0x0A><0x0A># Create a line plot of the total unemployed youth population of Colombia<0x0A>ax.plot(unemployed_pop_col_col_df.index, unemployed_pop_col_col_df.Total_unemployed_youth_population_of_Colombia, '-', color='#008080')<0x0A><0x0A># Set the title and labels<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Unemployed youth % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were %
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m# Create a line plot of annual freshwater withdrawals (% of total withdrawals) for the year 2012 to 2015<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the annual freshwater withdrawals<0x0A>ax.plot(annual_freshwater_withdrawals.Year, annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_title('Arable land (hectares) in Seychelles', fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xlabel('Year', fontsize=20)<0x0A>ax.set_ylabel('Ave. (Claims from Placement)', fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.plot(df['Year'], df['Arable land'], '-', color='black')<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xlim(0, 400)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_ylabel('Ave. (Claims from Placement)', fontsize=20)<0x0A><0x0A>ax.set_ylabel('Ave. (Claims from Placement)', fontsize=20)<0x0A><0x0A>ax.set_xlabel('Year', fontsize=20)<0x0A><0x0A>ax.set_ylabel('Ave. (Claims from Placement)', fontsize=20)<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>ax.set_xlabel('Year', fontsize=20)<0x0A><0x0A>ax.set_xlabel('Year', fontsize=20)<0x0A><0x0A>ax.set_ylabel('Ave. (Claims from Placement)', fontsize=20)<0x0A><0x0A>ax.set_ylabel('Ave. (Claims from Placement)'
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mfig = plt.figure(figsize=(25, 25))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.plot(df_sanos['Year'], df_sanos['Number of Days'], color='black', linewidth=1)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of Days')<0x0A>ax.set_title('Time required to register a property in Sanos')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_xlim(0, 1000)<0x0A>ax.set_ylim(0, 1000)<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the cost of communications and computers with respect to service imports of Lebanon<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar chart of net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=20)<0x0A>g.set_xlabels("Year", fontsize=15)<0x0A>g.set_xticklabels(rotation=90)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("net_bilateral_aid_flow_Grenada_from_Development_Assistance_Committee.png", bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield'].sum().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='green', figsize=(20,20))<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='blue', figsize=(20,20))<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red', figsize=(20,20))<0x0A>Country_1981.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m# Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the figure size<0x0A>plt.rcParams['figure.figsize'] = (25, 15)<0x0A><0x0A># Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the graph<0x0A><0x0A># Setting up the axes<0x0A><0x0A># Setting up the title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A><0x0A># Setting up the graph title<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig = plt.figure(figsize=(20,20))<0x0A>ax = fig.add_subplot(111)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in numeric texts')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A>ax.set_ylim(0, 11000)<0x0A>ax.set_xticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A><0x0A>ax.scatter(df['Year'], df['Production in numeric texts'], color='#000000')<0x0A>ax.set_xticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Production in numeric texts'], color='#000000')<0x0A>ax.set_ylabel('Production in numeric texts')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in numeric texts')<0x0A>ax.set_ylim(0, 11000)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.grid(True)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot the distance to frontier score (on scale of 100) of Armenia<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the distance to frontier score (on scale of 100) of Armenia<0x0A><0x0A>ax.scatter(df['Year'], df['Distance to Frontier score (on scale of 100) of Armenia'])<0x0A><0x0A># Set the title<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A># Set the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Score (intranet for redevelopment of redevelopment)')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Score (intranet for redevelopment of redevelopment of redevelopment)')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Score (intranet for redevelopment of redevelopment of redevelopment)')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Score (intranet for redevelopment of redevelopment of redevelopment)')<0x0A><0x0A># Set the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Score (intranet for redevelopment of redevelopment of redevelopment)')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Score (intranet for redevelopment of redevelopment of redevelopment)')<0x0A><0x0A># Set the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Score (intranet for redevelopment of redevelopment of redevelopment)')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Score (intranet for redevelopment of redevelopment of redevelopment)')<0x0A><0x0A># Set the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Score (intranet for redevelopment of redevelopment of redevelopment)')<0x0A><0x0A># Set the y-
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m#Plotting Percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting Percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>ax.scatter(df_srl['Year'], df_srl['Birth Weight'], color='purple')<0x0A><0x0A># Setting title<0x0A>ax.set_title('Percentage of babies born with low-Birthweight in Sri Lanka')<0x0A><0x0A># Setting x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting y-axis label<0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A># Setting x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting y-axis label<0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A># Setting title<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting title<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting title<0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A># Setting x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting title<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting y-axis label<0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A># Setting x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting y-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting y-axis label<0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A># Setting x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting x-axis label
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m# Plotting the percentage of children ages 12-23 months who received DPT vaccinations in Denmark<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.scatter(x=df_DPT_vaccinations.Year, y=df_DPT_vaccinations.DPT_vaccinations, color='green')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of children who received DPT vaccinations')<0x0A>ax.set_title('Percentage of children ages 12-23 months who received DPT vaccinations in Denmark')<0x0A>ax.set_xticklabels(df_DPT_vaccinations.Year, rotation='vertical')<0x0A>ax.set_yticklabels(df_DPT_vaccinations.Year, rotation='vertical')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m# Create a scatter plot of Percentage of households in Russian Federation that uses iodized salt<0x0A>sns.catplot(x="Year", y="Percentage of households in Russian Federation that uses iodized salt", data=df, height=15, aspect=1.5, palette="muted")<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.scatter(df_UK['Year'], df_UK['Consumption of/and capital (age % of CWD)'])<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of/and capital (age % of CWD)')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31mCountry_name = 'South Asia'<0x0A>Country_data = pd.DataFrame(Country_name, columns = Country_name)<0x0A>Country_data = Country_data.sort_values(by = 'Cost (per 1000)', ascending = False)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data =
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m# Create a scatter plot of the ratings of Croatia<0x0A>fig, ax = plt.subplots(figsize=(20, 15))<0x0A><0x0A># Create a scatter plot of the ratings of Croatia<0x0A>sns.stripplot(data=df, x='Year', y='Strength', color='green', ax=ax)<0x0A><0x0A># Add a title<0x0A>ax.set_title('Rating regarding strength of legal rights index in Croatia')<0x0A><0x0A># Add a grid<0x0A>ax.grid(False)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a grid<0x0A>ax.grid(False)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a grid<0x0A>ax.grid(False)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A>
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:45<00:00,  5.28s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m15.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.7 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.94 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
[31mModeAge = pd.DataFrame(data['Mode Age'].values, columns = ['Mode Age', 'Alcohol Consumption'])<0x0A>ModeAge.plot(x = 'Mode Age', y = 'Alcohol Consumption', kind ='scatter', figsize = (8,8), color = 'tab:blue')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 6999}, {'x': 'Dog', 'y': 6999}, {'x': 'Male', 'y': 4149}, {'x': 'Rock', 'y': 6999}, {'x': 'Sedan', 'y': 4149}, {'x': 'USA', 'y': 4149}, {'x': 'Rock', 'y': 6999}, {'x': 'Sedan', 'y': 4149}, {'x': 'Male', 'y': 6999}, {'x': 'Dog', 'y': 6999}, {'x': 'Male', 'y': 6999}, {'x': 'Dog', 'y': 6999}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Dog', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 5000}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
[31mgrouped_df = pd.DataFrame(data=train_df, columns=['USN', 'USA'])<0x0A><0x0A>g = sns.FacetGrid(grouped_df, row='Item', height=10, aspect=1.6)<0x0A><0x0A>g.map(plt.bar, 'USN', color='steelblue')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 152.52}, {'x': 'USA', 'y': 152.52}, {'x': 'Red', 'y': 152.52}, {'x': 'USA', 'y': 152.52}, {'x': 'Red', 'y': 152.52}, {'x': 'USA', 'y': 152.52}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 8.37}, {'x': 'USA', 'y': 8.37}, {'x': 'Dog', 'y': 8.37}, {'x': 'Nike', 'y': 12.12}, {'x': 'Dog', 'y': 8.37}, {'x': 'Nike', 'y': 12.12}, {'x': 'Red', 'y': 12.12}, {'x': 'USA', 'y': 8.37}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255, 'y': 60.3}, {'x': 55, 'y': 60.3}, {'x': 55, 'y': 60.3}, {'x': 55, 'y': 60.3}, {'x': 55, 'y': 60.3}, {'x': 55, 'y': 60.3}, {'x': 55, 'y': 60.3}, {'x': 55, 'y': 60.3}, {'x': 55, 'y': 60.3}, {'x': 55, 'y': 60.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4, 'y': 222.27}, {'x': 8, 'y': 191.37}, {'x': 11, 'y': 191.37}, {'x': 12, 'y': 222.27}, {'x': 13, 'y': 222.27}, {'x': 14, 'y': 222.27}, {'x': 15, 'y': 222.27}, {'x': 16, 'y': 222.27}, {'x': 17, 'y': 222.27}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 191.99}, {'x': 1920, 'y': 192.99}, {'x': 1925, 'y': 192.99}, {'x': 1930, 'y': 34.3}, {'x': 1930, 'y': 34.3}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 29.21}, {'x': 1816, 'y': 29.21}, {'x': 1818, 'y': 70.21}, {'x': 1818, 'y': 70.21}, {'x': 1818, 'y': 70.21}, {'x': 1818, 'y': 29.21}, {'x': 1818, 'y': 29.2}, {'x': 1818, 'y': 29.2}, {'x': 1818, 'y': 29.2}, {'x': 1818, 'y': 29.2}, {'x': 1818, 'y': 29.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 255.2}, {'x': 1870, 'y': 108.2}, {'x': 1880, 'y': 255.2}, {'x': 1880, 'y': 255.2}, {'x': 1880, 'y': 255.2}, {'x': 1880, 'y': 255.2}, {'x': 1880, 'y': 255.2}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 722, 'y': 62.5}, {'x': 722, 'y': 62.5}, {'x': 722, 'y': 62.5}, {'x': 722, 'y': 62.5}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function OYA Age Distribution In Population In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 126.2}, {'x': 1812, 'y': 126.2}, {'x': 1831, 'y': 126.2}, {'x': 1841, 'y': 126.2}, {'x': 1851, 'y': 311.3}, {'x': 1858, 'y': 311.3}, {'x': 1861, 'y': 126.2}, {'x': 1868, 'y': 126.2}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 11000, 'y': 61.59}, {'x': 11000, 'y': 61.59}, {'x': 11000, 'y': 61.59}, {'x': 11000, 'y': 61.59}, {'x': 11000, 'y': 61.59}, {'x': 11000, 'y': 61.59}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2870}, {'x': 1920, 'y': 2870}, {'x': 1920, 'y': 2870}, {'x': 1920, 'y': 2870}, {'x': 1920, 'y': 2870}, {'x': 1920, 'y': 2870}, {'x': 1920, 'y': 2870}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 150, 'y': 38.6}, {'x': 150, 'y': 38.6}, {'x': 150, 'y': 38.6}, {'x': 150, 'y': 38.6}, {'x': 150, 'y': 38.6}, {'x': 150, 'y': 38.6}, {'x': 150, 'y': 38.6}, {'x': 150, 'y': 38.6}, {'x': 150, 'y': 38.6}, {'x': 150, 'y': 38.6}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2950}, {'x': 'USA', 'y': 2950}, {'x': 'Dog', 'y': 895}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2950}, {'x': 'USA', 'y': 2950}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'nominal'}, 'y': {'field': 'Dretchled Analysis Of Yearly Weather In Normalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4276}, {'x': 1804, 'y': 4276}, {'x': 1806, 'y': 3848}, {'x': 1808, 'y': 3626}, {'x': 1810, 'y': 5848}, {'x': 1812, 'y': 5848}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
[31mfacet = sns.FacetGrid(data=df, size=12)<0x0A>facet.map(plt.plot, 'Height', 'Weight')<0x0A>facet.add_legend()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Epoch Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1100, 'y': 570, 'type': 'quantitative'}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.7 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.94 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [04:13<00:00, 12.66s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.set_title('Damage caused due to forest depletion in Belgium')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Coal (total $\Gas$ of GW)')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(25, 25))<0x0A><0x0A># Create a line plot of the total unemployed youth population of Colombia<0x0A>ax.plot(unemployed_pop_col_col_df.index, unemployed_pop_col_col_df.Total_unemployed_youth_population_of_Colombia, '-', color='#11A6D9')<0x0A><0x0A># Set the title and labels<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Unemployed youth % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were %
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m# Create a line plot of annual freshwater withdrawals (% of total withdrawals) for the year 2011 to 2016<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the annual freshwater withdrawals<0x0A>ax.plot(annual_freshwater_withdrawals.Year, annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual_freshwater_withdrawals.Annual
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_title('Arable land (hectares) in Seychelles', fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xlabel('Year', fontsize=20)<0x0A>ax.set_ylabel('Ave. (Claims from Placement)', fontsize=20)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.plot(df['Year'], df['Arable land'], '-', color='black')<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A><0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(df['Arable land (hectares)'], rotation=90)<0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption in Brazil as a percentage of production'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mreg_sanos = pd.DataFrame(reg_sanos.groupby(['Year'])['Time required to register a property in Sanos'].sum())<0x0A>reg_sanos.reset_index(inplace=True)<0x0A>reg_sanos.columns = reg_sanos.columns.droplevel(0)<0x0A>reg_sanos.columns = reg_sanos.columns.droplevel(0)<0x0A><0x0A>reg_sanos.plot(kind='line', x='Year', y='Time required to register a property in Sanos', title='Time required to register a property in Sanos', color='black', figsize=(25, 25))<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the cost of communications and computers with respect to service imports of Lebanon<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.grid(False)<0x0A>ax.set_ylim(0, 1.5)<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar chart of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=20)<0x0A>g.set_xlabels("Year", fontsize=15)<0x0A>g.set_xticklabels(rotation=90)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("net_bil_grenada_net_bilateral_aid_flow_Grenada_from_development_assistance_committee.png", bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield'].sum().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='black')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m# Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the figure size<0x0A>plt.rcParams['figure.figsize'] = (25, 15)<0x0A><0x0A># Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the graph<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig = plt.figure(figsize=(20,20))<0x0A>ax = fig.add_subplot(111)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in numeric texts')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A>ax.set_ylim(0, 11000)<0x0A>ax.set_xticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A><0x0A>ax.scatter(df['Year'], df['Production in numeric texts'], color='#000000')<0x0A>ax.set_xticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Production in numeric texts'], color='#000000')<0x0A>ax.set_ylabel('Production in numeric texts')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in numeric texts')<0x0A>ax.set_ylim(0, 11000)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.grid(True)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot the graph<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the graph<0x0A>ax.scatter(df['Year'], df['Score ((thousands) of Armenian)'])<0x0A><0x0A># Plot the graph<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (thousands) of Armenian')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A># Plot the graph<0x0A>ax.scatter(df['Year'], df['Distance to Frontier score (on scale of 100) of Armenia'])<0x0A><0x0A># Plot the graph<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (thousands) of Armenian')<0x0A><0x0A># Plot the graph<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A># Plot the graph<0x0A>ax.set_xticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m# Plot the percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>ax.scatter(data_srl['Year'], data_srl['Birth Weight'], color='purple')<0x0A>ax.set_title('Percentage of babies born with low-Birthweight in Sri Lanka')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xticklabels([''] + labels)<0x0A>ax.set_yticklabels([''] + labels)<0x0A><0x0A># Add a legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1, 0.5))<0x0A><0x0A># Display the plot<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m# Plotting the percentage of children ages 12-23 months who received DPT vaccinations in Denmark<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.scatter(x=df_children_DPT_vaccinations.Year, y=df_children_DPT_vaccinations.DPT_vaccinations, color='green')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of children who received DPT vaccinations')<0x0A>ax.set_title('Percentage of children ages 12-23 months who received DPT vaccinations in Denmark')<0x0A>ax.set_xticklabels(df_children_DPT_vaccinations.Year, rotation='vertical')<0x0A>ax.set_yticklabels(df_children_DPT_vaccinations.Year, rotation='vertical')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m# Create a scatter plot of Percentage of households in Russian Federation that uses iodized salt<0x0A>sns.catplot(x="Year", y="Percentage of households in Russian Federation that uses iodized salt", data=df, height=15, aspect=1.5, palette="muted")<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.scatter(df_UK['Year'], df_UK['Consumption of/and capital (age % of CWD)'])<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of/and capital (age % of CWD)')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31mCountry_name = 'South Asia'<0x0A>Country_data = pd.DataFrame(Country_name, columns = Country_name)<0x0A>Country_data = Country_data.sort_values(by = 'Cost (per 1000)', ascending = False)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data = Country_data.drop(['Country Name'], axis = 1)<0x0A>Country_data =
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m# Create a scatter plot of the ratings of Croatia<0x0A>fig, ax = plt.subplots(figsize=(20,15))<0x0A><0x0A># Create a scatter plot of the ratings of Croatia<0x0A>sns.stripplot(data=df, x='Year', y='Strength rating (12+1000)', color='green', ax=ax)<0x0A><0x0A># Add a title<0x0A>ax.set_title('Rating regarding strength of legal rights index in Croatia')<0x0A><0x0A># Add a grid<0x0A>ax.grid(False)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a grid<0x0A>ax.grid(False)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a grid<0x0A>ax.grid(False)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2,
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:55<00:00,  5.80s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m5.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.95 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
[31mModeAge = ['Mode Age', 'Alcohol Consumption', 'Alcohol Consumption']<0x0A>Consumption = ['Mode Age', 'Alcohol Consumption']<0x0A><0x0A>x = np.linspace(0, 6, 100)<0x0A>y = np.linspace(0, 4, 100)<0x0A><0x0A>plt.scatter(x, y, s=100)<0x0A><0x0A>plt.xlim(0, 6)<0x0A>plt.ylim(0, 4300)<0x0A><0x0A>plt.xticks(np.arange(0, 6, 100))<0x0A><0x0A>plt.yticks(np.arange(0, 0, 100))<0x0A><0x0A>plt.xlabel('Mode Age')<0x0A>plt.ylabel('Alcohol Consumption')<0x0A><0x0A>plt.grid(True)<0x0A><0x0A>plt.show()<0x0A><0x0A>
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7000}, {'x': 'Dog', 'y': 6000}, {'x': 'Male', 'y': 4100}, {'x': 'Rock', 'y': 7000}, {'x': 'Sedan', 'y': 4100}, {'x': 'USA', 'y': 4100}, {'x': 'Rock', 'y': 7000}, {'x': 'Sedan', 'y': 4100}, {'x': 'USA', 'y': 4100}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Dog', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 5000}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'Dog', 'y': 121.11}, {'x': 'Nike', 'y': 191.11}, {'x': 'USA', 'y': 23.61}, {'x': 'Rock', 'y': 191.11}, {'x': 'Spanish', 'y': 23.61}, {'x': 'USA', 'y': 23.61}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 152.5}, {'x': 'USA', 'y': 152.5}, {'x': 'Red', 'y': 152.5}, {'x': 'USA', 'y': 152.5}, {'x': 'Red', 'y': 152.5}, {'x': 'USA', 'y': 152.5}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 8.37}, {'x': 'USA', 'y': 8.37}, {'x': 'Dog', 'y': 8.37}, {'x': 'Nike', 'y': 12.17}, {'x': 'Apple', 'y': 8.37}, {'x': 'Dog', 'y': 8.37}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255, 'y': 60.2}, {'x': 57.2, 'y': 60.2}, {'x': 59.6, 'y': 60.2}, {'x': 59.6, 'y': 60.2}, {'x': 59.6, 'y': 60.2}, {'x': 59.6, 'y': 60.2}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6, 'y': 119.1}, {'x': 6, 'y': 119.1}, {'x': 6, 'y': 119.1}, {'x': 6, 'y': 119.1}, {'x': 6, 'y': 119.1}, {'x': 6, 'y': 119.1}, {'x': 6, 'y': 119.1}, {'x': 6, 'y': 119.1}, {'x': 6, 'y': 119.1}, {'x': 6, 'y': 119.1}, {'x': 6, 'y': 119.1}, {'x': 6, 'y': 119.1}, {'x': 6, 'y': 119.1}, {'x': 6, 'y': 119.1}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 191.99}, {'x': 1920, 'y': 192.99}, {'x': 1925, 'y': 192.99}, {'x': 1930, 'y': 34.3}, {'x': 1930, 'y': 34.3}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 29.06}, {'x': 1816, 'y': 29.06}, {'x': 1818, 'y': 70.06}, {'x': 1820, 'y': 18.06}, {'x': 1822, 'y': 18.06}, {'x': 1822, 'y': 29.06}, {'x': 1822, 'y': 29.06}, {'x': 1822, 'y': 29.06}, {'x': 1822, 'y': 29.06}, {'x': 1822, 'y': 29.06}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.3}, {'x': 1870, 'y': 108.6}, {'x': 1880, 'y': 263.3}, {'x': 1880, 'y': 253.3}, {'x': 1880, 'y': 253.3}, {'x': 1880, 'y': 253.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 711.11}, {'x': 711.11}, {'y': 63.11}, {'x': 711.11}, {'x': 711.11}, {'x': 711.11}, {'x': 711.11}, {'x': 711.11}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Oy Age Distribution In Population In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 126.28}, {'x': 1812, 'y': 126.28}, {'x': 1831, 'y': 126.28}, {'x': 1841, 'y': 126.28}, {'x': 1851, 'y': 311.31}, {'x': 1861, 'y': 126.28}, {'x': 1868, 'y': 126.28}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4500, 'y': 61.59}, {'x': 4500, 'y': 55.59}, {'x': 4500, 'y': 61.59}, {'x': 4500, 'y': 55.59}, {'x': 4500, 'y': 61.59}, {'x': 4500, 'y': 55.59}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 157.5, 'y': 38.5}, {'x': 157.5, 'y': 38.5}, {'x': 157.5, 'y': 38.5}, {'x': 157.5, 'y': 38.5}, {'x': 157.5, 'y': 38.5}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2950}, {'x': 'USA', 'y': 1450}, {'x': 'Dog', 'y': 890}, {'x': 'Nike', 'y': 1450}, {'x': 'Nike', 'y': 1450}, {'x': 'Red', 'y': 2950}, {'x': 'USA', 'y': 1450}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentled Analysis Of Yearly Weather In Normalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1808, 'y': 3626}, {'x': 1812, 'y': 4878}, {'x': 1813, 'y': 5878}, {'x': 1814, 'y': 5878}, {'x': 1814, 'y': 5878}, {'x': 1814, 'y': 5878}, {'x': 1814, 'y': 5878}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 3400}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Exponential Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1100, 'y': 570.27}, {'x': 1100, 'y': 570.27}, {'x': 1100, 'y': 570.27}, {'x': 1100, 'y': 570.27}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.95 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:51<00:00, 11.57s/it]
[35m|[39m JSON to Vega conversion error rate: [31m95.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.85 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left_x'].set_visible(False)<0x0A>ax.spines['bottom_x'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_x'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_x'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_x'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_x'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(25, 25))<0x0A><0x0A># Create a line plot of the total unemployed youth population of Colombia<0x0A>ax.plot(unemployed_pop_col_col_df.index, unemployed_pop_col_col_df.Total_unemployed_youth_population_of_Colombia, '-', color='#11A6D9')<0x0A><0x0A># Set the title and labels<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Unemployed youth % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were %
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual Freshwater Withdrawals (% of Ihilnommial Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.37}, {'x': 'field', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Ave of land (hectares)')<0x0A>ax.set_title('Arable land (hectares) in Seychelles')<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption in Brazil as a percentage of production'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mreg_sanos = pd.DataFrame(reg_sanos.groupby(['Year'])['Time required to register a property in Sanos'].sum())<0x0A>reg_sanos.reset_index(inplace=True)<0x0A>reg_sanos.columns = reg_sanos.columns.droplevel(0)<0x0A><0x0A>reg_sanos.plot(kind='line', x='Year', y='Time required to register a property in Sanos', title='Time required to register a property in Sanos', color='black', figsize=(25, 25))<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the cost of communications and computers with respect to service imports of Lebanon<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.grid(False)<0x0A><0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost_of_communications_and_computers_with_respect_to_service_imports_of_Lebanon'])<0x0A><0x0A>ax.tick_params(labelsize=20)<0x0A><0x0A>ax.tick_params(labelsize=20)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the bill of the year 2014<0x0A>g_bar = sns.catplot(x="Year", y="AID_flow", data=g_bar, kind="bar", palette="ch:.25", height=15, aspect=1.5)<0x0A>g_bar.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=16)<0x0A>g_bar.set_xticklabels(rotation=90)<0x0A>g_bar.set_xlabels("Year")<0x0A>g_bar.set_ylabels("AID flow (Avg. US$)")<0x0A>g_bar.set_xlabels("Year")<0x0A>g_bar.set_ylabels("AID flow (Avg. US$)")<0x0A>g_bar.set_title("Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A>g_bar.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("graphs/g_bar.png")<0x0A><0x0A># Show plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield'].sum().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='black')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31m# Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the figure size<0x0A>plt.rcParams['figure.figsize'] = (25, 15)<0x0A><0x0A># Plotting the number of procedures to build a warehouse in Congo (Republic)<0x0A><0x0A># Setting up the graph<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A><0x0A># Setting up the graph title<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig = plt.figure(figsize=(20,15))<0x0A>ax = fig.add_subplot(111)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in numeric texts')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A>ax.set_ylim(0, 11000)<0x0A>ax.set_xticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=90)<0x0A><0x0A>ax.scatter(df['Year'], df['Production in numeric texts'], color='#000000')<0x0A>ax.set_xticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Production in numeric texts'], color='#000000')<0x0A>ax.set_ylim(0, 11000)<0x0A>ax.set_ylabel('Production in numeric texts')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in numeric texts')<0x0A>ax.set_ylim(0, 11000)<0x0A>ax.grid(True)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot the graph<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the graph<0x0A>ax.scatter(df['Year'], df['Score ((thousands) of Armenian)'])<0x0A><0x0A># Plot the graph<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (thousands) of Armenian')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A># Plot the graph<0x0A>ax.scatter(df['Year'], df['Distance to Frontier score (on scale of 100) of Armenia'])<0x0A><0x0A># Plot the graph<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (thousands) of Armenian')<0x0A><0x0A># Plot the graph<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A># Plot the graph<0x0A>ax.set_xticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m# Plot the percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>ax.scatter(data_srl['Year'], data_srl['Birth Weight'], color='purple')<0x0A>ax.set_title('Percentage of babies born with low-Birthweight in Sri Lanka')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xticklabels([''] + labels)<0x0A>ax.set_yticklabels([''] + labels)<0x0A><0x0A># Plot the percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>ax.set_xticklabels([''] + labels)<0x0A>ax.set_yticklabels([''] + labels)<0x0A><0x0A># Plot the percentage of babies born with low-Birthweight in Sri Lanka<0x0A><0x0A>ax.set_xlim(0, 20)<0x0A>ax.set_ylim(0, 20)<0x0A><0x0A># Plot the percentage of babies born with low-Birthweight in Sri Lanka<0x0A><0x0A>ax.set_xticklabels([''] + labels)<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A># Plot the percentage of babies born with low-Birthweight in Sri Lanka<0x0A><0x0A>ax.set_ylim(0, 20)<0x0A><0x0A># Plot the percentage of babies born with low-Birthweight in Sri Lanka<0x0A><0x0A>ax.set_xticklabels([''] + labels)<0x0A>ax.set_yticklabels([''] + labels)<0x0A><0x0A># Plot the percentage of babies born with low-Birthweight in Sri Lanka<0x0A><0x0A>ax.set_ylim(0, 20)<0x0A><0x0A># Plot the percentage of babies born with low-Birthweight in Sri Lanka<0x0A><0x0A>ax.set_xticklabels([''] + labels)<0x0A>ax.set_yticklabels([''] + labels)<0x0A><0x0A># Plot the percentage of babies born with low-Birthweight in Sri Lanka<0x0A><0x0A>ax.set_yticklabels([''] + labels)<0x0A><0x0A># Plot the percentage of babies born with low-Birthweight in Sri Lanka<0x0A><0x0A>ax.set_xticklabels([''] + labels)<0x0A><0x0A># Plot the percentage of babies born with low-Birthweight in Sri Lanka<0x0A><0x0A>ax.set_yticklabels([''] + labels)<0x0A><0x0A># Plot the percentage of babies born with low-Birthweight in
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m# Plotting the percentage of children ages 12-23 months who received DPT vaccinations in Denmark<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.set_title('Percentage of children ages 12-23 months who received DPT vaccinations in Denmark')<0x0A><0x0A>ax.set_ylabel('% of children who received DPT vaccines')<0x0A><0x0A>ax.set_xlabel('Year')<0x0A><0x0A>ax.set_xticklabels(df['Year'], rotation=90)<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m# Create a scatter plot of Percentage of households in Russian Federation that uses iodized salt<0x0A>sns.catplot(x="Year", y="Percentage of households in Russian Federation that uses iodized salt", data=df, height=15, aspect=1.5, palette="muted")<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.scatter(df_UK['Year'], df_UK['Consumption of/and capital (age % of CWD)'])<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of/and capital (age % of CWD)')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31mCountry_name = 'South Asia'<0x0A>Country_axis = 'Year'<0x0A><0x0A># Create a DataFrame with the Damage Data<0x0A>Country_df = DataFrame(Country_axis, columns = Country_name)<0x0A><0x0A># Plot the Damage Data<0x0A>Country_df = Country_df.sort_values(by = 'Cost (per 1000)', ascending = False)<0x0A>Country_df = Country_df.head(10)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.sort_values(by = 'Cost (per 1000)', ascending = False)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m# Create a scatter plot of the ratings of Croatia<0x0A>fig, ax = plt.subplots(figsize=(20,15))<0x0A><0x0A># Create a scatter plot of the ratings of Croatia<0x0A>sns.stripplot(data=df, x='Year', y='Strength rating (12+1000)', color='green', ax=ax)<0x0A><0x0A># Add a title<0x0A>plt.title('Rating regarding strength of legal rights index in Croatia')<0x0A><0x0A># Add a grid<0x0A>plt.grid(True)<0x0A><0x0A># Add a legend<0x0A>plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a title<0x0A>plt.title('Rating regarding strength of legal rights index in Croatia')<0x0A><0x0A># Add a legend<0x0A>plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a grid<0x0A>plt.grid(False)<0x0A><0x0A># Save the figure<0x0A>plt.savefig('Croatia_Rating_Strength_of_legal_rights_index.png')<0x0A><0x0A># Show the plot<0x0A>plt.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.85 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------

























model.safetensors: 100%|█████████████████████████████████████████████████████████████████████████████████████████| 1.13G/1.13G [00:51<00:00, 21.8MB/s]
[36m[1mEpoch :[39m[22m 6 [32m[1m | Loss :[39m[22m 3.27508544921875



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:50<00:05,  5.75s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.95 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2000, 'y': 2100}, {'x': 2000, 'y': 2100}, {'x': 2000, 'y': 2100}, {'x': 2000, 'y': 2100}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7000}, {'x': 'Dog', 'y': 6000}, {'x': 'Male', 'y': 4100}, {'x': 'Rock', 'y': 7000}, {'x': 'Sedan', 'y': 4100}, {'x': 'USA', 'y': 4100}, {'x': 'Rock', 'y': 7000}, {'x': 'Sedan', 'y': 4100}, {'x': 'USA', 'y': 4100}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Dog', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1000}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.61}, {'x': 'Dog', 'y': 121.11}, {'x': 'Nike', 'y': 43.61}, {'x': 'Nike', 'y': 191.11}, {'x': 'Rock', 'y': 23.61}, {'x': 'Sedan', 'y': 23.61}, {'x': 'Spanish', 'y': 43.61}, {'x': 'USA', 'y': 23.61}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 152.52}, {'x': 'USA', 'y': 152.52}, {'x': 'Red', 'y': 152.52}, {'x': 'USA', 'y': 152.52}, {'x': 'Red', 'y': 152.52}, {'x': 'USA', 'y': 152.52}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.17}, {'x': 'USA', 'y': 8.37}, {'x': 'Dog', 'y': 8.37}, {'x': 'Nike', 'y': 12.17}, {'x': 'Apple', 'y': 3.67}, {'x': 'Dog', 'y': 8.37}, {'x': 'Nike', 'y': 12.17}, {'x': 'Red', 'y': 12.17}, {'x': 'USA', 'y': 8.37}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255, 'y': 60.2}, {'x': 57.5, 'y': 60.2}, {'x': 57.5, 'y': 60.2}, {'x': 57.5, 'y': 60.2}, {'x': 57.5, 'y': 60.2}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6, 'y': 111.11}, {'x': 6, 'y': 111.11}, {'x': 6, 'y': 111.11}, {'x': 6, 'y': 111.11}, {'x': 6, 'y': 111.11}, {'x': 6, 'y': 111.11}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200}, {'x': 1915, 'y': 180}, {'x': 1920, 'y': 180}, {'x': 1920, 'y': 180}, {'x': 1920, 'y': 34}, {'x': 1920, 'y': 34}, {'x': 1920, 'y': 180}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 29.06}, {'x': 1816, 'y': 28.06}, {'x': 1818, 'y': 70.06}, {'x': 1820, 'y': 18.06}, {'x': 1822, 'y': 80.06}, {'x': 1823, 'y': 28.06}, {'x': 1824, 'y': 28.06}, {'x': 1822, 'y': 28.06}, {'x': 1822, 'y': 28.06}, {'x': 1822, 'y': 28.06}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.1}, {'x': 1860, 'y': 253.1}, {'x': 1860, 'y': 253.1}, {'x': 1860, 'y': 253.1}, {'x': 1860, 'y': 253.1}, {'x': 1860, 'y': 253.1}, {'x': 1860, 'y': 253.1}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 711.11}, {'x': 711.11}, {'y': 64.11}, {'x': 711.11}, {'x': 711.11}, {'x': 711.11}, {'y': 64.11}, {'x': 711.11}, {'x': 711.11}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 600}, {'x': 1821, 'y': 126}, {'x': 1831, 'y': 126}, {'x': 1841, 'y': 109}, {'x': 1851, 'y': 311}, {'x': 1861, 'y': 156}, {'x': 1871, 'y': 109}, {'x': 1871, 'y': 109}, {'x': 1871, 'y': 109}, {'x': 1871, 'y': 109}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4500, 'y': 58.63}, {'x': 4500, 'y': 61.53}, {'x': 4500, 'y': 58.63}, {'x': 4500, 'y': 58.63}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1500, 'y': 38.61}, {'x': 1500, 'y': 43.61}, {'x': 1500, 'y': 38.61}, {'x': 1500, 'y': 38.61}, {'x': 1500, 'y': 38.61}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentled Analysis Of Yearly Weather In Normalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1806, 'y': 3848}, {'x': 1808, 'y': 3626}, {'x': 1812, 'y': 4888}, {'x': 1813, 'y': 5848}, {'x': 1814, 'y': 5848}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Exponential Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1100, 'y': 570.27}, {'x': 1100, 'y': 527.27}, {'x': 1100, 'y': 570.27}, {'x': 1100, 'y': 527.27}, {'x': 1100, 'y': 570.27}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.95 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:55<00:00,  5.77s/it]
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)


















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [04:02<00:00, 12.12s/it]
README.md: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████| 5.18k/5.18k [00:00<00:00, 12.3MB/s]
[35m|[39m JSON to Vega conversion error rate: [31m90.0[39m [31m%[39m [35m|
error
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.87 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a line plot of the total unemployed youth population of Colombia<0x0A>ax.plot(unemployed_pop_col_col_df.index, unemployed_pop_col_col_df.Total_Unemployed_Youth_Population_Colombia, '-', color='#11A6D9')<0x0A><0x0A># Set the title and labels<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Unemployed youth % of total labor force were %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals'}, 'line': {'line': 'dotted'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 55.33}, {'x': 'field', 'y': 55.33}, {'x': 'field', 'y': 55.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Ave of land (hectares)')<0x0A>ax.set_title('Arable land (hectares) in Seychelles')<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption in Brazil as a percentage of production'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(20,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.set_title('Time required to register a property in Sanos')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Number of Days')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the cost of communications and computers with respect to service imports of Lebanon<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost Of Communications and Computers with respect to service imports of Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications imports (Imports)')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost Of Communications and Computers with respect to service imports of Lebanon'], rotation=90)<0x0A><0x0A>ax.tick_params(axis='x', labelsize=18)<0x0A>ax.tick_params(axis='y', labelsize=18)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the bill of the year 2014<0x0A>g1 = sns.catplot(x="Year", y="AID_flow", data=g1, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g1.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=20, y=1.01)<0x0A>g1.set_xlabels("Year", fontsize=15)<0x0A>g1.set_xticklabels(["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug"], rotation=90)<0x0A>g1.set_ylabels("AID flow (Avg. US$) from Development Assistance Committee", fontsize=15)<0x0A>g1.set_xticklabels(["Jan", "Feb", "Mar", "Jun", "Jul"], rotation=90)<0x0A>g1.fig.subplots_adjust(top=0.9)<0x0A>g1.fig.subplots_adjust(top=0.9)<0x0A>g1.fig.subplots_adjust(top=0.9)<0x0A>g1.fig.subplots_adjust(top=0.9)<0x0A>g1.fig.subplots_adjust(top=0.9)<0x0A>g1.fig.subplots_adjust(top=0.9)<0x0A>g1.fig.subplots_adjust(top=0.9)<0x0A>g1.fig.subplots_adjust(top=0.9)<0x0A>g1.fig.subplots_adjust(top=0.9)<0x0A>g1.fig.suptitle("Net bilateral aid flow of Grenada from Development Assistance Committee", fontsize=15)<0x0A>g1.set_title("Net bilateral aid flow of Grenada from Development Assistance Committee", fontsize=15)<0x0A>g1.set_xlabel("Year", fontsize=15)<0x0A>g1.set_ylabel("AID flow (Avg. US$) from Development Assistance Committee", fontsize=15)<0x0A>g1.tick_params(top=False, bottom=False, left=False, right=False, top=False, bottom=False)<0x0A>g1.tick_params(bottom=False, left=False, right=False, top=False, bottom=False)<0x0A>g1.savefig("../Images/bill_grenada_2014.png")<0x0A>g1.savefig("../Images/bill
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar',
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_count = df_congo.groupby(['Year', 'Country']).size().reset_index()<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig = plt.figure(figsize=(20,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in numeric texts')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.xaxis.set_ticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.yaxis.set_ticklabels(['Year', 'Year'], rotation=90)<0x0A><0x0A>ax.set_ylim(0, 12000)<0x0A>ax.set_yticklabels(['Year', 'Year'], rotation=0)<0x0A><0x0A>ax.set_ylabel('Production in numeric texts')<0x0A>ax.set_ylabel('Production in numeric texts')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in numeric texts')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in numeric texts')<0x0A><0x0A>ax.grid(True)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot a scatter plot for each category<0x0A><0x0A># Create a horizontal bar plot<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a horizontal bar plot<0x0A>scatter_plot = ax.scatter(df['Year'], df['Score ((thousands of thousand)/yr)'])<0x0A><0x0A># Add a title<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A># Add a x-label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Add a y-label<0x0A>ax.set_ylabel('Score (thousands of thousand)')<0x0A><0x0A># Add a grid<0x0A>ax.grid(False)<0x0A><0x0A># Save the figure<0x0A>plt.savefig('distance_to_frontier_score_100_of_Armenia.png', dpi=300)<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m# Plot the percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>ax.scatter(data_srl['Year'], data_srl['Birth Weight'], color='purple')<0x0A>ax.set_title('Percentage of babies born with low-Birthweight in Sri Lanka')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xticklabels([''] + labels)<0x0A>ax.set_yticklabels([''] + labels)<0x0A><0x0A># Plot the percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>ax.set_xticklabels([''] + labels)<0x0A>ax.set_yticklabels([''] + labels)<0x0A><0x0A># Plot the percentage of babies born with low-Birthweight in Sri Lanka<0x0A><0x0A>ax.set_xlim(0, 20)<0x0A>ax.set_ylim(0, 20)<0x0A><0x0A># Plot the percentage of babies born with low-Birthweight in Sri Lanka<0x0A><0x0A>ax.set_xticklabels([''] + labels)<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A># Plot the percentage of babies born with low-Birthweight in Sri Lanka<0x0A><0x0A>ax.set_ylim(0, 20)<0x0A><0x0A># Plot the percentage of babies born with low-Birthweight in Sri Lanka<0x0A><0x0A>ax.set_xticklabels([''] + labels)<0x0A>ax.set_yticklabels([''] + labels)<0x0A><0x0A># Plot the percentage of babies born with low-Birthweight in Sri Lanka<0x0A><0x0A>ax.set_ylim(0, 20)<0x0A><0x0A># Plot the percentage of babies born with low-Birthweight in Sri Lanka<0x0A><0x0A>ax.set_xticklabels([''] + labels)<0x0A>ax.set_yticklabels([''] + labels)<0x0A><0x0A># Plot the percentage of babies born with low-Birthweight in Sri Lanka<0x0A><0x0A>ax.set_yticklabels([''] + labels)<0x0A><0x0A># Plot the percentage of babies born with low-Birthweight in Sri Lanka<0x0A><0x0A>ax.set_xticklabels([''] + labels)<0x0A><0x0A># Plot the percentage of babies born with low-Birthweight in Sri Lanka<0x0A><0x0A>ax.set_yticklabels([''] + labels)<0x0A><0x0A># Plot the percentage of babies born with low-Birthweight in
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31m# Create a scatter plot of Percentage of households in Russian Federation that uses iodized salt<0x0A>sns.catplot(x="Year", y="Percentage of households in Russian Federation that uses iodized salt", data=df, height=15, aspect=1.5, palette="muted")<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.scatter(df_UK['Year'], df_UK['Consumption of/and capital (age % of CWD)'])<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of/and capital (age % of CWD)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31mCountry_name = 'South Asia'<0x0A>Country_axis = 'Year'<0x0A><0x0A># Create a DataFrame with the Damage Data<0x0A>Country_df = DataFrame(Country_axis, columns = Country_name)<0x0A><0x0A># Plot the Damage Data<0x0A>Country_df = Country_df.sort_values(by = 'Cost (per 1000)', ascending = False)<0x0A>Country_df = Country_df.head(10)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.sort_values(by = 'Cost (per 1000)', ascending = False)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m# Create a scatterplot with the ratings of Croatia<0x0A>fig, ax = plt.subplots(figsize=(20,15))<0x0A><0x0A># Create a scatterplot with the ratings of Croatia<0x0A>scatter_plot = df.plot(kind='scatter', x='Year', y='Strength rating (12 ± 10000)', color='green', ax=ax)<0x0A><0x0A># Add a title<0x0A>scatter_plot.set_title('Rating regarding strength of legal rights index in Croatia')<0x0A><0x0A># Add a legend<0x0A>scatter_plot.legend(loc='upper left', bbox_to_anchor=(1, 1), ncol=1)<0x0A><0x0A># Add a grid<0x0A>scatter_plot.grid(True)<0x0A><0x0A># Save the figure<0x0A>plt.savefig('Croatia_Rating_Report.png')<0x0A><0x0A># Show the figure<0x0A>plt.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.87 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------

























model.safetensors: 100%|█████████████████████████████████████████████████████████████████████████████████████████| 1.13G/1.13G [00:49<00:00, 22.6MB/s]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:20<00:00,  7.02s/it]
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.95 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2000, 'y': 2100}, {'x': 2000, 'y': 4100}, {'x': 2000, 'y': 2100}, {'x': 2000, 'y': 2100}, {'x': 2000, 'y': 2100}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7000}, {'x': 'Dog', 'y': 6300}, {'x': 'Nike', 'y': 4170}, {'x': 'Apple', 'y': 6300}, {'x': 'Male', 'y': 6300}, {'x': 'Rock', 'y': 6300}, {'x': 'Sedan', 'y': 4170}, {'x': 'USA', 'y': 4170}, {'x': 'Rock', 'y': 6300}, {'x': 'Sedan', 'y': 4170}, {'x': 'USA', 'y': 4170}, {'x': 'Apple', 'y': 6300}, {'x': 'Dog', 'y': 6300}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Dog', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1000}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 121.11}, {'x': 'Nike', 'y': 43.11}, {'x': 'Nike', 'y': 43.11}, {'x': 'Dog', 'y': 121.11}, {'x': 'Nike', 'y': 43.11}, {'x': 'Nike', 'y': 191.11}, {'x': 'Nike', 'y': 43.11}, {'x': 'Nike', 'y': 43.11}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 152.52}, {'x': 'USA', 'y': 152.52}, {'x': 'Red', 'y': 152.52}, {'x': 'USA', 'y': 152.52}, {'x': 'Red', 'y': 152.52}, {'x': 'USA', 'y': 152.52}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.17}, {'x': 'USA', 'y': 8.37}, {'x': 'Dog', 'y': 8.37}, {'x': 'Nike', 'y': 12.17}, {'x': 'Apple', 'y': 3.67}, {'x': 'Dog', 'y': 8.37}, {'x': 'Nike', 'y': 12.17}, {'x': 'Red', 'y': 12.17}, {'x': 'USA', 'y': 8.37}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255, 'y': 60.2}, {'x': 57.5, 'y': 60.2}, {'x': 57.5, 'y': 60.2}, {'x': 57.5, 'y': 60.2}, {'x': 255, 'y': 13.3}, {'x': 57.5, 'y': 60.2}, {'x': 57.5, 'y': 60.2}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6, 'y': 111.11}, {'x': 6, 'y': 111.11}, {'x': 6, 'y': 111.11}, {'x': 6, 'y': 111.11}, {'x': 6, 'y': 111.11}, {'x': 6, 'y': 111.11}, {'x': 6, 'y': 111.11}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200}, {'x': 1915, 'y': 180}, {'x': 1920, 'y': 180}, {'x': 1920, 'y': 180}, {'x': 1920, 'y': 34}, {'x': 1920, 'y': 180}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 29.06}, {'x': 1816, 'y': 28.06}, {'x': 1818, 'y': 70.06}, {'x': 1820, 'y': 18.06}, {'x': 1822, 'y': 80.06}, {'x': 1823, 'y': 80.06}, {'x': 1824, 'y': 28.06}, {'x': 1825, 'y': 28.06}, {'x': 1827, 'y': 28.06}, {'x': 1829, 'y': 28.06}, {'x': 1829, 'y': 28.06}, {'x': 1829, 'y': 28.06}, {'x': 1829, 'y': 28.06}, {'x': 1829, 'y': 28.06}, {'x': 1829, 'y': 28.06}, {'x': 1827, 'y': 28.06}, {'x': 1827, 'y': 28.06}, {'x': 1827, 'y': 28.06}, {'x': 1827, 'y': 28.06}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.1}, {'x': 1868, 'y': 253.1}, {'x': 1870, 'y': 108.2}, {'x': 1880, 'y': 268.2}, {'x': 1883, 'y': 268.2}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 711.11, 'y': 63.14}, {'x': 711.11, 'y': 63.14}, {'x': 711.11, 'y': 63.14}, {'x': 711.11, 'y': 63.14}, {'x': 711.11, 'y': 63.14}, {'x': 711.11, 'y': 63.14}, {'x': 711.11, 'y': 63.14}, {'x': 711.11, 'y': 63.14}, {'x': 711.11, 'y': 63.14}, {'x': 711.11, 'y': 63.14}, {'x': 711.11, 'y': 63.14}, {'x': 711.11, 'y': 63.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 600}, {'x': 1821, 'y': 126}, {'x': 1831, 'y': 126}, {'x': 1841, 'y': 109}, {'x': 1851, 'y': 310}, {'x': 1861, 'y': 156}, {'x': 1871, 'y': 109}, {'x': 1871, 'y': 310}, {'x': 1861, 'y': 156}, {'x': 1871, 'y': 109}, {'x': 1871, 'y': 109}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4500, 'y': 58.14}, {'x': 4500, 'y': 58.14}, {'x': 4500, 'y': 58.14}, {'x': 4500, 'y': 58.14}, {'x': 4500, 'y': 58.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}, {'x': 1920, 'y': 288}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1500, 'y': 38.61}, {'x': 1500, 'y': 43.61}, {'x': 1500, 'y': 38.61}, {'x': 1500, 'y': 38.61}, {'x': 1500, 'y': 38.61}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentled Analysis Of Yearly Weather In Normalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1806, 'y': 3818}, {'x': 1808, 'y': 3626}, {'x': 1812, 'y': 4886}, {'x': 1813, 'y': 5886}, {'x': 1814, 'y': 5886}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 2000}, {'x': 1840, 'y': 3400}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Exponential Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1000, 'y': 570}, {'x': 1000, 'y': 520}, {'x': 1000, 'y': 520}, {'x': 1000, 'y': 570}, {'x': 1000, 'y': 520}, {'x': 1000, 'y': 520}, {'x': 1000, 'y': 520}, {'x': 1000, 'y': 520}, {'x': 1000, 'y': 520}, {'x': 1000, 'y': 520}, {'x': 1000, 'y': 520}, {'x': 1000, 'y': 520}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.95 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [04:11<00:00, 12.58s/it]
[35m|[39m JSON to Vega conversion error rate: [31m90.0[39m [31m%[39m [35m|
error
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.87 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left_x'].set_visible(False)<0x0A>ax.spines['right_x'].set_visible(False)<0x0A>ax.spines['bottom_x'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['bottom_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_x'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_x'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left_y'].set_visible(False)<0x0A>ax.spines['left
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a line plot of the total unemployed youth population of Colombia<0x0A>ax.plot(df_unemployed['Year'], df_unemployed['Unemployed Youth'], color='#008888')<0x0A><0x0A># Set the title and labels<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Unemployed youth % of total labor force were %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals'}, 'line': {'line': 'dotted'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 55.33}, {'x': 'field', 'y': 55.33}, {'x': 'field', 'y': 55.33}, {'x': 'field', 'y': 55.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Ave of land (hectares)')<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.plot(df['Year'], df['Arable land (hectares)'])<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_title('Arable land (hectares) in Seychelles')<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(['Year', 'Arable land (hectares)'])<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(['Year', 'Arable land (hectares)'])<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(['Year', 'Arable land (hectares)'])<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xlim(0, 400)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_ylim(0, 400)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_yticklabels(['Year', 'Arable land (hectares)'])<0x0A><0x0A># Plotting the graph<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption in Brazil as a percentage of production'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.plot( grupo_bairro['Year'], grupo_bairro['Average_time'], color='black')<0x0A>ax.set_title('Time required to register a property in Sanos')<0x0A>ax.set_ylabel('Number of Days')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylim(0, 165)<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the graph<0x0A>fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A># Plot the graph<0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications imports (Imports)')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications imports (Imports)')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications imports (Imports)'], rotation=90)<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications imports (Imports)'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications imports (Imports)'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications imports (Imports)'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications imports (Imports)'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications imports (Imports)'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the bar graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar = sns.barplot(x="Year", y="AID_flow_from_development_assistance_committee", data=g_bar, palette="rocket")<0x0A>g_bar.set_xticklabels(g_bar.get_xticklabels(), rotation=90)<0x0A>g_bar.set_title("Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.set_yticklabels(g_bar.get_yticklabels(), rotation=0)<0x0A>g_bar.set_xlabel("Year")<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.grid(False)<0x0A>g_bar.set_xticklabels(g_bar.get_xticklabels(), rotation=90)<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A>g_bar.set_xlabel("Year")<0x0A>g_bar.set_title("Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.bar_label(ax.containers[0], facecolor="black", fontsize=15)<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.bar_label(ax.containers[0], facecolor="black", fontsize=15)<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.bar_label(ax.containers[0], facecolor="black", fontsize=15)<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.bar_label(ax.containers[0], facecolor="black", fontsize=15)<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.bar_label(ax.containers[0], facecolor="black", fontsize=15)<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.bar_label(ax.containers[0], facecolor="black", fontsize=15)<0x0A>g_bar.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar',
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_count = pd.DataFrame(<0x0A>    [<0x0A>        df_congo_building_republic["Year"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig = plt.figure(figsize=(20,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in python-text')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_color('black')<0x0A>ax.spines['left'].set_color('black')<0x0A>ax.spines['left'].set_color('black')<0x0A><0x0A>ax.xaxis.set_tick_params(bottom=False, top=False, left=False)<0x0A>ax.xaxis.set_tick_params(top=False, bottom=False)<0x0A>ax.xaxis.set_tick_params(top=False, left=False)<0x0A><0x0A>ax.yaxis.set_tick_params(bottom=False, left=False)<0x0A>ax.yaxis.set_tick_params(top=False, left=False)<0x0A><0x0A>ax.grid(True, which='both')<0x0A>ax.grid(False, which='major')<0x0A><0x0A>ax.spines['bottom'].set_color('black')<0x0A>ax.spines['left'].set_color('major')<0x0A>ax.spines['bottom'].set_color('major')<0x0A><0x0A>ax.xaxis.set_tick_params(top=False, left=False)<0x0A>ax.xaxis.set_tick_params(top=False, left=False)<0x0A><0x0A>ax.xaxis.set_tick_params(top=False, left=False)<0x0A>ax.xaxis.set_tick_params(top=False, left=False)<0x0A><0x0A>ax.xaxis.set_tick_params(top=False, left=False)<0x0A>ax.xaxis.set_tick_params(top=False, left=False)<0x0A><0x0A>ax.xaxis.set_tick_params(top=False, left=False)<0x0A><0x0A>ax.xaxis.set_tick_params(top=False, left=False)<0x0A><0x0A>ax.xaxis.set_tick_params(top=False, left=False)<0x0A><0x0A>ax.xaxis.set_tick_params(top=False, left=False)<0x0A><0x0A>ax.xaxis.set_tick_
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot a scatter plot for each category<0x0A><0x0A># Create a horizontal bar plot<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a horizontal bar plot<0x0A>scatter_plot = ax.scatter(df['Year'], df['Score ((thousands of thousand)/yr)'])<0x0A><0x0A># Add a title<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A># Add a x-label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Add a y-label<0x0A>ax.set_ylabel('Score (thousands of thousand)')<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Display the chart<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m# Plot the percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>fig = plt.figure(figsize=(20,20))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.set_title('Percentage of babies born with low-Birthweight in Sri Lanka')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of babies')<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.set_xticklabels([''] + ['Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year', 'Year
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(20,20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.scatter(df_UK['Year'], df_UK['Consumption of/and capital (age % of CWD)'])<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of/and capital (age % of CWD)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31mCountry_name = 'South Asia'<0x0A>Country_axis = 'Year'<0x0A><0x0A># Create a DataFrame with the Damage Data<0x0A>Country_df = DataFrame(Country_axis, columns = Country_name)<0x0A><0x0A># Plot the Damage Data<0x0A>Country_df = Country_df.sort_values(by = 'Cost (per 1000)', ascending = False)<0x0A>Country_df = Country_df.head(10)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.sort_values(by = 'Cost (per 1000)', ascending = False)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph_df = pd.DataFrame(columns = ['Year', 'Strength rating (C = %0.0f)', 'Rating regarding strength of legal rights index in Croatia'])<0x0A>graph_df.plot(kind ='scatter', x = 'Year', y = 'Strength rating (C = %0.0f)', figsize = (25, 25), color = 'green')<0x0A>graph_df.plot(kind ='scatter', x = 'Year', y = 'Strength rating (C = %0.0f)', figsize = (25, 25), color = 'blue')<0x0A>graph_df.plot(kind ='scatter', x = 'Year', y = 'Rating regarding strength of legal rights index in Croatia', figsize = (25, 25), color ='red')<0x0A>graph_df.plot(kind ='scatter', x = 'Year', y = 'Strength rating (C = %0.0f)', figsize = (25, 25), color ='red')<0x0A>graph_df.plot(kind ='scatter', x = 'Year', y = 'Rating regarding strength of legal rights index in Croatia', figsize = (25, 25), color = 'purple')<0x0A>graph_df.plot(kind ='scatter', x = 'Year', y = 'Strength rating (C = %0.0f)', figsize = (25, 25), color = 'purple')<0x0A>graph_df.plot(kind ='scatter', x = 'Year', y = 'Strength rating (C = %0.0f)', figsize = (25, 25), color = 'purple')<0x0A>graph_df.plot(kind ='scatter', x = 'Year', y = 'Rating regarding strength of legal rights index in Croatia', figsize = (25, 25), color = 'purple')<0x0A>graph_df.plot(kind ='scatter', x = 'Year', y = 'Strength rating (C = %0.0f)', figsize = (25, 25), color = 'purple')<0x0A>graph_df.plot(kind ='scatter', x = 'Year
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.87 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:21<00:00,  7.10s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.95 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2000, 'y': 868}, {'x': 2000, 'y': 4190}, {'x': 2000, 'y': 2130}, {'x': 2000, 'y': 2130}, {'x': 2000, 'y': 4190}, {'x': 2000, 'y': 2130}, {'x': 2000, 'y': 4190}, {'x': 2000, 'y': 2130}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7000}, {'x': 'USA', 'y': 4200}, {'x': 'Dog', 'y': 6300}, {'x': 'Nike', 'y': 4190}, {'x': 'Apple', 'y': 6300}, {'x': 'Male', 'y': 6300}, {'x': 'Rock', 'y': 6300}, {'x': 'Sedan', 'y': 4200}, {'x': 'USA', 'y': 4200}, {'x': 'Rock', 'y': 6300}, {'x': 'Sedan', 'y': 4200}, {'x': 'Apple', 'y': 6300}, {'x': 'Male', 'y': 6300}, {'x': 'Rock', 'y': 6300}, {'x': 'Sedan', 'y': 4200}, {'x': 'Sedan', 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Dog', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1000}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 47.11}, {'x': 'Nike', 'y': 47.11}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 47.11}, {'x': 'Nike', 'y': 47.11}, {'x': 'Nike', 'y': 47.11}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 152.52}, {'x': 'USA', 'y': 152.52}, {'x': 'Red', 'y': 152.52}, {'x': 'USA', 'y': 152.52}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.17}, {'x': 'USA', 'y': 8.37}, {'x': 'Dog', 'y': 8.37}, {'x': 'Nike', 'y': 12.17}, {'x': 'Apple', 'y': 3.67}, {'x': 'Dog', 'y': 8.37}, {'x': 'Nike', 'y': 12.17}, {'x': 'Red', 'y': 12.17}, {'x': 'USA', 'y': 8.37}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 150, 'y': 60.2}, {'x': 150, 'y': 60.2}, {'x': 255, 'y': 13.3}, {'x': 255, 'y': 60.2}, {'x': 255, 'y': 60.2}, {'x': 255, 'y': 60.2}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6, 'y': 111.11}, {'x': 6, 'y': 111.11}, {'x': 6, 'y': 111.11}, {'x': 6, 'y': 111.11}, {'x': 6, 'y': 111.11}, {'x': 6, 'y': 111.11}, {'x': 6, 'y': 111.11}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200}, {'x': 1915, 'y': 180}, {'x': 1920, 'y': 180}, {'x': 1920, 'y': 180}, {'x': 1920, 'y': 34}, {'x': 1920, 'y': 180}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 28.56}, {'x': 1816, 'y': 28.56}, {'x': 1817, 'y': 70.06}, {'x': 1818, 'y': 70.06}, {'x': 1819, 'y': 70.06}, {'x': 1822, 'y': 8.56}, {'x': 1822, 'y': 8.56}, {'x': 1823, 'y': 8.56}, {'x': 1829, 'y': 8.56}, {'x': 1829, 'y': 28.56}, {'x': 1829, 'y': 28.56}, {'x': 1829, 'y': 28.56}, {'x': 1829, 'y': 28.56}, {'x': 1829, 'y': 28.56}, {'x': 1829, 'y': 28.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.1}, {'x': 1868, 'y': 253.1}, {'x': 1870, 'y': 108.1}, {'x': 1878, 'y': 253.1}, {'x': 1880, 'y': 268.1}, {'x': 1883, 'y': 268.1}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 711.11, 'y': 63.14}, {'x': 711.11, 'y': 63.14}, {'x': 711.11, 'y': 63.14}, {'x': 711.11, 'y': 63.14}, {'x': 711.11, 'y': 63.14}, {'x': 711.11, 'y': 63.14}, {'x': 711.11, 'y': 63.14}, {'x': 711.11, 'y': 63.14}, {'x': 711.11, 'y': 63.14}, {'x': 711.11, 'y': 63.14}, {'x': 711.11, 'y': 63.14}, {'x': 711.11, 'y': 63.14}, {'x': 711.11, 'y': 63.14}, {'x': 711.11, 'y': 63.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 600.03}, {'x': 1821, 'y': 128.03}, {'x': 1831, 'y': 128.03}, {'x': 1841, 'y': 108.03}, {'x': 1851, 'y': 310.03}, {'x': 1861, 'y': 148.03}, {'x': 1871, 'y': 148.03}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4500, 'y': 58.14}, {'x': 4500, 'y': 58.14}, {'x': 4500, 'y': 58.14}, {'x': 4500, 'y': 58.14}, {'x': 4500, 'y': 58.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2880}, {'x': 1925, 'y': 2880}, {'x': 1930, 'y': 2880}, {'x': 1935, 'y': 2880}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1500, 'y': 37.56}, {'x': 1500, 'y': 43.56}, {'x': 1500, 'y': 37.56}, {'x': 1500, 'y': 37.56}, {'x': 1500, 'y': 37.56}, {'x': 1500, 'y': 37.56}, {'x': 1500, 'y': 37.56}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentled Analysis Of Yearly Weather In Normalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1806, 'y': 3818}, {'x': 1808, 'y': 3626}, {'x': 1812, 'y': 4886}, {'x': 1813, 'y': 5848}, {'x': 1814, 'y': 5848}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 2000}, {'x': 1840, 'y': 3400}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}, {'x': 1840, 'y': 2000}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Exponential Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1000, 'y': 565.1}, {'x': 1000, 'y': 527.6}, {'x': 3000, 'y': 527.6}, {'x': 3000, 'y': 625.1}, {'x': 4000, 'y': 625.1}, {'x': 4000, 'y': 527.6}, {'x': 4000, 'y': 527.6}, {'x': 3000, 'y': 527.6}, {'x': 4000, 'y': 527.6}, {'x': 3000, 'y': 527.6}, {'x': 4000, 'y': 527.6}, {'x': 4000, 'y': 527.6}, {'x': 4000, 'y': 527.6}, {'x': 4000, 'y': 527.6}, {'x': 4000, 'y': 527.6}, {'x': 4000, 'y': 527.6}, {'x': 4000, 'y': 527.6}, {'x': 4000, 'y': 527.6}, {'x': 4000, 'y': 527.6}, {'x': 4000, 'y': 527.6}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.95 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:46<00:00, 11.33s/it]
[35m|[39m JSON to Vega conversion error rate: [31m95.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.87 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a line plot of the total unemployed youth population of Colombia<0x0A>ax.plot(df_unemployed['Year'], df_unemployed['Unemployed Youth'], color='#008888')<0x0A><0x0A># Set the title and labels<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Unemployed youth % of total labor force were %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) of Hitomonal Resources'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'type': 'quantitative'}]}}, 'data': {'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 55.33}, {'x': 'field', 'y': 55.33}, {'x': 'field', 'y': 55.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Average land (hectares)')<0x0A>ax.set_title('Arable land (hectares) in Seychelles')<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(top=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(top=True, right=True)<0x0A><0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(top=True, right=True)<0x0A><0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(top=True, right=True)<0x0A><0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(top=True, right=True)<0x0A><0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(top=True, right=True)<0x0A><0x0A><0x0A><0x0A># Plotting the graph
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption in Brazil as a percentage of production'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.plot( grupo_bairro['Year'], grupo_bairro['Average_time'], color='black')<0x0A>ax.set_title('Time required to register a property in Sanos')<0x0A>ax.set_ylabel('Number of Days')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylim(0, 165)<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the graph<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the graph<0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications imports (Imports)')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications imports (Imports)')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications imports (Imports)'], rotation=90)<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications imports (Imports)'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications imports (Imports)'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications imports (Imports)'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications imports (Imports)'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications imports (Imports)'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the bar graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar = sns.barplot(x="Year", y="AID_flow_from_development_assistance_committee", data=g_bar, palette="rocket")<0x0A>g_bar.set_xticklabels(g_bar.get_xticklabels(), rotation=90)<0x0A>g_bar.set_title("Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.set_yticklabels(g_bar.get_yticklabels(), rotation=0)<0x0A>g_bar.set_xlabel("Year")<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.grid(False)<0x0A>g_bar.set_xticklabels(g_bar.get_xticklabels(), rotation=90)<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A>g_bar.set_xlabel("Year")<0x0A>g_bar.set_title("Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.bar_label(ax.containers[0], facecolor="black", fontsize=15)<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.bar_label(ax.containers[0], facecolor="black", fontsize=15)<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.bar_label(ax.containers[0], facecolor="black", fontsize=15)<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.bar_label(ax.containers[0], facecolor="black", fontsize=15)<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.bar_label(ax.containers[0], facecolor="black", fontsize=15)<0x0A>g_bar.set_ylabel("AID flow from Development Assistance Committee")<0x0A><0x0A># Plotting the bar graph<0x0A>g_bar.bar_label(ax.containers[0], facecolor="black", fontsize=15)<0x0A>g_bar.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar',
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_count = pd.DataFrame(<0x0A>    [<0x0A>        df_congo_building_republic["Year"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],<0x0A>        df_congo_building_republic["Number of procedures to build a warehouse in Congo (Republic)"],
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig = plt.figure(figsize=(20,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in python-text')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year', 'Country'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Country'], rotation=90)<0x0A><0x0A>ax.set_ylim([0, 10000])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Country'], rotation=90)<0x0A><0x0A>ax.set_ylabel('Production in python-text')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in python-text')<0x0A><0x0A>ax.set_ylim([0, 10000])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Country'], rotation=90)<0x0A><0x0A>ax.grid(True)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot a scatter plot for each category<0x0A><0x0A># Create a horizontal bar plot<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a horizontal bar plot<0x0A>scatter_plot = ax.scatter(df['Year'], df['Score ((thousands of thousand)/yr)'])<0x0A><0x0A># Add a title<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A># Add a x-label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Add a y-label<0x0A>ax.set_ylabel('Score (thousands of thousand)')<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Display the chart<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31m# Plot the percentage of babies born with low-birthweight in Sri Lanka<0x0A><0x0A>g = sns.catplot(x="Year", y="Survived", data=df, height=15, aspect=1.5, palette="mako")<0x0A>g.set_axis_labels("Year", "S% of babies")<0x0A>g.set_title("Percentage of babies born with low-Birthweight in Sri Lanka")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("Images/Percentage of babies born with low-Birthweight in Sri Lanka.png")
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}, {'x': 'field', 'y': 13.6}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(20,20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of / and Capital (less % of CMV)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of / and Capital (less % of CMV)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31mCountry_name = 'South Asia'<0x0A>Country_axis = 'Year'<0x0A><0x0A># Create a DataFrame with the Damage Data<0x0A>Country_df = DataFrame(Country_axis, columns = Country_name)<0x0A><0x0A># Plot the Damage Data<0x0A>Country_df = Country_df.sort_values(by = 'Cost (per 1000)', ascending = False)<0x0A>Country_df = Country_df.head(10)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.sort_values(by = 'Cost (per 1000)', ascending = False)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_df.reset_index()<0x0A>Country_df = Country_df.drop(['Country Name'], axis = 1)<0x0A>Country_df = Country_
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = df.plot(kind='scatter', x='Year', y='Strength rating (12+ %s/yr)', color='green', figsize=(20, 20), s=50, title='Rating regarding strength of legal rights index in Croatia')<0x0A>graph.set_xlabel('Year')<0x0A>graph.set_ylabel('Strength rating (12+ %s/yr)')<0x0A>graph.set_xticklabels(graph.get_xticklabels(), rotation=90)<0x0A>graph.grid(True)<0x0A>graph.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.87 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:10<00:00,  6.52s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2000, 'y': 860}, {'x': 2000, 'y': 4190}, {'x': 2000, 'y': 2130}, {'x': 4000, 'y': 2130}, {'x': 5000, 'y': 2980}, {'x': 5000, 'y': 4190}, {'x': 6000, 'y': 2130}, {'x': 4000, 'y': 2130}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7000}, {'x': 'USA', 'y': 4200}, {'x': 'Dog', 'y': 6300}, {'x': 'Nike', 'y': 4190}, {'x': 'Apple', 'y': 6300}, {'x': 'Male', 'y': 6300}, {'x': 'Rock', 'y': 6300}, {'x': 'Sedan', 'y': 4200}, {'x': 'USA', 'y': 4200}, {'x': 'Rock', 'y': 6300}, {'x': 'Sedan', 'y': 4200}, {'x': 'Male', 'y': 6300}, {'x': 'Sedan', 'y': 4200}, {'x': 'Sedan', 'y': 4200}, {'x': 'Sedan', 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1000}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 47.11}, {'x': 'Apple', 'y': 47.11}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 23.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 47.11}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 132.52}, {'x': 'USA', 'y': 152.52}, {'x': 'Red', 'y': 152.52}, {'x': 'USA', 'y': 152.52}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.17}, {'x': 'USA', 'y': 8.38}, {'x': 'Dog', 'y': 8.38}, {'x': 'Nike', 'y': 12.17}, {'x': 'Apple', 'y': 3.67}, {'x': 'Dog', 'y': 8.38}, {'x': 'Nike', 'y': 12.17}, {'x': 'Red', 'y': 12.17}, {'x': 'USA', 'y': 8.38}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 150, 'y': 60.2}, {'x': 150, 'y': 57.6}, {'x': 255, 'y': 13.3}, {'x': 255, 'y': 60.2}, {'x': 255, 'y': 60.2}, {'x': 255, 'y': 60.2}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6650, 'y': 44}, {'x': 6650, 'y': 114}, {'x': 6650, 'y': 364}, {'x': 6650, 'y': 364}, {'x': 6650, 'y': 364}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200.03}, {'x': 1919, 'y': 16.64}, {'x': 1921, 'y': 16.64}, {'x': 1926, 'y': 16.64}, {'x': 1929, 'y': 34.1}, {'x': 1930, 'y': 34.1}, {'x': 1931, 'y': 34.1}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 28.56}, {'x': 1816, 'y': 28.56}, {'x': 1817, 'y': 70.2}, {'x': 1818, 'y': 70.2}, {'x': 1819, 'y': 70.2}, {'x': 1820, 'y': 18.28}, {'x': 1822, 'y': 8.56}, {'x': 1823, 'y': 8.56}, {'x': 1824, 'y': 28.56}, {'x': 1825, 'y': 28.56}, {'x': 1827, 'y': 28.56}, {'x': 1829, 'y': 8.56}, {'x': 1829, 'y': 28.56}, {'x': 1829, 'y': 28.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.14}, {'x': 1868, 'y': 253.14}, {'x': 1870, 'y': 108.14}, {'x': 1878, 'y': 268.14}, {'x': 1880, 'y': 268.14}, {'x': 1887, 'y': 268.14}, {'x': 1889, 'y': 268.14}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 718.11, 'y': 63.14}, {'x': 718.11, 'y': 63.14}, {'x': 718.11, 'y': 63.14}, {'x': 718.11, 'y': 63.14}, {'x': 718.11, 'y': 63.14}, {'x': 718.11, 'y': 63.14}, {'x': 718.11, 'y': 63.14}, {'x': 718.11, 'y': 63.14}, {'x': 718.11, 'y': 63.14}, {'x': 718.11, 'y': 63.14}, {'x': 718.11, 'y': 63.14}, {'x': 718.11, 'y': 63.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 600.03}, {'x': 1821, 'y': 128.03}, {'x': 1828, 'y': 128.03}, {'x': 1831, 'y': 28.03}, {'x': 1838, 'y': 128.03}, {'x': 1841, 'y': 108.03}, {'x': 1847, 'y': 310.03}, {'x': 1851, 'y': 308.03}, {'x': 1859, 'y': 148.03}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4500, 'y': 58.14}, {'x': 1100, 'y': 58.14}, {'x': 2200, 'y': 58.14}, {'x': 3000, 'y': 58.14}, {'x': 4000, 'y': 58.14}, {'x': 5000, 'y': 58.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2880}, {'x': 1926, 'y': 2880}, {'x': 1929, 'y': 2880}, {'x': 1930, 'y': 2880}, {'x': 1935, 'y': 2880}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1500, 'y': 37.56}, {'x': 1500, 'y': 43.66}, {'x': 1500, 'y': 37.56}, {'x': 1500, 'y': 43.66}, {'x': 1500, 'y': 37.56}, {'x': 1500, 'y': 37.56}, {'x': 1500, 'y': 37.56}, {'x': 1500, 'y': 37.56}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentled Analysis Of Yearly Weather In Normalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1806, 'y': 3812}, {'x': 1808, 'y': 3626}, {'x': 1812, 'y': 4912}, {'x': 1813, 'y': 5748}, {'x': 1814, 'y': 5748}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 2000}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 2000}, {'x': 1845, 'y': 3400}, {'x': 1845, 'y': 2000}, {'x': 1845, 'y': 2000}, {'x': 1845, 'y': 2000}, {'x': 1845, 'y': 2000}, {'x': 1845, 'y': 2000}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Exponential Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1070, 'y': 565.1}, {'x': 1100, 'y': 527.6}, {'x': 1200, 'y': 527.6}, {'x': 3000, 'y': 320.1}, {'x': 3000, 'y': 625.1}, {'x': 3000, 'y': 527.6}, {'x': 3000, 'y': 527.6}, {'x': 3000, 'y': 527.6}, {'x': 3000, 'y': 527.6}, {'x': 3000, 'y': 527.6}, {'x': 3000, 'y': 527.6}, {'x': 3000, 'y': 527.6}, {'x': 3000, 'y': 527.6}, {'x': 3000, 'y': 527.6}, {'x': 3000, 'y': 527.6}, {'x': 3000, 'y': 527.6}, {'x': 3000, 'y': 527.6}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:48<00:00, 11.40s/it]
[35m|[39m JSON to Vega conversion error rate: [31m95.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.87 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a line plot of the total unemployed youth population of Colombia<0x0A>ax.plot(df_unemployed['Year'], df_unemployed['Unemployed Youth'], color='#008888')<0x0A><0x0A># Set the title and labels<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Unemployed youth % of total labor force were %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) of Hitomonal Resources'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field': 'Annual freshwater withdrawals (%) of Hitomonal Resources'}}, 'y': 55.33}, {'x': 'field': 'Year', 'type': 'quantitative'}]}}, 'y': {'x': 'field': 'Annual freshwater withdrawals (%) of Hitomonal Resources'}}, 'y': 55.33}, {'x': 'field': 'Year', 'type': 'quantitative'}]}}, 'y': 55.33}, {'x': 'field': 'Year', 'y': 55.33}, {'x': 'field': 'Annual freshwater withdrawals (%) of Hitomonal Resources'}}, 'y': 55.33}, {'x': 'field': 'Year', 'y': 55.33}, {'x': 'field': 'Annual freshwater withdrawals (%) of Hitomonal Resources'}}, 'y': 55.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Average land (hectares)')<0x0A>ax.set_title('Arable land (hectares) in Seychelles')<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(top=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(top=True, left=True)<0x0A><0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(top=True, right=True)<0x0A><0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(top=True, right=True)<0x0A><0x0A><0x0A># Plotting the graph<0x0A><0x0A>sns.despine(top=True, left=True)<0x0A><0x0A><0x0A># Plotting the graph<0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption in Brazil as a percentage of production'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the graph<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the graph<0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications imports (Imports)')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications imports (Imports)')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications imports (Imports)'], rotation=90)<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications imports (Imports)'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications imports (Imports)'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications imports (Imports)'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications imports (Imports)'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the bar graph<0x0A><0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=df, kind="bar", palette="ch:.25", ci=None, )<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.05, fontsize=16, y=1.05)<0x0A>g.set_xlabels("Year", fontsize=16)<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Saving the plot<0x0A>plt.savefig("Images/Grenada_Net_bilateral_aid_flow_from_development_assistance_committee.png", dpi=300, bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar',
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_count = df.groupby(['Year', 'Country']).size()<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig = plt.figure(figsize=(20,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in python-text')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year', 'Country'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Country'], rotation=90)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot a scatter plot for each category<0x0A><0x0A># Create a horizontal bar plot<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a horizontal bar plot<0x0A>scatter_plot = ax.scatter(df['Year'], df['Score ((thousands of thousand)/yr)'])<0x0A><0x0A># Add a title<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A># Add a x-label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Add a y-label<0x0A>ax.set_ylabel('Score (thousands of thousand)')<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Display the chart<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size().reset_index()<0x0A>percentage_sr_lanka = percentage_sr_lanka.pivot(index='Year', columns='Country', values='Survived')<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by='Survived', ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.scatter(percentage_sr_lanka['Year'], percentage_sr_lanka['Survived'], color='purple')<0x0A>ax.set_title('Percentage of babies born with low-Birthweight in Sri Lanka')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xticklabels([''] + percentage_sr_lanka['Country'].unique(), rotation=90)<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_xlim(0, 22)<0x0A>ax.set_ylim(0, 22)<0x0A>ax.set_xticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_xticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_xticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_xticks([0,1,2])<0x0A>ax.set_xticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 14.67}, {'x': 'field', 'y': 14.67}, {'x': 'field', 'y': 14.67}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(20,20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atmospheric Air and Capital (less % of CMV)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atmospheric Air and Capital (less % of CMV)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31mCountry_name = 'South Asia'<0x0A>Country_axis = 'Year'<0x0A><0x0A># Plot the Damage caused due to forest depletion in South Asia<0x0A>g = sns.catplot(x="Year", y="Cost (y) of GW)", data=df, height=15, aspect=1.5, palette="ch:.25", order=Country_axis)<0x0A>g.fig.suptitle('Damage caused due to forest depletion in South Asia', y=1.05, fontsize=16)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = df.plot(kind='scatter', x='Year', y='Strength rating (12+ hrs/day)', color='green', figsize=(20,15))<0x0A>graph.set_xlabel('Year')<0x0A>graph.set_ylabel('Strength rating (12+ hrs/day)')<0x0A>graph.set_title('Rating regarding strength of legal rights index in Croatia')<0x0A>graph.grid(True)<0x0A>graph.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.87 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 10 [32m[1m | Loss :[39m[22m 2.943809747695923



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [02:00<00:06,  6.45s/it]
[35m|[39m JSON to Vega conversion error rate: [31m5.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.95 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2000, 'y': 860}, {'x': 2000, 'y': 4190}, {'x': 4000, 'y': 2130}, {'x': 5000, 'y': 2980}, {'x': 2000, 'y': 2130}, {'x': 5000, 'y': 4190}, {'x': 2000, 'y': 2130}, {'x': 5000, 'y': 2980}, {'x': 2000, 'y': 2130}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4200}, {'x': 'Dog', 'y': 6300}, {'x': 'Nike', 'y': 4190}, {'x': 'Apple', 'y': 6300}, {'x': 'Male', 'y': 6300}, {'x': 'Rock', 'y': 6300}, {'x': 'Sedan', 'y': 4200}, {'x': 'USA', 'y': 4200}, {'x': 'Apple', 'y': 6300}, {'x': 'Male', 'y': 6300}, {'x': 'Rock', 'y': 6300}, {'x': 'Sedan', 'y': 4200}, {'x': 'Sedan', 'y': 4200}, {'x': 'Sedan', 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Dog', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1000}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 47.61}, {'x': 'Apple', 'y': 47.61}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 23.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 47.61}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 130.67}, {'x': 'USA', 'y': 152.57}, {'x': 'Red', 'y': 152.57}, {'x': 'USA', 'y': 152.57}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.17}, {'x': 'USA', 'y': 8.38}, {'x': 'Dog', 'y': 8.38}, {'x': 'Nike', 'y': 12.17}, {'x': 'Apple', 'y': 3.67}, {'x': 'Dog', 'y': 8.38}, {'x': 'Nike', 'y': 12.17}, {'x': 'Red', 'y': 12.17}, {'x': 'USA', 'y': 8.38}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 150, 'y': 60.2}, {'x': 255, 'y': 13.3}, {'x': 255, 'y': 60.2}, {'x': 255, 'y': 60.2}, {'x': 255, 'y': 60.2}, {'x': 255, 'y': 60.2}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6650, 'y': 44}, {'x': 6650, 'y': 114}, {'x': 6650, 'y': 364}, {'x': 6650, 'y': 364}, {'x': 6650, 'y': 114}, {'x': 6650, 'y': 364}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200.03}, {'x': 1919, 'y': 16.64}, {'x': 1921, 'y': 16.64}, {'x': 1926, 'y': 16.64}, {'x': 1929, 'y': 34.1}, {'x': 1931, 'y': 34.1}, {'x': 1932, 'y': 34.1}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 80.1}, {'x': 1816, 'y': 28.5}, {'x': 1817, 'y': 70.1}, {'x': 1818, 'y': 70.1}, {'x': 1819, 'y': 80.1}, {'x': 1820, 'y': 1.822}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.14}, {'x': 1868, 'y': 253.14}, {'x': 1870, 'y': 108.14}, {'x': 1878, 'y': 268.14}, {'x': 1880, 'y': 268.14}, {'x': 1887, 'y': 268.14}, {'x': 1890, 'y': 268.14}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712.1, 'y': 63.19}, {'x': 712.1, 'y': 63.19}, {'x': 712.1, 'y': 63.19}, {'x': 712.1, 'y': 63.19}, {'x': 712.1, 'y': 63.19}, {'x': 712.1, 'y': 63.19}, {'x': 712.1, 'y': 63.19}, {'x': 712.1, 'y': 63.19}, {'x': 712.1, 'y': 63.19}, {'x': 712.1, 'y': 63.19}, {'x': 712.1, 'y': 63.19}, {'x': 712.1, 'y': 63.19}, {'x': 712.1, 'y': 63.19}, {'x': 712.1, 'y': 63.19}, {'x': 712.1, 'y': 63.19}, {'x': 712.1, 'y': 63.19}, {'x': 712.1, 'y': 63.19}, {'x': 712.1, 'y': 63.19}, {'x': 712.1, 'y': 63.19}, {'x': 712.1, 'y': 63.19}, {'x': 712.1, 'y': 
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 600.03}, {'x': 1821, 'y': 128.69}, {'x': 1828, 'y': 28.7}, {'x': 1831, 'y': 128.69}, {'x': 1838, 'y': 128.69}, {'x': 1841, 'y': 108.69}, {'x': 1847, 'y': 311.08}, {'x': 1851, 'y': 311.08}, {'x': 1859, 'y': 148.08}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4500, 'y': 58.14}, {'x': 1100, 'y': 58.14}, {'x': 2200, 'y': 58.14}, {'x': 3000, 'y': 58.14}, {'x': 4000, 'y': 58.14}, {'x': 5000, 'y': 58.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2880}, {'x': 1926, 'y': 2880}, {'x': 1929, 'y': 2880}, {'x': 1930, 'y': 2880}, {'x': 1932, 'y': 2880}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.64}, {'x': 1570, 'y': 43.64}, {'x': 1570, 'y': 38.64}, {'x': 1570, 'y': 38.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentled Analysis Of Yearly Weather In Normalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1806, 'y': 3812}, {'x': 1808, 'y': 3626}, {'x': 1812, 'y': 4912}, {'x': 1814, 'y': 5748}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 2000}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 2000}, {'x': 1847, 'y': 3400}, {'x': 1849, 'y': 2000}, {'x': 1850, 'y': 3400}, {'x': 1851, 'y': 2000}, {'x': 1852, 'y': 3400}, {'x': 1853, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Exponential Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1070, 'y': 565.1}, {'x': 1070, 'y': 527.6}, {'x': 3000, 'y': 621.2}, {'x': 3000, 'y': 527.6}, {'x': 3000, 'y': 527.6}, {'x': 4000, 'y': 621.2}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.95 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:04<00:00,  6.25s/it]



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:49<00:00, 11.50s/it]
[35m|[39m JSON to Vega conversion error rate: [31m95.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.87 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a line plot of the total unemployed youth population of Colombia<0x0A>ax.plot(df_unemployed['Year'], df_unemployed['Unemployed Youth'], color='#008888')<0x0A><0x0A># Set the title and labels<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Unemployed youth % of total labor force were %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %emd %
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihilomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.2}, {'x': 'y': 55.2}, {'x': 'x', 'y': 55.2}, {'x': 'y': 55.2}, {'x': 'x', 'y': 55.2}, {'x': 'x', 'y': 55.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>plt.figure(figsize=(20,20))<0x0A>plt.plot(df['Year'],df['fertilizer consumption in Brazil as a percentage of production'])<0x0A>plt.xticks(rotation=90)<0x0A>plt.title('Fertilizer consumption in Brazil as a percentage of production')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of fertilizer production')<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the graph<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the graph<0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications imports (Imports)')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications imports (Imports)')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications imports (Imports)'], rotation=90)<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications imports (Imports)'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications imports (Imports)'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications imports (Imports)'], rotation=90)<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications imports (Imports)'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the bar graph<0x0A><0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=df, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year")<0x0A>g.set_ylabels("AID flow from Development Assistance Committee")<0x0A>g.set_xticklabels(g.get_xticklabels(), rotation=90)<0x0A><0x0A># Saving the plot<0x0A>plt.savefig("Images/Grenada_Net_bilateral_aid_flow_from_development_assistance_committee.png")
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar',
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_count = df.groupby(['Year', 'Country']).size()<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.sort_values(by='Year', ascending=False)<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset_index()<0x0A><0x0A>grupos = grupo_count.reset
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig = plt.figure(figsize=(20,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in python-text')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year', 'Country'], rotation=90)<0x0A>ax.set_yticklabels(['Year', 'Country'], rotation=90)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot a scatter plot for each category<0x0A><0x0A># Create a horizontal bar plot<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a horizontal bar plot<0x0A>scatter_plot = ax.scatter(df['Year'], df['Score ((thousands of thousand)/yr)'])<0x0A><0x0A># Add a title<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a title<0x0A>ax.set_ylabel('Score (thousands of thousand)')<0x0A><0x0A># Add a title<0x0A>ax.set_ylabel('Score (thousands of thousand)')<0x0A><0x0A># Display the plot<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size().reset_index()<0x0A>percentage_sr_lanka = percentage_sr_lanka.pivot(index='Year', columns='Country', values='Survived')<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by='Survived', ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.scatter(percentage_sr_lanka['Year'], percentage_sr_lanka['Survived'], color='purple')<0x0A>ax.set_title('Percentage of babies born with low-Birthweight in Sri Lanka')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xticklabels([''] + percentage_sr_lanka['Country'].unique(), rotation=90)<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.set_ylim(0, 23)<0x0A>ax.set_xticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_xticks([0,1,2])<0x0A>ax.set_xticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_ytick
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 14.67}, {'x': 'field', 'y': 14.67}, {'x': 'field', 'y': 14.67}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(20,20), title='Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atmospheric Air and Capital (less % of CMV)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atmospheric Air and Capital (less % of CMV)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31mCountry_name = 'South Asia'<0x0A>Country_axis = 'Year'<0x0A><0x0A># Plot the Damage caused due to forest depletion in South Asia<0x0A>g = sns.catplot(x="Year", y="Cost (y) of GW)", data=df, height=15, aspect=1.5, palette="ch:.25", order=Country_axis)<0x0A>g.fig.suptitle('Damage caused due to forest depletion in South Asia', y=1.05, fontsize=16)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = df.plot(kind='scatter', x='Year', y='Strength rating (12+ hrs/day)', color='green', figsize=(20,15))<0x0A>graph.set_xlabel('Year')<0x0A>graph.set_ylabel('Strength rating (12+ hrs/day)')<0x0A>graph.set_title('Rating regarding strength of legal rights index in Croatia')<0x0A>graph.grid(True)<0x0A>graph.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.87 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 11 [32m[1m | Loss :[39m[22m 2.711956739425659



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:46<00:06,  6.45s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.95 [35m|[39m [36m[1mY-NAME[39m[22m : 0.95 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2000, 'y': 860}, {'x': 2000, 'y': 4190}, {'x': 4000, 'y': 2130}, {'x': 5000, 'y': 2980}, {'x': 2000, 'y': 2130}, {'x': 5000, 'y': 4190}, {'x': 2000, 'y': 2130}, {'x': 5000, 'y': 2980}, {'x': 2000, 'y': 2130}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4200}, {'x': 'Dog', 'y': 6300}, {'x': 'Nike', 'y': 4190}, {'x': 'Apple', 'y': 6300}, {'x': 'Male', 'y': 6300}, {'x': 'Rock', 'y': 6300}, {'x': 'Sedan', 'y': 4200}, {'x': 'USA', 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Dog', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1000}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.21}, {'x': 'Nike', 'y': 47.61}, {'x': 'Apple', 'y': 47.61}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 23.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 47.61}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 130.67}, {'x': 'USA', 'y': 152.52}, {'x': 'Red', 'y': 152.52}, {'x': 'USA', 'y': 152.52}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.12}, {'x': 'USA', 'y': 8.38}, {'x': 'Dog', 'y': 8.38}, {'x': 'Nike', 'y': 12.12}, {'x': 'Apple', 'y': 3.66}, {'x': 'Dog', 'y': 8.38}, {'x': 'Nike', 'y': 12.12}, {'x': 'Red', 'y': 12.12}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 150, 'y': 60.2}, {'x': 255, 'y': 13.3}, {'x': 255, 'y': 60.2}, {'x': 255, 'y': 60.2}, {'x': 255, 'y': 60.2}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6620, 'y': 42.56}, {'x': 8750, 'y': 112.56}, {'x': 8750, 'y': 112.56}, {'x': 6620, 'y': 42.56}, {'x': 8750, 'y': 112.56}, {'x': 8750, 'y': 364.56}, {'x': 6620, 'y': 42.56}, {'x': 8750, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200.03}, {'x': 1919, 'y': 16.64}, {'x': 1921, 'y': 16.64}, {'x': 1926, 'y': 16.64}, {'x': 1929, 'y': 34.1}, {'x': 1931, 'y': 34.1}, {'x': 1932, 'y': 34.1}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 80.2}, {'x': 1816, 'y': 28.5}, {'x': 1817, 'y': 70.2}, {'x': 1818, 'y': 70.2}, {'x': 1819, 'y': 80.2}, {'x': 1820, 'y': 80.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.14}, {'x': 1868, 'y': 253.14}, {'x': 1870, 'y': 108.14}, {'x': 1878, 'y': 268.14}, {'x': 1880, 'y': 268.14}, {'x': 1887, 'y': 268.14}, {'x': 1890, 'y': 268.14}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}, {'x': 788.11, 'y': 63.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 600.03}, {'x': 1821, 'y': 128.69}, {'x': 1828, 'y': 26.6}, {'x': 1833, 'y': 26.6}, {'x': 1839, 'y': 128.69}, {'x': 1846, 'y': 108.69}, {'x': 1852, 'y': 310.08}, {'x': 1859, 'y': 148.08}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4500, 'y': 58.14}, {'x': 1100, 'y': 58.14}, {'x': 2200, 'y': 58.14}, {'x': 3000, 'y': 61.74}, {'x': 4500, 'y': 58.14}, {'x': 5500, 'y': 58.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2880}, {'x': 1926, 'y': 2880}, {'x': 1929, 'y': 2880}, {'x': 1930, 'y': 2880}, {'x': 1932, 'y': 2880}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.64}, {'x': 1570, 'y': 43.64}, {'x': 1570, 'y': 38.64}, {'x': 1570, 'y': 38.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dreamtime', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1806, 'y': 3812}, {'x': 1808, 'y': 3626}, {'x': 1810, 'y': 4886}, {'x': 1812, 'y': 4966}, {'x': 1813, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 2000}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 2000}, {'x': 1847, 'y': 3400}, {'x': 1849, 'y': 2000}, {'x': 1850, 'y': 3400}, {'x': 1851, 'y': 2000}, {'x': 1852, 'y': 3400}, {'x': 1856, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Exponential Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1070, 'y': 565.69}, {'x': 1070, 'y': 527.69}, {'x': 3000, 'y': 621.69}, {'x': 3000, 'y': 527.69}, {'x': 3000, 'y': 527.69}, {'x': 4000, 'y': 621.69}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.95 [35m|[39m [36m[1mY-NAME[39m[22m : 0.95 [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:51<00:00,  5.60s/it]




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [04:01<00:00, 12.07s/it]
[35m|[39m JSON to Vega conversion error rate: [31m95.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.87 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a bar plot of the total unemployed youth population of Colombia<0x0A>ax.bar(x=col_df.index, height=col_df.unemployed_youth_population, color='skyblue')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Unemployed Youths of total labor force were 15-24)')<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A><0x0A># Set the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_xticklabels(col_df.index, rotation='vertical')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Unemployed Youths of total labor force were 15-24)<0x0A><0x0A># Set the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Unemployed Youths of total labor force were 15-24)<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_ylabel('Unemployed Youths of total labor force were 15-24)<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_xticklabels(col_df.index, rotation='vertical')<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_ylabel('Unemployed Youths of total labor force were 15-24)<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_ylabel('Unemployed Youths of total labor force were 15-24)<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Unemployed Youths of total labor force were 15-24)<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_ylabel('Unemployed Youths of total labor force were 15-24)<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_ylabel('Unemployed Youths of total labor force were 15-24)<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_ylabel('Unemployed Youths of total labor force were 15-24)<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_ylabel('Total unemployed youth population of Colombia')<0x0A><0x0A># Set the title of the graph<0x0A>ax.
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihilomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.2}, {'x': 'y': 55.2}, {'x': 'x', 'y': 55.2}, {'x': 'y': 55.2}, {'x': 'x', 'y': 55.2}, {'x': 'x', 'y': 55.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_brazil.Year, df_brazil.Amount, linewidth=0.5)<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_brazil.Year, df_brazil.Amount, linewidth=0.5)<0x0A><0x0A># Adding the title<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A># Adding the x label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Adding the y label<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Saving the plot<0x0A>plt.savefig('fertilizer consumption in Brazil as a percentage of production.png')<0x0A><0x0A># Saving the plot<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the graph<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the graph<0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications imports (Imports)')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications imports (Imports)')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], color='blue')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the bar graph<0x0A><0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=df, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year", fontsize=16)<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Saving the plot<0x0A>g.savefig("graphs/net_bilateral_aid_flow_from_development_assistance_committee.png", bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(20,20), color='red')<0x0A>Country_1981.plot(kind='bar',
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_congo = pd.DataFrame(<0x0A>    [<0x0A>        df_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count(),<0x0A>        df_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A>    ]<0x0A>)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31mfig = plt.figure(figsize=(20,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Production in python-text')<0x0A>ax.set_title('Cereal production in Swaziland')<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plot a scatter plot for each category<0x0A><0x0A># Create a horizontal bar plot<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a horizontal bar plot<0x0A>scatter_plot = ax.scatter(df['Year'], df['Score ((thousands of thousand)/yr)'])<0x0A><0x0A># Add a title<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A># Add a legend<0x0A>ax.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)<0x0A><0x0A># Add a title<0x0A>ax.set_ylabel('Score (thousands of thousand)')<0x0A><0x0A># Add a title<0x0A>ax.set_ylabel('Score (thousands of thousand)')<0x0A><0x0A># Display the plot<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size().reset_index()<0x0A>percentage_sr_lanka = percentage_sr_lanka.pivot(index='Year', columns='Country', values='Survived')<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by='Survived', ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.scatter(percentage_sr_lanka['Year'], percentage_sr_lanka['Survived'], color='purple')<0x0A>ax.set_title('Percentage of babies born with low-Birthweight in Sri Lanka')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xticklabels([''] + percentage_sr_lanka['Country'].unique(), rotation=90)<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.set_ylim(0, 23)<0x0A>ax.set_xticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_xticks([0,1,2])<0x0A>ax.set_xticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_yticklabels([''] + percentage_sr_lanka['Country'].unique()<0x0A>ax.set_ytick
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 14.67}, {'x': 'field', 'y': 14.67}, {'x': 'field', 'y': 14.67}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt', color='#1f77b4')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atmospheric Air and Capital (less % of CMV)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atmospheric Air and Capital (less % of CMV)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31mCountry_name = 'South Asia'<0x0A>Country_axis = 'Year'<0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A>g = sns.catplot(x="Year", y="Cost (y) of GW)", data=df, height=15, aspect=1.5, palette="ch:.25", order=Country_axis)<0x0A>g.fig.suptitle('Damage caused due to forest depletion in South Asia', y=1.05, fontsize=16)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots_adjust(top=0.85)<0x0A>g.fig.subplots
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = pd.DataFrame({'Year':['2017', '2018', '2019', '2020'], 'Rating':[rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.87 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 12 [32m[1m | Loss :[39m[22m 2.970493793487549



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:09<00:00,  6.45s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.95 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2000, 'y': 865}, {'x': 2000, 'y': 4190}, {'x': 4000, 'y': 2130}, {'x': 5000, 'y': 2960}, {'x': 4000, 'y': 2960}, {'x': 5000, 'y': 4190}, {'x': 2000, 'y': 2130}, {'x': 5000, 'y': 2960}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4200}, {'x': 'Dog', 'y': 6300}, {'x': 'Nike', 'y': 4190}, {'x': 'Apple', 'y': 6300}, {'x': 'Male', 'y': 6300}, {'x': 'Rock', 'y': 6300}, {'x': 'Sedan', 'y': 4200}, {'x': 'USA', 'y': 4200}, {'x': 'Apple', 'y': 6300}, {'x': 'Male', 'y': 6300}, {'x': 'Rock', 'y': 6300}, {'x': 'Sedan', 'y': 4200}, {'x': 'Sedan', 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1000}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 47.64}, {'x': 'Apple', 'y': 47.64}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 23.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 47.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.62}, {'x': 'USA', 'y': 152.62}, {'x': 'Red', 'y': 152.62}, {'x': 'USA', 'y': 152.62}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.12}, {'x': 'USA', 'y': 8.38}, {'x': 'Dog', 'y': 8.38}, {'x': 'Nike', 'y': 12.12}, {'x': 'Apple', 'y': 3.91}, {'x': 'Nike', 'y': 12.12}, {'x': 'Red', 'y': 12.12}, {'x': 'USA', 'y': 8.38}, {'x': 'Apple', 'y': 3.91}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 57.6}, {'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 60.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6620, 'y': 42}, {'x': 6620, 'y': 112}, {'x': 6620, 'y': 364}, {'x': 6620, 'y': 364}, {'x': 6620, 'y': 112}, {'x': 6620, 'y': 364}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200.03}, {'x': 1919, 'y': 16.64}, {'x': 1921, 'y': 16.64}, {'x': 1926, 'y': 16.64}, {'x': 1929, 'y': 34.1}, {'x': 1931, 'y': 34.1}, {'x': 1932, 'y': 16.64}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 80.1}, {'x': 1816, 'y': 28.5}, {'x': 1817, 'y': 28.5}, {'x': 1818, 'y': 70.1}, {'x': 1819, 'y': 70.1}, {'x': 1820, 'y': 80.1}, {'x': 1822, 'y': 80.1}, {'x': 1823, 'y': 80.1}, {'x': 1824, 'y': 28.5}, {'x': 1825, 'y': 80.1}, {'x': 1826, 'y': 28.5}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.14}, {'x': 1868, 'y': 253.14}, {'x': 1871, 'y': 108.14}, {'x': 1878, 'y': 268.14}, {'x': 1882, 'y': 268.14}, {'x': 1889, 'y': 268.14}, {'x': 1895, 'y': 268.14}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788.11, 'y': 63.14}, {'x': 687.11, 'y': 56.14}, {'x': 24.1, 'y': 23.74}, {'x': 24.1, 'y': 63.14}, {'x': 687.11, 'y': 56.14}, {'x': 687.11, 'y': 63.14}, {'x': 687.11, 'y': 63.14}, {'x': 687.11, 'y': 63.14}, {'x': 687.11, 'y': 63.14}, {'x': 687.11, 'y': 63.14}, {'x': 687.11, 'y': 63.14}, {'x': 687.11, 'y': 63.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 600.03}, {'x': 1821, 'y': 128.69}, {'x': 1828, 'y': 26.6}, {'x': 1831, 'y': 26.6}, {'x': 1838, 'y': 128.69}, {'x': 1841, 'y': 108.69}, {'x': 1847, 'y': 311.08}, {'x': 1851, 'y': 311.08}, {'x': 1859, 'y': 148.08}, {'x': 1861, 'y': 148.08}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4500, 'y': 58.14}, {'x': 1100, 'y': 58.14}, {'x': 2200, 'y': 61.74}, {'x': 3000, 'y': 58.14}, {'x': 4500, 'y': 58.14}, {'x': 5500, 'y': 58.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2880}, {'x': 1926, 'y': 2880}, {'x': 1929, 'y': 2880}, {'x': 1930, 'y': 2880}, {'x': 1932, 'y': 2880}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.64}, {'x': 1570, 'y': 43.64}, {'x': 1570, 'y': 38.64}, {'x': 1570, 'y': 38.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2920}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dreamtime', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1805, 'y': 3626}, {'x': 1806, 'y': 3812}, {'x': 1807, 'y': 3626}, {'x': 1808, 'y': 3626}, {'x': 1809, 'y': 4266}, {'x': 1810, 'y': 4886}, {'x': 1812, 'y': 4886}, {'x': 1813, 'y': 5758}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 2000}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 2000}, {'x': 1847, 'y': 3400}, {'x': 1850, 'y': 2000}, {'x': 1855, 'y': 3400}, {'x': 1857, 'y': 3400}, {'x': 1860, 'y': 1900}, {'x': 1870, 'y': 1900}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Exponential Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1070, 'y': 565.69}, {'x': 1070, 'y': 527.69}, {'x': 3000, 'y': 621.69}, {'x': 3000, 'y': 527.69}, {'x': 3000, 'y': 527.69}, {'x': 4000, 'y': 621.69}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.95 [35m|



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [04:00<00:10, 10.05s/it]
[35m|[39m JSON to Vega conversion error rate: [31m95.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.91 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31mfig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a bar plot of the total unemployed youth population of Colombia<0x0A>ax.bar(x=col_df.index, height=col_df.total_unemployed_youth_population, color='skyblue', alpha=0.5)<0x0A><0x0A># Set the title and labels<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Unemployed youth % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) of Hitomonal Resources', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.14}, {'x': 'y': 55.14}, {'x': 'x', 'y': 55.14}, {'x': 'y': 55.14}, {'x': 'x', 'y': 55.14}, {'x': 'y': 55.14}, {'x': 'x': 'y': 30.2}, {'x': 'y': 55.14}, {'x': 'x': 'y': 30.2}, {'x': 'y': 55.14}, {'x': 'x': 'y': 55.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(30,30))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.set_style("whitegrid")<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_brazil.Year, df_brazil.Amount, linewidth=0.5)<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_brazil.Year, df_brazil.Amount, linewidth=0.5)<0x0A><0x0A># Adding the title<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A># Adding the x label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Adding the y label<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Saving the plot<0x0A>plt.savefig('fertilizer consumption in Brazil as a percentage of production.png')<0x0A><0x0A># Saving the plot<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the graph<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the graph<0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications imports (Imports)')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications imports (Imports)')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], color='blue')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the bar graph<0x0A><0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=df, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year", fontsize=16)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", fontsize=16)<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Saving the plot<0x0A>plt.savefig("Images/Net_bilateral_aid_flow_from_development_assistance_committee.png", dpi=300, bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar',
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_congo = pd.DataFrame(<0x0A>    [<0x0A>        df_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count(),<0x0A>        df_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A>    ]<0x0A>)<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.group
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import os<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m# Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(df['Year'], df['Score ((thousands of Armenian)/(total_deaths)'])<0x0A><0x0A># Plotting the graph<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (thousands of Armenian)')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(df['Year'], df['Distance to Frontier score (on scale of 100) of Armenia'])<0x0A><0x0A># Plotting the graph<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (thousands of Armenian)')<0x0A><0x0A># Plotting the graph<0x0A>ax.set_ylim(0, 1000)<0x0A><0x0A># Plotting the graph<0x0A>ax.set_xticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size().reset_index()<0x0A>percentage_sr_lanka = percentage_sr_lanka.pivot(index='Year', columns='Country', values='Survived')<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by='Survived', ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(18, 20))<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 14.65}, {'x': 'field', 'y': 14.65}, {'x': 'field', 'y': 14.65}, {'x': 'field', 'y': 14.65}, {'x': 'field', 'y': 14.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt', color='#1f77b4')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atmospheric Air and Capital (less % of CMV)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atmospheric Air and Capital (less % of CMV)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31mCountry_name = 'South Asia'<0x0A>Country_axis = 'Year'<0x0A><0x0A># Plot the damage caused due to forest depletion in South Asia<0x0A>g = sns.catplot(x="Year", y="Cost (y) of GW)", data=df, height=15, aspect=1.5, palette="ch:.25", order=Country_axis)<0x0A>g.fig.suptitle('Damage caused due to forest depletion in South Asia', y=1.05, fontsize=16)<0x0A>g.fig.subplots_adjust(top=0.91, wspace=0.3, hspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.91, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.91, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.91, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.91, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.91, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.91, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.91, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.91, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.91, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.91, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.91, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.91, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.91, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.91, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.91, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.91, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.91, wspace=0.3)<0x0A>g.fig.subplots
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = pd.DataFrame({'Year':['2017', '2018', '2019', '2020'], 'Rating':[rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.91 [35m|

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [04:19<00:00, 12.96s/it]

























model.safetensors: 100%|█████████████████████████████████████████████████████████████████████████████████████████| 1.13G/1.13G [00:49<00:00, 22.7MB/s]
[36m[1mEpoch :[39m[22m 13 [32m[1m | Loss :[39m[22m 2.546376943588257



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:07<00:00,  6.37s/it]
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.95 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4386, 'y': 2980}, {'x': 5456, 'y': 4210}, {'x': 1280, 'y': 860}, {'x': 1280, 'y': 2110}, {'x': 4386, 'y': 2110}, {'x': 5456, 'y': 4210}, {'x': 4386, 'y': 2980}, {'x': 5456, 'y': 4210}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4200}, {'x': 'Dog', 'y': 6900}, {'x': 'Nike', 'y': 4190}, {'x': 'Apple', 'y': 6300}, {'x': 'Male', 'y': 6900}, {'x': 'Rock', 'y': 6900}, {'x': 'Sedan', 'y': 4200}, {'x': 'USA', 'y': 4200}, {'x': 'Apple', 'y': 6300}, {'x': 'Male', 'y': 6900}, {'x': 'Rock', 'y': 6900}, {'x': 'Sedan', 'y': 4200}, {'x': 'Sedan', 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 23.14}, {'x': 'Dog', 'y': 120.24}, {'x': 'Nike', 'y': 47.64}, {'x': 'Apple', 'y': 47.64}, {'x': 'Male', 'y': 23.14}, {'x': 'Rock', 'y': 23.14}, {'x': 'Sedan', 'y': 23.14}, {'x': 'Spanish', 'y': 47.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.14}, {'x': 'USA', 'y': 152.45}, {'x': 'Red', 'y': 152.45}, {'x': 'USA', 'y': 152.45}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.12}, {'x': 'USA', 'y': 8.3}, {'x': 'Dog', 'y': 8.3}, {'x': 'Nike', 'y': 12.12}, {'x': 'Apple', 'y': 3.91}, {'x': 'Nike', 'y': 12.12}, {'x': 'Red', 'y': 12.12}, {'x': 'USA', 'y': 8.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 57.6}, {'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 60.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6950, 'y': 43.66}, {'x': 8750, 'y': 112.14}, {'x': 6950, 'y': 43.66}, {'x': 8750, 'y': 112.14}, {'x': 6950, 'y': 43.66}, {'x': 6950, 'y': 112.14}, {'x': 6950, 'y': 43.66}, {'x': 6950, 'y': 112.14}, {'x': 6950, 'y': 364.1}, {'x': 6950, 'y': 364.1}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200.03}, {'x': 1919, 'y': 16.64}, {'x': 1921, 'y': 16.64}, {'x': 1926, 'y': 16.64}, {'x': 1929, 'y': 34.1}, {'x': 1931, 'y': 34.1}, {'x': 1932, 'y': 16.64}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 80.1}, {'x': 1816, 'y': 28.5}, {'x': 1817, 'y': 28.5}, {'x': 1818, 'y': 70.1}, {'x': 1819, 'y': 70.1}, {'x': 1820, 'y': 80.1}, {'x': 1822, 'y': 8.5}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.1}, {'x': 1868, 'y': 253.1}, {'x': 1870, 'y': 108.1}, {'x': 1878, 'y': 268.1}, {'x': 1882, 'y': 268.1}, {'x': 1889, 'y': 268.1}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788.13, 'y': 63.14}, {'x': 687.13, 'y': 56.14}, {'x': 687.13, 'y': 63.14}, {'x': 687.13, 'y': 24.14}, {'x': 687.13, 'y': 63.14}, {'x': 687.13, 'y': 63.14}, {'x': 687.13, 'y': 24.14}, {'x': 687.13, 'y': 63.14}, {'x': 687.13, 'y': 63.14}, {'x': 687.13, 'y': 63.14}, {'x': 687.13, 'y': 63.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 600}, {'x': 1821, 'y': 128}, {'x': 1828, 'y': 28}, {'x': 1831, 'y': 28}, {'x': 1838, 'y': 108}, {'x': 1841, 'y': 108}, {'x': 1851, 'y': 311}, {'x': 1859, 'y': 150}, {'x': 1865, 'y': 148}, {'x': 1869, 'y': 148}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4550, 'y': 58.14}, {'x': 1100, 'y': 58.14}, {'x': 2200, 'y': 61.74}, {'x': 3000, 'y': 58.14}, {'x': 4550, 'y': 58.14}, {'x': 5550, 'y': 58.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2880}, {'x': 1926, 'y': 2880}, {'x': 1929, 'y': 2880}, {'x': 1930, 'y': 2880}, {'x': 1932, 'y': 2880}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.64}, {'x': 1570, 'y': 42.54}, {'x': 1570, 'y': 38.64}, {'x': 1570, 'y': 42.54}, {'x': 1570, 'y': 38.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1460}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1460}, {'x': 'Nike', 'y': 1460}, {'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1460}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dreamtime', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1805, 'y': 3626}, {'x': 1806, 'y': 3812}, {'x': 1807, 'y': 3626}, {'x': 1808, 'y': 3626}, {'x': 1809, 'y': 4266}, {'x': 1810, 'y': 4886}, {'x': 1812, 'y': 5848}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 1900}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 1900}, {'x': 1847, 'y': 3400}, {'x': 1850, 'y': 2000}, {'x': 1857, 'y': 3400}, {'x': 1860, 'y': 1900}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Exponential Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1070, 'y': 565.69}, {'x': 3020, 'y': 621.69}, {'x': 3020, 'y': 527.69}, {'x': 3020, 'y': 527.69}, {'x': 3020, 'y': 527.69}, {'x': 3020, 'y': 621.69}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.95 [35m|




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [04:05<00:00, 12.28s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'y': 0.01}, {'x': 'field': 'Year', 'y': 0.01}, {'x': 'field': 'Value', 'y': 0.01}, {'x': 'field': 'Value', 'y': 0.01}, {'x': 'field': 'Value', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a bar plot of the total unemployed youth population of Colombia<0x0A>ax.bar(x=col_df.index, height=col_df.total_unemployed_youth_population, color='skyblue', alpha=0.5)<0x0A><0x0A># Set the title and labels<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Unemployed youth % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) of Hitomonal Resources', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.14}, {'x': 'y': 55.14}, {'x': 'x', 'y': 55.14}, {'x': 'y': 55.14}, {'x': 'x', 'y': 55.14}, {'x': 'y': 55.14}, {'x': 'x': 'y': 30.2}, {'x': 'y': 55.14}, {'x': 'x': 'y': 30.2}, {'x': 'y': 55.14}, {'x': 'x': 'y': 30.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(25, 25))<0x0A><0x0A>sns.set(style="whitegrid")<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True, right=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df['Year'], df['fertilizer consumption'])<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df['Year'], df['fertilizer consumption'])<0x0A><0x0A># Adding a title<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A># Labelling the x-axis<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Labelling the y-axis<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Displaying the plot<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m# Plot the graph<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot the graph<0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications imports (Imports)')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.plot(df_cost_comm_lebanon['Year'], df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], color='blue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Cost Of communications imports (Imports)')<0x0A>ax.set_title('Cost of communications and computers with respect to service imports of Lebanon')<0x0A>ax.set_yticklabels(df_cost_comm_lebanon['Cost of communications and computers with respect to service imports of Lebanon'], color='blue')<0x0A>ax.set_xticklabels(df_cost_comm_lebanon['Year'], rotation=90)<0x0A><0x0A># Plot the graph<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the bar graph<0x0A><0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=df, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("./plotting/net_bilateral_aid_flow_from_development_assistance_committee.png")<0x0A><0x0A># Show plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar',
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_congo = pd.DataFrame(<0x0A>    [<0x0A>        df_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count(),<0x0A>        df_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A>    ]<0x0A>)<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.groupby(['Year', 'Country'])['Procedure_Congo'].count()<0x0A><0x0A>grupos = grupo_congo.group
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import os<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31mgrupo_df = grupo_df.sort_values('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.scatter(grupos['Year'], grupo_df['Distance to Frontier score (on scale of 100) of Armenia'])<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (integrated to 100/heating/heating/heating)')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A>ax.set_ylim(0, 100)<0x0A>ax.set_xticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size().reset_index()<0x0A>percentage_sr_lanka = percentage_sr_lanka.pivot(index='Year', columns='Country', values='Survived')<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by='Survived', ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(18, 20))<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 14.65}, {'x': 'field', 'y': 14.65}, {'x': 'field', 'y': 14.65}, {'x': 'variable': '% of children who received DPT vaccinations', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt', color='#1f77b4')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atmospheric Air and Capital (less % of CMV)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atmospheric Air and Capital (less % of CMV)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31mCountry_name = 'South Asia'<0x0A>Country_axis = Country_name<0x0A><0x0A># Plot the Damage caused due to forest depletion in South Asia<0x0A>g = sns.catplot(x="Year", y="Cost (y) of GW)", data=df, height=15, aspect=1.5, palette="ch:.25", order=Country_axis)<0x0A>g.fig.suptitle('Damage caused due to forest depletion in South Asia', y=1.05, fontsize=16)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.85, wspace=0.3)<0x0A>g.fig.subplots_adjust(top=0.
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = pd.DataFrame({'Year':['2017', '2018', '2019', '2020'], 'Rating':[rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 14 [32m[1m | Loss :[39m[22m 2.6180453300476074



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:47<00:06,  6.24s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4386, 'y': 2960}, {'x': 5256, 'y': 4210}, {'x': 1280, 'y': 838}, {'x': 4386, 'y': 2960}, {'x': 5256, 'y': 4210}, {'x': 1280, 'y': 2960}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4200}, {'x': 'Dog', 'y': 6900}, {'x': 'Nike', 'y': 4190}, {'x': 'Apple', 'y': 6300}, {'x': 'Male', 'y': 6900}, {'x': 'Rock', 'y': 6900}, {'x': 'Sedan', 'y': 4200}, {'x': 'USA', 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 23.14}, {'x': 'Dog', 'y': 120.24}, {'x': 'Nike', 'y': 47.64}, {'x': 'Apple', 'y': 47.64}, {'x': 'Male', 'y': 23.14}, {'x': 'Rock', 'y': 23.14}, {'x': 'Sedan', 'y': 23.14}, {'x': 'Spanish', 'y': 47.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.42}, {'x': 'Red', 'y': 152.42}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.12}, {'x': 'USA', 'y': 8.3}, {'x': 'Dog', 'y': 8.3}, {'x': 'Nike', 'y': 12.12}, {'x': 'Apple', 'y': 3.92}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 13.3}, {'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 60.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6950, 'y': 42}, {'x': 8750, 'y': 112}, {'x': 6950, 'y': 364}, {'x': 2250, 'y': 364}, {'x': 2250, 'y': 364}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200.03}, {'x': 1920, 'y': 16.56}, {'x': 1925, 'y': 16.56}, {'x': 1930, 'y': 35.01}, {'x': 1931, 'y': 35.01}, {'x': 1932, 'y': 16.56}, {'x': 1936, 'y': 16.56}, {'x': 1940, 'y': 16.56}, {'x': 1941, 'y': 16.56}, {'x': 1942, 'y': 16.56}, {'x': 1944, 'y': 16.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 80.1}, {'x': 1816, 'y': 28.5}, {'x': 1817, 'y': 28.5}, {'x': 1818, 'y': 70.1}, {'x': 1819, 'y': 70.1}, {'x': 1822, 'y': 8.5}, {'x': 1827, 'y': 8.5}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.1}, {'x': 1868, 'y': 253.1}, {'x': 1870, 'y': 108.1}, {'x': 1878, 'y': 268.1}, {'x': 1882, 'y': 268.1}, {'x': 1889, 'y': 268.1}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788.13, 'y': 63.14}, {'x': 687.13, 'y': 56.14}, {'x': 687.13, 'y': 63.14}, {'x': 687.13, 'y': 24.14}, {'x': 687.13, 'y': 63.14}, {'x': 687.13, 'y': 56.14}, {'x': 687.13, 'y': 63.14}, {'x': 687.13, 'y': 24.14}, {'x': 687.13, 'y': 63.14}, {'x': 687.13, 'y': 63.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 600}, {'x': 1821, 'y': 128}, {'x': 1828, 'y': 28}, {'x': 1834, 'y': 128}, {'x': 1840, 'y': 108}, {'x': 1848, 'y': 311}, {'x': 1854, 'y': 311}, {'x': 1860, 'y': 148}, {'x': 1868, 'y': 148}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4550, 'y': 58.14}, {'x': 1455, 'y': 61.54}, {'x': 2455, 'y': 58.14}, {'x': 3255, 'y': 61.54}, {'x': 4555, 'y': 58.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2880}, {'x': 1926, 'y': 2880}, {'x': 1929, 'y': 2880}, {'x': 1930, 'y': 2880}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.14}, {'x': 1570, 'y': 42.14}, {'x': 1570, 'y': 38.14}, {'x': 1570, 'y': 42.14}, {'x': 1570, 'y': 38.14}, {'x': 1570, 'y': 38.14}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1460}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1460}, {'x': 'Nike', 'y': 1460}, {'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1460}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1805, 'y': 3626}, {'x': 1806, 'y': 3812}, {'x': 1807, 'y': 3626}, {'x': 1808, 'y': 3626}, {'x': 1809, 'y': 4266}, {'x': 1810, 'y': 4966}, {'x': 1813, 'y': 5750}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 1900}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 1900}, {'x': 1850, 'y': 3400}, {'x': 1855, 'y': 2000}, {'x': 1860, 'y': 1900}, {'x': 1870, 'y': 1900}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Exponential Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1280, 'y': 565.69}, {'x': 3200, 'y': 621.69}, {'x': 3200, 'y': 527.69}, {'x': 3200, 'y': 527.69}, {'x': 3200, 'y': 527.69}, {'x': 3200, 'y': 621.69}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:51<00:00,  5.60s/it]


















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [03:17<00:06,  6.45s/it]
[35m|[39m JSON to Vega conversion error rate: [31m95.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.78 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'data': {'x': 'field', 'y': 0.01}, {'x': 'field': 'Value', 'y': 0.01}, {'x': 'field': 'Value', 'y': 0.01}, {'x': 'field': 'Value', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a bar plot of the total unemployed youth population of Colombia<0x0A>ax.bar(x=col_df.index, height=col_df.total_unemployed_youth_population, color='skyblue', alpha=0.5)<0x0A><0x0A># Set the title and labels<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Unemployed youth % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of total labor force were % of
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihilomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.2}, {'x': 'y': 55.2}, {'x': 'x', 'y': 30.2}, {'x': 'y': 55.2}, {'x': 'x', 'y': 30.2}, {'x': 'y': 55.2}, {'x': 'x', 'y': 55.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 30))<0x0A><0x0A>sns.set(style="whitegrid")<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True, right=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(bottom=True, left
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_brazil['Year'], df_brazil['fertilizer_consumption_Brazil'])<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_brazil['Year'], df_brazil['fertilizer_consumption_Brazil'])<0x0A><0x0A># Adding a title<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A># Adding a x label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Adding a y label<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Saving the plot<0x0A>plt.savefig('fertilizer_consumption_Brazil.png')<0x0A><0x0A># Saving the plot<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'year', 'y': 40.64}, {'x': 'field', 'y': 47.64}, {'x': 'y': 12.75}, {'x': 'field', 'y': 12.75}, {'x': 'variable', 'y': 47.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the bar graph<0x0A><0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=df, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("Images/Net_bilateral_aid_flow_from_development_assistance_committee.png")<0x0A><0x0A># Show plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per hectare')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro['Year'] = grupo_bairro['Year'].astype('category')<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import os<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31mgrupo_df = grupo_df.sort_values('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.scatter(grupos['Year'], grupo_df['Distance to Frontier score (on scale of 100) of Armenia'])<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (integrated to 100/heating/heating/heating)')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A>ax.set_ylim(0, 100)<0x0A>ax.set_xticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size().reset_index()<0x0A>percentage_sr_lanka = percentage_sr_lanka.pivot(index='Year', columns='Country', values='Survived')<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by='Survived', ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(18, 20))<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 14.65}, {'x': 'field', 'y': 14.65}, {'x': 'field', 'y': 14.65}, {'x': 'variable': '% of children who received DPT vaccinations', 'type': 'quantitative'}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt', color='#1f77b4')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atheritage (14 % of CWD)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atheritage (14 % of CWD)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = pd.DataFrame({'Year':['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020'], 'Rating':[rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index]})<0x0A>graph.plot(kind='scatter', x='Year', y='Strength rating (12 ± 10000)', color='green', s=100, label='Rating regarding strength of legal rights index in Croatia')<0x0A>graph.xaxis.set_ticklabels(['Year', 'Year'])<0x0A>graph.yaxis.set_ticklabels(['Strength rating (12 ± 10000)', 'Strength rating (12 ± 10000)'])<0x0A>graph.xaxis.set_ticklabels(['Year', 'Year'])<0x0A>graph.grid(True, axis='y', color='black', alpha=0.25)<0x0A>graph.grid(False, axis='y', color='black', alpha=0.25)<0x0A>graph.xaxis.set_ticklabels(['Year', 'Year'])<0x0A>graph.xaxis.set_ticklabels(['Year', 'Strength rating (12 ± 10000)', 'Strength rating (12 ± 10000)'])<0x0A>graph.xaxis.set_ticklabels(['Year', 'Year'])<0x0A>graph.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.78 [35m|

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:29<00:00, 10.47s/it]
[36m[1mEpoch :[39m[22m 15 [32m[1m | Loss :[39m[22m 2.6495492458343506



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:53<00:07,  7.17s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4386, 'y': 2960}, {'x': 5256, 'y': 4210}, {'x': 1280, 'y': 838}, {'x': 4386, 'y': 2960}, {'x': 5256, 'y': 4210}, {'x': 4386, 'y': 2960}, {'x': 5256, 'y': 4210}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 697}, {'x': 'Rock', 'y': 697}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 23.14}, {'x': 'Dog', 'y': 120.24}, {'x': 'Nike', 'y': 47.64}, {'x': 'Apple', 'y': 47.64}, {'x': 'Male', 'y': 23.14}, {'x': 'Rock', 'y': 23.14}, {'x': 'Sedan', 'y': 23.14}, {'x': 'Spanish', 'y': 47.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.14}, {'x': 'Red', 'y': 152.14}, {'x': 'USA', 'y': 152.14}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.12}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.33}, {'x': 'Nike', 'y': 12.12}, {'x': 'Apple', 'y': 3.92}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 13.3}, {'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 60.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 6950, 'y': 42}, {'x': 8750, 'y': 112}, {'x': 6950, 'y': 364}, {'x': 2250, 'y': 364}, {'x': 6950, 'y': 364}, {'x': 8750, 'y': 112}, {'x': 6950, 'y': 42}, {'x': 6950, 'y': 364}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200}, {'x': 1919, 'y': 18.6}, {'x': 1921, 'y': 16.5}, {'x': 1926, 'y': 16.5}, {'x': 1929, 'y': 34.5}, {'x': 1931, 'y': 34.5}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 80.1}, {'x': 1816, 'y': 28.5}, {'x': 1817, 'y': 28.5}, {'x': 1818, 'y': 70.1}, {'x': 1819, 'y': 70.1}, {'x': 1820, 'y': 80.1}, {'x': 1822, 'y': 8.5}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.14}, {'x': 1866, 'y': 253.14}, {'x': 1870, 'y': 108.14}, {'x': 1876, 'y': 253.14}, {'x': 1880, 'y': 269.44}, {'x': 1887, 'y': 269.44}, {'x': 1890, 'y': 269.44}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788.11, 'y': 63.14}, {'x': 687.11, 'y': 56.14}, {'x': 687.11, 'y': 63.14}, {'x': 687.11, 'y': 24.14}, {'x': 687.11, 'y': 63.14}, {'x': 687.11, 'y': 56.14}, {'x': 687.11, 'y': 63.14}, {'x': 687.11, 'y': 24.14}, {'x': 687.11, 'y': 63.14}, {'x': 687.11, 'y': 63.14}, {'x': 687.11, 'y': 63.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 600}, {'x': 1821, 'y': 130}, {'x': 1828, 'y': 25}, {'x': 1834, 'y': 25}, {'x': 1840, 'y': 105}, {'x': 1847, 'y': 310}, {'x': 1854, 'y': 310}, {'x': 1859, 'y': 150}, {'x': 1865, 'y': 150}, {'x': 1870, 'y': 550}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 55.01}, {'x': 1488, 'y': 61.54}, {'x': 4488, 'y': 55.01}, {'x': 2488, 'y': 58.14}, {'x': 3248, 'y': 61.54}, {'x': 4488, 'y': 55.01}, {'x': 1488, 'y': 61.54}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1924, 'y': 2888}, {'x': 1926, 'y': 2888}, {'x': 1928, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 123.56, 'y': 37.54}, {'x': 123.56, 'y': 365.5}, {'x': 123.56, 'y': 42.54}, {'x': 123.56, 'y': 365.5}, {'x': 123.56, 'y': 365.5}, {'x': 123.56, 'y': 42.54}, {'x': 123.56, 'y': 365.5}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1460}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1460}, {'x': 'Nike', 'y': 1460}, {'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1460}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1805, 'y': 3616}, {'x': 1806, 'y': 3812}, {'x': 1807, 'y': 3616}, {'x': 1808, 'y': 3616}, {'x': 1809, 'y': 4266}, {'x': 1810, 'y': 4966}, {'x': 1813, 'y': 5750}, {'x': 1814, 'y': 5750}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 1900}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 1900}, {'x': 1847, 'y': 3400}, {'x': 1850, 'y': 1900}, {'x': 1855, 'y': 3400}, {'x': 1859, 'y': 1900}, {'x': 1860, 'y': 1900}, {'x': 1870, 'y': 1900}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Expert Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1280, 'y': 530}, {'x': 3200, 'y': 625}, {'x': 3200, 'y': 530}, {'x': 1280, 'y': 565}, {'x': 3200, 'y': 625}, {'x': 3200, 'y': 530}, {'x': 4000, 'y': 625}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:58<00:00,  5.93s/it]



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [03:16<00:07,  7.19s/it]
[35m|[39m JSON to Vega conversion error rate: [31m95.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.25 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.72 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'data': {'x': 'field', 'y': 0.01}, {'x': 'field': 'Value', 'y': 0.01}, {'x': 'field': 'Value', 'y': 0.01}, {'x': 'field': 'Value', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a bar plot of the total unemployed youth population of Colombia<0x0A>ax.bar(x=col_df.index, height=col_df.total_unemployed_youth_population, color='skyblue', alpha=0.5)<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Unemployed Youths of total labor force level 15-24')<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A><0x0A># Set the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_xticklabels(col_df.index, rotation='vertical')<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the title<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the title<0x0A>ax.set_xlim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the title<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_xlim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the x-axis limit
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihilomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.2}, {'x': 'y': 28.6}, {'x': 'x', 'y': 55.2}, {'x': 'y': 28.6}, {'x': 'x', 'y': 55.2}, {'x': 'y': 28.6}, {'x': 'x', 'y': 30.2}, {'x': 'y': 55.2}, {'x': 'x', 'y': 30.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 30))<0x0A><0x0A>sns.set(style="whitegrid")<0x0A><0x0A>g = sns.catplot(x="Year", y="Average land (hectares)", data=df, kind="bar", ax=ax)<0x0A>g.set_xticklabels(rotation=90)<0x0A>g.set_titles("{col_name}")<0x0A>g.set_xlabel("Year")<0x0A>g.set_ylabels("Average land (hectares)")<0x0A>g.set_titles("{col_name}")<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_brazil['Year'], df_brazil['fertilizer_consumption_Brazil'])<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df_brazil['Year'], df_brazil['fertilizer_consumption_Brazil'])<0x0A><0x0A># Adding a title<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A># Adding a x label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Adding a y label<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Saving the plot<0x0A>plt.savefig('fertilizer_consumption_Brazil.png')<0x0A><0x0A># Saving the plot<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 15.66}, {'x': 'field', 'y': 15.66}, {'x': 'variable', 'y': 47.66}, {'x': 'variable', 'y': 15.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 15.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the bar graph<0x0A><0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=df, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("./plotting/net_bilateral_aid_flow_from_development_assistance_committee.png")<0x0A><0x0A># Show plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia', 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import os<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31mgrupo_df = grupo_df.sort_values('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.scatter(grupos['Year'], grupo_df['Distance to Frontier score (on scale of 100) of Armenia'])<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (integrated to 100/heating/heating/heating)')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A>ax.set_ylim(0, 100)<0x0A>ax.set_xticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size().reset_index()<0x0A>percentage_sr_lanka = percentage_sr_lanka.pivot(index='Year', columns='Country', values='Survived')<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by='Survived', ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(18, 20))<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 14.65}, {'x': 'field', 'y': 14.65}, {'x': 'field', 'y': 14.65}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'data': {'x': 'Year', 'y': 14.65}, {'x': 'field', 'y': 14.65}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'y': 14.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt', color='#1f77b4')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atmospheric Air and Capital (less % of CMV)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atmospheric Air and Capital (less % of CMV)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'variable': 'Value', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = pd.DataFrame({'Year':['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020'], 'Rating':[rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index]})<0x0A>graph.plot(kind='scatter', x='Year', y='Strength rating (12 ± 10000)', color='green', s=100, label='Rating regarding strength of legal rights index in Croatia')<0x0A>graph.xaxis.set_ticklabels(['Year', 'Year'])<0x0A>graph.yaxis.set_ticklabels(['Strength rating (12 ± 10000)', 'Strength rating (12 ± 10000)'])<0x0A>graph.xaxis.set_ticklabels(['Year', 'Year'])<0x0A>graph.grid(True, axis='y', color='black', alpha=0.25)<0x0A>graph.grid(False, axis='y', color='black', alpha=0.25)<0x0A>graph.xaxis.set_ticklabels(['Year', 'Year'])<0x0A>graph.xaxis.set_ticklabels(['Year', 'Strength rating (12 ± 10000)', 'Strength rating (12 ± 10000)'])<0x0A>graph.xaxis.set_ticklabels(['Year', 'Year'])<0x0A>graph.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.25 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.72 [35m|

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:27<00:00, 10.40s/it]
[36m[1mEpoch :[39m[22m 16 [32m[1m | Loss :[39m[22m 2.656182289123535



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:56<00:06,  6.24s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5380, 'y': 4200}, {'x': 1280, 'y': 838}, {'x': 4380, 'y': 2960}, {'x': 5380, 'y': 4200}, {'x': 4380, 'y': 2960}, {'x': 5380, 'y': 4200}, {'x': 5380, 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 697}, {'x': 'Rock', 'y': 697}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 23.14}, {'x': 'Dog', 'y': 120.24}, {'x': 'Nike', 'y': 47.64}, {'x': 'Apple', 'y': 47.64}, {'x': 'Male', 'y': 23.14}, {'x': 'Rock', 'y': 23.14}, {'x': 'Sedan', 'y': 23.14}, {'x': 'Spanish', 'y': 47.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.45}, {'x': 'Red', 'y': 152.45}, {'x': 'USA', 'y': 152.45}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.12}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.12}, {'x': 'Apple', 'y': 3.92}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 13.3}, {'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 60.3}, {'x': 255.3, 'y': 60.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 752, 'y': 364.56}, {'x': 675, 'y': 41.56}, {'x': 875, 'y': 112.56}, {'x': 675, 'y': 364.56}, {'x': 875, 'y': 112.56}, {'x': 675, 'y': 41.56}, {'x': 675, 'y': 112.56}, {'x': 675, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200}, {'x': 1920, 'y': 16}, {'x': 1925, 'y': 16}, {'x': 1930, 'y': 35}, {'x': 1935, 'y': 16}, {'x': 1940, 'y': 16}, {'x': 1945, 'y': 16}, {'x': 1950, 'y': 35}, {'x': 1955, 'y': 16}, {'x': 1959, 'y': 16}, {'x': 1960, 'y': 16}, {'x': 1970, 'y': 16}, {'x': 1975, 'y': 16}, {'x': 1975, 'y': 16}, {'x': 1975, 'y': 16}, {'x': 1975, 'y': 16}, {'x': 1975, 'y': 16}, {'x': 1975, 'y': 16}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 80.1}, {'x': 1816, 'y': 28.5}, {'x': 1817, 'y': 48.5}, {'x': 1818, 'y': 70.1}, {'x': 1819, 'y': 80.1}, {'x': 1820, 'y': 8.5}, {'x': 1822, 'y': 8.5}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.14}, {'x': 1866, 'y': 253.14}, {'x': 1870, 'y': 108.14}, {'x': 1876, 'y': 253.14}, {'x': 1880, 'y': 269.44}, {'x': 1887, 'y': 269.44}, {'x': 1890, 'y': 269.44}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788.11, 'y': 63.14}, {'x': 687.11, 'y': 56.14}, {'x': 687.11, 'y': 63.14}, {'x': 687.11, 'y': 24.14}, {'x': 687.11, 'y': 24.14}, {'x': 687.11, 'y': 63.14}, {'x': 687.11, 'y': 56.14}, {'x': 687.11, 'y': 63.14}, {'x': 687.11, 'y': 23.84}, {'x': 687.11, 'y': 23.84}, {'x': 687.11, 'y': 63.14}, {'x': 687.11, 'y': 63.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.01}, {'x': 1821, 'y': 135.14}, {'x': 1828, 'y': 26.4}, {'x': 1835, 'y': 26.4}, {'x': 1840, 'y': 108.64}, {'x': 1847, 'y': 311.14}, {'x': 1854, 'y': 311.14}, {'x': 1860, 'y': 148.01}, {'x': 1867, 'y': 150.01}, {'x': 1870, 'y': 584.01}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 55.01}, {'x': 1488, 'y': 61.53}, {'x': 3488, 'y': 58.14}, {'x': 4488, 'y': 55.01}, {'x': 1488, 'y': 61.53}, {'x': 2488, 'y': 58.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1924, 'y': 2888}, {'x': 1927, 'y': 2888}, {'x': 1929, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.14}, {'x': 1570, 'y': 42.14}, {'x': 1570, 'y': 365.14}, {'x': 1570, 'y': 42.14}, {'x': 1570, 'y': 38.14}, {'x': 2200, 'y': 365.14}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1465}, {'x': 'Nike', 'y': 1465}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentled Analysis Of Yearly Weather In Normalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1805, 'y': 3616}, {'x': 1806, 'y': 3812}, {'x': 1807, 'y': 3616}, {'x': 1808, 'y': 3616}, {'x': 1810, 'y': 4966}, {'x': 1812, 'y': 4966}, {'x': 1813, 'y': 5758}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 1900}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 1900}, {'x': 1850, 'y': 3400}, {'x': 1855, 'y': 4900}, {'x': 1860, 'y': 1900}, {'x': 1870, 'y': 1900}, {'x': 1875, 'y': 3400}, {'x': 1880, 'y': 1900}, {'x': 1885, 'y': 1900}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Exponential Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1280, 'y': 530}, {'x': 3200, 'y': 625}, {'x': 3200, 'y': 530}, {'x': 1280, 'y': 565}, {'x': 3200, 'y': 625}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:00<00:00,  6.02s/it]



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [02:52<00:06,  6.09s/it]
[35m|[39m JSON to Vega conversion error rate: [31m95.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.78 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field': 'Year', 'type': 'quantitative'}}, 'data': {'x': 'field', 'y': 0.01}, {'x': 'field': 'Value', 'y': 0.01}, {'x': 'field': 'Value', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a bar plot of the total unemployed youth population of Colombia<0x0A>ax.bar(x=col_df.index, height=col_df.total_unemployed_youth_population, color='skyblue', alpha=0.5)<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Unemployed Youths of total labor force level 15-24')<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A><0x0A># Set the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_xticklabels(col_df.index, rotation='vertical')<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the title<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the title<0x0A>ax.set_xlim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the title<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_xlim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the y-axis limit
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihilomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.2}, {'x': 'y': 30.2}, {'x': 'x', 'y': 55.2}, {'x': 'y': 28.6}, {'x': 'x', 'y': 30.2}, {'x': 'y': 55.2}, {'x': 'x', 'y': 30.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 30))<0x0A><0x0A>sns.set(style="whitegrid")<0x0A><0x0A>g = sns.catplot(x="Year", y="Average land (hectares)", data=df, kind="bar", ax=ax)<0x0A>g.set_xticklabels(rotation=90)<0x0A>g.set_titles("{col_name}")<0x0A>g.set_xlabel("Year")<0x0A>g.set_ylabels("Average land (hectares)")<0x0A>g.set_titles("{col_name}")<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df['Year'], df['fertilizer consumption'])<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df['Year'], df['fertilizer consumption'])<0x0A><0x0A># Adding a title<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A># Labelling the x-axis<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Labelling the y-axis<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Displaying the plot<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'year', 'y': 40.61}, {'x': 'field', 'y': 47.61}, {'x': 'y': 12.71}, {'x': 'field', 'y': 37.61}, {'x': 'variable', 'y': 47.61}, {'x': 'field', 'y': 12.71}, {'x': 'variable', 'y': 47.61}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the bar graph<0x0A><0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=df, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("Images/Net_bilateral_aid_flow_from_development_assistance_committee.png")<0x0A><0x0A># Show plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Customs and other import duties (as % of tax revenue) of Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import os<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31mgrupo_df = grupo_df.sort_values('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.scatter(grupos['Year'], grupo_df['Distance to Frontier score (on scale of 100) of Armenia'])<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (integrated to 100/heating/heating/heating)')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A>ax.set_ylim(0, 100)<0x0A>ax.set_xticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A>percentage_sr_lanka.plot(kind='bar', title='Percentage of babies born with low-Birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=360)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 14.65}, {'x': 'field', 'y': 14.65}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'data': {'x': 'Year', 'y': 14.65}, {'x': 'field', 'y': 14.65}, {'x': 'variable': 'Percentage of children ages 12-23 months who received DPT vaccinations', 'y': 14.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt', color='#1f77b4')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.xticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atheritage (14 % of CWD)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atheritage (14 % of CWD)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'variable', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = pd.DataFrame({'Year':['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020'], 'Rating':[rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index]})<0x0A>graph.plot(kind='scatter', x='Year', y='Strength rating (12 ± 10000)', color='green', s=100, label='Rating regarding strength of legal rights index in Croatia')<0x0A>graph.xaxis.set_ticklabels(['Year', 'Year'])<0x0A>graph.yaxis.set_ticklabels(['Strength rating (12 ± 10000)', 'Strength rating (12 ± 10000)'])<0x0A>graph.xaxis.set_ticklabels(['Year', 'Year'])<0x0A>graph.grid(True, axis='y', color='black', alpha=0.25)<0x0A>graph.grid(False, axis='y', color='black', alpha=0.25)<0x0A>graph.xaxis.set_ticklabels(['Year', 'Year'])<0x0A>graph.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.33 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.78 [35m|

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:02<00:00,  9.13s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:58<00:07,  7.20s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4380, 'y': 2960}, {'x': 522, 'y': 4210}, {'x': 1280, 'y': 838}, {'x': 4380, 'y': 2960}, {'x': 522, 'y': 4210}, {'x': 4380, 'y': 2960}, {'x': 522, 'y': 4210}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 697}, {'x': 'Rock', 'y': 697}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 23.14}, {'x': 'Dog', 'y': 120.24}, {'x': 'Nike', 'y': 47.64}, {'x': 'Apple', 'y': 47.64}, {'x': 'Male', 'y': 23.14}, {'x': 'Rock', 'y': 23.14}, {'x': 'Sedan', 'y': 23.14}, {'x': 'Spanish', 'y': 47.64}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.14}, {'x': 'Red', 'y': 152.14}, {'x': 'USA', 'y': 152.14}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.07}, {'x': 'USA', 'y': 8.38}, {'x': 'Dog', 'y': 8.38}, {'x': 'Nike', 'y': 12.07}, {'x': 'Apple', 'y': 3.91}, {'x': 'Dog', 'y': 8.38}, {'x': 'Nike', 'y': 12.07}, {'x': 'Red', 'y': 12.07}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 152.5, 'y': 60.5}, {'x': 243.1, 'y': 13.5}, {'x': 243.1, 'y': 60.5}, {'x': 152.5, 'y': 57.5}, {'x': 243.1, 'y': 60.5}, {'x': 243.1, 'y': 60.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 752, 'y': 364.56}, {'x': 675, 'y': 41.59}, {'x': 875, 'y': 112.56}, {'x': 675, 'y': 364.56}, {'x': 875, 'y': 364.56}, {'x': 675, 'y': 112.56}, {'x': 675, 'y': 41.59}, {'x': 675, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200.03}, {'x': 1920, 'y': 16.56}, {'x': 1925, 'y': 16.56}, {'x': 1930, 'y': 35.01}, {'x': 1931, 'y': 35.01}, {'x': 1932, 'y': 16.56}, {'x': 1934, 'y': 16.56}, {'x': 1939, 'y': 35.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 80.1}, {'x': 1816, 'y': 28.5}, {'x': 1817, 'y': 68.5}, {'x': 1818, 'y': 79.8}, {'x': 1819, 'y': 80.1}, {'x': 1822, 'y': 8.5}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.14}, {'x': 1866, 'y': 253.14}, {'x': 1870, 'y': 108.14}, {'x': 1876, 'y': 253.14}, {'x': 1880, 'y': 269.64}, {'x': 1887, 'y': 269.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 788.11, 'y': 63.14}, {'x': 687.11, 'y': 56.14}, {'x': 687.11, 'y': 63.14}, {'x': 687.11, 'y': 24.14}, {'x': 687.11, 'y': 56.14}, {'x': 687.11, 'y': 63.14}, {'x': 687.11, 'y': 24.14}, {'x': 687.11, 'y': 63.14}, {'x': 687.11, 'y': 63.14}, {'x': 687.11, 'y': 24.14}, {'x': 687.11, 'y': 63.14}, {'x': 687.11, 'y': 63.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.01}, {'x': 1821, 'y': 135.14}, {'x': 1828, 'y': 26.44}, {'x': 1835, 'y': 26.44}, {'x': 1841, 'y': 108.64}, {'x': 1847, 'y': 311.14}, {'x': 1854, 'y': 311.14}, {'x': 1861, 'y': 148.64}, {'x': 1867, 'y': 150.01}, {'x': 1871, 'y': 584.01}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 55.01}, {'x': 1488, 'y': 61.14}, {'x': 3488, 'y': 58.14}, {'x': 4488, 'y': 55.01}, {'x': 1488, 'y': 61.14}, {'x': 2488, 'y': 58.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1924, 'y': 2888}, {'x': 1927, 'y': 2888}, {'x': 1929, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 37.54}, {'x': 1570, 'y': 40.06}, {'x': 1570, 'y': 365.8}, {'x': 1570, 'y': 40.06}, {'x': 1570, 'y': 365.8}, {'x': 1570, 'y': 365.8}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4266}, {'x': 1804, 'y': 4086}, {'x': 1805, 'y': 3616}, {'x': 1806, 'y': 3616}, {'x': 1807, 'y': 3616}, {'x': 1808, 'y': 3616}, {'x': 1810, 'y': 4960}, {'x': 1812, 'y': 4960}, {'x': 1813, 'y': 5750}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 1900}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 1900}, {'x': 1850, 'y': 3400}, {'x': 1855, 'y': 4900}, {'x': 1860, 'y': 1900}, {'x': 1870, 'y': 1900}, {'x': 1875, 'y': 3400}, {'x': 1880, 'y': 1900}, {'x': 1885, 'y': 1900}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Expert Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1280, 'y': 530}, {'x': 3200, 'y': 625}, {'x': 3200, 'y': 530}, {'x': 1280, 'y': 565}, {'x': 3200, 'y': 625}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:03<00:00,  6.17s/it]



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:04<00:00,  9.20s/it]
[35m|[39m JSON to Vega conversion error rate: [31m85.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.12 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.8 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable': 'Value', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m# Plot the total unemployed youth population of Colombia<0x0A><0x0A># Create a figure and axes<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Create a bar plot of the total unemployed youth population of Colombia<0x0A>ax.bar(x=col_df.index, height=col_df.total_unemployed_youth_population, color='skyblue', alpha=0.5)<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_ylabel('Unemployed Youths of total labor force level 15-24')<0x0A><0x0A># Set the title of the graph<0x0A>ax.set_title('Total unemployed youth population of Colombia')<0x0A><0x0A># Set the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Set the y-axis label<0x0A>ax.set_xticklabels(col_df.index, rotation='vertical')<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the title<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the title<0x0A>ax.set_xlim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the title<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_xlim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the x-axis limit<0x0A>ax.set_xlim(0, 1)<0x0A><0x0A># Set the y-axis limit<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Set the y-axis limit
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihilomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.2}, {'x': 'y', 'type': 'quantitative'}}, 'data': {'x': 'x', 'y': 55.2}, {'x': 'y', 'y': 30.2}, {'x': 'x', 'y': 55.2}, {'x': 'y', 'y': 30.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 30))<0x0A><0x0A>sns.set(style="whitegrid")<0x0A><0x0A>g = sns.catplot(x="Year", y="Average land (hectares)", data=df, kind="bar", ax=ax)<0x0A>g.set_xticklabels(rotation=90)<0x0A>g.set_titles("{col_name}")<0x0A>g.set_xlabel("Year")<0x0A>g.set_ylabels("Average land (hectares)")<0x0A>g.set_titles("{col_name}")<0x0A>g.fig.subplots_adjust(top=0.95)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df['Year'], df['fertilizer consumption'])<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df['Year'], df['fertilizer consumption'])<0x0A><0x0A># Adding a title<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A># Labelling the x-axis<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Labelling the y-axis<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Displaying the plot<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 15.66}, {'x': 'field', 'y': 15.66}, {'x': 'variable', 'y': 47.66}, {'x': 'variable', 'y': 15.66}, {'x': 'field', 'y': 47.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the bar graph<0x0A><0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=df, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.05, fontsize=16, y=1.05)<0x0A>g.set_xlabels("Year", fontsize=16)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", fontsize=16)<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Saving the plot<0x0A>plt.savefig("Images/Net_bilateral_aid_flow_from_development_assistance_committee.png", dpi=300, bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport_plot(df, 'Indonesia')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import os<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31mgrupo_df = grupo_df.sort_values('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.scatter(grupos['Year'], grupo_df['Distance to Frontier score (on scale of 100) of Armenia'])<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (integrated to 100/heating/heating/heating)')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A>ax.set_xticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A>percentage_sr_lanka.plot(kind='bar', title='Percentage of babies born with low-Birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 14.65}, {'x': 'field', 'y': 14.65}, {'x': 'variable', 'y': 14.65}, {'x': 'field', 'y': 14.65}, {'x': 'variable', 'y': 14.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt', color='#1f77b4')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.xticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atheritage (14 % of CWD)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atheritage (14 % of CWD)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'variable', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = pd.DataFrame({'Year':['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020'], 'Rating':[rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index]})<0x0A>graph.plot(kind='scatter', x='Year', y='Strength rating (12 ± 10000)', color='green', s=100, label='Rating regarding strength of legal rights index in Croatia', figsize=(20, 20))<0x0A>graph.xaxis.set_ticklabels(['Year', 'Year'])<0x0A>graph.yaxis.set_ticklabels(['Strength rating (12 ± 10000)', 'Strength rating (12 ± 10000)'])<0x0A>graph.xaxis.set_ticklabels(['Year', 'Year'])<0x0A>graph.grid(True, axis='y', color='black', alpha=0.25)<0x0A>graph.grid(True, axis='x', color='black', alpha=0.25)<0x0A>graph.xaxis.set_ticklabels(['Year', 'Year'])<0x0A>graph.xaxis.set_ticklabels(['Year', 'Strength rating (12 ± 10000)', 'Strength rating (12 ± 10000)'])<0x0A>graph.xaxis.set_ticklabels(['Year', 'Year'])<0x0A>graph.show()
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.12 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.8 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 18 [32m[1m | Loss :[39m[22m 2.1485726833343506



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:53<00:06,  6.44s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5380, 'y': 4200}, {'x': 1280, 'y': 838}, {'x': 4380, 'y': 2960}, {'x': 5380, 'y': 4200}, {'x': 4380, 'y': 2960}, {'x': 5380, 'y': 4200}, {'x': 5380, 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 697}, {'x': 'Rock', 'y': 697}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.21}, {'x': 'Nike', 'y': 48.14}, {'x': 'Apple', 'y': 48.14}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 23.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 48.14}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.14}, {'x': 'Red', 'y': 152.14}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.07}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.07}, {'x': 'Apple', 'y': 3.91}, {'x': 'Dog', 'y': 8.29}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 152.5, 'y': 60.5}, {'x': 243.8, 'y': 13.5}, {'x': 243.8, 'y': 60.5}, {'x': 152.5, 'y': 57.5}, {'x': 243.8, 'y': 60.5}, {'x': 243.8, 'y': 60.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7556, 'y': 364.56}, {'x': 6756, 'y': 41.59}, {'x': 8756, 'y': 112.56}, {'x': 6756, 'y': 364.56}, {'x': 2256, 'y': 364.56}, {'x': 2256, 'y': 364.56}, {'x': 6756, 'y': 112.56}, {'x': 6756, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200}, {'x': 1919, 'y': 19}, {'x': 1922, 'y': 16}, {'x': 1929, 'y': 16}, {'x': 1932, 'y': 36}, {'x': 1934, 'y': 36}, {'x': 1944, 'y': 16}, {'x': 1949, 'y': 16}, {'x': 1954, 'y': 16}, {'x': 1959, 'y': 16}, {'x': 1964, 'y': 16}, {'x': 1974, 'y': 16}, {'x': 1979, 'y': 16}, {'x': 1984, 'y': 16}, {'x': 1989, 'y': 16}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 80.1}, {'x': 1816, 'y': 28.5}, {'x': 1817, 'y': 68.5}, {'x': 1818, 'y': 79.8}, {'x': 1820, 'y': 8.5}, {'x': 1822, 'y': 8.5}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.1}, {'x': 1866, 'y': 253.1}, {'x': 1870, 'y': 108.1}, {'x': 1876, 'y': 253.1}, {'x': 1880, 'y': 269.4}, {'x': 1887, 'y': 269.4}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 63.53}, {'x': 612, 'y': 56.14}, {'x': 712, 'y': 63.53}, {'x': 612, 'y': 56.14}, {'x': 712, 'y': 63.53}, {'x': 612, 'y': 24.14}, {'x': 612, 'y': 24.14}, {'x': 612, 'y': 63.53}, {'x': 612, 'y': 63.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.01}, {'x': 1821, 'y': 135.14}, {'x': 1828, 'y': 26.44}, {'x': 1835, 'y': 26.44}, {'x': 1841, 'y': 108.64}, {'x': 1849, 'y': 311.14}, {'x': 1856, 'y': 311.14}, {'x': 1864, 'y': 148.01}, {'x': 1869, 'y': 150.01}, {'x': 1871, 'y': 584.01}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 55.01}, {'x': 1488, 'y': 61.14}, {'x': 3488, 'y': 58.1}, {'x': 4488, 'y': 55.01}, {'x': 1488, 'y': 61.14}, {'x': 3488, 'y': 61.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1924, 'y': 2888}, {'x': 1927, 'y': 2888}, {'x': 1929, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.14}, {'x': 1570, 'y': 41.14}, {'x': 1570, 'y': 365.8}, {'x': 1570, 'y': 41.14}, {'x': 1570, 'y': 38.14}, {'x': 2200, 'y': 365.8}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentled Analysis Of Yearly Weather In Normalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4276}, {'x': 1804, 'y': 4086}, {'x': 1805, 'y': 3616}, {'x': 1806, 'y': 3616}, {'x': 1807, 'y': 3616}, {'x': 1808, 'y': 3616}, {'x': 1810, 'y': 4960}, {'x': 1812, 'y': 4960}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 1900}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 1900}, {'x': 1850, 'y': 3400}, {'x': 1855, 'y': 4900}, {'x': 1860, 'y': 1900}, {'x': 1870, 'y': 1900}, {'x': 1875, 'y': 3400}, {'x': 1880, 'y': 1900}, {'x': 1885, 'y': 1900}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Exponential Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1880, 'y': 565.69}, {'x': 3240, 'y': 624.7}, {'x': 3240, 'y': 527.7}, {'x': 3240, 'y': 527.7}, {'x': 3240, 'y': 624.7}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:57<00:00,  5.90s/it]




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:33<00:00, 10.37s/it]
[35m|[39m JSON to Vega conversion error rate: [31m90.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.75 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable': 'Value', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31mgrupo_total_unemployed_pop_col_col = grupo_total_unemployed_pop_col.sort_values('Total unemployed youth population of Colombia', ascending=False)<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col.index, grouprio_total_unemployed_pop_col, color='#008755')<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col.index, grouprio_total_unemployed_pop_col, color='#008755')<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col.index, grouprio_total_unemployed_pop_col, color='#008755')<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col.index, grouprio_total_unemployed_pop_col, color='#008755')<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col.index, grouprio_total_unemployed_pop_col, color='#008755')<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col.index, grouprio_total_unemployed_pop_col, color='#008755')<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col.index, grouprio_total_unemployed_pop_col, color='#008755')<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col.index, grouprio_total_unemployed_pop_col, color='#008755')<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col.index, grouprio_total_unemployed_pop_col, color='#008755')<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col.index, grouprio_total_unemployed_pop_col, color='#008755')<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col.index, grouprio_total_unemployed_pop_col, color='#008755')<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col.index, grouprio_
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihilomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.2}, {'x': 'y', 'type': 'quantitative'}}, 'data': {'x': 'x', 'y': 55.2}, {'x': 'y', 'y': 30.2}, {'x': 'x', 'y': 55.2}, {'x': 'y', 'y': 30.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 30))<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df['Year'], df['fertilizer consumption'])<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df['Year'], df['fertilizer consumption'])<0x0A><0x0A># Adding a title<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A># Labelling the x-axis<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Labelling the y-axis<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Displaying the plot<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.66}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 15.66}, {'x': 'field', 'y': 15.66}, {'x': 'variable', 'y': 47.66}, {'x': 'field', 'y': 15.66}, {'x': 'variable', 'y': 47.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the bar graph<0x0A><0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=df, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.05, fontsize=16, y=1.05)<0x0A>g.set_xlabels("Year", fontsize=16)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", fontsize=16)<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Saving the plot<0x0A>plt.savefig("Images/Net_bilateral_aid_flow_from_development_assistance_committee.png", dpi=300, bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, ylabel, title, xlabel, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A># Create a bar plot of Customs and other import duties (as % of tax revenue) of Indonesia<0x0A>g = sns.catplot(x="Year", y="Sales", data=df, kind="bar", palette="Greens_d", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Customs and other import duties (as % of tax revenue) of Indonesia', y=1.05)<0x0A>g.set_xlabels('Year')<0x0A>g.set_ylabels('Sales')<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("Customs and other import duties (as % of tax revenue) of Indonesia")<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import csv<0x0A>import os<0x0A>import re<0x0A>import re.parse<0x0A>from re.parse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import re.parse<0x0A>from re.parse.reparse import
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31mgrupo_df = grupo_df.sort_values('Distance to Frontier score (on scale of 100) of Armenia')<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>ax.scatter(grupos['Year'], grupo_df['Distance to Frontier score (on scale of 100) of Armenia'])<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Score (integrated to 100/heating/heating/heating)')<0x0A>ax.set_title('Distance to Frontier score (on scale of 100) of Armenia')<0x0A>ax.set_xticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A>percentage_sr_lanka.plot(kind='bar', title='Percentage of babies born with low-Birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 10}, {'x': 'field', 'y': 72}, {'x': 'variable', 'type': 'quantitative'}}, 'data': {'x': 'field', 'y': 72}, {'x': 'variable', 'y': 10}, {'x': 'variable', 'y': 10}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt', color='#1f77b4')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atheritage (14 % of GHG)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atheritage (14 % of GHG)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 3.8}, {'x': 'field', 'y': 18.6}, {'x': 'field', 'y': 18.6}, {'x': 'variable', 'y': 18.6}, {'x': 'field', 'y': 18.6}, {'x': 'variable', 'y': 18.6}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = pd.DataFrame({'Year':['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020'], 'Rating':[rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index]})<0x0A>graph.plot(kind='scatter', x='Year', y='Strength rating (12 ± 10000)', color='green', s=100, label='Rating regarding strength of legal rights index in Croatia', figsize=(20, 20))<0x0A>graph.spines['right'].set_visible(False)<0x0A>graph.spines['top'].set_visible(False)<0x0A>graph.spines['bottom'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['bottom'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.75 [35m|

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:33<00:00, 10.68s/it]
[36m[1mEpoch :[39m[22m 19 [32m[1m | Loss :[39m[22m 2.433018207550049



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:47<00:06,  6.43s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5380, 'y': 4200}, {'x': 1280, 'y': 838}, {'x': 4380, 'y': 2960}, {'x': 5380, 'y': 4200}, {'x': 4380, 'y': 2960}, {'x': 5380, 'y': 4200}, {'x': 5380, 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 697}, {'x': 'Rock', 'y': 697}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.21}, {'x': 'Nike', 'y': 48.14}, {'x': 'Apple', 'y': 48.14}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 23.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 48.14}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.14}, {'x': 'Red', 'y': 152.14}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.07}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.07}, {'x': 'Apple', 'y': 3.86}, {'x': 'Dog', 'y': 8.29}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.8}, {'x': 255.3, 'y': 13.5}, {'x': 255.3, 'y': 60.8}, {'x': 157.5, 'y': 57.8}, {'x': 255.3, 'y': 60.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7556, 'y': 364.56}, {'x': 6756, 'y': 41.59}, {'x': 8756, 'y': 112.59}, {'x': 6756, 'y': 364.56}, {'x': 7556, 'y': 364.56}, {'x': 6756, 'y': 112.59}, {'x': 6756, 'y': 364.56}, {'x': 6756, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200.03}, {'x': 1919, 'y': 19.83}, {'x': 1922, 'y': 16.53}, {'x': 1929, 'y': 16.53}, {'x': 1932, 'y': 35.03}, {'x': 1934, 'y': 35.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 80.1}, {'x': 1816, 'y': 28.5}, {'x': 1817, 'y': 68.5}, {'x': 1818, 'y': 79.8}, {'x': 1820, 'y': 9.1}, {'x': 1822, 'y': 8.5}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.1}, {'x': 1866, 'y': 253.1}, {'x': 1870, 'y': 110.9}, {'x': 1876, 'y': 253.1}, {'x': 1880, 'y': 269.4}, {'x': 1886, 'y': 269.4}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 798, 'y': 63.59}, {'x': 698, 'y': 56.14}, {'x': 798, 'y': 63.59}, {'x': 698, 'y': 24.14}, {'x': 698, 'y': 63.59}, {'x': 698, 'y': 56.14}, {'x': 698, 'y': 24.14}, {'x': 698, 'y': 63.59}, {'x': 698, 'y': 63.59}, {'x': 698, 'y': 23.78}, {'x': 698, 'y': 63.59}, {'x': 698, 'y': 63.59}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.01}, {'x': 1818, 'y': 147.64}, {'x': 1824, 'y': 129.64}, {'x': 1828, 'y': 26.42}, {'x': 1834, 'y': 26.42}, {'x': 1838, 'y': 108.14}, {'x': 1846, 'y': 311.14}, {'x': 1852, 'y': 311.14}, {'x': 1858, 'y': 147.64}, {'x': 1865, 'y': 150.14}, {'x': 1869, 'y': 149.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 61.53}, {'x': 3248, 'y': 55.03}, {'x': 4488, 'y': 55.03}, {'x': 1488, 'y': 55.03}, {'x': 2488, 'y': 61.53}, {'x': 3248, 'y': 61.53}, {'x': 4488, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2890}, {'x': 1924, 'y': 2890}, {'x': 1928, 'y': 2890}, {'x': 1930, 'y': 2890}, {'x': 1932, 'y': 2890}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.14}, {'x': 1570, 'y': 41.14}, {'x': 1570, 'y': 365.8}, {'x': 1570, 'y': 41.14}, {'x': 1570, 'y': 38.14}, {'x': 2200, 'y': 365.8}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4276}, {'x': 1804, 'y': 4086}, {'x': 1805, 'y': 3616}, {'x': 1806, 'y': 3616}, {'x': 1807, 'y': 3616}, {'x': 1808, 'y': 3616}, {'x': 1810, 'y': 4964}, {'x': 1812, 'y': 4964}, {'x': 1813, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 1900}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 1900}, {'x': 1850, 'y': 3400}, {'x': 1855, 'y': 4900}, {'x': 1860, 'y': 1900}, {'x': 1870, 'y': 1900}, {'x': 1875, 'y': 3400}, {'x': 1880, 'y': 1900}, {'x': 1885, 'y': 1900}, {'x': 1890, 'y': 1900}, {'x': 1895, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Exponential Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1880, 'y': 565.69}, {'x': 3240, 'y': 624.79}, {'x': 3240, 'y': 527.79}, {'x': 3240, 'y': 527.79}, {'x': 3240, 'y': 624.79}, {'x': 3240, 'y': 565.69}, {'x': 3240, 'y': 527.79}, {'x': 3240, 'y': 527.79}, {'x': 3240, 'y': 527.79}, {'x': 3240, 'y': 527.79}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:58<00:00,  5.94s/it]



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [03:21<00:05,  5.60s/it]
[35m|[39m JSON to Vega conversion error rate: [31m85.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.85 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable': 'Value', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31mgrupo_total_unemployed_pop_col_col = grupo_total_unemployed_pop_col.sort_values('Total unemployed youth population of Colombia', ascending=False)<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col.index, grouprio_total_unemployed_pop_col, color='#008755')<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col.index, grouprio_total_unemployed_pop_col, color='#008755')<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col.index, grouprio_total_unemployed_pop_col, color='#008755')<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col.index, grouprio_total_unemployed_pop_col, color='#008755')<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col.index, grouprio_total_unemployed_pop_col, color='#008755')<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col.index, grouprio_total_unemployed_pop_col, color='#008755')<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col.index, grouprio_total_unemployed_pop_col, color='#008755')<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col.index, grouprio_total_unemployed_pop_col, color='#008755')<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col.index, grouprio_total_unemployed_pop_col, color='#008755')<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col.index, grouprio_total_unemployed_pop_col, color='#008755')<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col.index, grouprio_total_unemployed_pop_col, color='#008755')<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col.index, grouprio_
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihilomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.2}, {'x': 'y', 'y': 30.2}, {'x': 'x', 'y': 55.2}, {'x': 'y', 'y': 30.2}, {'x': 'x', 'y': 55.2}, {'x': 'y', 'y': 30.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 30))<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df['Year'], df['fertilizer consumption'])<0x0A><0x0A># Plotting the graph<0x0A>ax.plot(df['Year'], df['fertilizer consumption'])<0x0A><0x0A># Adding a title<0x0A>ax.set_title('Fertilizer consumption in Brazil as a percentage of production')<0x0A><0x0A># Labelling the x-axis<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Labelling the y-axis<0x0A>ax.set_ylabel('% of fertilizer production')<0x0A><0x0A># Displaying the plot<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'year', 'y': 40.61}, {'x': 'field', 'y': 47.61}, {'x': 'y': 12.75}, {'x': 'field', 'y': 37.61}, {'x': 'field', 'y': 47.61}, {'x': 'variable', 'y': 12.75}, {'x': 'variable', 'y': 12.75}, {'x': 'variable', 'y': 47.61}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the bar graph<0x0A><0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=df, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.05, fontsize=16, y=1.05)<0x0A>g.set_xlabels("Year", fontsize=16)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", fontsize=16)<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Saving the plot<0x0A>plt.savefig("Images/Net_bilateral_aid_flow_from_development_assistance_committee.png", dpi=300, bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, xlabel, ylabel, title, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of tax revenue) of Indonesia<0x0A># 1. Custom and other import duties (as % of tax revenue) of Indonesia<0x0A># 2. Custom and other import duties (as % of tax revenue) of Indonesia<0x0A># 3. Custom and other import duties (as % of tax revenue) of Indonesia<0x0A># 4. Custom and other import duties (as % of tax revenue) of Indonesia<0x0A># 5. Custom and other import duties (as % of tax revenue) of Indonesia<0x0A># 6. Custom and other import duties (as % of tax revenue) of Indonesia<0x0A># 7. Custom and other import duties (as % of tax revenue) of Indonesia<0x0A># 8. Custom and other import duties (as % of tax revenue) of Indonesia<0x0A># 9. Custom and other import duties (as % of tax revenue) of Indonesia<0x0A># 10. Custom and other import duties (as % of tax revenue) of Indonesia<0x0A># 11. Custom and other import duties (as % of tax revenue) of Indonesia<0x0A># 12. Custom and other import duties (as % of tax revenue) of Indonesia<0x0A># 13. Custom and other import duties (as % of tax revenue) of Indonesia<0x0A># 14. Custom and other import duties (as % of tax revenue)<0x0A># 15. Custom and other import duties (as % of tax revenue)<0x0A># 16. Custom and other import duties (as % of tax revenue)<0x0A># 17. Custom and other import duties (as % of tax revenue)<0x0A># 18. Custom and other import duties (as % of tax revenue)<0x0A># 19. Custom and other import duties (as % of tax revenue)<0x0A># 19. Custom and other import duties (as % of tax revenue)<0x0A># 10. Custom and other import duties (as % of tax revenue)<0x0A># 19. Custom and other import duties (as % of tax revenue)<0x0A># 10. Custom and other import duties (as % of tax revenue)<0x0A># 11. Custom and other import duties (as % of tax revenue)<0x0A># 10. Custom and other import duties (as % of tax revenue)<0x0A># 11. Custom and other import duties (as % of tax revenue)<0x0A># 10. Custom and other import duties (as % of tax revenue)<0x0A># 11. Custom and other import duties (as % of tax revenue)<0x0A># 10. Custom and other import duties
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(18, 20))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((intramental to
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A>percentage_sr_lanka.plot(kind='bar', title='Percentage of babies born with low-Birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 14.65}, {'x': 'field', 'y': 14.65}, {'x': 'variable', 'y': 14.65}, {'x': 'field', 'y': 14.65}, {'x': 'variable', 'y': 14.65}, {'x': 'field', 'y': 14.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(20, 20), title='Percentage of households in Russian Federation that uses iodized salt', color='#1f77b4')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atheritage (14 % of GHG)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atheritage (14 % of GHG)')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'variable', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = pd.DataFrame({'Year':['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020'], 'Rating':[rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index]})<0x0A>graph.plot(kind='scatter', x='Year', y='Strength rating (12 ± 10000)', color='green', s=100, label='Rating regarding strength of legal rights index in Croatia')<0x0A>graph.spines['right'].set_visible(False)<0x0A>graph.spines['top'].set_visible(False)<0x0A>graph.spines['bottom'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['bottom'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.85 [35m|

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:38<00:00, 10.95s/it]
[36m[1mEpoch :[39m[22m 20 [32m[1m | Loss :[39m[22m 2.5538976192474365



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:51<00:07,  7.10s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5556, 'y': 4200}, {'x': 1280, 'y': 838}, {'x': 4320, 'y': 2960}, {'x': 5556, 'y': 4200}, {'x': 1280, 'y': 838}, {'x': 5556, 'y': 4200}, {'x': 5556, 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 697}, {'x': 'Rock', 'y': 697}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.21}, {'x': 'Nike', 'y': 48.11}, {'x': 'Apple', 'y': 48.11}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 23.11}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 48.11}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.14}, {'x': 'Red', 'y': 152.14}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.07}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.07}, {'x': 'Apple', 'y': 3.86}, {'x': 'Dog', 'y': 8.29}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.8}, {'x': 255.3, 'y': 13.5}, {'x': 54.62, 'y': 60.8}, {'x': 153.69, 'y': 60.8}, {'x': 255.3, 'y': 60.8}, {'x': 153.69, 'y': 57.7}, {'x': 255.3, 'y': 60.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7556, 'y': 364.56}, {'x': 6756, 'y': 41.59}, {'x': 8756, 'y': 112.51}, {'x': 6756, 'y': 364.56}, {'x': 2256, 'y': 364.56}, {'x': 6756, 'y': 364.56}, {'x': 6756, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200}, {'x': 1919, 'y': 19}, {'x': 1922, 'y': 16}, {'x': 1929, 'y': 16}, {'x': 1932, 'y': 36}, {'x': 1934, 'y': 36}, {'x': 1944, 'y': 16}, {'x': 1949, 'y': 16}, {'x': 1952, 'y': 16}, {'x': 1956, 'y': 16}, {'x': 1962, 'y': 16}, {'x': 1967, 'y': 16}, {'x': 1974, 'y': 16}, {'x': 1979, 'y': 16}, {'x': 1984, 'y': 16}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 80.1}, {'x': 1816, 'y': 28.5}, {'x': 1817, 'y': 68.5}, {'x': 1818, 'y': 79.84}, {'x': 1820, 'y': 9.1}, {'x': 1822, 'y': 8.5}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 253.14}, {'x': 1866, 'y': 253.14}, {'x': 1870, 'y': 110.66}, {'x': 1876, 'y': 253.14}, {'x': 1880, 'y': 269.66}, {'x': 1886, 'y': 269.66}, {'x': 1890, 'y': 269.66}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 63.53}, {'x': 696, 'y': 56.14}, {'x': 696, 'y': 63.53}, {'x': 712, 'y': 24.14}, {'x': 696, 'y': 56.14}, {'x': 696, 'y': 63.53}, {'x': 696, 'y': 24.14}, {'x': 696, 'y': 63.53}, {'x': 696, 'y': 63.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 585.1}, {'x': 1821, 'y': 139.69}, {'x': 1828, 'y': 26.6}, {'x': 1835, 'y': 26.6}, {'x': 1841, 'y': 108.6}, {'x': 1849, 'y': 311.1}, {'x': 1856, 'y': 311.1}, {'x': 1865, 'y': 148.5}, {'x': 1869, 'y': 150.2}, {'x': 1870, 'y': 585.1}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 61.53}, {'x': 1488, 'y': 55.03}, {'x': 3488, 'y': 61.53}, {'x': 4488, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2890}, {'x': 1924, 'y': 2890}, {'x': 1928, 'y': 2890}, {'x': 1930, 'y': 2890}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 37.55}, {'x': 1570, 'y': 40.05}, {'x': 1570, 'y': 365.5}, {'x': 1570, 'y': 40.05}, {'x': 1570, 'y': 365.5}, {'x': 1570, 'y': 365.5}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentled Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4276}, {'x': 1804, 'y': 4086}, {'x': 1805, 'y': 3616}, {'x': 1806, 'y': 3616}, {'x': 1807, 'y': 3616}, {'x': 1808, 'y': 3616}, {'x': 1810, 'y': 4964}, {'x': 1812, 'y': 4964}, {'x': 1813, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 1900}, {'x': 1835, 'y': 4900}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 1900}, {'x': 1850, 'y': 1900}, {'x': 1855, 'y': 3400}, {'x': 1860, 'y': 1900}, {'x': 1870, 'y': 1900}, {'x': 1875, 'y': 3400}, {'x': 1880, 'y': 1900}, {'x': 1885, 'y': 1900}, {'x': 1890, 'y': 1900}, {'x': 1895, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Expert Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1430, 'y': 530}, {'x': 3200, 'y': 625}, {'x': 3200, 'y': 530}, {'x': 1430, 'y': 565}, {'x': 3200, 'y': 625}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:55<00:00,  5.76s/it]



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:54<00:00, 11.73s/it]
[35m|[39m JSON to Vega conversion error rate: [31m80.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.1 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.82 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable': 'Value', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31mgrupo_total_unemployed_pop_col = grupo_total_unemployed_pop_col.sort_values('Total unemployed youth population of Colombia', ascending=False)<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col['Year'], grouprio_total_unemployed_pop_col['Total unemployed youth population of Colombia'], color='#008755')<0x0A><0x0A># Plot<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col['Year'], grouprio_total_unemployed_pop_col['Total unemployed youth population of Colombia'], color='#008755')<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col['Year'], grouprio_total_unemployed_pop_col['Total unemployed youth population of Colombia'], color='#008755')<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihilomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.2}, {'x': 'y', 'y': 30.2}, {'x': 'x', 'y': 55.2}, {'x': 'y', 'y': 30.2}, {'x': 'x', 'y': 55.2}, {'x': 'y', 'y': 30.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 30))<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production', 'fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.65}, {'x': 'field', 'y': 47.65}, {'x': 'variable', 'y': 15.65}, {'x': 'field', 'y': 15.65}, {'x': 'variable', 'y': 47.65}, {'x': 'field', 'y': 15.65}, {'x': 'variable', 'y': 47.65}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("./plotting/net_bil_grenada_net_bilateral_aid_flow_from_development_assistance_committee.png")<0x0A><0x0A># Show plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', figsize=(15,15), color='red')<0x0A>Country_1
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, xlabel, ylabel, title, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># 1. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 2. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 3. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 4. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 5. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 6. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 7. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 8. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 9. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 10. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 11. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 12. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 13. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 14. Custom and other import duties (as % of revenue)<0x0A># 15. Custom and other import duties (as % of revenue)<0x0A># 16. Custom and other import duties (as % of revenue)<0x0A># 17. Custom and other import duties (as % of revenue)<0x0A># 18. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 18. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 10. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 10. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 10. Custom and other import duties (as % of revenue)<0x0A># 10. Custom and other import duties (as % of revenue)<0x0A># 10.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(18, 20))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((intramental to
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_birth_sr_lanka = percentage_birth_sr_lanka.sort_values(by='birth_year', ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 14.65}, {'x': 'field', 'y': 7.5}, {'x': 'field', 'y': 14.65}, {'x': 'variable', 'y': 14.65}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 14.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(15,15))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:53<00:00,  5.69s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5380, 'y': 4200}, {'x': 1280, 'y': 838}, {'x': 4380, 'y': 2960}, {'x': 5380, 'y': 4200}, {'x': 2280, 'y': 2110}, {'x': 4380, 'y': 2110}, {'x': 5380, 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 697}, {'x': 'Rock', 'y': 697}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1020}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.21}, {'x': 'Nike', 'y': 48.14}, {'x': 'Apple', 'y': 48.14}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 239.74}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 48.14}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.14}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.07}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.07}, {'x': 'Apple', 'y': 3.86}, {'x': 'Dog', 'y': 8.29}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.8}, {'x': 255.3, 'y': 13.5}, {'x': 54.62, 'y': 60.8}, {'x': 153.69, 'y': 60.8}, {'x': 255.3, 'y': 60.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 364.59}, {'x': 6750, 'y': 41.59}, {'x': 8550, 'y': 112.25}, {'x': 6750, 'y': 364.59}, {'x': 2250, 'y': 364.59}, {'x': 6750, 'y': 364.59}, {'x': 6750, 'y': 364.59}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200}, {'x': 1920, 'y': 16}, {'x': 1925, 'y': 16}, {'x': 1930, 'y': 36}, {'x': 1935, 'y': 16}, {'x': 1940, 'y': 16}, {'x': 1945, 'y': 16}, {'x': 1950, 'y': 16}, {'x': 1959, 'y': 36}, {'x': 1960, 'y': 16}, {'x': 1970, 'y': 16}, {'x': 1975, 'y': 16}, {'x': 1979, 'y': 16}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 59.14}, {'x': 1816, 'y': 28.53}, {'x': 1818, 'y': 70.64}, {'x': 1820, 'y': 80.02}, {'x': 1822, 'y': 8.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 253.14}, {'x': 1866, 'y': 253.14}, {'x': 1871, 'y': 108.14}, {'x': 1875, 'y': 253.14}, {'x': 1879, 'y': 270.28}, {'x': 1883, 'y': 270.28}, {'x': 1889, 'y': 270.28}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 63.59}, {'x': 696, 'y': 56.14}, {'x': 712, 'y': 63.59}, {'x': 696, 'y': 24.14}, {'x': 712, 'y': 63.59}, {'x': 696, 'y': 56.14}, {'x': 696, 'y': 24.14}, {'x': 696, 'y': 63.59}, {'x': 696, 'y': 63.59}, {'x': 696, 'y': 63.59}, {'x': 696, 'y': 23.88}, {'x': 696, 'y': 63.59}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 585.1}, {'x': 1821, 'y': 139.69}, {'x': 1828, 'y': 26.6}, {'x': 1836, 'y': 26.6}, {'x': 1841, 'y': 108.6}, {'x': 1849, 'y': 311.1}, {'x': 1856, 'y': 311.1}, {'x': 1865, 'y': 148.5}, {'x': 1870, 'y': 585.1}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 61.53}, {'x': 3248, 'y': 55.03}, {'x': 1488, 'y': 55.03}, {'x': 3248, 'y': 61.53}, {'x': 4488, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2890}, {'x': 1924, 'y': 2890}, {'x': 1928, 'y': 2890}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.14}, {'x': 1570, 'y': 41.06}, {'x': 1570, 'y': 365.8}, {'x': 1570, 'y': 41.06}, {'x': 22000, 'y': 365.8}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4276}, {'x': 1805, 'y': 3812}, {'x': 1808, 'y': 3616}, {'x': 1810, 'y': 4948}, {'x': 1813, 'y': 5760}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 2000}, {'x': 1835, 'y': 1900}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 3400}, {'x': 1850, 'y': 1900}, {'x': 1860, 'y': 3400}, {'x': 1870, 'y': 1900}, {'x': 1880, 'y': 1900}, {'x': 1890, 'y': 1900}, {'x': 1895, 'y': 3400}, {'x': 1899, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Expent Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1730, 'y': 530}, {'x': 3240, 'y': 625}, {'x': 3240, 'y': 530}, {'x': 3240, 'y': 625}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:52<00:00, 11.62s/it]
[35m|[39m JSON to Vega conversion error rate: [31m85.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.85 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable': 'Value', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31mgrupo_total_unemployed_pop_col = grupo_total_unemployed_pop_col.sort_values('Total unemployed youth population of Colombia', ascending=False)<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col['Year'], grouprio_total_unemployed_pop_col['Total unemployed youth population of Colombia'], color='#008755')<0x0A><0x0A># Plot<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col['Year'], grouprio_total_unemployed_pop_col['Total unemployed youth population of Colombia'], color='#008755')<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col['Year'], grouprio_total_unemployed_pop_col['Total unemployed youth population of Colombia'], color='#008755')<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihilomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.2}, {'x': 'y', 'y': 30.2}, {'x': 'x', 'y': 55.2}, {'x': 'y', 'y': 30.2}, {'x': 'x', 'y': 55.2}, {'x': 'y', 'y': 30.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 30))<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production', 'fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>g = grupo_bairro.plot(kind='line', x='Year', y='Number of Days', color='black', <0x0A>                   title='Time required to register a property in Sanoa', figsize=(15, 20), fontsize=15)<0x0A>g.set_xlabel('Year')<0x0A>g.set_ylabel('Number of Days')<0x0A>g.set_xticklabels(['Year', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'year', 'y': 40.61}, {'x': 'field', 'y': 47.61}, {'x': 'y': 12.61}, {'x': 'field', 'y': 37.61}, {'x': 'field', 'y': 47.61}, {'x': 'variable', 'y': 12.61}, {'x': 'variable', 'y': 12.61}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee")<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("net_bil_grenada_net_bilateral_aid_flow_Grenada_from_development_assistance_committee.png")<0x0A><0x0A># Show plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, xlabel, ylabel, title, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># 1. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 2. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 3. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 4. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 5. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 6. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 7. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 8. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 9. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 10. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 11. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 12. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 13. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 14. Custom and other import duties (as % of revenue)<0x0A># 15. Custom and other import duties (as % of revenue)<0x0A># 16. Custom and other import duties (as % of revenue)<0x0A># 17. Custom and other import duties (as % of revenue)<0x0A># 18. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 10. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 10. Custom and other import duties (as % of revenue)<0x0A># 11. Custom and other import duties (as % of revenue)<0x0A># 10. Custom and other import duties (as % of revenue)<0x0A># 11. Custom and other import duties (as % of revenue)<0x0A># 10. Custom and other import duties (as % of revenue)<0x0A># 11. Custom and other import duties (as % of revenue)<0x0A># 10. Custom and other import duties (as % of revenue)<0x0A># 11.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((intramental to
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_birth_sr_lanka = percentage_birth_sr_lanka.sort_values(by='birth_year', ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 10}, {'x': 'field', 'y': 72}, {'x': 'variable', 'y': 10}, {'x': 'field', 'y': 72}, {'x': 'variable', 'y': 10}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(15,15))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df.plot(kind='scatter', x='Year', y='Consumption of Atheritage (14 % of GHG)', figsize=(20,20), color='green')<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Atheritage (14 % of GHG)')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'variable', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = pd.DataFrame({'Year':['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020'], 'Rating':[rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index]})<0x0A>graph.plot(kind='scatter', x='Year', y='Strength rating (12 ± 10000)', color='green', s=100, label='Rating regarding strength of legal rights index in Croatia')<0x0A>graph.spines['right'].set_visible(False)<0x0A>graph.spines['top'].set_visible(False)<0x0A>graph.spines['bottom'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['bottom'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.85 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:00<00:00,  6.04s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5556, 'y': 4200}, {'x': 1280, 'y': 838}, {'x': 4320, 'y': 2960}, {'x': 5556, 'y': 4200}, {'x': 2280, 'y': 2110}, {'x': 4320, 'y': 2110}, {'x': 5556, 'y': 4200}, {'x': 5556, 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 697}, {'x': 'Rock', 'y': 697}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}, {'x': 'Red', 'y': 996}, {'x': 'USA', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.21}, {'x': 'Nike', 'y': 48.11}, {'x': 'Apple', 'y': 48.11}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 239.74}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 48.11}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.14}, {'x': 'Red', 'y': 152.14}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.07}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.07}, {'x': 'Apple', 'y': 3.86}, {'x': 'Dog', 'y': 8.29}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 154.18, 'y': 60.78}, {'x': 243.18, 'y': 13.56}, {'x': 243.18, 'y': 60.78}, {'x': 154.18, 'y': 57.64}, {'x': 243.18, 'y': 60.78}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 364.56}, {'x': 6750, 'y': 41.59}, {'x': 755, 'y': 364.56}, {'x': 6750, 'y': 114.14}, {'x': 755, 'y': 364.56}, {'x': 6750, 'y': 364.56}, {'x': 6750, 'y': 114.14}, {'x': 6750, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1915, 'y': 200.03}, {'x': 1919, 'y': 19.83}, {'x': 1922, 'y': 16.58}, {'x': 1929, 'y': 16.58}, {'x': 1932, 'y': 36.03}, {'x': 1934, 'y': 36.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 59.14}, {'x': 1816, 'y': 28.53}, {'x': 1818, 'y': 70.64}, {'x': 1820, 'y': 9.21}, {'x': 1822, 'y': 8.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 253.1}, {'x': 1866, 'y': 253.1}, {'x': 1869, 'y': 253.1}, {'x': 1871, 'y': 108.1}, {'x': 1875, 'y': 253.1}, {'x': 1879, 'y': 253.1}, {'x': 1882, 'y': 269.47}, {'x': 1886, 'y': 269.47}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712.7, 'y': 63.79}, {'x': 697.2, 'y': 56.2}, {'x': 697.2, 'y': 63.79}, {'x': 697.2, 'y': 24.14}, {'x': 490.2, 'y': 16.22}, {'x': 697.2, 'y': 63.79}, {'x': 697.2, 'y': 52.18}, {'x': 697.2, 'y': 63.79}, {'x': 697.2, 'y': 24.14}, {'x': 697.2, 'y': 63.79}, {'x': 697.2, 'y': 16.22}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 585.1}, {'x': 1821, 'y': 139.69}, {'x': 1828, 'y': 26.6}, {'x': 1836, 'y': 26.6}, {'x': 1841, 'y': 108.6}, {'x': 1849, 'y': 311.1}, {'x': 1856, 'y': 311.1}, {'x': 1865, 'y': 148.5}, {'x': 1869, 'y': 150.2}, {'x': 1870, 'y': 585.1}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 61.53}, {'x': 3248, 'y': 55.03}, {'x': 4488, 'y': 55.03}, {'x': 1488, 'y': 55.03}, {'x': 2488, 'y': 78.74}, {'x': 3248, 'y': 61.53}, {'x': 4488, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2890}, {'x': 1924, 'y': 2890}, {'x': 1928, 'y': 2890}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.14}, {'x': 1570, 'y': 40.2}, {'x': 1570, 'y': 365.8}, {'x': 1570, 'y': 40.2}, {'x': 1570, 'y': 365.8}, {'x': 1570, 'y': 38.14}, {'x': 22000, 'y': 365.8}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1805, 'y': 3812}, {'x': 1806, 'y': 3616}, {'x': 1807, 'y': 3616}, {'x': 1808, 'y': 3616}, {'x': 1810, 'y': 4964}, {'x': 1812, 'y': 4964}, {'x': 1813, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 1900}, {'x': 1835, 'y': 4900}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 1900}, {'x': 1850, 'y': 3400}, {'x': 1855, 'y': 4900}, {'x': 1860, 'y': 1900}, {'x': 1870, 'y': 1900}, {'x': 1875, 'y': 3400}, {'x': 1880, 'y': 1900}, {'x': 1885, 'y': 1900}, {'x': 1890, 'y': 1900}, {'x': 1895, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1430, 'y': 527.8}, {'x': 3430, 'y': 624.8}, {'x': 3430, 'y': 527.8}, {'x': 1430, 'y': 527.8}, {'x': 3430, 'y': 624.8}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:29<00:00, 10.50s/it]
[35m|[39m JSON to Vega conversion error rate: [31m75.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.79 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31mgrupo_total_unemployed_pop_col = grupo_total_unemployed_pop_col.sort_values('Total unemployed youth population of Colombia', ascending=False)<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col['Year'], grouprio_total_unemployed_pop_col['Total unemployed youth population of Colombia'], color='#008755')<0x0A><0x0A># Plot<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.plot(grouprio_total_unemployed_pop_col['Year'], grouprio_total_unemployed_pop_col['Total unemployed youth population of Colombia'], color='#008755')<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.spines['left'].set_visible(False
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of trilliummonial discolorants)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.14}, {'x': 'y', 'y': 30.1}, {'x': 'x', 'y': 55.14}, {'x': 'y', 'y': 30.1}, {'x': 'x', 'y': 55.14}, {'x': 'y', 'y': 30.1}, {'x': 'x', 'y': 55.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plot
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>grupos = grupo_bairro.sort_values
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.55}, {'x': 'field', 'y': 40.55}, {'x': 'variable', 'y': 12.55}, {'x': 'field', 'y': 40.55}, {'x': 'variable', 'y': 12.55}, {'x': 'field', 'y': 40.55}, {'x': 'variable', 'y': 12.55}, {'x': 'variable', 'y': 40.55}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year", labelpad=15)<0x0A>g.set_ylabels("AID flow (Avg. US$) from Development Assistance Committee")<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("./Images/net_bil_grenada_net_bilateral_aid_flow_Grenada.png", dpi=300, bbox_inches='tight')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per hectare')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, xlabel, ylabel, title, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># 1. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 2. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 3. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 4. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 5. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 6. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 7. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 8. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 9. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 10. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 11. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 12. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 13. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 14. Custom and other import duties (as % of revenue)<0x0A># 15. Custom and other import duties (as % of revenue)<0x0A># 16. Custom and other import duties (as % of revenue)<0x0A># 17. Custom and other import duties (as % of revenue)<0x0A># 18. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 10. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 10. Custom and other import duties (as % of revenue)<0x0A># 11. Custom and other import duties (as % of revenue)<0x0A># 10. Custom and other import duties (as % of revenue)<0x0A># 11. Custom and other import duties (as % of revenue)<0x0A># 10. Custom and other import duties (as % of revenue)<0x0A># 11. Custom and other import duties (as % of revenue)<0x0A># 10. Custom and other import duties (as % of revenue)<0x0A># 11.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/rockhopper)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 1001}, {'x': 'field', 'y': 1001}, {'x': 'variable', 'type': 'quantitative'}}, 'data': {'x': 'variable', 'type': 'quantitative'}}, 'y': 1001}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A>percentage_sr_lanka.plot(kind='bar', title='Percentage of babies born with low-Birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 10}, {'x': 'field', 'y': 72}, {'x': 'variable', 'y': 10}, {'x': 'field', 'y': 72}, {'x': 'variable', 'y': 10}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(15,15))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A>grupos = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A>grupos.plot(kind='scatter', x='Year', y='ConvertedCompensationOfAllAndCapital(Per$ % of GWO)', color='green', figsize=(15, 15))<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Allied Capital (Per $ % of GWO)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'field', 'y': 18.64}, {'x': 'variable', 'y': 18.64}, {'x': 'field', 'y': 18.64}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = pd.DataFrame({'Year':['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020'], 'Rating':[rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index]})<0x0A>graph.plot(kind='scatter', x='Year', y='Strength rating (12 ± 10000)', color='green', s=100, label='Rating regarding strength of legal rights index in Croatia', figsize=(15,15))<0x0A>graph.spines['right'].set_visible(False)<0x0A>graph.spines['top'].set_visible(False)<0x0A>graph.spines['bottom'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['bottom'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.79 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 23 [32m[1m | Loss :[39m[22m 2.1424036026000977



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:46<00:00,  5.34s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5380, 'y': 4200}, {'x': 1280, 'y': 838}, {'x': 4380, 'y': 2960}, {'x': 5380, 'y': 4200}, {'x': 2280, 'y': 2110}, {'x': 4380, 'y': 2110}, {'x': 5380, 'y': 4200}, {'x': 5380, 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 697}, {'x': 'Rock', 'y': 697}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.21}, {'x': 'Nike', 'y': 48.11}, {'x': 'Apple', 'y': 48.11}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 239.74}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 48.11}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 152.15}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.01}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.01}, {'x': 'Apple', 'y': 3.86}, {'x': 'Dog', 'y': 8.29}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 154.18, 'y': 60.78}, {'x': 243.18, 'y': 13.56}, {'x': 243.18, 'y': 60.78}, {'x': 154.18, 'y': 60.78}, {'x': 243.18, 'y': 60.78}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 364.56}, {'x': 6750, 'y': 41.59}, {'x': 755, 'y': 364.56}, {'x': 6750, 'y': 114.14}, {'x': 755, 'y': 364.56}, {'x': 6750, 'y': 364.56}, {'x': 2750, 'y': 364.56}, {'x': 6750, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 200}, {'x': 1919, 'y': 198}, {'x': 1924, 'y': 16}, {'x': 1928, 'y': 16}, {'x': 1929, 'y': 36}, {'x': 1932, 'y': 36}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 80.12}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 68.52}, {'x': 1820, 'y': 9.22}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1860, 'y': 252.5}, {'x': 1866, 'y': 252.5}, {'x': 1870, 'y': 110.69}, {'x': 1876, 'y': 268.69}, {'x': 1882, 'y': 268.69}, {'x': 1889, 'y': 268.69}, {'x': 1895, 'y': 268.69}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 63.59}, {'x': 696, 'y': 56.14}, {'x': 712, 'y': 63.59}, {'x': 696, 'y': 24.14}, {'x': 712, 'y': 63.59}, {'x': 696, 'y': 56.14}, {'x': 712, 'y': 23.88}, {'x': 712, 'y': 63.59}, {'x': 696, 'y': 63.59}, {'x': 696, 'y': 23.88}, {'x': 712, 'y': 63.59}, {'x': 696, 'y': 63.59}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 585.1}, {'x': 1821, 'y': 139.69}, {'x': 1828, 'y': 26.4}, {'x': 1835, 'y': 26.4}, {'x': 1841, 'y': 108.6}, {'x': 1849, 'y': 311.4}, {'x': 1856, 'y': 311.4}, {'x': 1865, 'y': 148.5}, {'x': 1870, 'y': 585.1}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 61.53}, {'x': 3248, 'y': 55.03}, {'x': 1488, 'y': 55.03}, {'x': 3248, 'y': 61.53}, {'x': 4488, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2890}, {'x': 1924, 'y': 2890}, {'x': 1928, 'y': 2890}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.14}, {'x': 1570, 'y': 40.2}, {'x': 1570, 'y': 365.8}, {'x': 1570, 'y': 40.2}, {'x': 2200, 'y': 365.8}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentled Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1805, 'y': 3616}, {'x': 1808, 'y': 3616}, {'x': 1810, 'y': 4924}, {'x': 1812, 'y': 4924}, {'x': 1814, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1825, 'y': 3400}, {'x': 1830, 'y': 1900}, {'x': 1835, 'y': 4900}, {'x': 1840, 'y': 3400}, {'x': 1845, 'y': 1900}, {'x': 1850, 'y': 3400}, {'x': 1860, 'y': 1900}, {'x': 1870, 'y': 3400}, {'x': 1880, 'y': 1900}, {'x': 1890, 'y': 1900}, {'x': 1895, 'y': 3400}, {'x': 1899, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1430, 'y': 527.8}, {'x': 3240, 'y': 624.8}, {'x': 3240, 'y': 527.8}, {'x': 1430, 'y': 527.8}, {'x': 3240, 'y': 624.8}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:31<00:00, 10.58s/it]
[35m|[39m JSON to Vega conversion error rate: [31m80.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.79 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31mgrupo_total_unemployed_pop_col = grupo_total_unemployed_pop_col.sort_values('Total unemployed youth population of Colombia', ascending=False)<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15, 15))<0x0A>ax.plot(groupe_total_unemployed_pop_col['Year'], groupe_total_unemployed_pop_col['Total unemployed youth population of Colombia'], color='#1f77b4')<0x0A>ax.set_ylabel('Unemployed Youth Population of Colombia', fontsize=18)<0x0A>ax.set_xlabel('Year', fontsize=18)<0x0A>ax.set_xticklabels(['Year', 'Year'], rotation=90)<0x0A>ax.set_yticklabels(['Total unemployed youth population of Colombia'], fontsize=18)<0x0A>ax.set_ylim(0, 1)<0x0A>ax.set_yticklabels(['Total unemployed youth population of Colombia'], fontsize=18)<0x0A>ax.set_xticklabels(['Year', 'Year'], fontsize=18)<0x0A>ax.set_yticklabels(['Total unemployed youth population of Colombia'], fontsize=18)<0x0A>ax.set_yticklabels(['Total unemployed youth population of Colombia'], fontsize=18)<0x0A>ax.set_yticklabels(['Total unemployed youth population of Colombia'], fontsize=18)<0x0A>ax.set_yticklabels(['Total unemployed youth population of Colombia'], fontsize=18)<0x0A>ax.grid(axis='x', axis='both', color='grey', alpha=0.5)<0x0A>ax.set_yticklabels(['Total unemployed youth population of Colombia'], fontsize=18)<0x0A>ax.set_yticklabels(['Total unemployed youth population of Colombia'], fontsize=18)<0x0A>ax.set_yticklabels(['Total unemployed youth population of Colombia'], fontsize=18)<0x0A>ax.set_yticklabels(['Total unemployed youth population of Colombia'], fontsize=18)<0x0A>ax.set_yticklabels(['Total unemployed youth population of Colombia'], fontsize=18)<0x0A>ax.set_yticklabels(['Total unemployed youth population of Colombia'], fontsize=18)<0x0A>ax.set_yticklabels(['Total unemployed youth population of Colombia'], fontsize=18)<0x0A>ax.set_yticklabels(['Total unemployed youth population of Colombia'], fontsize=18)<0x0A>ax.set_yticklabels(['Total unemployed youth population of Colombia'], fontsize=18)<0x0A>ax.set_yticklabels(['Total unemployed youth population of Colombia'], fontsize=18)<0x0A>ax.set_yticklabels(['Total unemployed youth
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of trilliummonial discolorants)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.14}, {'x': 'field', 'y': 30.1}, {'x': 'field', 'y': 55.14}, {'x': 'variable', 'type': 'quantitative'}}, 'data': {'x': 'variable', 'type': 'quantitative'}}, 'y': 55.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plot
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>g = grupo_bairro.plot(kind='line', x='Year', y='Number of Days', color='black', <0x0A>                   title='Time required to register a property in Sanoa', figsize=(15, 15))<0x0A><0x0A>g.set_xlabel('Year')<0x0A>g.set_ylabel('Number of Days')<0x0A><0x0A>g.set_title('Time required to register a property in Sanoa')<0x0A>g.set_xticklabels(['Year', 'Year'])<0x0A>g.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>g.set_xticklabels(['Year', 'Year'])<0x0A>g.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>g.set_ylim(0, 160)<0x0A>g.set_xlim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_xticklabels(['Year', 'Year'])<0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylabel('Number of Days')<0x0A>g.set_ylabel('Number of Days')<0x0A>g.set_xlim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_xticklabels(['Year', 'Year'])<0x0A>g.set_yticklabels(['Year', 'Year'])<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 1
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 40.61}, {'x': 'field', 'y': 37.56}, {'x': 'variable', 'y': 12.61}, {'x': 'field', 'y': 47.61}, {'x': 'variable', 'y': 12.61}, {'x': 'field', 'y': 47.61}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Create a bar plot of the bill of the year and year of the bill of the year<0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=df, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xticklabels(rotation=90)<0x0A>g.fig.set_size_inches(15,15)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.05, x=0.55, x=0.55, fontsize=16, y=0.95)<0x0A><0x0A># Add labels to the x-axis<0x0A>g.set_xticklabels(rotation=90)<0x0A><0x0A># Add labels to the y-axis<0x0A>g.set_ylabel("AID flow from Development Assistance Committee", fontsize=16)<0x0A>g.set_xlabel("Year", fontsize=16)<0x0A>g.set_title("Net bilateral aid flow of Grenada from Development Assistance Committee", fontsize=16)<0x0A><0x0A># Save the figure<0x0A>plt.savefig("graphs/grenada_bill_grenada_grenad.png")<0x0A><0x0A># Show plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['Yield','Yield','Country'].count().sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.sort_values(ascending=False)<0x0A>Country_1981 = Country_1981.reset_index()<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='blue')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='green')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red')<0x0A>Country_1981.plot(kind='bar', title='Cereal yield in different countries as per the survey of 1981', color='red')<0x0A>Country_1981.plot(kind='bar'
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, xlabel, ylabel, title, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A><0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A># 1. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 2. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 3. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 4. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 5. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 6. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 7. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 8. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 9. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 10. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 11. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 12. Custom and other import duties (as % of revenue) of Indonesia<0x0A># 13. Custom and other import duties (as % of revenue)<0x0A># 14. Custom and other import duties (as % of revenue)<0x0A># 15. Custom and other import duties (as % of revenue)<0x0A># 16. Custom and other import duties (as % of revenue)<0x0A># 17. Custom and other import duties (as % of revenue)<0x0A># 18. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 10. Custom and other import duties (as % of revenue)<0x0A># 19. Custom and other import duties (as % of revenue)<0x0A># 10. Custom and other import duties (as % of revenue)<0x0A># 11. Custom and other import duties (as % of revenue)<0x0A># 10. Custom and other import duties (as % of revenue)<0x0A># 11. Custom and other import duties (as % of revenue)<0x0A># 10. Custom and other import duties (as % of revenue)<0x0A># 11. Custom and other import duties (as % of revenue)<0x0A># 10. Custom and other import duties (as % of revenue)<0x0A># 11. Custom and other import duties (as % of revenue)<0x0A># 10. Custom and
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to rotational velocity/accumulation)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 103.65}, {'x': 'field', 'y': 103.65}, {'x': 'y': 103.65}, {'x': 'field', 'y': 103.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A>percentage_sr_lanka.plot(kind='bar', title='Percentage of babies born with low-Birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 10}, {'x': 'field', 'y': 72}, {'x': 'variable', 'y': 10}, {'x': 'field', 'y': 72}, {'x': 'variable', 'y': 10}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(15,15))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A>grupos = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A>grupos.plot(kind='scatter', x='Year', y='ConvertedConverted', color='green', figsize=(15, 15))<0x0A>plt.title('Capital used up in the process of production in United Kingdom')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Consumption of Ather Capital (set % of CWD)' % grupo_df['ConvertedConverted'].sum())<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = pd.DataFrame({'Year':['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020'], 'Rating':[rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index]})<0x0A>graph.plot(kind='scatter', x='Year', y='Strength rating (12 ± 10000)', color='green', s=100, label='Rating regarding strength of legal rights index in Croatia', figsize=(15,15))<0x0A>graph.spines['right'].set_visible(False)<0x0A>graph.spines['top'].set_visible(False)<0x0A>graph.spines['bottom'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['right'].set_visible(False)<0x0A>graph.spines['bottom'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.79 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:49<00:00,  5.50s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4200}, {'x': 1994, 'y': 838}, {'x': 4640, 'y': 2960}, {'x': 5580, 'y': 4200}, {'x': 2288, 'y': 2110}, {'x': 4640, 'y': 2960}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 697}, {'x': 'Rock', 'y': 697}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.21}, {'x': 'Nike', 'y': 48.11}, {'x': 'Apple', 'y': 48.11}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 239.74}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 48.11}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.62}, {'x': 'USA', 'y': 152.15}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.01}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.01}, {'x': 'Apple', 'y': 3.86}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 13.55}, {'x': 59.69, 'y': 60.52}, {'x': 255.3, 'y': 60.52}, {'x': 153.69, 'y': 60.52}, {'x': 255.3, 'y': 60.52}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7550, 'y': 364.56}, {'x': 6750, 'y': 41.59}, {'x': 755, 'y': 364.56}, {'x': 755, 'y': 364.56}, {'x': 755, 'y': 364.56}, {'x': 6750, 'y': 114.11}, {'x': 6750, 'y': 41.59}, {'x': 755, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 200}, {'x': 1918, 'y': 198}, {'x': 1921, 'y': 16}, {'x': 1924, 'y': 16}, {'x': 1927, 'y': 16}, {'x': 1929, 'y': 36}, {'x': 1932, 'y': 36}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 80.12}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 68.52}, {'x': 1820, 'y': 9.22}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.5}, {'x': 1866, 'y': 252.5}, {'x': 1871, 'y': 110.69}, {'x': 1875, 'y': 268.74}, {'x': 1879, 'y': 268.74}, {'x': 1883, 'y': 268.74}, {'x': 1889, 'y': 268.74}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 63.59}, {'x': 696, 'y': 56.12}, {'x': 712, 'y': 63.59}, {'x': 712, 'y': 24.12}, {'x': 712, 'y': 63.59}, {'x': 696, 'y': 56.12}, {'x': 712, 'y': 24.12}, {'x': 712, 'y': 63.59}, {'x': 696, 'y': 63.59}, {'x': 712, 'y': 23.88}, {'x': 712, 'y': 63.59}, {'x': 712, 'y': 63.59}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 585.1}, {'x': 1821, 'y': 139.69}, {'x': 1828, 'y': 26.42}, {'x': 1836, 'y': 26.42}, {'x': 1841, 'y': 108.62}, {'x': 1849, 'y': 311.42}, {'x': 1856, 'y': 311.42}, {'x': 1865, 'y': 148.52}, {'x': 1870, 'y': 585.1}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 61.53}, {'x': 3248, 'y': 55.03}, {'x': 1488, 'y': 55.03}, {'x': 3248, 'y': 61.53}, {'x': 4488, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2890}, {'x': 1924, 'y': 2890}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.14}, {'x': 1570, 'y': 38.14}, {'x': 1570, 'y': 40.2}, {'x': 1570, 'y': 365.8}, {'x': 1570, 'y': 40.2}, {'x': 22000, 'y': 365.8}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentled Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1805, 'y': 3616}, {'x': 1808, 'y': 3616}, {'x': 1810, 'y': 4924}, {'x': 1812, 'y': 4924}, {'x': 1814, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 3408}, {'x': 1833, 'y': 1910}, {'x': 1840, 'y': 3408}, {'x': 1846, 'y': 3408}, {'x': 1854, 'y': 1910}, {'x': 1864, 'y': 3408}, {'x': 1874, 'y': 1910}, {'x': 1884, 'y': 1910}, {'x': 1894, 'y': 1910}, {'x': 1898, 'y': 3408}, {'x': 1899, 'y': 3408}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1430, 'y': 527.8}, {'x': 3430, 'y': 624.8}, {'x': 3430, 'y': 527.8}, {'x': 1430, 'y': 527.8}, {'x': 3430, 'y': 624.8}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:46<00:00, 11.34s/it]
[35m|[39m JSON to Vega conversion error rate: [31m80.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.1 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.81 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'variable': 'Value', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31mgrupo_total_unemployed_pop_col = grupo_total_unemployed_pop_col.sort_values('Total unemployed youth population of Colombia', ascending=False)<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15, 15))<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.plot(group_total_unemployed_pop_col['Year'], group_total_unemployed_pop_col['Total unemployed youth population of Colombia'], color='#1f1000')<0x0A>ax.set_ylabel('Unemployed Youth Population of Colombia', color='#1f1000')<0x0A>ax.set_xlabel('Year', color='#1f1000')<0x0A>ax.set_ylabel('Unemployed Youth Population of Colombia', color='#1f1000')<0x0A>ax.set_xticks(range(0, 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of trillemmonial resonances)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.1}, {'x': 'field', 'y': 30.2}, {'x': 'variable', 'y': 30.2}, {'x': 'field', 'y': 55.1}, {'x': 'variable', 'y': 30.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plot
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>g = grupo_bairro.plot(kind='line', x='Year', y='Number of Days', color='black', <0x0A>                   title='Time required to register a property in Sanoa', figsize=(15, 15))<0x0A>g.set_xlabel('Year')<0x0A>g.set_ylabel('Number of Days')<0x0A>g.set_xticklabels(['Year', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.55}, {'x': 'field', 'y': 47.58}, {'x': 'variable', 'y': 12.55}, {'x': 'field', 'y': 47.58}, {'x': 'variable', 'y': 12.55}, {'x': 'field', 'y': 47.58}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A><0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=net_bilateral_aid_flow_Grenada, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=net_bilateral_aid_flow_Grenada, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=net_bilateral_aid_flow_Grenada, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.set_ylabels
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per hectare')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, xlabel, ylabel, title, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylim(0, 1)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_x
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to rotational velocity/accumulation)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 103.65}, {'x': 'field', 'y': 103.65}, {'x': 'type': 'quantitative', 'y': 103.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A>percentage_sr_lanka.plot(kind='bar', title='Percentage of babies born with low-Birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 10}, {'x': 'field', 'y': 72}, {'x': 'variable', 'y': 10}, {'x': 'field', 'y': 72}, {'x': 'variable', 'y': 10}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(15,15))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.xticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the y-axis label<0x0A>ax.set_ylabel('Consumption of Ather Capital (as % of GDV)')<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper right', b
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = pd.DataFrame({'Year':['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020'], 'Rating':[rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index]})<0x0A>graph.plot(kind='scatter', x='Year', y='Strength rating (12 ± 10000)', color='green', s=100, label='Rating regarding strength of legal rights index in Croatia', figsize=(15,15))<0x0A>graph.spines['right'].set_visible(False)<0x0A>graph.spines['top'].set_visible(False)<0x0A>graph.spines['bottom'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['right'].set_visible(False)<0x0A>graph.spines['bottom'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.1 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.81 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:53<00:00,  5.70s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4200}, {'x': 1994, 'y': 838}, {'x': 4622, 'y': 2950}, {'x': 5580, 'y': 4200}, {'x': 2288, 'y': 2110}, {'x': 4622, 'y': 2950}, {'x': 5580, 'y': 4200}, {'x': 1994, 'y': 2110}, {'x': 5580, 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 697}, {'x': 'Rock', 'y': 697}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 23.11}, {'x': 'Dog', 'y': 120.21}, {'x': 'Nike', 'y': 48.06}, {'x': 'Apple', 'y': 48.06}, {'x': 'Male', 'y': 23.11}, {'x': 'Rock', 'y': 239.74}, {'x': 'Sedan', 'y': 23.11}, {'x': 'Spanish', 'y': 48.06}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.46}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.01}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.01}, {'x': 'Apple', 'y': 3.86}, {'x': 'Dog', 'y': 8.29}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 154.57, 'y': 60.72}, {'x': 243.8, 'y': 13.48}, {'x': 54.57, 'y': 60.72}, {'x': 154.57, 'y': 60.72}, {'x': 243.8, 'y': 60.72}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7350, 'y': 364.56}, {'x': 6750, 'y': 41.59}, {'x': 735, 'y': 364.56}, {'x': 3750, 'y': 364.56}, {'x': 6750, 'y': 114.11}, {'x': 735, 'y': 364.56}, {'x': 6750, 'y': 41.59}, {'x': 6750, 'y': 114.11}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 200}, {'x': 1918, 'y': 198}, {'x': 1921, 'y': 16}, {'x': 1924, 'y': 16}, {'x': 1927, 'y': 16}, {'x': 1929, 'y': 36}, {'x': 1932, 'y': 36}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 69.99}, {'x': 1819, 'y': 80.12}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.5}, {'x': 1866, 'y': 252.5}, {'x': 1871, 'y': 110.69}, {'x': 1875, 'y': 268.48}, {'x': 1879, 'y': 268.48}, {'x': 1883, 'y': 268.48}, {'x': 1889, 'y': 268.48}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 63.59}, {'x': 696, 'y': 56.12}, {'x': 712, 'y': 63.59}, {'x': 696, 'y': 24.12}, {'x': 712, 'y': 63.59}, {'x': 696, 'y': 56.12}, {'x': 712, 'y': 24.12}, {'x': 712, 'y': 63.59}, {'x': 696, 'y': 56.12}, {'x': 696, 'y': 63.59}, {'x': 696, 'y': 63.59}, {'x': 696, 'y': 24.12}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1810, 'y': 585.1}, {'x': 1817, 'y': 147.48}, {'x': 1824, 'y': 25.42}, {'x': 1828, 'y': 25.42}, {'x': 1834, 'y': 25.42}, {'x': 1838, 'y': 147.48}, {'x': 1844, 'y': 310.24}, {'x': 1852, 'y': 310.24}, {'x': 1858, 'y': 147.48}, {'x': 1865, 'y': 150.24}, {'x': 1869, 'y': 150.24}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 61.53}, {'x': 3248, 'y': 55.03}, {'x': 1488, 'y': 55.03}, {'x': 3248, 'y': 61.53}, {'x': 4488, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2890}, {'x': 1924, 'y': 2890}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.14}, {'x': 1570, 'y': 38.14}, {'x': 1570, 'y': 40.2}, {'x': 1570, 'y': 365.8}, {'x': 1570, 'y': 40.2}, {'x': 22000, 'y': 365.8}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentled Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1805, 'y': 3616}, {'x': 1808, 'y': 3616}, {'x': 1810, 'y': 4924}, {'x': 1812, 'y': 4924}, {'x': 1814, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 3408}, {'x': 1833, 'y': 1912}, {'x': 1840, 'y': 3408}, {'x': 1846, 'y': 3408}, {'x': 1854, 'y': 4884}, {'x': 1864, 'y': 3408}, {'x': 1874, 'y': 1912}, {'x': 1884, 'y': 1912}, {'x': 1894, 'y': 1912}, {'x': 1898, 'y': 3408}, {'x': 1899, 'y': 3408}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1430, 'y': 529.89}, {'x': 343, 'y': 624.69}, {'x': 3430, 'y': 529.89}, {'x': 1430, 'y': 529.89}, {'x': 3430, 'y': 624.69}, {'x': 3430, 'y': 529.89}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [03:41<00:09,  9.32s/it]
[35m|[39m JSON to Vega conversion error rate: [31m75.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.79 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'variable', 'y': 0.03}, {'x': 'field', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31mgrupo_total_unemployed_pop_col = grupo_total_unemployed_pop_col.sort_values('Total unemployed youth population of Colombia', ascending=False)<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15, 15))<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.plot(group_total_unemployed_pop_col['Year'], group_total_unemployed_pop_col['Total unemployed youth population of Colombia'], color='#1f1000')<0x0A>ax.set_ylabel('Unemployed Youth Population of Colombia', color='#1f1000')<0x0A>ax.set_xlabel('Year', color='#1f1000')<0x0A>ax.set_ylabel('Unemployed Youth Population of Colombia', color='#1f1000')<0x0A>ax.set_xticks(range(0, 10000000, 10000000))<0x0A>ax.set_yticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of Dilemmas in Sokotocs)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.11}, {'x': 'y', 'y': 30.2}, {'x': 'x', 'y': 35.2}, {'x': 'y', 'y': 55.11}, {'x': 'x', 'y': 35.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plot
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>g = grupo_bairro.plot(kind='line', x='Year', y='Number of Days', color='black', <0x0A>                   title='Time required to register a property in Sanoa', figsize=(15,15))<0x0A><0x0A>g.set_xlabel('Year')<0x0A>g.set_ylabel('Number of Days')<0x0A><0x0A>g.set_title('Time required to register a property in Sanoa')<0x0A>g.set_xticklabels(['Year', 'Year'])<0x0A>g.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>g.set_xticklabels(['Year', 'Year'])<0x0A>g.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>g.set_ylim(0, 160)<0x0A>g.set_xlim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_yticklabels(['Year', 'Number of Days'])<0x0A>g.set_ylabel('Number of Days')<0x0A>g.set_ylabel('Number of Days')<0x0A><0x0A>g.set_xticklabels(['Year', 'Year'])<0x0A>g.set_yticklabels(['Year', 'Year'])<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_xlim(0, 160)<0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and Computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.55}, {'x': 'field', 'y': 47.58}, {'x': 'variable', 'y': 12.55}, {'x': 'field', 'y': 47.58}, {'x': 'variable', 'y': 12.55}, {'x': 'field', 'y': 47.58}, {'x': 'variable', 'y': 12.55}, {'x': 'variable', 'y': 47.58}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A><0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=net_bilateral_aid_flow_Grenada, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels('Year', fontsize=16)<0x0A>g.set_ylabels('AID flow from Development Assistance Committee', fontsize=16)<0x0A>g.set_xticklabels(rotation=90, fontsize=16)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per hectare')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, xlabel, ylabel, title, title, ylabel, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>ax.set_ylim([0, 1])<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylim([0, 1])<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_x
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to rotational velocity/accumulation)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 103.65}, {'x': 'field', 'y': 103.65}, {'x': 'type': 'quantitative', 'y': 103.65}, {'x': 'field', 'y': 103.65}, {'x': 'variable', 'y': 103.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A>percentage_sr_lanka.plot(kind='bar', title='Percentage of babies born with low-birthweight in Sri Lanka', color='purple', figsize=(15,15))<0x0A>plt.ylabel('% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'variable', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(15,15))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.xticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the y-axis label<0x0A>ax.set_ylabel('Consumption of Ather Capital (as % of GDV)')<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper right', b
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = pd.DataFrame({'Year':['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020'], 'Rating':[rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index, rating_strength_of_legal_rights_index]})<0x0A>graph.plot(kind='scatter', x='Year', y='Strength rating (12 ± 10000)', color='green', s=100, label='Rating regarding strength of legal rights index in Croatia', figsize=(15,15))<0x0A>graph.spines['right'].set_visible(False)<0x0A>graph.spines['top'].set_visible(False)<0x0A>graph.spines['bottom'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['right'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['bottom'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_visible(False)<0x0A>graph.spines['left'].set_
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.79 [35m|

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:58<00:00, 11.94s/it]
[36m[1mEpoch :[39m[22m 26 [32m[1m | Loss :[39m[22m 2.1007022857666016




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:43<00:00,  5.18s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4200}, {'x': 1840, 'y': 838}, {'x': 4880, 'y': 2950}, {'x': 5580, 'y': 4200}, {'x': 1840, 'y': 2950}, {'x': 5580, 'y': 4200}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 697}, {'x': 'Rock', 'y': 697}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.21}, {'x': 'Nike', 'y': 48.01}, {'x': 'Apple', 'y': 48.01}, {'x': 'Male', 'y': 24.11}, {'x': 'Rock', 'y': 239.74}, {'x': 'Sedan', 'y': 24.11}, {'x': 'Spanish', 'y': 48.01}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.45}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.01}, {'x': 'USA', 'y': 8.29}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.01}, {'x': 'Apple', 'y': 3.86}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 154.57, 'y': 60.79}, {'x': 243.8, 'y': 13.49}, {'x': 54.57, 'y': 60.79}, {'x': 243.8, 'y': 60.79}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7350, 'y': 364.56}, {'x': 6750, 'y': 41.59}, {'x': 735, 'y': 364.56}, {'x': 6750, 'y': 114.11}, {'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 200}, {'x': 1919, 'y': 198}, {'x': 1924, 'y': 16}, {'x': 1928, 'y': 16}, {'x': 1929, 'y': 36}, {'x': 1932, 'y': 36}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 69.99}, {'x': 1819, 'y': 80.12}, {'x': 1820, 'y': 9.2}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1862, 'y': 252.51}, {'x': 1866, 'y': 252.51}, {'x': 1870, 'y': 110.69}, {'x': 1876, 'y': 268.48}, {'x': 1879, 'y': 268.48}, {'x': 1882, 'y': 268.48}, {'x': 1886, 'y': 108.52}, {'x': 1890, 'y': 268.48}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 63.84}, {'x': 696, 'y': 56.12}, {'x': 712, 'y': 63.84}, {'x': 696, 'y': 24.12}, {'x': 712, 'y': 63.84}, {'x': 696, 'y': 56.12}, {'x': 696, 'y': 63.84}, {'x': 696, 'y': 24.12}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1810, 'y': 585.12}, {'x': 1817, 'y': 147.48}, {'x': 1824, 'y': 25.42}, {'x': 1828, 'y': 25.42}, {'x': 1834, 'y': 25.42}, {'x': 1838, 'y': 105.62}, {'x': 1844, 'y': 310.24}, {'x': 1852, 'y': 310.24}, {'x': 1858, 'y': 147.48}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4488, 'y': 61.53}, {'x': 3248, 'y': 55.03}, {'x': 1488, 'y': 55.03}, {'x': 3248, 'y': 61.53}, {'x': 4488, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2890}, {'x': 1924, 'y': 2890}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.01}, {'x': 1570, 'y': 38.01}, {'x': 1570, 'y': 40.2}, {'x': 1570, 'y': 365.8}, {'x': 1570, 'y': 40.2}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentded Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1805, 'y': 3616}, {'x': 1808, 'y': 3616}, {'x': 1810, 'y': 4924}, {'x': 1812, 'y': 4924}, {'x': 1814, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 3408}, {'x': 1833, 'y': 1910}, {'x': 1840, 'y': 3408}, {'x': 1846, 'y': 3408}, {'x': 1854, 'y': 1910}, {'x': 1864, 'y': 3408}, {'x': 1874, 'y': 3408}, {'x': 1884, 'y': 1910}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1430, 'y': 529.89}, {'x': 343, 'y': 624.89}, {'x': 1430, 'y': 567.2}, {'x': 3430, 'y': 529.89}, {'x': 3430, 'y': 624.89}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [03:43<00:08,  8.82s/it]
[35m|[39m JSON to Vega conversion error rate: [31m75.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.08 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.72 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 0.03}, {'x': 'y': 0.03}, {'x': 'y': 0.03}, {'x': 'x', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31mgrupo_total_unemployed_pop_col = grupo_total_unemployed_pop_col.sort_values('Total unemployed youth population of Colombia', ascending=False)<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15, 15))<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plot<0x0A>ax.plot(group_total_unemployed_pop_col['Year'], group_total_unemployed_pop_col['Total unemployed youth population of Colombia'], color='#1f1000')<0x0A>ax.set_ylabel('Unemployed Youth Population of Colombia', color='#1f1000')<0x0A>ax.set_xlabel('Year', color='#1f1000')<0x0A>ax.set_ylabel('Unemployed Youth Population of Colombia', color='#1f1000')<0x0A>ax.set_xticks(range(0, 10000000, 10000000))<0x0A>ax.set_yticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of Dilemmas in Sokotocs)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.11}, {'x': 'y', 'y': 30.2}, {'x': 'x', 'y': 35.83}, {'x': 'y', 'y': 55.11}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A>g = grupo_bairro.plot(kind='line', x='Year', y='Number of Days', color='black', <0x0A>                   title='Time required to register a property in Sanoa', figsize=(15, 15))<0x0A><0x0A>g.set_xlabel('Year')<0x0A>g.set_ylabel('Number of Days')<0x0A><0x0A>g.set_title('Time required to register a property in Sanoa')<0x0A>g.set_xticklabels(['Year', 'Year'])<0x0A>g.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>g.set_xticklabels(['Year', 'Year'])<0x0A>g.set_yticklabels(['Year', 'Number of Days'])<0x0A><0x0A>g.set_ylim(0, 160)<0x0A>g.set_xlim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_yticklabels(['Year', 'Number of Days'])<0x0A>g.set_ylabel('Number of Days')<0x0A>g.set_ylabel('Number of Days')<0x0A><0x0A>g.set_xticklabels(['Year', 'Year'])<0x0A>g.set_yticklabels(['Year', 'Year'])<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_xlim(0, 160)<0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0, 160)<0x0A><0x0A>g.set_ylim(0,
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and Computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.55}, {'x': 'field', 'y': 47.55}, {'x': 'variable', 'y': 12.55}, {'x': 'field', 'y': 47.55}, {'x': 'variable', 'y': 12.55}, {'x': 'field', 'y': 47.55}, {'x': 'variable', 'y': 12.55}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##########################################################################<0x0A># TODO: Execute your algorithm from Step 6 on<0x0A># Hint_grabber = True<0x0A># Hint_get_graph(graph, "Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A>############################################################################<0x0A>graph = sns.catplot(x="Year", y="AID_flow", data=graph, kind="bar", palette="Reds_r", height=10, aspect=1.5)<0x0A>graph.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01, fontsize=16, fontweight='semibold')<0x0A>graph.set_xticklabels(rotation=90)<0x0A>graph.fig.subplots_adjust(top=0.9)<0x0A>graph.fig.subplots_adjust(top=0.9)<0x0A>graph.fig.subplots_adjust(top=0.9)<0x0A>graph.fig.subplots_adjust(top=0.9)<0x0A>graph.fig.subplots_adjust(top=0.9)<0x0A>graph.fig.subplots_adjust(top=0.9)<0x0A>graph.fig.subplots_adjust(top=0.9)<0x0A>graph.fig.subplots_adjust(top=0.9)<0x0A>graph.fig.subplots_adjust(top=0.9)<0x0A>graph.fig.subplots_adjust(top=0.9)<0x0A>graph.fig.subplots_adjust(top=0.9)<0x0A>graph.fig.subplots_adjust(top=0.9)<0x0A>graph.fig.subplots_adjust(top=0.9)<0x0A>graph.fig.subplots_adjust(top=0.9)<0x0A>graph.fig.subplots_adjust(top=0.9)<0x0A>graph.fig.subplots_adjust(top=0.9)<0x0A>graph.fig.subplots_adjust(top=0.9)<0x0A>graph.fig.subplots_adjust(top=0.9)<0x0A>graph.fig.subplots_adjust(top=0.9)<0x0A>graph.fig.subplots_adjust(top=0.9)<0x0A>graph.fig.subplots_adjust(top=0.9)<0x0A>graph.fig.subplots_adjust(top=0.9)<0x0A>graph.fig.subplots_adjust(top=0.9)<0x0A>graph.fig.subplots_adjust(top=0.9
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per hectare')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, xlabel, ylabel, title, title, ylabel, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>ax.set_ylim([0, 1])<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylim([0, 1])<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro = (<0x0A>    pd.crosstab(df_congo_building_year['Year'], df_congo_building_year['Building'], margins = True,<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 'Number of procedures to build a warehouse in Congo (Republic)',<0x0A>                     margins_name = 
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to rotational velocity/accumulation)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 103.65}, {'x': 'field', 'y': 103.65}, {'x': 'type', 'y': 103.65}, {'x': 'field', 'y': 103.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A>percentage_sr_lanka.plot(kind='bar', title='Percentage of babies born with low-birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(15, 15))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the y-axis label<0x0A>ax.set_ylabel('Consumption of Ather Capital (as % of GDV)')<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># Setting the legend of the graph<0x0A>ax.legend(loc='upper right', b
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 18.65}, {'x': 'y', 'y': 3.8}, {'x': 'y', 'y': 18.65}, {'x': 'y', 'y': 18.65}, {'x': 'x', 'y': 18.65}, {'x': 'y', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = pd.DataFrame({'Year':['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020'], 'Rating':[5,5,4,3,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.08 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.72 [35m|

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [04:00<00:00, 12.01s/it]
[36m[1mEpoch :[39m[22m 27 [32m[1m | Loss :[39m[22m 2.1526081562042236



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:44<00:00,  5.24s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5380, 'y': 4210}, {'x': 1980, 'y': 838}, {'x': 4610, 'y': 2950}, {'x': 5380, 'y': 4210}, {'x': 2280, 'y': 2110}, {'x': 4610, 'y': 2950}, {'x': 5380, 'y': 4210}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 697}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 697}, {'x': 'Rock', 'y': 697}, {'x': 'Sedan', 'y': 4230}, {'x': 'USA', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.71}, {'x': 'Nike', 'y': 48.01}, {'x': 'Apple', 'y': 48.01}, {'x': 'Male', 'y': 24.11}, {'x': 'Rock', 'y': 239.74}, {'x': 'Sedan', 'y': 24.11}, {'x': 'Spanish', 'y': 48.01}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.86}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.33, 'y': 13.43}, {'x': 59.69, 'y': 60.53}, {'x': 255.33, 'y': 60.53}, {'x': 153.69, 'y': 60.53}, {'x': 255.33, 'y': 60.53}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7350, 'y': 364.56}, {'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 200}, {'x': 1919, 'y': 194}, {'x': 1923, 'y': 16}, {'x': 1928, 'y': 16}, {'x': 1929, 'y': 16}, {'x': 1932, 'y': 36}, {'x': 1936, 'y': 162}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.53}, {'x': 1818, 'y': 69.99}, {'x': 1820, 'y': 80.2}, {'x': 1822, 'y': 8.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.5}, {'x': 1866, 'y': 252.5}, {'x': 1871, 'y': 110.69}, {'x': 1875, 'y': 268.69}, {'x': 1879, 'y': 268.69}, {'x': 1883, 'y': 268.69}, {'x': 1887, 'y': 108.52}, {'x': 1891, 'y': 268.69}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 710, 'y': 63.84}, {'x': 690, 'y': 56.12}, {'x': 710, 'y': 24.09}, {'x': 710, 'y': 63.84}, {'x': 710, 'y': 56.12}, {'x': 710, 'y': 24.09}, {'x': 710, 'y': 63.84}, {'x': 710, 'y': 16.22}, {'x': 710, 'y': 63.84}, {'x': 710, 'y': 24.09}, {'x': 710, 'y': 63.84}, {'x': 710, 'y': 56.12}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 585.12}, {'x': 1821, 'y': 139.69}, {'x': 1828, 'y': 27.9}, {'x': 1835, 'y': 27.9}, {'x': 1841, 'y': 108.62}, {'x': 1849, 'y': 310.2}, {'x': 1856, 'y': 148.5}, {'x': 1865, 'y': 150.2}, {'x': 1869, 'y': 576.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4410, 'y': 61.53}, {'x': 3290, 'y': 55.03}, {'x': 4410, 'y': 55.03}, {'x': 3290, 'y': 61.53}, {'x': 4410, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2890}, {'x': 1927, 'y': 2890}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.14}, {'x': 1570, 'y': 38.14}, {'x': 22000, 'y': 365.8}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1805, 'y': 3612}, {'x': 1806, 'y': 3612}, {'x': 1807, 'y': 3612}, {'x': 1810, 'y': 4924}, {'x': 1813, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 3402}, {'x': 1833, 'y': 1912}, {'x': 1840, 'y': 3402}, {'x': 1846, 'y': 3402}, {'x': 1854, 'y': 4884}, {'x': 1864, 'y': 3402}, {'x': 1874, 'y': 1912}, {'x': 1884, 'y': 1912}, {'x': 1894, 'y': 1912}, {'x': 1899, 'y': 3402}, {'x': 1919, 'y': 3402}, {'x': 1927, 'y': 3402}, {'x': 1937, 'y': 4884}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1430, 'y': 529.89}, {'x': 343, 'y': 624.69}, {'x': 3430, 'y': 529.89}, {'x': 1430, 'y': 529.89}, {'x': 3430, 'y': 624.69}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|


















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [03:23<00:08,  8.42s/it]
[35m|[39m JSON to Vega conversion error rate: [31m65.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.11 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.58 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 0.03}, {'x': 'y': 0.03}, {'x': 'y': 0.03}, {'x': 'x', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.55}, {'x': 'field', 'y': 18.55}, {'x': 'variable', 'y': 18.55}, {'x': 'field', 'y': 18.55}, {'x': 'variable', 'y': 18.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of Dilemmas in Sokotocs)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.11}, {'x': 'field', 'y': 30.2}, {'x': 'variable', 'y': 35.83}, {'x': 'field', 'y': 55.11}, {'x': 'variable', 'y': 35.83}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plot
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = {'axes.labelsize': 15, 'xtick.labelsize': 15, 'ytick.labelsize': 15, 'data': {'x': 'Year', 'y': 14, 'data': {'x': 'Year', 'y': 14, 'data': {'x': 'Year', 'y': 14, 'data': {'x': 'Year', 'y': 14, 'data': FORMAL_AXIS_TEXT', 'y': 14,'mode': 'NON_TEXT'}}, 'x': 'Year', 'y': 14,'mode': 'NON_TEXT'}}, 'text.color': {'x': 'Year', 'y': 14, 'y': 14, 'text.color': 'Y': 14, 'text.color': 'Y': 14, 'text.color': 'Y': 14, 'text.color': 'Y': 14, 'text.color': 'Y': 14, 'text.color': 'Y': 14, 'text.color': 'Y': 14, 'text.color': 'Y': 14, 'text.color': 'Y': 14, 'text.color': 'Y': 14, 'text.color': 'Y': 14, 'text.color': 'Y': 14, 'text.color': 'Y': 14, 'text.color': 'Y': 14, 'text.color': 'Y': 14, 'text.color': 'Y': 14, 'text.color': 'Y': 14, 'text.color': 'Y': 14, 'text.color': 'Y': 14, 'text.color': 'Y': 14, 'text.color': 'Y': 14, 'text.color': 'Y': 14, 'text.color
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and Computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.55}, {'x': 'field', 'y': 47.58}, {'x': 'variable', 'y': 37.56}, {'x': 'field', 'y': 49.56}, {'x': 'variable', 'y': 12.55}, {'x': 'field', 'y': 47.56}, {'x': 'variable', 'y': 12.55}, {'x': 'variable', 'y': 49.56}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A><0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per hectare')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, xlabel, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>ax.set_ylim([0, 1])<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylim([0, 1])<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_x
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro = (<0x0A>    pd.crosstab(df_congo_republic["Year"], df_congo_republic["Amount"], normalize="index") * 100<0x0A>   .div(<0x0A>        df_congo_republic["Amount"], <0x0A>        df_congo_republic["Amount"], <0x0A>         margins=True, <0x0A>        )<0x0A>    )<0x0A><0x0A>g = grupo_bairro.sort_values(ascending=False)<0x0A><0x0A>g = grupo_bairro.head(10)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to rotational velocity/accumulation)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.03}, {'x': 'field', 'y': 5.03}, {'x': 'type', 'y': 18.15}, {'x': 'field', 'y': 5.03}, {'x': 'variable', 'y': 18.15}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A>percentage_sr_lanka.plot(kind='bar', title='Percentage of babies born with low-birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('$% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.ylabel('$% of babies')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'variable', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(15, 15))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() <0x0A>ax.set_yticklabels([''] + grupo_df['Country'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right',
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.95}, {'x': 'field', 'y': 2.95}, {'x': 'type', 'y': 2.95}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.11 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.58 [35m|

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:26<00:00, 10.34s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:46<00:00,  5.35s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4210}, {'x': 2080, 'y': 838}, {'x': 4380, 'y': 2950}, {'x': 5580, 'y': 4210}, {'x': 2080, 'y': 2100}, {'x': 4380, 'y': 2950}, {'x': 5580, 'y': 4210}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 691}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.21}, {'x': 'Nike', 'y': 48.01}, {'x': 'Apple', 'y': 48.01}, {'x': 'Male', 'y': 24.11}, {'x': 'Rock', 'y': 239.74}, {'x': 'Sedan', 'y': 24.11}, {'x': 'Spanish', 'y': 48.01}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.43}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.86}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.8}, {'x': 270.8, 'y': 13.48}, {'x': 54.67, 'y': 60.8}, {'x': 153.67, 'y': 60.8}, {'x': 270.8, 'y': 60.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 200}, {'x': 1919, 'y': 190}, {'x': 1924, 'y': 16}, {'x': 1928, 'y': 16}, {'x': 1929, 'y': 36}, {'x': 1932, 'y': 36}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 30.56}, {'x': 1818, 'y': 79.99}, {'x': 1820, 'y': 9.2}, {'x': 1822, 'y': 9.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1862, 'y': 252.5}, {'x': 1866, 'y': 256.5}, {'x': 1870, 'y': 110.66}, {'x': 1876, 'y': 268.74}, {'x': 1879, 'y': 268.74}, {'x': 1882, 'y': 268.74}, {'x': 1886, 'y': 108.51}, {'x': 1890, 'y': 268.74}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 710, 'y': 63.59}, {'x': 690, 'y': 56.12}, {'x': 710, 'y': 24}, {'x': 710, 'y': 63.59}, {'x': 710, 'y': 56.12}, {'x': 710, 'y': 24}, {'x': 710, 'y': 16.22}, {'x': 710, 'y': 63.59}, {'x': 710, 'y': 24}, {'x': 710, 'y': 63.59}, {'x': 710, 'y': 24}, {'x': 710, 'y': 16.22}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1810, 'y': 585.12}, {'x': 1817, 'y': 147.48}, {'x': 1824, 'y': 27.92}, {'x': 1828, 'y': 27.92}, {'x': 1834, 'y': 27.92}, {'x': 1838, 'y': 105.84}, {'x': 1844, 'y': 310.24}, {'x': 1850, 'y': 310.24}, {'x': 1856, 'y': 147.48}, {'x': 1864, 'y': 150.24}, {'x': 1868, 'y': 150.24}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4410, 'y': 61.53}, {'x': 3448, 'y': 55.03}, {'x': 3448, 'y': 61.53}, {'x': 1448, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2890}, {'x': 1927, 'y': 2890}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.01}, {'x': 1570, 'y': 38.01}, {'x': 22000, 'y': 365.8}, {'x': 720, 'y': 121.48}, {'x': 1570, 'y': 40.01}, {'x': 1570, 'y': 365.8}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 888}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentded Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1805, 'y': 3612}, {'x': 1808, 'y': 3612}, {'x': 1810, 'y': 4924}, {'x': 1812, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 3386}, {'x': 1833, 'y': 1910}, {'x': 1840, 'y': 3404}, {'x': 1846, 'y': 3404}, {'x': 1854, 'y': 4884}, {'x': 1864, 'y': 3404}, {'x': 1874, 'y': 1910}, {'x': 1884, 'y': 1910}, {'x': 1894, 'y': 1910}, {'x': 1898, 'y': 3404}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1430, 'y': 529.8}, {'x': 3880, 'y': 624.89}, {'x': 3880, 'y': 564.64}, {'x': 1430, 'y': 529.89}, {'x': 3880, 'y': 624.89}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:10<00:00,  9.55s/it]
[35m|[39m JSON to Vega conversion error rate: [31m65.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.11 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.59 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 0.03}, {'x': 'y': 0.03}, {'x': 'y': 0.03}, {'x': 'x', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 608}, {'x': 'field', 'y': 608}, {'x': 'variable', 'y': 608}, {'x': 'field', 'y': 608}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihlomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.2}, {'x': 'y', 'y': 30.2}, {'x': 'x', 'y': 30.2}, {'x': 'y', 'y': 55.2}, {'x': 'x', 'y': 30.2}, {'x': 'y', 'y': 55.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(df, 'Year', 'Arable land (hectares) in Seychelles', '-')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = {'axes': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'y': 246}, {'x': 'nominal', 'y': 143}, {'x': 'y': 143}, {'x': 'nominal', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and Computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.55}, {'x': 'field', 'y': 47.58}, {'x': 'variable', 'y': 12.55}, {'x': 'field', 'y': 47.58}, {'x': 'variable', 'y': 12.55}, {'x': 'field', 'y': 47.58}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A><0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=net_bil, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per hectare')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, xlabel, ylabel, title, ylabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_y
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to rotational velocity/accumulation)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 20}, {'x': 'field', 'y': 20}, {'x': 'type', 'y': 20}, {'x': 'field', 'y': 20}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>percentage_sr_lanka.plot(kind='bar', ax=ax, color='purple')<0x0A>ax.set_title('Percentage of babies born with low-birthweight in Sri Lanka')<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xlabel('')<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(15, 15))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() + grupo_df['Country'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Country'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.98}, {'x': 'field', 'y': 2.98}, {'x': 'type', 'y': 2.98}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.11 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.59 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:41<00:05,  5.88s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:45<00:00,  5.27s/it]
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4210}, {'x': 2280, 'y': 838}, {'x': 4620, 'y': 2950}, {'x': 5580, 'y': 4210}, {'x': 2280, 'y': 2100}, {'x': 4620, 'y': 2950}, {'x': 5580, 'y': 4210}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 691}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.21}, {'x': 'Nike', 'y': 48.01}, {'x': 'Apple', 'y': 48.01}, {'x': 'Male', 'y': 24.11}, {'x': 'Rock', 'y': 239.74}, {'x': 'Sedan', 'y': 24.11}, {'x': 'Spanish', 'y': 48.01}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.86}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 154.57, 'y': 60.73}, {'x': 243.8, 'y': 13.48}, {'x': 259.25, 'y': 60.73}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 201.87}, {'x': 1919, 'y': 191.87}, {'x': 1924, 'y': 16.58}, {'x': 1928, 'y': 16.58}, {'x': 1930, 'y': 36.06}, {'x': 1931, 'y': 36.06}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 62.62}, {'x': 1819, 'y': 79.99}, {'x': 1820, 'y': 80.2}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1862, 'y': 252.5}, {'x': 1866, 'y': 256.5}, {'x': 1870, 'y': 110.66}, {'x': 1876, 'y': 268.62}, {'x': 1879, 'y': 268.62}, {'x': 1882, 'y': 268.62}, {'x': 1886, 'y': 100.2}, {'x': 1890, 'y': 268.62}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 710, 'y': 56.11}, {'x': 690, 'y': 32.1}, {'x': 710, 'y': 64.1}, {'x': 490, 'y': 16.21}, {'x': 690, 'y': 56.11}, {'x': 710, 'y': 24.14}, {'x': 490, 'y': 16.21}, {'x': 690, 'y': 64.14}, {'x': 710, 'y': 56.11}, {'x': 690, 'y': 32.14}, {'x': 690, 'y': 56.11}, {'x': 710, 'y': 24.14}, {'x': 710, 'y': 64.14}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1810, 'y': 585.1}, {'x': 1817, 'y': 147.48}, {'x': 1824, 'y': 27.74}, {'x': 1832, 'y': 27.74}, {'x': 1838, 'y': 105.84}, {'x': 1845, 'y': 310.24}, {'x': 1856, 'y': 147.48}, {'x': 1864, 'y': 150.24}, {'x': 1870, 'y': 585.1}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4410, 'y': 61.53}, {'x': 3448, 'y': 55.03}, {'x': 3448, 'y': 61.53}, {'x': 3448, 'y': 61.53}, {'x': 1844, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2890}, {'x': 1927, 'y': 2890}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1570, 'y': 38.01}, {'x': 1570, 'y': 38.01}, {'x': 22000, 'y': 365.85}, {'x': 720, 'y': 121.45}, {'x': 1570, 'y': 40.2}, {'x': 1570, 'y': 365.85}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 885}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1802, 'y': 4286}, {'x': 1805, 'y': 3612}, {'x': 1808, 'y': 3612}, {'x': 1810, 'y': 4924}, {'x': 1813, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4888}, {'x': 1833, 'y': 3386}, {'x': 1840, 'y': 3402}, {'x': 1846, 'y': 1888}, {'x': 1855, 'y': 3402}, {'x': 1864, 'y': 3402}, {'x': 1874, 'y': 3402}, {'x': 1889, 'y': 1912}, {'x': 1890, 'y': 1912}, {'x': 1899, 'y': 3402}, {'x': 1894, 'y': 3402}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1230, 'y': 529.89}, {'x': 3880, 'y': 624.89}, {'x': 3880, 'y': 529.89}, {'x': 3880, 'y': 529.89}, {'x': 3880, 'y': 624.89}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:32<00:00, 10.61s/it]
[35m|[39m JSON to Vega conversion error rate: [31m70.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.12 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.6 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 0.03}, {'x': 'y': 0.03}, {'x': 'y': 0.03}, {'x': 'x', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 24.85}, {'x': 'field', 'y': 24.85}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of Dilemmas in Sokotocs)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.11}, {'x': 'field', 'y': 30.2}, {'x': 'variable', 'y': 28.81}, {'x': 'field', 'y': 39.21}, {'x': 'variable', 'y': 55.11}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, right=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, left=True
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = {'axes': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'y': 246}, {'x': 'nominal', 'y': 143}, {'x': 'nominal', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and Computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.55}, {'x': 'field', 'y': 47.58}, {'x': 'type', 'y': 37.05}, {'x': 'field', 'y': 49.56}, {'x': 'variable', 'y': 12.55}, {'x': 'field', 'y': 47.58}, {'x': 'variable', 'y': 12.55}, {'x': 'variable', 'y': 37.05}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m# Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A><0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=net_bilateral_aid_flow_Grenada, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.fig.suptitle('Net bilateral aid flow of Grenada from Development Assistance Committee', y=1.01)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=net_bilateral_aid_flow_Grenada, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g = sns.catplot(x="Year", y="AID_flow_from_development_assistance", data=net_bilateral_aid_flow_Grenada, kind="bar", palette="Reds_r", height=15, aspect=1.5)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A><0x0A># Plotting the net bilateral aid flow of Grenada from Development Assistance Committee<0x0A>g.set_xlabels("Year", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.set_ylabels("AID flow from Development Assistance Committee", rotation=90)<0x0A>g.set_ylabels
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per hectare')<0x0A>Country_1981.set_xticklabels(['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',''
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, xlabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Import duties<0x0A>import matplotlib.pyplot as plt<0x0A>import matplotlib.patches as patches<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A><0x0A># Import duties<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rockhopper/rockhopper)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 20.85}, {'x': 'field', 'y': 20.85}, {'x': 'type', 'y': 20.85}, {'x': 'field', 'y': 20.85}, {'x': 'variable', 'type': 'quantitative'}}, 'y': 20.85}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>percentage_sr_lanka.plot(kind='bar', ax=ax, color='purple')<0x0A>ax.set_title('Percentage of babies born with low-birthweight in Sri Lanka')<0x0A>ax.set_ylabel('% of babies')<0x0A>ax.set_xlabel('')<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 11.2}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 11.2}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat = pd.DataFrame(households_sat, columns = ["Year", "% of households"])<0x0A>percentage_households_sat.plot(kind = "bar", figsize = (20, 20), color = "purple")<0x0A>plt.title("Percentage of households in Russian Federation that uses iodized salt")<0x0A>plt.xlabel("Year")<0x0A>plt.ylabel("% of households")<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() <0x0A>ax.set_yticklabels([''] + grupo_df['Country'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right',
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.98}, {'x': 'field', 'y': 2.98}, {'x': 'type', 'y': 2.98}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.12 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.6 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 30 [32m[1m | Loss :[39m[22m 1.9491432905197144



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:39<00:05,  5.22s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4210}, {'x': 1844, 'y': 838}, {'x': 4676, 'y': 2950}, {'x': 2228, 'y': 2100}, {'x': 4676, 'y': 2950}, {'x': 5580, 'y': 4210}, {'x': 3622, 'y': 3780}, {'x': 4676, 'y': 2100}, {'x': 5580, 'y': 4210}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 691}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.11}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.2}, {'x': 'Nike', 'y': 48.01}, {'x': 'Apple', 'y': 48.01}, {'x': 'Male', 'y': 24.11}, {'x': 'Rock', 'y': 239.74}, {'x': 'Sedan', 'y': 24.11}, {'x': 'Spanish', 'y': 48.01}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.86}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.33, 'y': 13.43}, {'x': 59.84, 'y': 60.66}, {'x': 271.29, 'y': 60.66}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 200.22}, {'x': 1919, 'y': 198.52}, {'x': 1924, 'y': 16.52}, {'x': 1928, 'y': 16.52}, {'x': 1930, 'y': 36.06}, {'x': 1931, 'y': 36.06}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 30.5}, {'x': 1818, 'y': 79.99}, {'x': 1820, 'y': 9.3}, {'x': 1822, 'y': 9.3}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1862, 'y': 252.5}, {'x': 1866, 'y': 256.5}, {'x': 1870, 'y': 110.66}, {'x': 1876, 'y': 268.42}, {'x': 1879, 'y': 268.42}, {'x': 1882, 'y': 268.42}, {'x': 1886, 'y': 100.2}, {'x': 1890, 'y': 268.42}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56.11}, {'x': 712, 'y': 63.84}, {'x': 626, 'y': 32.18}, {'x': 712, 'y': 63.84}, {'x': 492, 'y': 16.22}, {'x': 712, 'y': 63.84}, {'x': 712, 'y': 24.01}, {'x': 712, 'y': 24.01}, {'x': 712, 'y': 63.84}, {'x': 712, 'y': 56.11}, {'x': 712, 'y': 63.84}, {'x': 712, 'y': 24.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 585.1}, {'x': 1814, 'y': 148.64}, {'x': 1821, 'y': 25.74}, {'x': 1828, 'y': 25.74}, {'x': 1836, 'y': 25.74}, {'x': 1844, 'y': 109.64}, {'x': 1850, 'y': 310.2}, {'x': 1858, 'y': 148.64}, {'x': 1866, 'y': 150.25}, {'x': 1870, 'y': 585.1}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4570, 'y': 61.53}, {'x': 3340, 'y': 61.53}, {'x': 3340, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2890}, {'x': 1927, 'y': 2890}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.01}, {'x': 1576, 'y': 38.01}, {'x': 2208, 'y': 365.85}, {'x': 726, 'y': 121.51}, {'x': 1576, 'y': 40.2}, {'x': 1576, 'y': 39.51}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentled Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4286}, {'x': 1806, 'y': 3612}, {'x': 1809, 'y': 3612}, {'x': 1810, 'y': 4924}, {'x': 1813, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4870}, {'x': 1833, 'y': 3385}, {'x': 1840, 'y': 3400}, {'x': 1846, 'y': 1888}, {'x': 1874, 'y': 3400}, {'x': 1889, 'y': 4870}, {'x': 1890, 'y': 1930}, {'x': 1897, 'y': 4870}, {'x': 1899, 'y': 3400}, {'x': 1842, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1270, 'y': 529.89}, {'x': 3840, 'y': 624.99}, {'x': 384, 'y': 529.89}, {'x': 384, 'y': 624.99}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:43<00:00,  5.16s/it]


















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [02:39<00:08,  8.69s/it]
[35m|[39m JSON to Vega conversion error rate: [31m70.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.12 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.6 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 0.03}, {'x': 'y': 0.03}, {'x': 'y': 0.03}, {'x': 'x', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 605}, {'x': 'field', 'y': 605}, {'x': 'variable', 'y': 605}, {'x': 'field', 'y': 605}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Dilemmas in Sokonocs)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.13}, {'x': 'y', 'y': 30.2}, {'x': 'x', 'y': 35.73}, {'x': 'y', 'y': 55.13}, {'x': 'x', 'y': 35.73}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(df, 'Year', 'Arable land (hectares) in Seychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = {'axes': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'y': 246}, {'x': 'nominal', 'y': 143}, {'x': 'nominal', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.55}, {'x': 'field', 'y': 47.58}, {'x': 'type', 'y': 37.05}, {'x': 'field', 'y': 49.56}, {'x': 'variable', 'y': 12.55}, {'x': 'variable', 'y': 37.05}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##########################################################################<0x0A># TODO: Draw a nested barplot to show bills by year and year using the function from the previous query. <0x0A>###########################################################<0x0A><0x0A># Create a list of columns to plot on<0x0A># Note: this is a list of strings for strings, not strings for column names.<0x0A># We'll use strings for strings, not strings for column names.<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(15, 15))<0x0A><0x0A># Draw a nested barplot to show bills by year and year using the function from the previous query. <0x0A># Note: this list will now contain a pivot table, so we'll use the same x-axis as before.<0x0A><0x0A># Set up the matplotlib axes for a single barplot.<0x0A># Use the function from the previous query to plot the barplots.<0x0A><0x0A># Set up the axes for a single barplot.<0x0A># Use the function from the previous query to plot the barplots.<0x0A><0x0A># Set up the axes for a single barplot.<0x0A><0x0A># Use the function from the previous query to plot the barplots.<0x0A><0x0A># Set up the axes for a single barplot.<0x0A><0x0A># Use the function from the previous query to plot the barplots.<0x0A><0x0A># Set up the axes for a single barplot.<0x0A><0x0A># Use the function from the previous query to plot the barplots.<0x0A><0x0A># Set up the axes for the plot.<0x0A><0x0A># Use the function from the previous query to plot the barplots.<0x0A><0x0A># Set up the axes for the plot.<0x0A><0x0A># Use the function from the previous query to plot the barplots.<0x0A><0x0A># Set up the axes for the plot.<0x0A><0x0A># Use the function from the previous query to plot the barplots.<0x0A><0x0A># Set up the axes for the plot.<0x0A><0x0A># Use the function from the previous query to plot the barplots.<0x0A><0x0A># Set up the axes for the plot.<0x0A><0x0A># Use the function from the previous query to plot the barplots.<0x0A><0x0A># Set up the axes for the plot.<0x0A><0x0A># Use the function from the previous query to plot the barplots.<0x0A><0x0A># Set up the axes for the plot.<0x0A><0x0A># Use the function from the previous query to plot the barplots.<0x0A><0x0A># Set up the axes for the plot.<0x0A><0x0A># Use the function from the previous query to plot the barplots.<0x0A><0x0A># Set up the axes for the plot.<0x0A><0x0A># Use the function from the previous query to plot the barplots.<0x0A><0x0A># Set up the axes for the plot.<0x0A><0x0A># Use the function from the previous query to plot
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per hectare')<0x0A>Country_1981.grid(False)<0x0A>Country_1981.grid(False)<0x0A>Country_1981.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mdef plot_bar_chart(df, title, x, y, ylabel, xlabel, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, ylabel, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title, title,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Import duties<0x0A>import matplotlib.pyplot as plt<0x0A>import matplotlib.patches as patches<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A><0x0A># Import duties<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>          ['Year
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to rotational velocity)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.05}, {'x': 'field', 'y': 5.05}, {'x': 'type': 'quantitative', 'y': 98.85}, {'x': 'field', 'y': 98.85}, {'x': 'variable', 'y': 5.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A>percentage_sr_lanka.plot(kind='bar', title='Percentage of babies born with low-birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('$% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.ylabel('$% of babies')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'variable', 'y': 7.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(15, 15))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() <0x0A>ax.set_yticklabels([''] + grupo_df['Country'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.9}, {'x': 'field', 'y': 2.9}, {'x': 'type', 'y': 2.9}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.12 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.6 [35m|

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:42<00:00,  8.10s/it]
[36m[1mEpoch :[39m[22m 31 [32m[1m | Loss :[39m[22m 1.936643123626709



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:37<00:05,  5.06s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4210}, {'x': 1844, 'y': 838}, {'x': 4676, 'y': 2950}, {'x': 2228, 'y': 2104}, {'x': 4676, 'y': 2950}, {'x': 5580, 'y': 4210}, {'x': 3622, 'y': 3785}, {'x': 4676, 'y': 2104}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.24}, {'x': 'Nike', 'y': 48.06}, {'x': 'Apple', 'y': 48.06}, {'x': 'Male', 'y': 24.11}, {'x': 'Rock', 'y': 24.11}, {'x': 'Sedan', 'y': 24.11}, {'x': 'Spanish', 'y': 48.06}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.86}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 154.57, 'y': 60.73}, {'x': 273.8, 'y': 13.48}, {'x': 54.57, 'y': 60.73}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7350, 'y': 364.56}, {'x': 6750, 'y': 41.59}, {'x': 3750, 'y': 364.56}, {'x': 735, 'y': 364.56}, {'x': 3750, 'y': 364.56}, {'x': 6750, 'y': 114.11}, {'x': 6750, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 201.87}, {'x': 1919, 'y': 195.86}, {'x': 1924, 'y': 16.56}, {'x': 1928, 'y': 16.56}, {'x': 1930, 'y': 36.06}, {'x': 1931, 'y': 36.06}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 79.99}, {'x': 1816, 'y': 28.52}, {'x': 1819, 'y': 79.99}, {'x': 1820, 'y': 80.2}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1862, 'y': 252.5}, {'x': 1866, 'y': 256.62}, {'x': 1870, 'y': 268.62}, {'x': 1869, 'y': 110.66}, {'x': 1876, 'y': 268.62}, {'x': 1878, 'y': 268.62}, {'x': 1882, 'y': 268.62}, {'x': 1886, 'y': 101.01}, {'x': 1890, 'y': 268.62}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56.11}, {'x': 696, 'y': 32.1}, {'x': 696, 'y': 63.8}, {'x': 490, 'y': 16.22}, {'x': 696, 'y': 56.11}, {'x': 490, 'y': 16.22}, {'x': 696, 'y': 63.8}, {'x': 696, 'y': 24.12}, {'x': 490, 'y': 16.22}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 585.1}, {'x': 1814, 'y': 148.64}, {'x': 1821, 'y': 25.74}, {'x': 1828, 'y': 25.74}, {'x': 1836, 'y': 25.74}, {'x': 1844, 'y': 109.64}, {'x': 1850, 'y': 310.2}, {'x': 1858, 'y': 148.64}, {'x': 1866, 'y': 150.25}, {'x': 1870, 'y': 576.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4550, 'y': 61.53}, {'x': 3250, 'y': 55.03}, {'x': 3250, 'y': 61.53}, {'x': 4550, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1926, 'y': 2888}, {'x': 1930, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.01}, {'x': 726, 'y': 121.89}, {'x': 1576, 'y': 37.01}, {'x': 1576, 'y': 37.01}, {'x': 2202, 'y': 364.5}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentled Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4286}, {'x': 1806, 'y': 3612}, {'x': 1809, 'y': 3612}, {'x': 1810, 'y': 4924}, {'x': 1813, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4886}, {'x': 1831, 'y': 3386}, {'x': 1836, 'y': 4886}, {'x': 1840, 'y': 3386}, {'x': 1846, 'y': 1916}, {'x': 1852, 'y': 4886}, {'x': 1859, 'y': 4886}, {'x': 1866, 'y': 3386}, {'x': 1875, 'y': 3386}, {'x': 1879, 'y': 1916}, {'x': 1889, 'y': 1916}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1270, 'y': 529.8}, {'x': 3840, 'y': 624.87}, {'x': 384, 'y': 564.62}, {'x': 1270, 'y': 529.87}, {'x': 3840, 'y': 624.87}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:41<00:00,  5.10s/it]



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:26<00:00, 10.35s/it]
[35m|[39m JSON to Vega conversion error rate: [31m75.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.73 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'x', 'y': 0.03}, {'x': 'y': 0.03}, {'x': 'x', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6.55}, {'x': 'field', 'y': 6.55}, {'x': 'variable', 'y': 18.55}, {'x': 'field', 'y': 18.55}, {'x': 'variable', 'y': 18.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of total non-fertilisers)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.18}, {'x': 'y', 'y': 30.2}, {'x': 'x', 'y': 55.18}, {'x': 'y', 'y': 28.8}, {'x': 'x', 'y': 30.2}, {'x': 'y', 'y': 28.8}, {'x': 'x', 'y': 55.18}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>sns.set(font_scale=2)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True, right=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True,
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = {'axes': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'y': 246}, {'x': 'nominal', 'y': 143}, {'x': 'nominal', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.03}, {'x': 'field', 'y': 47.06}, {'x': 'type', 'x': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'y': 37.06}, {'x': 'field', 'y': 49.06}, {'x': 'variable', 'y': 12.03}, {'x': 'variable', 'y': 12.03}, {'x': 'variable', 'y': 47.06}, {'x': 'variable', 'y': 12.03}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##########################################################################<0x0A># TODO: Draw a nested barplot to show bills by year and year using the function from the previous query. <0x0A>###########################################################<0x0A><0x0A># Create a list of columns to plot on<0x0A># Note: this is a list of strings for strings, so we'll use them later.<0x0A>#############################################################<0x0A><0x0A># Create a list of colors to use in the plot<0x0A>#############################################################<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(15, 15))<0x0A><0x0A># Create a bar plot using pandas<0x0A>barplot = sns.barplot(x="Year", y="Bill", data=df_bill, ci=None, palette="rocket")<0x0A><0x0A># Set up the margins<0x0A>ax.set_title("Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A>ax.set_ylabel("All flow (per 100000 US$)")<0x0A>ax.set_xlabel("Year")<0x0A><0x0A># Save the figure<0x0A>fig = plt.gcf()<0x0A><0x0A># Save the figure<0x0A>fig.savefig("../Images/Bill_Grenada_Net_BIL_Flow_Grenada.png")<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per householder')<0x0A>Country_1981.grid(False)<0x0A>Country_1981.grid(False)<0x0A>Country_1981.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.sort_values('Year', ascending=False)<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df['Year'], grupo_df['mean'], color='g', edgecolor='k', linewidth=1)<0x0A>ax.set_ylabel('55/poverty lines')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 2)<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '55/poverty lines', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '55/poverty lines', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '55/poverty lines', 'Year'])<0x0A>ax.set_ylim(0, 2)<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '55/poverty lines', 'Year'])<0x0A>ax.set_yticklabels(['Year', '55/poverty lines', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year', 'Year'])<0x0A>ax.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>ax.set_xlim(-1, 10)<0x0A><0x0A># Import duties<0x0A>import matplotlib.pyplot as plt<0x0A>import matplotlib.patches as mpatches<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue)'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties (as % of tax revenue) of Indonesia<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to rotational velocity/accumulation of motion)': 'Value': 'y'}}, 'data': {'values': [{'x': 'Year', 'y': 20.85}, {'x': 'field', 'y': 20.85}, {'x': 'type': 'quantitative', 'y': 20.85}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'variable', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(15, 15))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() )<0x0A>ax.set_yticklabels([''] + grupo_df['Country'].unique() )<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderaxespad=0.)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderaxespad=0.)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 3.8}, {'x': 'field', 'y': 1.9}, {'x': 'field', 'y': 1.9}, {'x': 'variable', 'y': 1.9}, {'x': 'field', 'y': 1.9}, {'x': 'variable', 'y': 1.9}, {'x': 'field', 'y': 1.9}, {'x': 'variable', 'y': 1.9}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = pd.DataFrame({'Year':['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020'], 'Rating':[rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year, rating_score_year
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.73 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:45<00:00,  5.28s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4210}, {'x': 1844, 'y': 838}, {'x': 4672, 'y': 2954}, {'x': 2228, 'y': 2104}, {'x': 4672, 'y': 2954}, {'x': 4298, 'y': 4210}, {'x': 5580, 'y': 4210}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.24}, {'x': 'Nike', 'y': 48.03}, {'x': 'Apple', 'y': 48.03}, {'x': 'Male', 'y': 24.11}, {'x': 'Rock', 'y': 239.74}, {'x': 'Sedan', 'y': 24.11}, {'x': 'Spanish', 'y': 48.03}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.85}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.3, 'y': 60.8}, {'x': 59.67, 'y': 60.8}, {'x': 243.67, 'y': 13.48}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7350, 'y': 364.56}, {'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 201.87}, {'x': 1919, 'y': 195.86}, {'x': 1924, 'y': 16.56}, {'x': 1928, 'y': 16.56}, {'x': 1930, 'y': 36.06}, {'x': 1931, 'y': 36.06}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 62.69}, {'x': 1820, 'y': 80.2}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1862, 'y': 252.51}, {'x': 1866, 'y': 256.69}, {'x': 1870, 'y': 267.69}, {'x': 1869, 'y': 110.75}, {'x': 1876, 'y': 267.69}, {'x': 1878, 'y': 267.69}, {'x': 1882, 'y': 267.69}, {'x': 1886, 'y': 101.01}, {'x': 1890, 'y': 267.69}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56.11}, {'x': 676, 'y': 32.1}, {'x': 492, 'y': 64.0}, {'x': 676, 'y': 56.11}, {'x': 492, 'y': 16.22}, {'x': 676, 'y': 64.0}, {'x': 492, 'y': 16.22}, {'x': 676, 'y': 56.11}, {'x': 676, 'y': 24.12}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.43}, {'x': 1814, 'y': 147.43}, {'x': 1821, 'y': 139.49}, {'x': 1826, 'y': 27.01}, {'x': 1835, 'y': 27.01}, {'x': 1840, 'y': 108.64}, {'x': 1849, 'y': 310.24}, {'x': 1856, 'y': 308.44}, {'x': 1864, 'y': 147.43}, {'x': 1870, 'y': 584.43}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4570, 'y': 61.53}, {'x': 3344, 'y': 55.03}, {'x': 4344, 'y': 55.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1926, 'y': 2888}, {'x': 1930, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.01}, {'x': 726, 'y': 121.85}, {'x': 1576, 'y': 37.01}, {'x': 1576, 'y': 37.01}, {'x': 2202, 'y': 364.5}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 3610}, {'x': 1809, 'y': 3610}, {'x': 1811, 'y': 4924}, {'x': 1813, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4870}, {'x': 1833, 'y': 3385}, {'x': 1840, 'y': 3400}, {'x': 1846, 'y': 4870}, {'x': 1856, 'y': 3400}, {'x': 1864, 'y': 1910}, {'x': 1874, 'y': 3400}, {'x': 1884, 'y': 1910}, {'x': 1890, 'y': 1910}, {'x': 1897, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1710, 'y': 529.79}, {'x': 3840, 'y': 624.99}, {'x': 384, 'y': 564.99}, {'x': 1710, 'y': 529.79}, {'x': 3840, 'y': 624.99}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:33<00:00,  7.68s/it]
[35m|[39m JSON to Vega conversion error rate: [31m70.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.12 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.6 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'x': 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 24.85}, {'x': 'field', 'y': 24.85}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of Dilemmas in Sokotocs)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.13}, {'x': 'y', 'y': 30.2}, {'x': 'x', 'y': 39.23}, {'x': 'y', 'y': 55.13}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(df, 'Year', 'Arable land (hectares) in Seychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_fertilizer_consumption(df_2015, 'Brazil')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = {'axes': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'y': 246}, {'x': 'nominal', 'y': 143}, {'x': 'nominal', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 38.65}, {'x': 'field', 'y': 47.58}, {'x': 'type', 'y': 37.05}, {'x': 'field', 'y': 49.58}, {'x': 'variable', 'y': 19.55}, {'x': 'field', 'y': 51.55}, {'x': 'variable', 'y': 19.55}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##########################################################################<0x0A># TODO: Draw a nested barplot to show bills by year and year using the function from the previous query. <0x0A>###########################################################<0x0A><0x0A># Create a list of columns to plot on<0x0A># Note: this is a function that will be used to create a barplot for each column.<0x0A>#############################################################<0x0A><0x0A># Create a list of barplots to plot on<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per hectare')<0x0A>Country_1981.grid(False)<0x0A>Country_1981.grid(False)<0x0A>Country_1981.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.sort_values('Year', ascending=False)<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df['Year'], grupo_df['mean'], color='g', edgecolor='k', linewidth=1)<0x0A>ax.set_ylabel('55/poverty lines')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 2)<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '55/poverty lines', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '55/poverty lines', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '55/poverty lines', 'Year'])<0x0A>ax.set_ylim(0, 2)<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '55/poverty lines', 'Year'])<0x0A>ax.set_yticklabels(['Year', '55/poverty lines', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year', 'Year'])<0x0A>ax.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Import duties<0x0A>import matplotlib.pyplot as plt<0x0A>import matplotlib.patches as patches<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A><0x0A># Import duties<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_du
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((intraneedle to incomplete information)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.85}, {'x': 'field', 'y': 5.85}, {'x': 'type': 'quantitative', 'y': 18.15}, {'x': 'field', 'y': 18.15}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A>percentage_sr_lanka.plot(kind='scatter', x='Year', y='Survived', color='purple', title='Percentage of babies born with low-birthweight in Sri Lanka', figsize=(15,15))<0x0A>plt.ylabel('S% of babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'variable', 'y': 7.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat = pd.DataFrame(households_sat, columns = ["Year", "% of households"])<0x0A>percentage_households_sat.plot(kind = "bar", figsize = (20, 20), color = "purple")<0x0A>plt.title("Percentage of households in Russian Federation that uses iodized salt")<0x0A>plt.xlabel("Year")<0x0A>plt.ylabel("% of households")<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() )<0x0A>ax.set_yticklabels([''] + grupo_df['Country'].unique() )<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderaxespad=0.)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderaxespad=0.)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 3.84}, {'x': 'field', 'y': 1.95}, {'x': 'field', 'y': 3.84}, {'x': 'variable', 'y': 1.95}, {'x': 'field', 'y': 1.95}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.98}, {'x': 'field', 'y': 2.98}, {'x': 'type', 'y': 2.98}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.12 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.6 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:49<00:00,  5.49s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4210}, {'x': 1844, 'y': 838}, {'x': 3696, 'y': 3785}, {'x': 4696, 'y': 2952}, {'x': 1844, 'y': 2952}, {'x': 5580, 'y': 4210}, {'x': 2228, 'y': 2104}, {'x': 4696, 'y': 2104}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 691}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.24}, {'x': 'Nike', 'y': 48.08}, {'x': 'Apple', 'y': 48.08}, {'x': 'Male', 'y': 24.11}, {'x': 'Rock', 'y': 239.74}, {'x': 'Sedan', 'y': 24.11}, {'x': 'Spanish', 'y': 48.08}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.85}, {'x': 'Dog', 'y': 8.29}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 255.33, 'y': 13.43}, {'x': 59.22, 'y': 60.66}, {'x': 153.69, 'y': 60.66}, {'x': 271.29, 'y': 60.66}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 364.51}, {'x': 712, 'y': 364.51}, {'x': 712, 'y': 364.51}, {'x': 4784, 'y': 227.01}, {'x': 712, 'y': 43.01}, {'x': 3784, 'y': 364.51}, {'x': 6784, 'y': 114.25}, {'x': 6784, 'y': 364.51}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 200.5}, {'x': 1919, 'y': 195.52}, {'x': 1924, 'y': 16.53}, {'x': 1928, 'y': 16.53}, {'x': 1930, 'y': 36.06}, {'x': 1931, 'y': 16.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 59.12}, {'x': 1816, 'y': 30.2}, {'x': 1818, 'y': 79.89}, {'x': 1820, 'y': 9.12}, {'x': 1822, 'y': 8.32}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1862, 'y': 252.51}, {'x': 1866, 'y': 256.69}, {'x': 1870, 'y': 110.79}, {'x': 1873, 'y': 268.69}, {'x': 1876, 'y': 108.55}, {'x': 1882, 'y': 268.69}, {'x': 1886, 'y': 108.55}, {'x': 1890, 'y': 268.69}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56.11}, {'x': 676, 'y': 32.1}, {'x': 712, 'y': 63.8}, {'x': 492, 'y': 16.22}, {'x': 572, 'y': 63.8}, {'x': 676, 'y': 56.11}, {'x': 492, 'y': 16.22}, {'x': 676, 'y': 24.01}, {'x': 492, 'y': 16.22}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.01}, {'x': 1814, 'y': 144.66}, {'x': 1821, 'y': 25.84}, {'x': 1828, 'y': 25.84}, {'x': 1836, 'y': 25.84}, {'x': 1844, 'y': 109.61}, {'x': 1854, 'y': 310.2}, {'x': 1859, 'y': 147.01}, {'x': 1867, 'y': 150.25}, {'x': 1874, 'y': 584.01}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4570, 'y': 61.52}, {'x': 3344, 'y': 61.52}, {'x': 3344, 'y': 55.00}, {'x': 1844, 'y': 55.00}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1926, 'y': 2888}, {'x': 1930, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.01}, {'x': 726, 'y': 121.85}, {'x': 1576, 'y': 37.01}, {'x': 1576, 'y': 37.01}, {'x': 1576, 'y': 40.25}, {'x': 1576, 'y': 364.51}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 3610}, {'x': 1809, 'y': 3610}, {'x': 1811, 'y': 4914}, {'x': 1813, 'y': 5760}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4870}, {'x': 1833, 'y': 3385}, {'x': 1840, 'y': 3400}, {'x': 1846, 'y': 4870}, {'x': 1856, 'y': 1910}, {'x': 1864, 'y': 4870}, {'x': 1876, 'y': 3400}, {'x': 1884, 'y': 1910}, {'x': 1890, 'y': 1910}, {'x': 1897, 'y': 3400}, {'x': 1899, 'y': 4870}, {'x': 1899, 'y': 3400}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1270, 'y': 529.89}, {'x': 3840, 'y': 624.99}, {'x': 384, 'y': 529.89}, {'x': 1270, 'y': 529.89}, {'x': 3840, 'y': 624.99}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|



















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:49<00:00,  8.47s/it]
[35m|[39m JSON to Vega conversion error rate: [31m70.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.12 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.68 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'x', 'y': 0.03}, {'x': 'y': 0.03}, {'x': 'x', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6.55}, {'x': 'field', 'y': 6.55}, {'x': 'variable', 'y': 18.05}, {'x': 'field', 'y': 18.05}, {'x': 'variable', 'y': 18.05}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihlomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.13}, {'x': 'y', 'y': 30.2}, {'x': 'x', 'y': 30.2}, {'x': 'y', 'y': 55.13}, {'x': 'x', 'y': 30.2}, {'x': 'y', 'y': 35.78}, {'x': 'x', 'y': 35.78}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(25,25))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.set_style("white")<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(right=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(right=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(top=True, bottom=True)<0x0A><0x0A># Plotting the graph<0x0A>sns.despine(left
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_fertilizer_consumption(df_2015, 'Brazil')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = {'axes': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'y': 246}, {'x': 'nominal', 'y': 143}, {'x': 'nominal', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.55}, {'x': 'field', 'y': 47.58}, {'x': 'type', 'y': 37.05}, {'x': 'field', 'y': 49.58}, {'x': 'variable', 'y': 12.55}, {'x': 'variable', 'y': 12.55}, {'x': 'field', 'y': 47.58}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##########################################################################<0x0A># TODO: Draw a nested barplot to show bills by year and year using the function from the previous query. <0x0A>###########################################################<0x0A><0x0A># Create a list of columns to plot on<0x0A># Note: this is a list of strings for strings, so we'll use them later.<0x0A>#############################################################<0x0A><0x0A># Create a list of colors to use in the plot<0x0A>#############################################################<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(15, 15))<0x0A><0x0A># Create a bar plot using pandas<0x0A>barplot = sns.barplot(x="Year", y="Bill", data=df_bill, ci=None, palette="rocket")<0x0A><0x0A># Set up the margins<0x0A>ax.set_title("Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A>ax.set_ylabel("All flow of Grenada from Development Assistance Committee")<0x0A><0x0A># Save the figure<0x0A>plt.savefig("graphs/Grenada_bill.png")<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per horogram')<0x0A>Country_1981.grid(False)<0x0A>Country_1981.grid(False)<0x0A>Country_1981.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', alpha=0.7, align='center')<0x0A>ax.set_ylabel('55/poverty lines')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 2)<0x0A>ax.set_yticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Import duties<0x0A>import matplotlib.pyplot as plt<0x0A>import matplotlib.patches as mpatches<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A><0x0A># Import duties<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to rotational and downward trajectory)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.05}, {'x': 'field', 'y': 5.05}, {'x': 'type', 'y': 12.05}, {'x': 'field', 'y': 5.05}, {'x': 'type', 'y': 12.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Country','Year','Birthday']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A>percentage_sr_lanka.plot(kind='bar', title='Percentage of babies born with low-birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('$% of Babies')<0x0A>plt.xlabel('')<0x0A>plt.xticks(rotation=90)<0x0A>plt.ylabel('$% of Babies')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'variable', 'y': 7.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat = pd.DataFrame(households_sat, columns = ["Year", "% of households"])<0x0A>percentage_households_sat.plot(kind = "bar", figsize = (20, 20), color = "purple")<0x0A>plt.title("Percentage of households in Russian Federation that uses iodized salt")<0x0A>plt.xlabel("Year")<0x0A>plt.ylabel("% of households")<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() <0x0A>ax.set_yticklabels([''] + grupo_df['Country'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 3.85}, {'x': 'y', 'y': 18.65}, {'x': 'y', 'y': 18.65}, {'x': 'x', 'y': 18.65}, {'x': 'y', 'y': 18.65}, {'x': 'y', 'y': 18.65}, {'x': 'x', 'y': 18.65}, {'x': 'y', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs weak (2e k/2000)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.01}, {'x': 'field', 'y': 2.01}, {'x': 'type': 'quantitative', 'y': 1.28}, {'x': 'field', 'y': 1.28}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.12 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.68 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:48<00:00,  5.41s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4210}, {'x': 2088, 'y': 2104}, {'x': 4640, 'y': 2956}, {'x': 5580, 'y': 4210}, {'x': 2088, 'y': 2104}, {'x': 4640, 'y': 2956}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7100}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 690}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 690}, {'x': 'Rock', 'y': 690}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.33}, {'x': 'Nike', 'y': 48.03}, {'x': 'Apple', 'y': 48.03}, {'x': 'Male', 'y': 24.11}, {'x': 'Rock', 'y': 24.11}, {'x': 'Sedan', 'y': 24.11}, {'x': 'Spanish', 'y': 48.03}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.85}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 154.18, 'y': 60.53}, {'x': 273.8, 'y': 13.48}, {'x': 54.43, 'y': 60.53}, {'x': 273.18, 'y': 60.53}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7551, 'y': 364.56}, {'x': 7551, 'y': 364.56}, {'x': 7551, 'y': 364.56}, {'x': 755, 'y': 364.56}, {'x': 755, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1914, 'y': 200}, {'x': 1919, 'y': 190}, {'x': 1924, 'y': 16}, {'x': 1928, 'y': 16}, {'x': 1930, 'y': 36}, {'x': 1932, 'y': 16}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 30.56}, {'x': 1818, 'y': 69.99}, {'x': 1820, 'y': 9.22}, {'x': 1822, 'y': 9.22}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1862, 'y': 252.51}, {'x': 1866, 'y': 256.69}, {'x': 1870, 'y': 110.66}, {'x': 1869, 'y': 268.89}, {'x': 1876, 'y': 268.89}, {'x': 1878, 'y': 107.61}, {'x': 1882, 'y': 268.89}, {'x': 1886, 'y': 107.61}, {'x': 1890, 'y': 268.89}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56.11}, {'x': 696, 'y': 32.1}, {'x': 712, 'y': 63.8}, {'x': 492, 'y': 16.21}, {'x': 572, 'y': 63.8}, {'x': 572, 'y': 16.21}, {'x': 696, 'y': 56.11}, {'x': 492, 'y': 16.21}, {'x': 696, 'y': 24.01}, {'x': 492, 'y': 16.21}, {'x': 696, 'y': 52.88}, {'x': 696, 'y': 24.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.01}, {'x': 1814, 'y': 144.66}, {'x': 1821, 'y': 25.84}, {'x': 1828, 'y': 25.84}, {'x': 1836, 'y': 310.2}, {'x': 1844, 'y': 109.61}, {'x': 1854, 'y': 308.4}, {'x': 1859, 'y': 147.01}, {'x': 1867, 'y': 150.25}, {'x': 1874, 'y': 576.85}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4570, 'y': 61.53}, {'x': 3344, 'y': 61.53}, {'x': 4084, 'y': 55.00}, {'x': 2438, 'y': 78.63}, {'x': 3070, 'y': 61.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1927, 'y': 2888}, {'x': 1933, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.01}, {'x': 726, 'y': 122.01}, {'x': 1576, 'y': 37.01}, {'x': 1576, 'y': 37.01}, {'x': 2202, 'y': 364.5}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 3608}, {'x': 1809, 'y': 3608}, {'x': 1811, 'y': 4924}, {'x': 1813, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4870}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4870}, {'x': 1840, 'y': 3385}, {'x': 1846, 'y': 1910}, {'x': 1854, 'y': 4870}, {'x': 1858, 'y': 3385}, {'x': 1864, 'y': 4870}, {'x': 1874, 'y': 3385}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1270, 'y': 529.79}, {'x': 3840, 'y': 624.99}, {'x': 384, 'y': 529.79}, {'x': 1270, 'y': 529.79}, {'x': 3840, 'y': 624.99}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------


















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [02:41<00:08,  8.47s/it]
[35m|[39m JSON to Vega conversion error rate: [31m70.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.12 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.68 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'x', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 24.85}, {'x': 'field', 'y': 24.85}, {'x': 'variable', 'y': 18.05}, {'x': 'field', 'y': 18.05}, {'x': 'variable', 'y': 18.05}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihlomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 30.25}, {'x': 'type', 'y': 91.81}, {'x': 'field', 'y': 55.33}, {'x': 'field', 'y': 30.25}, {'x': 'variable', 'y': 28.81}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(df, 'Year', 'Arable land (hectares) in Seychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_top_features(df, 'Brazil', 'fertilizer consumption in Brazil as a percentage of production')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = {'axes': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'y': 246}, {'x': 'nominal', 'y': 143}, {'x': 'nominal', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.55}, {'x': 'field', 'y': 47.58}, {'x': 'type', 'y': 37.05}, {'x': 'field', 'y': 49.56}, {'x': 'variable', 'y': 12.55}, {'x': 'variable', 'y': 12.55}, {'x': 'field', 'y': 47.58}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##########################################################################<0x0A># TODO: Draw a nested barplot to show bills by year and year using the function from the previous query. <0x0A>###########################################################<0x0A><0x0A># Create a list of columns to plot on<0x0A># Note: this is a function that will be used to create a barplot for each column.<0x0A>#############################################################<0x0A><0x0A># Create a list of barplots to plot on<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per hectare')<0x0A>Country_1981.grid(False)<0x0A>Country_1981.grid(False)<0x0A>Country_1981.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', alpha=0.7, align='center')<0x0A>ax.set_ylabel('55/poverty lines')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 2)<0x0A>ax.set_yticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Import duties<0x0A>import matplotlib.pyplot as plt<0x0A>import matplotlib.patches as mpatches<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A><0x0A># Import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind='bar', color='green',
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to rotational and downward)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.05}, {'x': 'field', 'y': 5.05}, {'x': 'type', 'y': 12.05}, {'x': 'field', 'y': 5.05}, {'x': 'variable', 'y': 12.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A>percentage_sr_lanka.plot(kind='bar', title='Percentage of babies born with low-birthweight in Sri Lanka', color='purple')<0x0A>plt.ylabel('$% of Babies')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.ylabel('$% of Babies')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'variable', 'y': 7.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(15, 15))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('% of households')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() <0x0A>ax.set_yticklabels([''] + grupo_df['Country'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 3.84}, {'x': 'field', 'y': 1.86}, {'x': 'field', 'y': 1.86}, {'x': 'variable', 'y': 1.86}, {'x': 'field', 'y': 1.86}, {'x': 'variable', 'y': 1.86}, {'x': 'field', 'y': 1.86}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength Index (Cs weak (2e [8000]}})'}, 'data': {'values': [{'x': 'Year', 'y': 2.01}, {'x': 'field', 'y': 2.01}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.12 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.68 [35m|

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:43<00:00,  8.20s/it]
[36m[1mEpoch :[39m[22m 35 [32m[1m | Loss :[39m[22m 1.6049940586090088



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:39<00:05,  5.21s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4210}, {'x': 2228, 'y': 2104}, {'x': 4672, 'y': 2956}, {'x': 2228, 'y': 838}, {'x': 4672, 'y': 2956}, {'x': 4672, 'y': 4210}, {'x': 5580, 'y': 4210}, {'x': 3344, 'y': 3790}, {'x': 4672, 'y': 2104}, {'x': 5580, 'y': 4210}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.33}, {'x': 'Nike', 'y': 48.03}, {'x': 'Apple', 'y': 48.03}, {'x': 'Male', 'y': 24.11}, {'x': 'Rock', 'y': 239.74}, {'x': 'Sedan', 'y': 24.11}, {'x': 'Spanish', 'y': 48.03}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.85}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 154.18, 'y': 60.73}, {'x': 273.88, 'y': 13.49}, {'x': 54.43, 'y': 60.73}, {'x': 273.18, 'y': 60.73}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7150, 'y': 364.01}, {'x': 6750, 'y': 41.15}, {'x': 3750, 'y': 364.01}, {'x': 6750, 'y': 114.11}, {'x': 4750, 'y': 227.01}, {'x': 3750, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 200}, {'x': 1918, 'y': 190}, {'x': 1921, 'y': 16}, {'x': 1924, 'y': 16}, {'x': 1927, 'y': 16}, {'x': 1929, 'y': 36}, {'x': 1932, 'y': 36}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 30.56}, {'x': 1818, 'y': 79.99}, {'x': 1820, 'y': 9.32}, {'x': 1822, 'y': 9.32}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.51}, {'x': 1866, 'y': 256.68}, {'x': 1869, 'y': 263.38}, {'x': 1872, 'y': 110.59}, {'x': 1877, 'y': 263.38}, {'x': 1882, 'y': 269.08}, {'x': 1886, 'y': 101.01}, {'x': 1890, 'y': 263.38}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56.11}, {'x': 576, 'y': 64.0}, {'x': 676, 'y': 32.1}, {'x': 492, 'y': 16.22}, {'x': 576, 'y': 64.0}, {'x': 676, 'y': 56.11}, {'x': 492, 'y': 16.22}, {'x': 676, 'y': 24.0}, {'x': 492, 'y': 16.22}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.01}, {'x': 1814, 'y': 148.44}, {'x': 1821, 'y': 25.84}, {'x': 1826, 'y': 25.84}, {'x': 1835, 'y': 310.2}, {'x': 1844, 'y': 109.64}, {'x': 1850, 'y': 308.4}, {'x': 1858, 'y': 148.44}, {'x': 1866, 'y': 150.26}, {'x': 1872, 'y': 584.01}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4570, 'y': 61.53}, {'x': 3344, 'y': 61.53}, {'x': 3064, 'y': 55.00}, {'x': 4088, 'y': 55.00}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1926, 'y': 2888}, {'x': 1932, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.01}, {'x': 726, 'y': 122.01}, {'x': 1576, 'y': 37.01}, {'x': 1576, 'y': 37.01}, {'x': 2202, 'y': 364.5}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentled Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 3608}, {'x': 1809, 'y': 3608}, {'x': 1812, 'y': 4944}, {'x': 1815, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4870}, {'x': 1831, 'y': 1910}, {'x': 1838, 'y': 4870}, {'x': 1841, 'y': 3404}, {'x': 1843, 'y': 3404}, {'x': 1846, 'y': 1910}, {'x': 1851, 'y': 3404}, {'x': 1856, 'y': 3404}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1270, 'y': 529.79}, {'x': 3840, 'y': 624.99}, {'x': 384, 'y': 529.79}, {'x': 1270, 'y': 529.79}, {'x': 3840, 'y': 624.99}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:44<00:00,  5.24s/it]


















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [03:06<00:09,  9.37s/it]
[35m|[39m JSON to Vega conversion error rate: [31m70.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.12 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.67 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'x', 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'x', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'variable', 'y': 605}, {'x': 'field', 'y': 605}, {'x': 'variable', 'y': 605}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of total non-fertiliser discharges)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.2}, {'x': 'y', 'y': 30.2}, {'x': 'x', 'y': 35.69}, {'x': 'y', 'y': 55.2}, {'x': 'x', 'y': 35.69}, {'x': 'y', 'y': 55.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>sns.set(font_scale=2)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True, right=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True, right=True)<0x0A><0x0A>sns.despine(left=True,
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_fertilizer_consumption(df_2015, 'Brazil')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = {'axes': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'y': 246}, {'x': 'nominal', 'y': 143}, {'x': 'nominal', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.55}, {'x': 'field', 'y': 47.58}, {'x': 'type', 'y': 37.06}, {'x': 'field', 'y': 49.56}, {'x': 'variable', 'y': 12.55}, {'x': 'variable', 'y': 37.06}, {'x': 'field', 'y': 47.56}, {'x': 'variable', 'y': 12.55}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##########################################################################<0x0A># TODO: Draw a nested barplot to show bills by year and year using the function from the previous query. <0x0A>###########################################################<0x0A><0x0A># Create a list of columns to plot on<0x0A># Note: this is a list of strings for strings, so we'll use them later.<0x0A>#############################################################<0x0A><0x0A># Create a list of colors to use in the plot<0x0A>#############################################################<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(15, 15))<0x0A><0x0A># Create a bar plot using pandas<0x0A>barplot = sns.barplot(x="Year", y="Bill", data=df_bill, ci=None, palette="rocket")<0x0A><0x0A># Set up the margins<0x0A>ax.set_title("Net bilateral aid flow of Grenada from Development Assistance Committee")<0x0A>ax.set_ylabel("All flow of Grenada from Development Assistance Committee")<0x0A><0x0A># Save the figure<0x0A>fig = plt.gcf()<0x0A><0x0A># Save the figure<0x0A>fig.savefig("graphs/Grenada_bill.png")<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per horogram')<0x0A>Country_1981.grid(False)<0x0A>Country_1981.grid(False)<0x0A>Country_1981.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', alpha=0.7, align='center')<0x0A>ax.set_ylabel('55/poverty lines')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 2)<0x0A>ax.set_yticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Import duties<0x0A>import matplotlib.pyplot as plt<0x0A>import matplotlib.patches as mpatches<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A><0x0A># Import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind='bar', color='green'
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to rotational and downward trajectory)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.05}, {'x': 'field', 'y': 5.05}, {'x': 'type', 'y': 12.05}, {'x': 'field', 'y': 5.05}, {'x': 'type', 'y': 12.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Year','Country']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat = pd.DataFrame(households_sat, columns = ["Year", "% of households"])<0x0A>percentage_households_sat.plot(kind = "bar", figsize = (20, 20), color = "purple")<0x0A>plt.title("Percentage of households in Russian Federation that uses iodized salt")<0x0A>plt.xlabel("Year")<0x0A>plt.ylabel("% of households")<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() <0x0A>ax.set_yticklabels([''] + grupo_df['Country'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31mgraph = pd.DataFrame({'Year':['2015', '2016', '2017'], 'Rating regarding strength of legal rights index in Croatia':[('Strength Index (C = %0.00001'), 'Rating'), 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 'Rating', 
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.12 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.67 [35m|

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:24<00:00, 10.23s/it]
[36m[1mEpoch :[39m[22m 36 [32m[1m | Loss :[39m[22m 1.5968825817108154



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:39<00:05,  5.39s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4216}, {'x': 2070, 'y': 835}, {'x': 4880, 'y': 2954}, {'x': 5580, 'y': 4216}, {'x': 3620, 'y': 3785}, {'x': 4880, 'y': 2104}, {'x': 2070, 'y': 2104}, {'x': 5580, 'y': 4216}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7100}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 690}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 690}, {'x': 'Rock', 'y': 690}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 24.11}, {'x': 'Dog', 'y': 120.33}, {'x': 'Nike', 'y': 48.09}, {'x': 'Apple', 'y': 48.09}, {'x': 'Male', 'y': 24.11}, {'x': 'Rock', 'y': 239.74}, {'x': 'Sedan', 'y': 24.11}, {'x': 'Spanish', 'y': 48.09}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.85}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 259.23, 'y': 13.43}, {'x': 59.79, 'y': 60.76}, {'x': 243.68, 'y': 60.76}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7150, 'y': 364.01}, {'x': 7150, 'y': 364.01}, {'x': 3725, 'y': 364.01}, {'x': 715, 'y': 364.01}, {'x': 715, 'y': 364.01}, {'x': 715, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 201}, {'x': 1918, 'y': 198}, {'x': 1921, 'y': 16}, {'x': 1925, 'y': 16}, {'x': 1929, 'y': 16}, {'x': 1932, 'y': 36}, {'x': 1936, 'y': 162}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 59.14}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 79.89}, {'x': 1820, 'y': 80.24}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.51}, {'x': 1866, 'y': 256.69}, {'x': 1869, 'y': 110.79}, {'x': 1873, 'y': 268.46}, {'x': 1878, 'y': 268.46}, {'x': 1881, 'y': 268.46}, {'x': 1886, 'y': 101.06}, {'x': 1889, 'y': 268.46}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56.11}, {'x': 576, 'y': 63.8}, {'x': 676, 'y': 32.19}, {'x': 492, 'y': 16.13}, {'x': 576, 'y': 63.8}, {'x': 676, 'y': 56.11}, {'x': 492, 'y': 16.13}, {'x': 676, 'y': 24.09}, {'x': 492, 'y': 16.13}, {'x': 676, 'y': 56.11}, {'x': 676, 'y': 24.09}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.01}, {'x': 1821, 'y': 147.46}, {'x': 1828, 'y': 27.01}, {'x': 1836, 'y': 27.01}, {'x': 1844, 'y': 310.2}, {'x': 1852, 'y': 308.4}, {'x': 1859, 'y': 147.46}, {'x': 1866, 'y': 150.22}, {'x': 1872, 'y': 584.01}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4570, 'y': 61.53}, {'x': 3344, 'y': 61.53}, {'x': 3138, 'y': 55.00}, {'x': 4384, 'y': 55.00}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1927, 'y': 2888}, {'x': 1932, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.01}, {'x': 726, 'y': 122.01}, {'x': 1576, 'y': 37.01}, {'x': 1576, 'y': 37.01}, {'x': 2202, 'y': 364.51}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 3610}, {'x': 1809, 'y': 3610}, {'x': 1811, 'y': 4914}, {'x': 1813, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4886}, {'x': 1831, 'y': 3386}, {'x': 1837, 'y': 4886}, {'x': 1840, 'y': 3386}, {'x': 1846, 'y': 1911}, {'x': 1852, 'y': 4886}, {'x': 1859, 'y': 3386}, {'x': 1869, 'y': 4886}, {'x': 1875, 'y': 3386}, {'x': 1879, 'y': 4886}, {'x': 1889, 'y': 1911}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1270, 'y': 529.79}, {'x': 3840, 'y': 624.99}, {'x': 384, 'y': 564.99}, {'x': 1270, 'y': 529.79}, {'x': 3840, 'y': 624.99}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:43<00:00,  5.20s/it]


















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [03:17<00:10, 10.53s/it]
[35m|[39m JSON to Vega conversion error rate: [31m65.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.11 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.59 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'x', 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'x', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6.55}, {'x': 'field', 'y': 6.55}, {'x': 'variable', 'y': 18.05}, {'x': 'field', 'y': 18.05}, {'x': 'variable', 'y': 18.05}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of total non-fertiliser discharges)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.28}, {'x': 'y', 'y': 30.2}, {'x': 'x', 'y': 30.2}, {'x': 'y', 'y': 55.28}, {'x': 'x', 'y': 28.83}, {'x': 'y', 'y': 28.83}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>sns.set(font_scale=2)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True, right=True)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_fertilizer_consumption(df_2015, 'Brazil')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31mgrupo_bairro = {'axes': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 143}, {'x': 'y': 246}, {'x': 'nominal', 'y': 143}, {'x': 'nominal', 'y': 143}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.98}, {'x': 'field', 'y': 48.66}, {'x': 'variable', 'y': 19.55}, {'x': 'field', 'y': 7.25}, {'x': 'variable', 'y': 37.06}, {'x': 'variable', 'y': 49.56}, {'x': 'field', 'y': 7.25}, {'x': 'variable', 'y': 49.56}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##########################################################################<0x0A># TODO: Draw a nested barplot to show bills by year and year using the function from the previous query. <0x0A>###########################################################<0x0A><0x0A># Create a list of strings for each year<0x0A>Strings = ["Year", "Bill", "Bills", "Bills_2017", "Bills_2018", "Bills_2019", "Bills_2020", "Bills_2021", "Bills_2022", "Bills_2023", "Bills_2024", "Bills_2025", "Bills_2026", "Bills_2027", "Bills_2028", "Bills_2029", "Bills_2030", "Bills_2031", "Bills_2032", "Bills_2033", "Bills_2034", "Bills_2035", "Bills_2036", "Bills_2037", "Bills_2038", "Bills_2039", "Bills_204", "Bills_2041", "Bills_2042", "Bills_2043", "Bills_2044", "Bills_2045", "Bills_2046", "Bills_2047", "Bills_2048", "Bills_2049", "Bills_205", "Bills_2059", "Bills_206", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bill
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),color='green')<0x0A>plt.xlabel('Country')<0x0A>plt.ylabel('Yield by per horogram')<0x0A>plt.title('Cereal yield in different countries as per the survey of 1981')<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', alpha=0.7, align='center')<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 2)<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 2)<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Import duties<0x0A>import matplotlib.pyplot as plt<0x0A>import matplotlib.patches as patches<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A><0x0A># Import duties<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_du
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((intramental to housing)/normalized)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.85}, {'x': 'field', 'y': 5.85}, {'x': 'type', 'y': 12.05}, {'x': 'field', 'y': 12.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Country']).sum()<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by=['Country'], ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'field', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'variable', 'y': 7.8}, {'x': 'variable', 'y': 7.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat = pd.DataFrame(households_sat, columns = ["Year", "% of households"])<0x0A>percentage_households_sat.plot(kind = "bar", figsize = (20, 20), color = "purple")<0x0A>plt.title("Percentage of households in Russian Federation that uses iodized salt")<0x0A>plt.xlabel("Year")<0x0A>plt.ylabel("% of households")<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() <0x0A>ax.set_yticklabels([''] + grupo_df['Country'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05))<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05))<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05))<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05))<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05))<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05))<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05))<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05))<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05))<0x0A><0x0A># Setting the legend<0x0A>ax.legend(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'field', 'y': 2.08}, {'x': 'type', 'y': 2.08}, {'x': 'field', 'y': 2.08}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.11 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.59 [35m|

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:21<00:00, 10.07s/it]
[36m[1mEpoch :[39m[22m 37 [32m[1m | Loss :[39m[22m 1.5830051898956299




















100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:47<00:00,  5.36s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4216}, {'x': 2228, 'y': 2108}, {'x': 4672, 'y': 2961}, {'x': 2228, 'y': 835}, {'x': 4672, 'y': 2961}, {'x': 5580, 'y': 4216}, {'x': 3622, 'y': 3785}, {'x': 4672, 'y': 2108}, {'x': 5580, 'y': 4216}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 691}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 24.14}, {'x': 'Dog', 'y': 120.33}, {'x': 'Nike', 'y': 48.09}, {'x': 'Apple', 'y': 48.09}, {'x': 'Male', 'y': 24.14}, {'x': 'Rock', 'y': 27.78}, {'x': 'Sedan', 'y': 24.14}, {'x': 'Spanish', 'y': 48.09}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.85}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 154.18, 'y': 60.73}, {'x': 288.3, 'y': 60.73}, {'x': 288.34, 'y': 13.48}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7350, 'y': 364.55}, {'x': 3850, 'y': 364.55}, {'x': 735, 'y': 364.55}, {'x': 6750, 'y': 42.85}, {'x': 735, 'y': 114.14}, {'x': 3850, 'y': 364.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 201.87}, {'x': 1918, 'y': 195.52}, {'x': 1921, 'y': 16.53}, {'x': 1925, 'y': 16.53}, {'x': 1929, 'y': 16.53}, {'x': 1932, 'y': 36.06}, {'x': 1936, 'y': 16.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 59.14}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 79.98}, {'x': 1820, 'y': 80.24}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.51}, {'x': 1866, 'y': 256.68}, {'x': 1869, 'y': 110.79}, {'x': 1873, 'y': 268.46}, {'x': 1878, 'y': 107.94}, {'x': 1881, 'y': 268.46}, {'x': 1886, 'y': 268.46}, {'x': 1889, 'y': 268.46}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 576, 'y': 640}, {'x': 576, 'y': 16}, {'x': 622, 'y': 32}, {'x': 622, 'y': 640}, {'x': 492, 'y': 16}, {'x': 492, 'y': 64}, {'x': 622, 'y': 5600}, {'x': 492, 'y': 640}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.43}, {'x': 1814, 'y': 146.49}, {'x': 1821, 'y': 25.86}, {'x': 1826, 'y': 25.86}, {'x': 1835, 'y': 310.22}, {'x': 1842, 'y': 109.64}, {'x': 1849, 'y': 308.11}, {'x': 1856, 'y': 146.49}, {'x': 1866, 'y': 150.38}, {'x': 1872, 'y': 578.89}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4570, 'y': 61.53}, {'x': 3344, 'y': 61.53}, {'x': 3064, 'y': 55.00}, {'x': 4088, 'y': 55.00}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2886}, {'x': 1926, 'y': 2886}, {'x': 1932, 'y': 2886}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.01}, {'x': 726, 'y': 122.01}, {'x': 1576, 'y': 37.01}, {'x': 1576, 'y': 37.01}, {'x': 1576, 'y': 39.01}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 3610}, {'x': 1809, 'y': 3610}, {'x': 1811, 'y': 4914}, {'x': 1813, 'y': 5760}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1824, 'y': 4870}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4870}, {'x': 1840, 'y': 3385}, {'x': 1846, 'y': 4870}, {'x': 1854, 'y': 3385}, {'x': 1858, 'y': 4870}, {'x': 1864, 'y': 1910}, {'x': 1872, 'y': 3385}, {'x': 1878, 'y': 4870}, {'x': 1884, 'y': 1910}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1270, 'y': 529.79}, {'x': 3840, 'y': 624.99}, {'x': 384, 'y': 564.99}, {'x': 1270, 'y': 529.79}, {'x': 3840, 'y': 624.99}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [02:56<00:09,  9.94s/it]
[35m|[39m JSON to Vega conversion error rate: [31m60.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.7 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'x', 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'x', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'variable', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'variable', 'y': 6050}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of total non-fertiliser discharges)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.2}, {'x': 'y', 'y': 30.2}, {'x': 'x', 'y': 35.69}, {'x': 'y', 'y': 55.2}, {'x': 'x', 'y': 35.69}, {'x': 'y', 'y': 55.2}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>sns.set(font_scale=2)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True, right=True)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_fertilizer_consumption(df_2015, 'Brazil')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 14.15}, {'x': 'field', 'y': 14.15}, {'x': 'variable', 'y': 14.15}, {'x': 'field', 'y': 14.15}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 13.65}, {'x': 'field', 'y': 47.88}, {'x': 'type', 'y': 37.06}, {'x': 'field', 'y': 49.56}, {'x': 'variable', 'y': 13.65}, {'x': 'variable', 'y': 13.65}, {'x': 'field', 'y': 47.88}, {'x': 'variable', 'y': 13.65}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##########################################################################<0x0A># TODO: Draw a nested barplot to show bills by year and year using the function from the previous query. <0x0A>###########################################################<0x0A><0x0A># Create a list of strings for each year<0x0A>Strings = ["Year", "Bill", "Bills", "Bills_2017", "Bills_2018", "Bills_2019", "Bills_2020", "Bills_2021", "Bills_2022", "Bills_2023", "Bills_2024", "Bills_2025", "Bills_2026", "Bills_2027", "Bills_2028", "Bills_2029", "Bills_2030", "Bills_2031", "Bills_2032", "Bills_2033", "Bills_2034", "Bills_2035", "Bills_2036", "Bills_2037", "Bills_2038", "Bills_2039", "Bills_204", "Bills_2041", "Bills_2042", "Bills_2043", "Bills_2044", "Bills_2045", "Bills_2046", "Bills_2047", "Bills_2048", "Bills_2049", "Bills_205", "Bills_2059", "Bills_206", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bill
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per horoctogram')<0x0A>Country_1981.grid(False)<0x0A>Country_1981.grid(False)<0x0A>Country_1981.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A> grupo_df.plot(kind='bar', color='#173558', figsize=(15,15))<0x0A>plt.title('Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A>plt.ylabel('5%/poverty lines')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Import duties<0x0A>import matplotlib.pyplot as plt<0x0A>import matplotlib.patches as patches<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A><0x0A># Import duties<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_du
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((intramental to housing)/accumulation)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 22.85}, {'x': 'field', 'y': 22.85}, {'x': 'type', 'y': 22.85}, {'x': 'field', 'y': 22.85}, {'x': 'type', 'y': 22.85}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = percentage_sr_lanka.sort_values(by='percentage_sr_lanka', ascending=False)<0x0A><0x0A>g = sns.catplot(x="percentage_sr_lanka", y="percentage_sr_lanka", data=percentage_sr_lanka, kind="point", height=10, aspect=1.5, palette="muted")<0x0A>g.set_axis_labels("{0: ", "20": "{0: ", "40": "{0: ", "40: ", "50": "{0: ", "50": "{0: ", "50": "{0: ", "50": "{0: ", "50": "{0: ", "50": "{0: ", "50: ", "50: "}]", ": ".join
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.8}, {'x': 'field', 'y': 78}, {'x': 'variable', 'y': 78}, {'x': 'field', 'y': 78}, {'x': 'variable', 'y': 78}, {'x': 'variable', 'y': 78}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat = pd.DataFrame(households_sat, columns = ["Year", "% of households"])<0x0A>percentage_households_sat.plot(kind = "bar", figsize = (20, 20), color = "purple")<0x0A>plt.title("Percentage of households in Russian Federation that uses iodized salt")<0x0A>plt.xlabel("Year")<0x0A>plt.ylabel("% of households")<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() <0x0A>ax.set_yticklabels([''] + grupo_df['Country'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y + % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 18.65}, {'x': 'y', 'y': 3.85}, {'x': 'y', 'y': 18.65}, {'x': 'y', 'y': 18.65}, {'x': 'x', 'y': 18.65}, {'x': 'y', 'y': 18.65}, {'x': 'y', 'y': 18.65}, {'x': 'x', 'y': 18.65}, {'x': 'y', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs weak (2e k/2000)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.01}, {'x': 'field', 'y': 2.01}, {'x': 'type', 'y': 2.01}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.7 [35m|

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:59<00:00,  8.96s/it]
[36m[1mEpoch :[39m[22m 38 [32m[1m | Loss :[39m[22m 1.4897513389587402



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:40<00:05,  5.47s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1974, 'y': 4218}, {'x': 5350, 'y': 4218}, {'x': 2078, 'y': 2108}, {'x': 4622, 'y': 2964}, {'x': 5350, 'y': 4218}, {'x': 2078, 'y': 2108}, {'x': 4622, 'y': 2964}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.14}, {'x': 'USA', 'y': 24.14}, {'x': 'Dog', 'y': 120.33}, {'x': 'Nike', 'y': 48.09}, {'x': 'Apple', 'y': 48.09}, {'x': 'Male', 'y': 24.14}, {'x': 'Rock', 'y': 27.78}, {'x': 'Sedan', 'y': 24.14}, {'x': 'Spanish', 'y': 48.09}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.85}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 154.18, 'y': 60.73}, {'x': 288.6, 'y': 60.73}, {'x': 288.6, 'y': 13.48}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7350, 'y': 364.01}, {'x': 735, 'y': 364.01}, {'x': 735, 'y': 364.01}, {'x': 735, 'y': 364.01}, {'x': 735, 'y': 364.01}, {'x': 735, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 200.8}, {'x': 1919, 'y': 195.82}, {'x': 1923, 'y': 16.55}, {'x': 1928, 'y': 16.55}, {'x': 1929, 'y': 16.55}, {'x': 1932, 'y': 36.05}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 39.2}, {'x': 1818, 'y': 79.99}, {'x': 1820, 'y': 9.32}, {'x': 1822, 'y': 9.32}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.51}, {'x': 1866, 'y': 256.68}, {'x': 1869, 'y': 268.46}, {'x': 1872, 'y': 110.54}, {'x': 1877, 'y': 268.46}, {'x': 1882, 'y': 268.46}, {'x': 1886, 'y': 101.01}, {'x': 1890, 'y': 268.46}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 676, 'y': 32}, {'x': 492, 'y': 64}, {'x': 570, 'y': 16}, {'x': 676, 'y': 32}, {'x': 492, 'y': 64}, {'x': 676, 'y': 56}, {'x': 712, 'y': 24}, {'x': 492, 'y': 16}, {'x': 676, 'y': 56}, {'x': 676, 'y': 24}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.87}, {'x': 1814, 'y': 144.66}, {'x': 1821, 'y': 25.84}, {'x': 1826, 'y': 25.84}, {'x': 1835, 'y': 25.84}, {'x': 1840, 'y': 109.61}, {'x': 1847, 'y': 310.2}, {'x': 1852, 'y': 308.4}, {'x': 1859, 'y': 147.66}, {'x': 1867, 'y': 150.25}, {'x': 1874, 'y': 576.89}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4550, 'y': 61.53}, {'x': 3340, 'y': 61.53}, {'x': 4090, 'y': 55.00}, {'x': 2838, 'y': 78.63}, {'x': 3060, 'y': 61.53}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2888}, {'x': 1926, 'y': 2888}, {'x': 1932, 'y': 2888}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.09}, {'x': 726, 'y': 122.03}, {'x': 1576, 'y': 37.09}, {'x': 1576, 'y': 40.2}, {'x': 2202, 'y': 364.5}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentded Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 3610}, {'x': 1809, 'y': 3610}, {'x': 1811, 'y': 4914}, {'x': 1813, 'y': 5760}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4870}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4870}, {'x': 1840, 'y': 3385}, {'x': 1846, 'y': 4870}, {'x': 1854, 'y': 3385}, {'x': 1858, 'y': 4870}, {'x': 1864, 'y': 1910}, {'x': 1872, 'y': 3385}, {'x': 1877, 'y': 4870}, {'x': 1882, 'y': 1910}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1272, 'y': 529.05}, {'x': 3848, 'y': 624.92}, {'x': 3848, 'y': 529.05}, {'x': 1272, 'y': 564.73}, {'x': 3848, 'y': 624.92}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:45<00:00,  5.26s/it]

















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [02:55<00:09,  9.80s/it]
[35m|[39m JSON to Vega conversion error rate: [31m60.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.64 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'x', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6.55}, {'x': 'field', 'y': 6.55}, {'x': 'variable', 'y': 18.05}, {'x': 'field', 'y': 7.05}, {'x': 'variable', 'y': 7.05}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihlomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.23}, {'x': 'y', 'y': 30.2}, {'x': 'x', 'y': 30.2}, {'x': 'y', 'y': 55.23}, {'x': 'x', 'y': 28.83}, {'x': 'y', 'y': 36.23}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(train_df, 'Year', 'Arable land (hectares) in Seychelles', '-')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_fertilizer_consumption(df_2015, 'Brazil')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 14.15}, {'x': 'field', 'y': 14.15}, {'x': 'variable', 'y': 14.15}, {'x': 'field', 'y': 14.15}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 13.65}, {'x': 'field', 'y': 47.66}, {'x': 'type', 'y': 37.06}, {'x': 'field', 'y': 49.56}, {'x': 'type', 'y': 13.65}, {'x': 'field', 'y': 7.25}, {'x': 'variable', 'y': 46.66}, {'x': 'variable', 'y': 13.66}, {'x': 'field', 'y': 7.25}, {'x': 'variable', 'y': 46.66}, {'x': 'variable', 'y': 13.66}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##########################################################################<0x0A># TODO: Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>###########################################################################<0x0A># Load the example dataset<0x0A>#################################
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),title='Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield by per horoctogram')<0x0A>Country_1981.grid(False)<0x0A>Country_1981.grid(False)<0x0A>Country_1981.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 2)<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 2)<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '5%/poverty lines'])<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '5%/poverty lines'])<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '5%/poverty lines'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_ytick
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Import duties<0x0A>import matplotlib.pyplot as plt<0x0A>import matplotlib.patches as mpatches<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A><0x0A># Import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['top'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to rotational symmetry/geometry)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.05}, {'x': 'field', 'y': 5.05}, {'x': 'type', 'y': 12.05}, {'x': 'field', 'y': 5.05}, {'x': 'type', 'y': 12.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Country']).sum()<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by=['Country'], ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat = pd.DataFrame(households_sat, columns = ["Year", "% of households"])<0x0A>percentage_households_sat.plot(kind = "bar", figsize = (20, 20), color = "purple")<0x0A>plt.title("Percentage of households in Russian Federation that uses iodized salt")<0x0A>plt.xlabel("Year")<0x0A>plt.ylabel("% of households")<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() <0x0A>ax.set_yticklabels([''] + grupo_df['Country'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05))<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05))<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05))<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05))<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05))<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05))<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05))<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05))<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.25, 1.05))<0x0A><0x0A># Setting the legend<0x0A>ax.legend(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'field', 'y': 2.08}, {'x': 'type', 'y': 2.08}, {'x': 'field', 'y': 2.08}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.64 [35m|

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:59<00:00,  8.97s/it]
[36m[1mEpoch :[39m[22m 39 [32m[1m | Loss :[39m[22m 1.265371322631836



















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:47<00:06,  6.16s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5580, 'y': 4218}, {'x': 1844, 'y': 2956}, {'x': 2680, 'y': 2108}, {'x': 4676, 'y': 2956}, {'x': 1844, 'y': 4218}, {'x': 2680, 'y': 2108}, {'x': 4676, 'y': 2956}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.13}, {'x': 'USA', 'y': 24.16}, {'x': 'Dog', 'y': 120.39}, {'x': 'Nike', 'y': 48.09}, {'x': 'Apple', 'y': 48.09}, {'x': 'Male', 'y': 24.16}, {'x': 'Rock', 'y': 24.16}, {'x': 'Sedan', 'y': 24.16}, {'x': 'Spanish', 'y': 48.09}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.85}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 154.18, 'y': 60.73}, {'x': 273.88, 'y': 13.49}, {'x': 54.43, 'y': 60.73}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7350, 'y': 114.12}, {'x': 3850, 'y': 364.56}, {'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}, {'x': 735, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 201.86}, {'x': 1918, 'y': 198.55}, {'x': 1921, 'y': 16.53}, {'x': 1925, 'y': 16.53}, {'x': 1929, 'y': 16.53}, {'x': 1932, 'y': 36.06}, {'x': 1935, 'y': 198.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 59.12}, {'x': 1816, 'y': 31.09}, {'x': 1818, 'y': 79.99}, {'x': 1820, 'y': 80.24}, {'x': 1822, 'y': 9.31}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.59}, {'x': 1866, 'y': 256.62}, {'x': 1869, 'y': 263.39}, {'x': 1872, 'y': 110.59}, {'x': 1877, 'y': 263.39}, {'x': 1882, 'y': 269.22}, {'x': 1886, 'y': 101.06}, {'x': 1890, 'y': 263.39}, {'x': 1887, 'y': 101.06}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 606, 'y': 32}, {'x': 464, 'y': 64}, {'x': 576, 'y': 16}, {'x': 606, 'y': 56}, {'x': 464, 'y': 16}, {'x': 712, 'y': 24}, {'x': 242, 'y': 24}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.87}, {'x': 1814, 'y': 148.44}, {'x': 1821, 'y': 138.48}, {'x': 1826, 'y': 25.84}, {'x': 1835, 'y': 28.09}, {'x': 1842, 'y': 310.2}, {'x': 1850, 'y': 308.44}, {'x': 1858, 'y': 148.44}, {'x': 1866, 'y': 150.26}, {'x': 1872, 'y': 577.89}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4550, 'y': 61.53}, {'x': 3345, 'y': 61.53}, {'x': 3006, 'y': 55.00}, {'x': 4006, 'y': 55.00}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1927, 'y': 2885}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.09}, {'x': 726, 'y': 122.03}, {'x': 1576, 'y': 37.09}, {'x': 1576, 'y': 40.25}, {'x': 22080, 'y': 364.56}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentded Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 3610}, {'x': 1809, 'y': 3610}, {'x': 1811, 'y': 4914}, {'x': 1813, 'y': 5760}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4870}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4870}, {'x': 1840, 'y': 3385}, {'x': 1846, 'y': 4870}, {'x': 1854, 'y': 3385}, {'x': 1858, 'y': 4870}, {'x': 1864, 'y': 3385}, {'x': 1872, 'y': 3385}, {'x': 1878, 'y': 4870}, {'x': 1883, 'y': 1910}, {'x': 1889, 'y': 1910}, {'x': 1892, 'y': 4870}, {'x': 1897, 'y': 4870}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1275, 'y': 529.05}, {'x': 3840, 'y': 624.98}, {'x': 384, 'y': 564.46}, {'x': 1275, 'y': 529.05}, {'x': 3840, 'y': 624.98}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:52<00:00,  5.61s/it]


















 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [02:50<00:09,  9.64s/it]
[35m|[39m JSON to Vega conversion error rate: [31m60.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.64 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'x', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6.55}, {'x': 'field', 'y': 6.55}, {'x': 'variable', 'y': 18.05}, {'x': 'field', 'y': 18.05}, {'x': 'variable', 'y': 18.05}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihlomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 91.28}, {'x': 'type', 'y': 55.33}, {'x': 'field', 'y': 30.25}, {'x': 'field', 'y': 39.28}, {'x': 'type', 'y': 91.28}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(df, 'Year', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_fertilizer_consumption(df_2015, 'Brazil')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 123.33}, {'x': 'field', 'y': 123.33}, {'x': 'variable', 'y': 123.33}, {'x': 'field', 'y': 14.12}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 13.65}, {'x': 'field', 'y': 47.88}, {'x': 'type', 'y': 37.06}, {'x': 'field', 'y': 49.06}, {'x': 'type', 'y': 13.65}, {'x': 'field', 'y': 47.06}, {'x': 'variable', 'y': 13.65}, {'x': 'variable', 'y': 13.65}]}}

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:53<00:00,  8.68s/it]
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),color='green')<0x0A>plt.xlabel('Country')<0x0A>plt.ylabel('Yield by per horoctogram')<0x0A>plt.title('Cereal yield in different countries as per the survey of 1981')<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 2)<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 2)<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '5%/poverty lines'])<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '5%/poverty lines'])<0x0A>ax.set_xlim(0, 2)<0x0A>ax.set_ylim(0, 2)<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Import duties<0x0A>import matplotlib.pyplot as plt<0x0A>import matplotlib.patches as mpatches<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A><0x0A># Import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind='bar', color='green',
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['top'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_linewidth(2)<0x0A><0x0A>ax.spines['right'].set_linewidth(2)<0x0A><0x0A>ax.spines
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rochelle et al./normmatoxy)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.85}, {'x': 'field', 'y': 5.85}, {'x': 'type', 'y': 12.05}, {'x': 'field', 'y': 12.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = percentage_sr_lanka.sort_values(by='percentage_sr_lanka', ascending=False)<0x0A><0x0A>g = sns.catplot(x="percentage_sr_lanka", y="percentage_sr_lanka", data=percentage_sr_lanka, kind="point", height=10, aspect=1.5, palette="mako")<0x0A>g.set_axis_labels("{0: ", "20": "{0: ", "40": "{0: ", "40: ", "50": "{0: ", "50": "{0: ", "50": "{0: ", "50": "{0: ", "50": "{0: ", "50": "{0: ", "50: ", "50: "}]", ": ".join
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.8}, {'x': 'field', 'y': 78}, {'x': 'variable', 'y': 78}, {'x': 'field', 'y': 78}, {'x': 'variable', 'y': 78}, {'x': 'variable', 'y': 78}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat = pd.DataFrame(households_sat, columns = ["Year", "% of households"])<0x0A>percentage_households_sat.plot(kind = "bar", figsize = (20, 20), color = "purple")<0x0A>plt.title("Percentage of households in Russian Federation that uses iodized salt")<0x0A>plt.xlabel("Year")<0x0A>plt.ylabel("% of households")<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() )<0x0A>ax.set_yticklabels([''] + grupo_df['Country'].unique() )<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderaxespad=0.)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderaxespad=0.)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'field', 'y': 2.08}, {'x': 'type', 'y': 2.08}, {'x': 'field', 'y': 2.08}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.64 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[36m[1mEpoch :[39m[22m 40 [32m[1m | Loss :[39m[22m 1.2741661071777344
  5%|█████▋                                                                                                            | 1/20 [00:07<02:23,  7.56s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:13<01:54,  6.34s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:16<01:25,  5.05s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:23<01:31,  5.70s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:26<01:09,  4.66s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:31<01:06,  4.77s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:35<01:02,  4.78s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:41<00:59,  4.95s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:47<00:58,  5.36s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:51<00:50,  5.08s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:58<00:49,  5.52s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:05<00:47,  5.94s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:13<00:45,  6.52s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:17<00:35,  5.88s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:21<00:25,  5.18s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:26<00:20,  5.15s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:29<00:14,  4.71s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:35<00:09,  4.89s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:41<00:05,  5.22s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5550, 'y': 4218}, {'x': 1844, 'y': 835}, {'x': 2688, 'y': 2108}, {'x': 4696, 'y': 2961}, {'x': 3622, 'y': 3785}, {'x': 4696, 'y': 2108}, {'x': 5550, 'y': 4218}, {'x': 1844, 'y': 2961}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5020}, {'x': 'Dog', 'y': 502}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.13}, {'x': 'USA', 'y': 24.16}, {'x': 'Dog', 'y': 120.39}, {'x': 'Nike', 'y': 48.09}, {'x': 'Apple', 'y': 48.09}, {'x': 'Male', 'y': 24.16}, {'x': 'Rock', 'y': 27.78}, {'x': 'Sedan', 'y': 24.16}, {'x': 'Spanish', 'y': 48.09}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.85}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 191.38, 'y': 60.73}, {'x': 279.23, 'y': 13.48}, {'x': 53.68, 'y': 60.73}, {'x': 279.09, 'y': 60.73}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7350, 'y': 364.01}, {'x': 735, 'y': 364.01}, {'x': 735, 'y': 42.85}, {'x': 735, 'y': 364.01}, {'x': 735, 'y': 364.01}, {'x': 735, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 201.86}, {'x': 1919, 'y': 195.86}, {'x': 1923, 'y': 16.51}, {'x': 1928, 'y': 16.51}, {'x': 1929, 'y': 16.51}, {'x': 1932, 'y': 36.06}, {'x': 1935, 'y': 195.86}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 30.57}, {'x': 1818, 'y': 79.99}, {'x': 1820, 'y': 80.24}, {'x': 1822, 'y': 8.99}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.59}, {'x': 1866, 'y': 265.79}, {'x': 1869, 'y': 265.79}, {'x': 1872, 'y': 110.57}, {'x': 1877, 'y': 265.79}, {'x': 1882, 'y': 267.08}, {'x': 1886, 'y': 101.06}, {'x': 1890, 'y': 265.79}, {'x': 1888, 'y': 101.06}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 606, 'y': 32}, {'x': 576, 'y': 64}, {'x': 462, 'y': 16}, {'x': 576, 'y': 64}, {'x': 606, 'y': 56}, {'x': 606, 'y': 24}, {'x': 462, 'y': 16}, {'x': 606, 'y': 64}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.35}, {'x': 1814, 'y': 145.65}, {'x': 1821, 'y': 138.65}, {'x': 1826, 'y': 25.84}, {'x': 1835, 'y': 25.84}, {'x': 1842, 'y': 310.2}, {'x': 1850, 'y': 308.1}, {'x': 1858, 'y': 145.65}, {'x': 1866, 'y': 150.06}, {'x': 1872, 'y': 577.7}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4570, 'y': 61.52}, {'x': 3344, 'y': 61.52}, {'x': 3064, 'y': 55.00}, {'x': 4088, 'y': 55.00}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2886}, {'x': 1926, 'y': 2886}, {'x': 1932, 'y': 2886}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1930, 'y': 38.09}, {'x': 696, 'y': 121.99}, {'x': 1930, 'y': 365.8}, {'x': 193, 'y': 75.7}, {'x': 193, 'y': 39.09}, {'x': 193, 'y': 365.8}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 361}, {'x': 1809, 'y': 361}, {'x': 1811, 'y': 4944}, {'x': 1813, 'y': 5760}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4874}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4874}, {'x': 1840, 'y': 3385}, {'x': 1846, 'y': 1911}, {'x': 1854, 'y': 4874}, {'x': 1858, 'y': 4874}, {'x': 1864, 'y': 3385}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1276, 'y': 529.05}, {'x': 3840, 'y': 624.92}, {'x': 384, 'y': 564.46}, {'x': 1276, 'y': 529.05}, {'x': 3840, 'y': 624.92}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
  5%|█████▋                                                                                                            | 1/20 [00:03<01:11,  3.75s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:08<01:13,  4.09s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:16<01:42,  6.02s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:34<01:43,  6.91s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:39<01:28,  6.30s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:45<01:19,  6.09s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [01:02<01:58,  9.84s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [01:08<01:32,  8.45s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [01:28<02:01, 12.14s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [01:46<02:03, 13.77s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [02:01<01:53, 14.22s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [02:19<01:47, 15.32s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [02:24<01:14, 12.39s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [02:42<01:09, 13.96s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [02:49<00:25,  8.43s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [03:08<00:23, 11.68s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [03:13<00:09,  9.77s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:17<00:00,  9.87s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:17<00:00,  9.87s/it]
[35m|[39m JSON to Vega conversion error rate: [31m65.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.11 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.6 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'x', 'y': 0.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'type', 'y': 605}, {'x': 'field', 'y': 605}, {'x': 'variable', 'y': 605}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihlomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.23}, {'x': 'y', 'y': 30.2}, {'x': 'x', 'y': 98.68}, {'x': 'y', 'y': 55.23}, {'x': 'x', 'y': 30.2}, {'x': 'y', 'y': 35.78}, {'x': 'x', 'y': 35.78}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A>sns.set(font_scale=2)<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True, right=True)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_fertilizer_consumption(df, 'Brazil')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.15}, {'x': 'y': 'Year', 'y': 12.15}, {'x': 'field', 'y': 16.1}, {'x': 'variable', 'y': 'Value',atus': 'quantitative'}}, 'data': {'x': 'variable', 'y': 16.1}, {'x': 'field', 'y': 12.15}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 13.65}, {'x': 'field', 'y': 47.88}, {'x': 'type', 'y': 37.06}, {'x': 'field', 'y': 49.56}, {'x': 'type', 'y': 13.65}, {'x': 'field', 'y': 7.25}, {'x': 'variable', 'y': 13.65}, {'x': 'variable', 'y': 13.65}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##########################################################################<0x0A># TODO: Draw a nested barplot to show bills by year and year using the function from the previous query. <0x0A>###########################################################<0x0A><0x0A># Create a list of strings for each year<0x0A>Strings = ["Year", "Bill", "Bills", "Bills_2017", "Bills_2018", "Bills_2019", "Bills_2020", "Bills_2021", "Bills_2022", "Bills_2023", "Bills_2024", "Bills_2025", "Bills_2026", "Bills_2027", "Bills_2028", "Bills_2029", "Bills_2030", "Bills_2031", "Bills_2032", "Bills_2033", "Bills_2034", "Bills_2035", "Bills_2036", "Bills_2037", "Bills_2038", "Bills_2039", "Bills_204", "Bills_2041", "Bills_2042", "Bills_2043", "Bills_2044", "Bills_2045", "Bills_2046", "Bills_2047", "Bills_2048", "Bills_2049", "Bills_205", "Bills_2059", "Bills_206", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bills_2069", "Bill
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),color='green')<0x0A>plt.xlabel('Country')<0x0A>plt.ylabel('Yield by per horoctogram')<0x0A>plt.title('Cereal yield in different countries as per the survey of 1981')<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 2)<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 2)<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '5%/poverty lines'])<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '5%/poverty lines'])<0x0A>ax.set_yticklabels(['Year', '5%/poverty lines'])<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_y
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Import duties<0x0A>import matplotlib.pyplot as plt<0x0A>import matplotlib.patches as mpatches<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A><0x0A># Import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind='bar', color='green',
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to Rochelle et al./normmatoxy)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.85}, {'x': 'field', 'y': 5.85}, {'x': 'type', 'y': 12.05}, {'x': 'field', 'y': 12.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = percentage_sr_lanka.sort_values(by='percentage_sr_lanka', ascending=False)<0x0A><0x0A>g = sns.catplot(x="percentage_sr_lanka", y="percentage_sr_lanka", data=percentage_sr_lanka, kind="point", height=10, aspect=1.5, palette="mako")<0x0A>g.set_axis_labels("{0: ", "20": "{0: ", "40": "{0: ", "40: ", "50": "{0: ", "50": "{0: ", "50": "{0: ", "50": "{0: ", "50": "{0: ", "50": "{0: ", "50: ", "50: "}]", ": ".join
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.8}, {'x': 'field', 'y': 78}, {'x': 'variable', 'y': 78}, {'x': 'field', 'y': 78}, {'x': 'variable', 'y': 78}, {'x': 'variable', 'y': 78}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat = pd.DataFrame(households_sat, columns = ["Year", "% of households"])<0x0A>percentage_households_sat.plot(kind = "bar", figsize = (20, 20), color = "purple")<0x0A>plt.title("Percentage of households in Russian Federation that uses iodized salt")<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() )<0x0A>ax.set_yticklabels([''] + grupo_df['Country'].unique() )<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderaxespad=0.)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderaxespad=0.)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'field', 'y': 2.08}, {'x': 'type', 'y': 2.08}, {'x': 'field', 'y': 2.08}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.11 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.6 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:06<02:03,  6.51s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:12<01:48,  6.01s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:15<01:20,  4.74s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:22<01:28,  5.54s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:26<01:13,  4.93s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:32<01:17,  5.50s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:37<01:09,  5.31s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:42<01:01,  5.13s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:47<00:58,  5.29s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:53<00:54,  5.47s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [01:01<00:55,  6.13s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:08<00:51,  6.44s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:16<00:48,  6.88s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:20<00:35,  5.99s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:23<00:25,  5.05s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:28<00:20,  5.07s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:32<00:14,  4.87s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:37<00:09,  4.86s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:45<00:05,  5.74s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:50<00:00,  5.50s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:50<00:00,  5.50s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5550, 'y': 4218}, {'x': 1844, 'y': 835}, {'x': 3346, 'y': 3785}, {'x': 4638, 'y': 2952}, {'x': 5550, 'y': 4218}, {'x': 2680, 'y': 2108}, {'x': 3832, 'y': 3785}, {'x': 4638, 'y': 2108}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 691}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.13}, {'x': 'USA', 'y': 24.1}, {'x': 'Dog', 'y': 120.3}, {'x': 'Nike', 'y': 48.0}, {'x': 'Apple', 'y': 48.0}, {'x': 'Male', 'y': 24.1}, {'x': 'Rock', 'y': 27.71}, {'x': 'Sedan', 'y': 24.1}, {'x': 'Spanish', 'y': 48.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.85}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 154.18, 'y': 60.73}, {'x': 271.92, 'y': 13.48}, {'x': 54.43, 'y': 60.73}, {'x': 271.12, 'y': 60.73}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7351, 'y': 114.12}, {'x': 7351, 'y': 364.56}, {'x': 4888, 'y': 227.08}, {'x': 3984, 'y': 364.56}, {'x': 7351, 'y': 364.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 200}, {'x': 1918, 'y': 198}, {'x': 1921, 'y': 16}, {'x': 1925, 'y': 16}, {'x': 1929, 'y': 16}, {'x': 1933, 'y': 36}, {'x': 1939, 'y': 162}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.98}, {'x': 1816, 'y': 39.24}, {'x': 1818, 'y': 79.98}, {'x': 1820, 'y': 80.5}, {'x': 1822, 'y': 9.3}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.59}, {'x': 1866, 'y': 259.46}, {'x': 1870, 'y': 268.99}, {'x': 1872, 'y': 108.55}, {'x': 1876, 'y': 268.99}, {'x': 1882, 'y': 268.99}, {'x': 1886, 'y': 100.74}, {'x': 1892, 'y': 268.99}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 606, 'y': 32}, {'x': 472, 'y': 16}, {'x': 568, 'y': 64}, {'x': 472, 'y': 16}, {'x': 606, 'y': 56}, {'x': 606, 'y': 24}, {'x': 372, 'y': 24}, {'x': 472, 'y': 16}, {'x': 606, 'y': 64}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.33}, {'x': 1821, 'y': 147.65}, {'x': 1828, 'y': 27.01}, {'x': 1836, 'y': 27.01}, {'x': 1842, 'y': 310.2}, {'x': 1852, 'y': 308.1}, {'x': 1859, 'y': 147.65}, {'x': 1866, 'y': 150.22}, {'x': 1872, 'y': 577.85}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4584, 'y': 61.53}, {'x': 3344, 'y': 61.53}, {'x': 3060, 'y': 55.00}, {'x': 4088, 'y': 55.00}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2886}, {'x': 1927, 'y': 2886}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.09}, {'x': 726, 'y': 122.1}, {'x': 1576, 'y': 366.8}, {'x': 1576, 'y': 40.15}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentded Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 361}, {'x': 1809, 'y': 3616}, {'x': 1812, 'y': 4944}, {'x': 1815, 'y': 5768}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4874}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4874}, {'x': 1840, 'y': 3385}, {'x': 1844, 'y': 3401}, {'x': 1854, 'y': 4874}, {'x': 1858, 'y': 4874}, {'x': 1864, 'y': 1911}, {'x': 1872, 'y': 3401}, {'x': 1879, 'y': 4874}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1275, 'y': 529.79}, {'x': 3840, 'y': 624.96}, {'x': 384, 'y': 564.96}, {'x': 1275, 'y': 529.79}, {'x': 3840, 'y': 624.96}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:03<01:04,  3.38s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:08<01:20,  4.45s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:13<01:16,  4.51s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:15<00:34,  2.30s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:20<00:47,  3.42s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:27<00:59,  4.59s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:45<01:46,  8.87s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:50<01:22,  7.49s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [01:07<01:45, 10.50s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [01:25<01:56, 12.93s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:47<02:04, 15.53s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [02:05<01:54, 16.40s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [02:10<01:16, 12.77s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [02:28<01:12, 14.47s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [02:33<00:46, 11.75s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [02:51<00:40, 13.45s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [03:08<00:29, 14.72s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [03:14<00:11, 11.98s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:17<00:00,  9.88s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:17<00:00,  9.88s/it]
[35m|[39m JSON to Vega conversion error rate: [31m60.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.64 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'x', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'type', 'y': 605}, {'x': 'field', 'y': 605}, {'x': 'variable', 'y': 605}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihlomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.23}, {'x': 'y', 'y': 30.29}, {'x': 'x', 'y': 30.29}, {'x': 'y', 'y': 55.23}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(train_df, 'Year', 'Arable land (hectares) in Seychelles', '-')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_fertilizer_consumption(df, 'Brazil')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 123.33}, {'x': 'field', 'y': 123.33}, {'x': 'variable', 'y': 123.33}, {'x': 'field', 'y': 14.19}, {'x': 'variable', 'y': 14.19}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 13.65}, {'x': 'field', 'y': 47.88}, {'x': 'type', 'y': 37.06}, {'x': 'field', 'y': 49.56}, {'x': 'type', 'y': 13.65}, {'x': 'field', 'y': 47.06}, {'x': 'variable', 'y': 13.65}, {'x': 'variable', 'y': 13.65}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##########################################################################<0x0A># TODO: Load the example code from:<0x0A>#    https://stackoverflow.com/questions/14605858/create-a-bar-chart-with-a-matplotlib-pyplot-subplot<0x0A>import seaborn as sns<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A># Load the example code from:<0x0A>#    https://stackoverflow.com/questions/14605858/creating-a-bar-chart-with-a-matplotlib-pyplot-subplot<0x0A>#    https://stackoverflow.com/questions/14605858/creating-a-bar-chart-with-a-matplotlib-pyplot-subplot<0x0A>import seaborn as sns<0x0A>import numpy as np<0x0A>import pandas as pd<0x0A>import seaborn as sns<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A># Load the example code from:<0x0A>#    https://stackoverflow.com/questions/14605858/creating-a-bar-chart-with-a-matplotlib-pyplot-subplot<0x0A>import seaborn as sns<0x0A>import pandas as pd<0x0A>import seaborn as sns<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A># Load the example code from:<0x0A>#    https://stackoverflow.com/questions/14605858/creating-a-bar-chart-with-a-matplotlib-pyplot-subplot<0x0A>import seaborn as sns<0x0A>import seaborn as sns<0x0A><0x0A># Load the example code from:<0x0A>#    https://stackoverflow.com/questions/14605858/creating-a-bar-chart-with-a-matplotlib-pyplot-subplot<0x0A>import seaborn as sns<0x0A><0x0A># Load the example code from:<0x0A>#    https://stackoverflow.com/questions/14605858/creating-a-bar-chart-with-a-matplotlib-pyplot-subplot<0x0A>import seaborn as sns<0x0A><0x0A># Load the example code from:<0x0A>#    https://stackoverflow.com/questions/14605858/creating-a-bar-chart-with-a-matplotlib-pyplot-subplot<0x0A>import seaborn as sns<0x0A><0x0A># Load the example code from:<0x0A>#    https://stackoverflow.com/
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),color='green')<0x0A>plt.xlabel('Country')<0x0A>plt.ylabel('Yield by per horogram')<0x0A>plt.title('Cereal yield in different countries as per the survey of 1981')<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('5% / poverty lines')<0x0A>ax.set_title('Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Plot<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Plot<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '5% / poverty lines'])<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '5% / poverty lines'])<0x0A>ax.set_yticklabels(['Year', '5% / poverty lines'])<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '5% / poverty lines'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Import duties<0x0A>import matplotlib.pyplot as plt<0x0A>import matplotlib.patches as patches<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A><0x0A># Import duties<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>ax.set_xlabel('Year')
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year', 'Number of procedures to build a warehouse in Congo (Republic)'],<0x0A>            ['Year
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['top'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spin
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((intramental to housing development)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.85}, {'x': 'field', 'y': 5.85}, {'x': 'type', 'y': 12.05}, {'x': 'field', 'y': 12.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = percentage_sr_lanka.sort_values(by='percentage_born_with_low-birthweight', ascending=False)<0x0A><0x0A>g = sns.catplot(x="percentage_born_with_low-birthweight", y="percentage_born_with_lanka", data=percentage_sr_lanka, kind="point", height=10, aspect=1.5, palette="gist_ncar_r")<0x0A>g.set_axis_labels("{0: ", "20": "{0: ", "40": "{0: ", "40: ", "50": "{0: ", "50": "{0: ", "50": "{0: ", "50": "{0: ", "50": "{0: ", "50": "{0: ", "50: ", "50: "}]", "x": "{0: ", "x": "{0: ", "x": "{0: ", "x": "{0: ", "x: "}]", "x": "{0: ", "x: "}]", "y": "{0: ", "x": "{0: ", "x: "}]", "y": "{0: ", "x": "{0: ", "x: "}]", "y": "{0: ", "x: "}]", "x": "{0: ", "x: "}]", "y": "{0: ", "x: "}]", "x": "{0: ", "x: "}]", "y": "{0: ", "x: "}]", "x": "{0: ", "x: "}]", "y": "{0: ", "x: "}]", "x": "{0: ", "x: "}]", "y": "{0: ", "x: "}]", "y": "{0: ", "x: "}]", "x": "{0: ", "x: "}]", "y": "{0: ", "x: "}]", "y": "{0: ", "x: "}]", "x": "{0: ", "x: "}]", "y": "{0: ", "x: "}]", "y": {"x": "{0: ", "x: "}]", "y": {"x": "{0: ", "x: "}]", "y": {"x": "{0
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.8}, {'x': 'field', 'y': 78}, {'x': 'variable', 'y': 78}, {'x': 'field', 'y': 78}, {'x': 'variable', 'y': 78}, {'x': 'variable', 'y': 78}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat_plot = percentage_households_sat.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(15,15))<0x0A>percentage_households_sat_plot.set_title('Percentage of households in Russian Federation that uses iodized salt', fontsize=16)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country'] == 'UK') & (grupo['Type'] == 'Output')]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GVG)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'field', 'y': 2.08}, {'x': 'type', 'y': 2.08}, {'x': 'field', 'y': 2.08}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.64 [35m|
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:05<01:53,  6.00s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:12<01:58,  6.57s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:16<01:31,  5.38s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:25<01:46,  6.63s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:29<01:24,  5.62s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:33<01:12,  5.18s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:37<01:01,  4.72s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:44<01:05,  5.48s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:52<01:07,  6.14s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:57<00:58,  5.84s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [01:03<00:54,  6.02s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:13<00:56,  7.03s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:20<00:50,  7.20s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:24<00:36,  6.06s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:27<00:26,  5.22s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:31<00:19,  4.94s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:35<00:13,  4.49s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:39<00:09,  4.60s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:46<00:05,  5.27s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:52<00:00,  5.62s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:52<00:00,  5.62s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5550, 'y': 4218}, {'x': 1824, 'y': 835}, {'x': 2288, 'y': 2108}, {'x': 4622, 'y': 2961}, {'x': 4622, 'y': 2961}, {'x': 2288, 'y': 2108}, {'x': 4622, 'y': 4218}, {'x': 5550, 'y': 4218}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.13}, {'x': 'USA', 'y': 24.16}, {'x': 'Dog', 'y': 120.39}, {'x': 'Nike', 'y': 48.09}, {'x': 'Apple', 'y': 48.09}, {'x': 'Male', 'y': 24.16}, {'x': 'Rock', 'y': 27.79}, {'x': 'Sedan', 'y': 24.16}, {'x': 'Spanish', 'y': 48.09}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.4}, {'x': 'USA', 'y': 152.37}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.85}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 191.37, 'y': 60.73}, {'x': 279.29, 'y': 13.48}, {'x': 53.68, 'y': 60.73}, {'x': 239.09, 'y': 60.73}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7342, 'y': 364.01}, {'x': 7342, 'y': 364.01}, {'x': 4692, 'y': 226.01}, {'x': 3988, 'y': 364.01}, {'x': 6780, 'y': 42.85}, {'x': 7342, 'y': 114.25}, {'x': 1488, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 201.86}, {'x': 1918, 'y': 198.55}, {'x': 1921, 'y': 16.53}, {'x': 1925, 'y': 16.53}, {'x': 1929, 'y': 16.53}, {'x': 1933, 'y': 36.06}, {'x': 1936, 'y': 198.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.99}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 69.8}, {'x': 1819, 'y': 79.99}, {'x': 1821, 'y': 80.25}, {'x': 1822, 'y': 8.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.59}, {'x': 1866, 'y': 268.99}, {'x': 1869, 'y': 110.79}, {'x': 1873, 'y': 268.99}, {'x': 1878, 'y': 107.94}, {'x': 1881, 'y': 268.99}, {'x': 1886, 'y': 268.99}, {'x': 1889, 'y': 268.99}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 676, 'y': 32}, {'x': 472, 'y': 64}, {'x': 568, 'y': 16}, {'x': 568, 'y': 64}, {'x': 242, 'y': 24}, {'x': 568, 'y': 16}, {'x': 676, 'y': 56}, {'x': 712, 'y': 24}, {'x': 472, 'y': 16}, {'x': 676, 'y': 56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.35}, {'x': 1814, 'y': 145.65}, {'x': 1824, 'y': 25.74}, {'x': 1830, 'y': 25.74}, {'x': 1838, 'y': 145.65}, {'x': 1848, 'y': 310.9}, {'x': 1858, 'y': 308.1}, {'x': 1866, 'y': 145.65}, {'x': 1874, 'y': 577.89}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4580, 'y': 61.52}, {'x': 3344, 'y': 61.52}, {'x': 4088, 'y': 55.009}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2886}, {'x': 1927, 'y': 2886}, {'x': 1932, 'y': 2886}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.09}, {'x': 696, 'y': 121.99}, {'x': 1576, 'y': 37.4}, {'x': 1576, 'y': 40.15}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentded Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 361}, {'x': 1809, 'y': 361}, {'x': 1811, 'y': 4944}, {'x': 1813, 'y': 5760}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4874}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4874}, {'x': 1840, 'y': 3385}, {'x': 1846, 'y': 1911}, {'x': 1854, 'y': 4874}, {'x': 1858, 'y': 4874}, {'x': 1864, 'y': 3385}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1275, 'y': 529.09}, {'x': 3840, 'y': 624.96}, {'x': 384, 'y': 564.73}, {'x': 1275, 'y': 529.09}, {'x': 3840, 'y': 624.96}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:03<01:03,  3.33s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:06<01:02,  3.50s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:13<00:50,  3.13s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:14<00:32,  2.17s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:18<00:41,  2.98s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:25<00:53,  4.08s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:42<01:38,  8.24s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:45<01:15,  6.82s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [01:06<01:51, 11.14s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [01:22<01:54, 12.71s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:41<01:56, 14.56s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [02:00<01:51, 15.94s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [02:06<01:16, 12.74s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [02:24<01:12, 14.44s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [02:29<00:45, 11.44s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [02:32<00:26,  8.99s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [02:50<00:23, 11.63s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [02:57<00:10, 10.26s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:01<00:00,  9.06s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:01<00:00,  9.06s/it]
[35m|[39m JSON to Vega conversion error rate: [31m65.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.11 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.59 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'x', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'type', 'y': 605}, {'x': 'field', 'y': 605}, {'x': 'variable', 'y': 605}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of Dilemmatis Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.23}, {'x': 'y', 'y': 99.79}, {'x': 'x', 'y': 55.23}, {'x': 'y', 'y': 99.79}, {'x': 'x', 'y': 30.25}, {'x': 'y', 'y': 36.03}, {'x': 'x', 'y': 36.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(df, 'Year', 'Arable land (hectares) in Seychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_fertilizer_consumption(df, 'Brazil')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 123.35}, {'x': 'y': 'Year', 'y': 123.35}, {'x': 'field', 'y': 108.05}, {'x': 'field', 'y': 108.05}, {'x': 'variable', 'y': 108.05}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 13.65}, {'x': 'field', 'y': 47.88}, {'x': 'type', 'y': 37.06}, {'x': 'field', 'y': 13.65}, {'x': 'type', 'y': 7.25}, {'x': 'field', 'y': 49.06}, {'x': 'type', 'y': 7.25}, {'x': 'field', 'y': 47.06}, {'x': 'variable', 'y': 13.65}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31mnet_bilateral_gre_df = net_bilateral_gre_df.drop(['Year', 'Country'], axis=1)<0x0A><0x0A>gre_df = net_bilateral_gre_df.drop(['Year', 'Country'], axis=1)<0x0A>gre_df = gre_df.drop(['Year', 'Country'], axis=1)<0x0A><0x0A>gre_df = gre_df.drop(['Year', 'Country'], axis=1)<0x0A>gre_df = gre_df.drop(['Year', 'Country'], axis=1)<0x0A><0x0A>gre_df = gre_df.drop(['Year', 'Country'], axis=1)<0x0A>gre_df = gre_df.drop(['Year', 'Country'], axis=1)<0x0A><0x0A>gre_df = gre_df.drop(['Year', 'Country'], axis=1)<0x0A>gre_df = gre_df.drop(['Year', 'Country'], axis=1)<0x0A><0x0A>gre_df = gre_df.drop(['Year', 'Country'], axis=1)<0x0A>gre_df = gre_df.drop(['Year', 'Country'], axis=1)<0x0A><0x0A>gre_df = gre_df.drop(['Year', 'Country'], axis=1)<0x0A>gre_df = gre_df.drop(['Year', 'Country'], axis=1)<0x0A><0x0A>gre_df = gre_df.drop(['Year', 'Country'], axis=1)<0x0A><0x0A>gre_df = gre_df.drop(['Year', 'Country'], axis=1)<0x0A><0x0A>gre_df = gre_df.drop(['Year', 'Country'], axis=1)<0x0A><0x0A>gre_df = gre_df.drop(['Year', 'Country'], axis=1)<0x0A><0x0A>gre_df = gre_df.drop(['Year', 'Country'], axis=1)<0x0A><0x0A>gre_df = gre_df.drop(['Year', 'Country'], axis=1)<0x0A><0x0A>gre_df = gre_df.drop(['Year', 'Country'], axis=1)<0x0A><0x0A>gre_df = gre_df.drop(['Year', 'Country'], axis=1)<0x0A><0x0A>gre_df = gre_df.drop(['Year', 'Country'], axis=1)<0x0A><0x0A>gre_df = gre_df.drop(['Year', 'Country'], axis=1)<0x0A><0x0A>gre_df = gre_df.drop(['
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),color='green')<0x0A>plt.xlabel('Country')<0x0A>plt.ylabel('Yield by per horoctonym')<0x0A>plt.title('Cereal yield in different countries as per the survey of 1981')<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 1)<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 1)<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '5%/poverty lines'])<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '5%/poverty lines'])<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_ylim(0, 1)<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Import duties<0x0A>import matplotlib.pyplot as plt<0x0A>import matplotlib.patches as mpatches<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A><0x0A># Import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year'
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['top'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spin
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to rotational symmetry/geometry)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.95}, {'x': 'field', 'y': 5.95}, {'x': 'type', 'y': 12.05}, {'x': 'field', 'y': 12.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Country']).sum()<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by=['Country'], ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.8}, {'x': 'field', 'y': 78}, {'x': 'variable', 'y': 78}, {'x': 'field', 'y': 78}, {'x': 'variable', 'y': 78}, {'x': 'variable', 'y': 78}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mgrouped_df = df.groupby(['Year', 'Year']).size()<0x0A>grouped_df = grouped_df.reset_index()<0x0A>grouped_df.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Percentage of households', color='purple', figsize=(15, 15))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() <0x0A>ax.set_yticklabels([''] + grupo_df['Country'].unique() <0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderaxespad=0.)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderaxespad=0.)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'field', 'y': 2.08}, {'x': 'type', 'y': 2.08}, {'x': 'field', 'y': 2.08}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.11 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.59 [35m|
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:06<02:00,  6.33s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:12<01:47,  5.97s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:15<01:21,  4.82s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:21<01:27,  5.48s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:25<01:13,  4.93s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:32<01:18,  5.60s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:36<01:05,  5.06s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:41<00:58,  4.88s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:47<00:58,  5.31s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:52<00:51,  5.15s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:58<00:49,  5.47s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:04<00:44,  5.54s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:11<00:43,  6.14s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:15<00:33,  5.51s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:18<00:23,  4.75s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:23<00:18,  4.69s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:27<00:13,  4.38s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:32<00:09,  4.78s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:40<00:05,  5.79s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:45<00:00,  5.30s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [01:45<00:00,  5.30s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1974, 'y': 2108}, {'x': 3736, 'y': 3785}, {'x': 5353, 'y': 4218}, {'x': 5353, 'y': 4218}, {'x': 2072, 'y': 2108}, {'x': 3736, 'y': 2108}, {'x': 4490, 'y': 2964}, {'x': 1974, 'y': 3374}, {'x': 4490, 'y': 2964}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 691}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.13}, {'x': 'USA', 'y': 24.12}, {'x': 'Dog', 'y': 120.39}, {'x': 'Nike', 'y': 48.09}, {'x': 'Apple', 'y': 48.09}, {'x': 'Male', 'y': 24.12}, {'x': 'Rock', 'y': 27.78}, {'x': 'Sedan', 'y': 24.12}, {'x': 'Spanish', 'y': 48.09}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.85}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 191.37, 'y': 60.73}, {'x': 279.29, 'y': 13.48}, {'x': 53.68, 'y': 60.62}, {'x': 191.07, 'y': 60.73}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7351, 'y': 364.55}, {'x': 5792, 'y': 226.08}, {'x': 3848, 'y': 364.55}, {'x': 7351, 'y': 114.25}, {'x': 3848, 'y': 364.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 201.86}, {'x': 1918, 'y': 198.55}, {'x': 1921, 'y': 16.53}, {'x': 1925, 'y': 16.53}, {'x': 1929, 'y': 16.53}, {'x': 1933, 'y': 36.06}, {'x': 1936, 'y': 198.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.98}, {'x': 1816, 'y': 28.52}, {'x': 1818, 'y': 79.98}, {'x': 1820, 'y': 9.32}, {'x': 1822, 'y': 80.69}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.59}, {'x': 1866, 'y': 268.65}, {'x': 1869, 'y': 268.65}, {'x': 1872, 'y': 110.57}, {'x': 1877, 'y': 268.65}, {'x': 1882, 'y': 268.65}, {'x': 1886, 'y': 101.01}, {'x': 1890, 'y': 268.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 570, 'y': 64}, {'x': 490, 'y': 16}, {'x': 570, 'y': 64}, {'x': 628, 'y': 32}, {'x': 628, 'y': 56}, {'x': 490, 'y': 16}, {'x': 384, 'y': 24}, {'x': 628, 'y': 24}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.3}, {'x': 1814, 'y': 147.65}, {'x': 1824, 'y': 26.02}, {'x': 1832, 'y': 26.02}, {'x': 1839, 'y': 147.65}, {'x': 1848, 'y': 310.9}, {'x': 1856, 'y': 308.1}, {'x': 1864, 'y': 147.65}, {'x': 1872, 'y': 577.7}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4580, 'y': 61.52}, {'x': 3344, 'y': 61.52}, {'x': 3064, 'y': 55.00}, {'x': 1844, 'y': 55.00}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2886}, {'x': 1927, 'y': 2886}, {'x': 1932, 'y': 2886}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.09}, {'x': 676, 'y': 121.98}, {'x': 1576, 'y': 37.4}, {'x': 1576, 'y': 37.4}, {'x': 1576, 'y': 39.09}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentled Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 361}, {'x': 1809, 'y': 361}, {'x': 1811, 'y': 4964}, {'x': 1813, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4874}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4874}, {'x': 1840, 'y': 3385}, {'x': 1844, 'y': 3401}, {'x': 1848, 'y': 4874}, {'x': 1856, 'y': 3401}, {'x': 1864, 'y': 1911}, {'x': 1871, 'y': 4874}, {'x': 1876, 'y': 3401}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1275, 'y': 529.79}, {'x': 3840, 'y': 624.96}, {'x': 384, 'y': 567.1}, {'x': 1275, 'y': 529.79}, {'x': 3840, 'y': 624.96}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:03<01:06,  3.48s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:07<01:03,  3.55s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:12<00:28,  1.88s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:16<00:36,  2.64s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:22<00:48,  3.73s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:40<01:36,  8.08s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:44<01:17,  7.02s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [01:05<01:53, 11.30s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [01:23<01:58, 13.12s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:41<01:57, 14.71s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:58<01:48, 15.48s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [02:02<01:12, 12.02s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [02:24<01:14, 14.93s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [02:28<00:47, 11.77s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [02:30<00:26,  8.90s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [02:47<00:22, 11.29s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [02:54<00:09,  9.75s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [02:54<00:09,  9.75s/it]
[35m|[39m JSON to Vega conversion error rate: [31m65.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.68 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'x': 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'x': 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6052}, {'x': 'field', 'y': 6052}, {'x': 'variable', 'y': 6052}, {'x': 'field', 'y': 6052}, {'x': 'variable', 'y': 6052}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihlomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 39.28}, {'x': 'type': 'quantitative', 'y': 91.28}, {'x': 'field', 'y': 39.28}, {'x': 'field', 'y': 55.33}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31marable_land_plot('Seychelles', 'Year', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_fertilizer_consumption(df, 'Brazil')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 123.35}, {'x': 'field', 'y': 123.35}, {'x': 'variable', 'y': 123.35}, {'x': 'field', 'y': 14.28}, {'x': 'variable', 'y': 14.28}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 13.65}, {'x': 'field', 'y': 47.88}, {'x': 'type', 'y': 37.06}, {'x': 'field', 'y': 49.56}, {'x': 'type', 'y': 13.65}, {'x': 'field', 'y': 47.88}, {'x': 'variable', 'y': 13.65}, {'x': 'variable', 'y': 13.65}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##########################################################################<0x0A># TODO: Draw a nested barplot to show bills by year and year using the function from the previous query. <0x0A>###########################################################<0x0A><0x0A># Create a list of strings for each year<0x0A>Strings = ["Year", "Month", "Day", "Day", "Month", "Month", "Day", "Day", "Month", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day", "Day",
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),color='green')<0x0A>plt.xlabel('Country')<0x0A>plt.ylabel('Yield by per horoctogram')<0x0A>plt.title('Cereal yield in different countries as per the survey of 1981')<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 1)<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 1)<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '5%/poverty lines'])<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '5%/poverty lines'])<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_ylim(0, 1)<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:57<00:00,  8.89s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['top'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spin
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to rotational and downward trajectory)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.05}, {'x': 'field', 'y': 5.05}, {'x': 'type', 'y': 12.05}, {'x': 'field', 'y': 12.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Country','Year','Birthday']).size()<0x0A>percentage_sr_lanka = percentage_sr_lanka.unstack()<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left']
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'variable', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat = pd.DataFrame(households_sat, columns = ["Year", "% of households"])<0x0A>percentage_households_sat.plot(kind = "scatter", x = "Year", y = "% of households", color = "purple")<0x0A>plt.title("Percentage of households in Russian Federation that uses iodized salt")<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() )<0x0A>ax.set_yticklabels([''] + grupo_df['Country'].unique() )<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GNI)')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderaxespad=0.)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderaxespad=0.)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs weak (2e k/2000)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'field', 'y': 2.08}, {'x': 'type', 'y': 2.08}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.68 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  5%|█████▋                                                                                                            | 1/20 [00:06<01:59,  6.27s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:12<01:48,  6.02s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:15<01:19,  4.68s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:21<01:24,  5.30s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:24<01:05,  4.37s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:29<01:04,  4.59s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:33<00:57,  4.43s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:39<01:01,  5.09s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:46<01:02,  5.65s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:52<00:57,  5.79s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:58<00:52,  5.83s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:04<00:47,  5.95s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:11<00:43,  6.18s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:15<00:32,  5.49s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:18<00:23,  4.79s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:23<00:18,  4.70s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:26<00:13,  4.36s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:31<00:09,  4.51s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:38<00:05,  5.17s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5550, 'y': 4218}, {'x': 1824, 'y': 835}, {'x': 2680, 'y': 2108}, {'x': 4638, 'y': 2964}, {'x': 3690, 'y': 3785}, {'x': 4638, 'y': 2108}, {'x': 2680, 'y': 4218}, {'x': 5550, 'y': 4218}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7104}, {'x': 'USA', 'y': 4237}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4237}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 691}, {'x': 'Sedan', 'y': 4237}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.13}, {'x': 'USA', 'y': 24.12}, {'x': 'Dog', 'y': 120.39}, {'x': 'Nike', 'y': 48.09}, {'x': 'Apple', 'y': 48.09}, {'x': 'Male', 'y': 24.12}, {'x': 'Rock', 'y': 27.78}, {'x': 'Sedan', 'y': 24.12}, {'x': 'Spanish', 'y': 48.09}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.29}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.85}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 191.37, 'y': 60.73}, {'x': 279.29, 'y': 13.48}, {'x': 53.68, 'y': 60.73}, {'x': 239.29, 'y': 60.73}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7350, 'y': 364.01}, {'x': 5755, 'y': 226.06}, {'x': 3850, 'y': 364.01}, {'x': 735, 'y': 364.01}, {'x': 1480, 'y': 364.01}, {'x': 735, 'y': 364.01}, {'x': 3850, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 201.86}, {'x': 1919, 'y': 195.52}, {'x': 1923, 'y': 16.53}, {'x': 1928, 'y': 16.53}, {'x': 1929, 'y': 16.53}, {'x': 1932, 'y': 36.06}, {'x': 1935, 'y': 195.0}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.98}, {'x': 1816, 'y': 39.24}, {'x': 1818, 'y': 79.98}, {'x': 1820, 'y': 80.28}, {'x': 1822, 'y': 8.96}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.59}, {'x': 1866, 'y': 268.94}, {'x': 1872, 'y': 110.59}, {'x': 1876, 'y': 268.94}, {'x': 1882, 'y': 268.94}, {'x': 1888, 'y': 101.06}, {'x': 1892, 'y': 268.94}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 606, 'y': 32}, {'x': 472, 'y': 64}, {'x': 568, 'y': 16}, {'x': 568, 'y': 64}, {'x': 242, 'y': 24}, {'x': 568, 'y': 16}, {'x': 606, 'y': 56}, {'x': 242, 'y': 24}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.35}, {'x': 1814, 'y': 147.45}, {'x': 1822, 'y': 25.72}, {'x': 1828, 'y': 25.72}, {'x': 1838, 'y': 25.72}, {'x': 1844, 'y': 310.9}, {'x': 1852, 'y': 308.11}, {'x': 1862, 'y': 147.45}, {'x': 1872, 'y': 584.35}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4580, 'y': 61.52}, {'x': 3344, 'y': 61.52}, {'x': 3064, 'y': 55.00}, {'x': 1844, 'y': 58.25}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2886}, {'x': 1927, 'y': 2886}, {'x': 1932, 'y': 2886}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.09}, {'x': 676, 'y': 121.98}, {'x': 1576, 'y': 40.15}, {'x': 1576, 'y': 366.68}, {'x': 22090, 'y': 366.68}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentded Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 361}, {'x': 1809, 'y': 361}, {'x': 1811, 'y': 4964}, {'x': 1813, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4874}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4874}, {'x': 1840, 'y': 3385}, {'x': 1846, 'y': 1911}, {'x': 1854, 'y': 4874}, {'x': 1858, 'y': 4874}, {'x': 1864, 'y': 3385}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1275, 'y': 529.79}, {'x': 3840, 'y': 624.96}, {'x': 384, 'y': 564.96}, {'x': 1275, 'y': 529.79}, {'x': 3840, 'y': 624.96}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
  5%|█████▋                                                                                                            | 1/20 [00:04<01:17,  4.08s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:08<01:11,  3.99s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:13<01:22,  4.84s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:15<00:34,  2.31s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:18<00:37,  2.69s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:28<01:05,  5.04s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:45<01:44,  8.74s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:50<01:25,  7.78s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [01:11<01:56, 11.69s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [01:27<01:58, 13.15s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:48<02:04, 15.51s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [02:08<01:57, 16.82s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [02:12<01:18, 13.04s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [02:30<01:12, 14.49s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [02:36<00:47, 11.80s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [02:38<00:27,  9.04s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [02:58<00:24, 12.26s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [03:05<00:10, 10.62s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [03:05<00:10, 10.62s/it]
[35m|[39m JSON to Vega conversion error rate: [31m65.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.72 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'x', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'type', 'y': 605}, {'x': 'field', 'y': 605}, {'x': 'variable', 'y': 605}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (% of Ihlomonal Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 99.68}, {'x': 'type', 'y': 99.68}, {'x': 'field', 'y': 55.33}, {'x': 'field', 'y': 30.25}, {'x': 'type', 'y': 99.68}, {'x': 'field', 'y': 36.28}, {'x': 'field', 'y': 36.28}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31marable_land_plot('Sychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
[31mvisualize_fertilizer_consumption(df, 'Brazil')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 123.35}, {'x': 'field', 'y': 123.35}, {'x': 'type', 'y': 162.05}, {'x': 'field', 'y': 162.05}]}}
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:08<00:00,  9.44s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),color='green')<0x0A>plt.xlabel('Country')<0x0A>plt.ylabel('Yield by per horogram')<0x0A>plt.title('Cereal yield in different countries as per the survey of 1981')<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('5$/poverty lines')<0x0A>ax.set_ylim(0, 1)<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '5$/poverty lines'])<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '5$/poverty lines'])<0x0A><0x0A># Create a bar plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_ylim(0, 1)<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '5$/poverty lines'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '5$/poverty lines'])<0x0A>ax.set_yticklabels(['Year', '5$/poverty lines'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '5$/poverty lines'])<0x0A>ax.set_yticklabels(['Year', '5$/poverty lines'])<0x0A>ax.set_ylim(0, 1)<0x0A>ax.set_ylabel('5$/poverty lines')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Import duties<0x0A>import matplotlib.pyplot as plt<0x0A>import matplotlib.patches as patches<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A><0x0A># Import duties<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['top'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['bottom'].set_linewidth(3)<0x0A><0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spin
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score (integrated to rotational and downward trajectory)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.05}, {'x': 'field', 'y': 5.05}, {'x': 'type', 'y': 12.05}, {'x': 'field', 'y': 12.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Country']).sum()<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by=['Country'], ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'variable', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat = pd.DataFrame(households_sat.groupby(['Year'])['Year'].count())<0x0A>percentage_households_sat.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(15,15))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).sum()<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter( grupo_df['Year'], grupo_df['Country'])<0x0A><0x0A># Setting the title<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GNI)')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xticklabels([''] + grupo_df['Year'].unique() )<0x0A>ax.set_yticklabels([''] + grupo_df['Country'].unique() )<0x0A><0x0A># Setting the axes labels<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ánd Capital (A$ % of GNI)')<0x0A><0x0A># Setting the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.25, 1.05), ncol=1)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderaxespad=0.)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderaxespad=0.)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon=False)<0x0A><0x0A># Setting the legend<0x0A>ax.legend(bbox_to_anchor=(1.25, 1.05), loc='upper left', borderpad=0.75, frameon
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs weak (2e [8000]}})'}, 'data': {'values': [{'x': 'Year', 'y': 2.05}, {'x': 'field', 'y': 2.05}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.72 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  5%|█████▋                                                                                                            | 1/20 [00:05<01:52,  5.92s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:11<01:42,  5.72s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:14<01:12,  4.29s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:20<01:21,  5.12s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:23<01:05,  4.36s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:28<01:03,  4.55s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:32<00:58,  4.52s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:38<00:57,  4.81s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:44<00:57,  5.19s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:50<00:55,  5.51s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:58<00:56,  6.29s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:06<00:55,  6.91s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:17<00:56,  8.05s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:21<00:40,  6.79s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:24<00:28,  5.63s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:29<00:21,  5.44s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:34<00:15,  5.20s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:40<00:10,  5.43s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:48<00:06,  6.27s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:48<00:06,  6.27s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5554, 'y': 4218}, {'x': 1824, 'y': 835}, {'x': 3492, 'y': 3785}, {'x': 4490, 'y': 2952}, {'x': 2686, 'y': 2104}, {'x': 5554, 'y': 4218}, {'x': 1824, 'y': 2952}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.13}, {'x': 'USA', 'y': 24.12}, {'x': 'Dog', 'y': 120.39}, {'x': 'Nike', 'y': 48.08}, {'x': 'Apple', 'y': 48.08}, {'x': 'Male', 'y': 24.12}, {'x': 'Rock', 'y': 27.71}, {'x': 'Sedan', 'y': 24.12}, {'x': 'Spanish', 'y': 48.08}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.85}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 191.37, 'y': 60.73}, {'x': 279.29, 'y': 13.48}, {'x': 53.68, 'y': 60.62}, {'x': 239.29, 'y': 60.73}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7152, 'y': 364.01}, {'x': 7152, 'y': 364.01}, {'x': 7152, 'y': 42.76}, {'x': 3588, 'y': 364.01}, {'x': 7152, 'y': 364.01}, {'x': 7152, 'y': 364.01}, {'x': 7152, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 201.86}, {'x': 1918, 'y': 198.55}, {'x': 1921, 'y': 16.53}, {'x': 1925, 'y': 16.53}, {'x': 1929, 'y': 16.53}, {'x': 1932, 'y': 36.09}, {'x': 1936, 'y': 18.47}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 59.12}, {'x': 1816, 'y': 28.62}, {'x': 1818, 'y': 79.98}, {'x': 1820, 'y': 80.24}, {'x': 1822, 'y': 8.62}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.59}, {'x': 1866, 'y': 265.65}, {'x': 1870, 'y': 265.65}, {'x': 1872, 'y': 110.59}, {'x': 1876, 'y': 265.65}, {'x': 1882, 'y': 269.46}, {'x': 1886, 'y': 101.02}, {'x': 1892, 'y': 265.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 678, 'y': 24}, {'x': 506, 'y': 64}, {'x': 492, 'y': 16}, {'x': 596, 'y': 16}, {'x': 678, 'y': 56}, {'x': 492, 'y': 64}, {'x': 272, 'y': 24}, {'x': 596, 'y': 16}, {'x': 678, 'y': 56}, {'x': 712, 'y': 24}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.3}, {'x': 1815, 'y': 147.65}, {'x': 1822, 'y': 25.72}, {'x': 1829, 'y': 25.7}, {'x': 1838, 'y': 25.7}, {'x': 1844, 'y': 109.61}, {'x': 1852, 'y': 310.4}, {'x': 1859, 'y': 147.65}, {'x': 1866, 'y': 150.25}, {'x': 1874, 'y': 577.7}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4584, 'y': 61.53}, {'x': 3344, 'y': 61.53}, {'x': 4088, 'y': 55.009}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1925, 'y': 2885}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.09}, {'x': 1680, 'y': 39.09}, {'x': 716, 'y': 121.98}, {'x': 1576, 'y': 39.09}, {'x': 1680, 'y': 40.25}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentded Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 361}, {'x': 1809, 'y': 361}, {'x': 1811, 'y': 4964}, {'x': 1813, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4874}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4874}, {'x': 1840, 'y': 3385}, {'x': 1846, 'y': 4874}, {'x': 1859, 'y': 1911}, {'x': 1865, 'y': 4874}, {'x': 1879, 'y': 3385}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1016, 'y': 529.05}, {'x': 3830, 'y': 624.92}, {'x': 383, 'y': 564.75}, {'x': 383, 'y': 529.05}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:03<01:10,  3.70s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:08<01:13,  4.08s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:14<00:49,  3.11s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:21<01:07,  4.52s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:27<01:13,  5.25s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:37<01:24,  6.53s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:54<02:00, 10.08s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [01:13<02:19, 12.72s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [01:29<02:19, 13.96s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [01:50<02:25, 16.12s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [02:08<02:12, 16.57s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [02:25<01:56, 16.70s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [02:29<01:17, 12.88s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [02:46<01:10, 14.10s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [02:50<00:44, 11.13s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [03:05<00:36, 12.07s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [03:25<00:29, 14.71s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [03:31<00:12, 12.04s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:34<00:00, 10.73s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:34<00:00, 10.73s/it]
[35m|[39m JSON to Vega conversion error rate: [31m65.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.66 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'x', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'type', 'y': 605}, {'x': 'field', 'y': 605}, {'x': 'variable', 'y': 605}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of total non-fertiliser discharges)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.23}, {'x': 'y', 'y': 99.29}, {'x': 'x', 'y': 55.23}, {'x': 'y', 'y': 99.29}, {'x': 'x', 'y': 62.83}, {'x': 'y', 'y': 62.83}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31mar_plot(df, 'Year', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 125.65}, {'x': 'y', 'y': 324.05}, {'x': 'x', 'y': 324.05}, {'x': 'y', 'y': 324.05}, {'x': 'x', 'y': 324.05}, {'x': 'y', 'y': 324.05}, {'x': 'x', 'y': 324.05}, {'x': 'y', 'y': 324.05}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.15}, {'x': 'field', 'y': 12.15}, {'x': 'type', 'y': 12.15}, {'x': 'field', 'y': 16.1}, {'x': 'variable', 'y': 'Value',atusps': {'x': 'variable', 'y': 'quantitative'}}, 'y': 'variableLabel': {'x': 'variable', 'y': 16.19}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 13.65}, {'x': 'field', 'y': 47.88}, {'x': 'type', 'y': 37.06}, {'x': 'field', 'y': 49.56}, {'x': 'type', 'y': 13.65}, {'x': 'field', 'y': 47.06}, {'x': 'type', 'y': 7.25}, {'x': 'field', 'y': 46.66}, {'x': 'type', 'y': 7.25}, {'x': 'field', 'y': 46.66}, {'x': 'variable', 'y': 13.65}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##########################################################################<0x0A># TODO: Draw a nested barplot to show bills by year and year using the function from the previous query. <0x0A>###########################################################<0x0A><0x0A># Create a list of columns to plot on<0x0A># Note: this is a function that will be used to create a barplot for each column.<0x0A>#############################################################<0x0A><0x0A># Create a list of columns to plot on<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A># Note: this is a function that will be used to create a barplot for each column<0x0A>
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(1
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_title('Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Plot<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Plot<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '5%/poverty lines'])<0x0A>ax.set_yticklabels(['Year', '5%/poverty lines'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year'
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Import duties<0x0A>import matplotlib.pyplot as plt<0x0A>import matplotlib.patches as mpatches<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A><0x0A># Import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['top'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['bottom'].set_linewidth(3)<0x0A><0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((intramental to housing development)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.85}, {'x': 'field', 'y': 5.85}, {'x': 'type', 'y': 12.05}, {'x': 'field', 'y': 12.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Country']).sum()<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by=['Country'], ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 11.75}, {'x': 'field', 'y': 7.9}, {'x': 'variable', 'y': 11.75}, {'x': 'field', 'y': 7.9}, {'x': 'variable', 'y': 11.75}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat_plot = percentage_households_sat.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(15,15))<0x0A>percentage_households_sat_plot.set_title('Percentage of households in Russian Federation that uses iodized salt', fontsize=16)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country'] == 'UK') & (grupo['Type'] == 'Output')]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GVG)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['', '', ''])<0x0A><0x0A># Setting the background color of the graph<0x0A>fig.colorbar(shrink=0.8, ax=ax)<0x0A><0x0A># Setting the title<0x0A>fig.colorbar(shrink=0.8, ax=ax)<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('')<0x0A><0x0A># Setting the x-axis label<0x0A>fig.set_size_inches(15, 20)<0x0A><0x0A># Setting the y-axis label<0x0A>fig.set_size_inches(15, 15)<0x0A><0x0A># Setting the legend of the graph<0x0A>fig.subplots_adjust(top=0.9)<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('')<0x0A><0x0A># Setting the y-axis label<0x0A>fig.subplots_adjust(top=0.9, wspace=0.3)<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('')<0x0A><0x0A># Setting the y-axis label<0x0A>fig.subplots_adjust(top=0.9, wspace=0.3)<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('')<0x0A><0x0A># Setting the y-axis label<0x0A>fig.subplots_adjust(bottom=0.15)<0x0A><0x0A># Setting the title<0x0A>fig.subplots_adjust(left=0.15, wspace=0.15)<0x0A><0x0A># Setting the title<0x0A>fig.subplots_adjust(bottom=0.15, wspace=0.15)<0x0A><0x0A># Setting the title<0x0A>fig.subplots_adjust(left=0.15, wspace=0.15)<0x0A><0x0A># Setting the title<0x0A>fig.subplots_adjust(bottom=0.15)<0x0A><0x0A># Setting the y-axis label<0x0A>fig.subplots_adjust(left=0.15, wspace
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs weak (2e [8000]}})'}, 'data': {'values': [{'x': 'Year', 'y': 2.05}, {'x': 'field', 'y': 2.05}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.66 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:06<01:57,  6.20s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:12<01:52,  6.23s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:17<01:38,  5.77s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:24<01:41,  6.33s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:27<01:14,  4.97s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:32<01:09,  4.97s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:36<00:59,  4.59s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:42<01:00,  5.05s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:49<01:02,  5.65s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:54<00:55,  5.53s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [01:01<00:53,  5.91s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:09<00:52,  6.53s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:16<00:47,  6.83s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:19<00:34,  5.73s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:23<00:25,  5.13s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:27<00:19,  4.80s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:30<00:12,  4.29s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:34<00:08,  4.24s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:41<00:04,  4.82s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:41<00:04,  4.82s/it]
[35m|[39m JSON to Vega conversion error rate: [31m5.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5550, 'y': 4218}, {'x': 1824, 'y': 835}, {'x': 2696, 'y': 2108}, {'x': 4696, 'y': 2964}, {'x': 5550, 'y': 4218}, {'x': 3128, 'y': 3785}, {'x': 4696, 'y': 2108}, {'x': 2696, 'y': 2108}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.13}, {'x': 'USA', 'y': 24.12}, {'x': 'Dog', 'y': 120.39}, {'x': 'Nike', 'y': 48.09}, {'x': 'Apple', 'y': 48.09}, {'x': 'Male', 'y': 24.12}, {'x': 'Rock', 'y': 27.78}, {'x': 'Sedan', 'y': 24.12}, {'x': 'Spanish', 'y': 48.09}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.85}, {'x': 'Dog', 'y': 8.31}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 15', 'y': 60.73}, {'x': 295', 'y': 13.48}, {'x': 54', 'y': 60.73}, {'x': 295', 'y': 60.73}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7152, 'y': 364.01}, {'x': 7152, 'y': 364.01}, {'x': 5766, 'y': 226.04}, {'x': 393, 'y': 364.01}, {'x': 7152, 'y': 114.25}, {'x': 7152, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 201.87}, {'x': 1918, 'y': 198.55}, {'x': 1921, 'y': 16.53}, {'x': 1925, 'y': 16.53}, {'x': 1929, 'y': 16.53}, {'x': 1933, 'y': 36.06}, {'x': 1936, 'y': 198.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.98}, {'x': 1816, 'y': 39.24}, {'x': 1818, 'y': 79.98}, {'x': 1820, 'y': 9.36}, {'x': 1822, 'y': 80.89}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.59}, {'x': 1866, 'y': 268.09}, {'x': 1872, 'y': 268.09}, {'x': 1876, 'y': 110.59}, {'x': 1882, 'y': 268.09}, {'x': 1888, 'y': 101.02}, {'x': 1892, 'y': 268.09}, {'x': 1896, 'y': 268.09}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 570, 'y': 640}, {'x': 512, 'y': 16}, {'x': 622, 'y': 24}, {'x': 472, 'y': 16}, {'x': 570, 'y': 640}, {'x': 622, 'y': 32}, {'x': 472, 'y': 64}, {'x': 570, 'y': 64}, {'x': 622, 'y': 24}, {'x': 272, 'y': 24}, {'x': 570, 'y': 24}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.33}, {'x': 1814, 'y': 147.46}, {'x': 1822, 'y': 138.65}, {'x': 1828, 'y': 27.09}, {'x': 1836, 'y': 27.09}, {'x': 1844, 'y': 119.61}, {'x': 1852, 'y': 310.46}, {'x': 1859, 'y': 308.61}, {'x': 1867, 'y': 147.46}, {'x': 1874, 'y': 577.79}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4580, 'y': 61.52}, {'x': 3344, 'y': 61.52}, {'x': 4088, 'y': 55.009}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2886}, {'x': 1926, 'y': 2886}, {'x': 1932, 'y': 2886}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.09}, {'x': 686, 'y': 121.98}, {'x': 1576, 'y': 37.4}, {'x': 1576, 'y': 40.25}, {'x': 22020, 'y': 364.56}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Drentled Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 361}, {'x': 1809, 'y': 361}, {'x': 1811, 'y': 4964}, {'x': 1813, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4874}, {'x': 1831, 'y': 3385}, {'x': 1836, 'y': 4874}, {'x': 1840, 'y': 3385}, {'x': 1846, 'y': 1911}, {'x': 1854, 'y': 4874}, {'x': 1858, 'y': 4874}, {'x': 1864, 'y': 3385}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1275, 'y': 529.09}, {'x': 3840, 'y': 624.96}, {'x': 384, 'y': 564.73}, {'x': 1275, 'y': 529.09}, {'x': 3840, 'y': 624.96}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:04<01:19,  4.18s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:08<01:19,  4.44s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:14<01:25,  5.04s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:15<00:53,  3.35s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:21<01:05,  4.34s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:25<00:59,  4.27s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:32<01:05,  5.00s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:49<01:46,  8.86s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:54<01:25,  7.73s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [01:11<01:47, 10.76s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [01:29<01:56, 12.95s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:46<01:52, 14.03s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [02:04<01:46, 15.23s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [02:07<01:09, 11.60s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [02:29<01:12, 14.57s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [02:35<00:48, 12.11s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [02:50<00:38, 13.00s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [03:09<00:29, 14.75s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [03:14<00:11, 11.89s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:18<00:00,  9.93s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:18<00:00,  9.93s/it]
[35m|[39m JSON to Vega conversion error rate: [31m60.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.66 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'type': 'quantitative'}}, 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'type', 'y': 605}, {'x': 'field', 'y': 605}, {'x': 'variable', 'y': 605}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of (Unknown) Resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 99.68}, {'x': 'type', 'y': 99.68}, {'x': 'field', 'y': 55.33}, {'x': 'field', 'y': 99.68}, {'x': 'variable', 'y': 48.01}, {'x': 'variable', 'y': 48.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31marable_land_plot('Sychelles', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 315.65}, {'x': 'field', 'y': 315.65}, {'x': 'type', 'y': 315.65}, {'x': 'field', 'y': 315.65}, {'x': 'type', 'y': 315.65}, {'x': 'field', 'y': 315.65}, {'x': 'variable', 'y': 122.25}, {'x': 'variable', 'y': 315.65}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 12.15}, {'x': 'field', 'y': 12.15}, {'x': 'variable', 'y': 'value'}},<0xAB><0xAB>: {'x': 'variable', 'y': 12.15}, {'x': 'field', 'y': 12.15}, {'x': 'variable', 'y': 12.15}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.98}, {'x': 'field', 'y': 48.06}, {'x': 'type', 'y': 37.06}, {'x': 'field', 'y': 47.66}, {'x': 'type', 'y': 37.06}, {'x': 'field', 'y': 48.06}, {'x': 'variable', 'y': 19.25}, {'x': 'variable', 'y': 19.25}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##########################################################################<0x0A># TODO: Draw a nested barplot to show bills by year and year using the function from the previous query. <0x0A>###########################################################<0x0A><0x0A># Create a list of columns to plot on<0x0A># Note: this is a function that will be used to create a barplot using the function from the previous query. <0x0A>#############################################################<0x0A><0x0A># Create a list of columns to plot on<0x0A># Note: this is a function that will be used to create a barplot using the function from the previous query. <0x0A>#############################################################<0x0A><0x0A># Create a list of columns to plot on<0x0A># Note: this is a function that will be used to create a barplot using the function from the previous query. <0x0A>#############################################################<0x0A><0x0A># Create a list of columns to plot on<0x0A># Note: this is a function that will be used to create a barplot using the function from the previous query. <0x0A>#############################################################<0x0A><0x0A># Create a list of columns to plot on<0x0A># Note: this is a function that will be used to create a barplot using the function from the previous query. <0x0A>#############################################################<0x0A><0x0A># Create a list of columns to plot on<0x0A># Note: this is a function that will be used to create a barplot using the function from the previous query. <0x0A>#############################################################<0x0A><0x0A># Create a list of columns to plot on<0x0A># Note: this is a function that will be used to create a barplot using the function from the previous query. <0x0A>#############################################################<0x0A><0x0A># Create a list of columns to plot on<0x0A># Note: this is a function that will be used to create a barplot using the function from the previous query. <0x0A>###############################################################<0x0A><0x0A># Create a list of columns to plot on<0x0A># Note: this is a function that will be used to create a barplot using the function from the previous query. <0x0A>###############################################################<0x0A><0x0A># Create a list of columns to plot on<0x0A># Note: this is a function that will be used to create a barplot using the function from the previous query. <0x0A>###############################################################<0x0A><0x0A># Create a list of columns to plot on<0x0A># Note: this is a function that will be used to create a barplot using the function from the previous query. <0x0A>###############################################################<0x0A><0x0A># Create a list of columns to plot on<0x0A># Note: this is a function that will be used
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.plot(kind='bar',figsize=(15,15),color='green')<0x0A>plt.xlabel('Country')<0x0A>plt.ylabel('Yield by per horoctonym')<0x0A>plt.title('Cereal yield in different countries as per the survey of 1981')<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_title('Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 2)<0x0A><0x0A># Plot<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Plot<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '5%/poverty lines'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '5%/poverty lines'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Import duties<0x0A>import matplotlib.pyplot as plt<0x0A>import matplotlib.patches as mpatches<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A><0x0A># Import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['top'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['bottom'].set_linewidth(3)<0x0A><0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((intramental to housing development)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.85}, {'x': 'field', 'y': 5.85}, {'x': 'type', 'y': 12.05}, {'x': 'field', 'y': 12.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Country']).sum()<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by=['Country'], ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat_plot = percentage_households_sat.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(15,15))<0x0A>percentage_households_sat_plot.set_title('Percentage of households in Russian Federation that uses iodized salt', fontsize=16)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country/Region'] == 'UK') & (grupo['Value'] > 0.05)]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GVG)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.tick_params(bottom=False, top=True, left=False, right=False)<0x0A>ax.tick_params(top=False, bottom=False, left=False, right=False)<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GVG)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.tick_params(bottom=False, top=True, left=False)<0x0A><0x0A># Plotting the graph<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A>ax.spines['
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs weak (2e 10000)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'field', 'y': 2.08}, {'x': 'type', 'y': 2.08}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.66 [35m|
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:05<01:45,  5.53s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:11<01:42,  5.69s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:14<01:16,  4.51s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:20<01:22,  5.16s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:24<01:08,  4.55s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:31<01:15,  5.38s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:34<01:03,  4.91s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:39<00:56,  4.71s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:47<01:04,  5.91s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:52<00:56,  5.69s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:59<00:53,  5.97s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:08<00:54,  6.85s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:16<00:50,  7.18s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:20<00:37,  6.20s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:23<00:25,  5.19s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:27<00:20,  5.01s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:31<00:13,  4.53s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:36<00:09,  4.86s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:43<00:05,  5.43s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:43<00:05,  5.43s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5550, 'y': 4218}, {'x': 3190, 'y': 3384}, {'x': 5550, 'y': 2952}, {'x': 3920, 'y': 2104}, {'x': 1844, 'y': 835}, {'x': 2696, 'y': 2104}, {'x': 4696, 'y': 2952}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.13}, {'x': 'USA', 'y': 24.12}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 48.08}, {'x': 'Apple', 'y': 48.08}, {'x': 'Male', 'y': 24.12}, {'x': 'Rock', 'y': 27.78}, {'x': 'Sedan', 'y': 24.12}, {'x': 'Spanish', 'y': 48.08}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.85}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 191.37, 'y': 60.73}, {'x': 279.23, 'y': 13.48}, {'x': 54.59, 'y': 60.61}, {'x': 239.09, 'y': 60.73}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7351, 'y': 364.01}, {'x': 5753, 'y': 227.2}, {'x': 3888, 'y': 363.56}, {'x': 735, 'y': 43.09}, {'x': 1844, 'y': 363.56}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 201.87}, {'x': 1918, 'y': 198.55}, {'x': 1921, 'y': 16.53}, {'x': 1925, 'y': 16.53}, {'x': 1929, 'y': 16.53}, {'x': 1933, 'y': 36.06}, {'x': 1939, 'y': 18.47}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.98}, {'x': 1816, 'y': 39.24}, {'x': 1818, 'y': 79.98}, {'x': 1820, 'y': 9.33}, {'x': 1822, 'y': 80.88}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.59}, {'x': 1866, 'y': 268.09}, {'x': 1870, 'y': 268.09}, {'x': 1872, 'y': 110.59}, {'x': 1876, 'y': 268.09}, {'x': 1882, 'y': 268.09}, {'x': 1886, 'y': 101.06}, {'x': 1890, 'y': 268.09}, {'x': 1892, 'y': 268.09}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 570, 'y': 64}, {'x': 490, 'y': 16}, {'x': 570, 'y': 64}, {'x': 628, 'y': 32}, {'x': 712, 'y': 24}, {'x': 232, 'y': 24}, {'x': 490, 'y': 16}, {'x': 628, 'y': 56}, {'x': 712, 'y': 64}, {'x': 570, 'y': 64}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.3}, {'x': 1814, 'y': 147.65}, {'x': 1824, 'y': 27.0}, {'x': 1830, 'y': 27.0}, {'x': 1838, 'y': 147.65}, {'x': 1847, 'y': 310.9}, {'x': 1854, 'y': 308.1}, {'x': 1864, 'y': 147.65}, {'x': 1874, 'y': 577.9}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4580, 'y': 61.52}, {'x': 3344, 'y': 61.52}, {'x': 3064, 'y': 55.00}, {'x': 4008, 'y': 55.00}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1927, 'y': 2885}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.09}, {'x': 686, 'y': 121.98}, {'x': 1576, 'y': 37.4}, {'x': 1576, 'y': 40.25}, {'x': 22020, 'y': 364.56}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 878}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 361}, {'x': 1809, 'y': 361}, {'x': 1811, 'y': 4964}, {'x': 1813, 'y': 5760}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4890}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4890}, {'x': 1840, 'y': 3385}, {'x': 1846, 'y': 4890}, {'x': 1854, 'y': 3385}, {'x': 1858, 'y': 4890}, {'x': 1864, 'y': 1910}, {'x': 1871, 'y': 4890}, {'x': 1876, 'y': 3385}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1916, 'y': 527.8}, {'x': 3936, 'y': 624.92}, {'x': 3936, 'y': 564.85}, {'x': 1916, 'y': 527.85}, {'x': 3936, 'y': 624.92}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:03<01:11,  3.78s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:11<01:53,  6.32s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:18<01:51,  6.57s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:34<02:42, 10.15s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:41<02:14,  8.96s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:46<01:48,  7.78s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:54<01:40,  7.73s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [01:12<02:12, 11.08s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [01:27<02:16, 12.43s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [01:45<02:19, 13.97s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [02:04<02:19, 15.46s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [02:22<02:09, 16.21s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [02:41<01:59, 17.05s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [02:45<01:18, 13.15s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [03:04<01:15, 15.08s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [03:12<00:51, 12.81s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [03:27<00:40, 13.55s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [03:44<00:28, 14.42s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [03:51<00:12, 12.28s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:55<00:00, 11.75s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:55<00:00, 11.75s/it]
[35m|[39m JSON to Vega conversion error rate: [31m70.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.7 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'x', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'type', 'y': 605}, {'x': 'field', 'y': 605}, {'x': 'variable', 'y': 'Median Household Income (S$1524)', 'type': 'quantitative'}}, 'data': {'x': 'variable', 'y': 605}, {'x': 'field', 'y': 605}, {'x': 'variable', 'y': 605}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of total non-fertiliser discharges)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 98.08}, {'x': 'type', 'y': 98.08}, {'x': 'field', 'y': 55.33}, {'x': 'type', 'y': 98.08}, {'x': 'field', 'y': 30.2}, {'x': 'type', 'y': 98.08}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(25,25))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 125.65}, {'x': 'y', 'y': 324.05}, {'x': 'x', 'y': 324.05}, {'x': 'y', 'y': 324.05}, {'x': 'x', 'y': 324.05}, {'x': 'y', 'y': 324.05}, {'x': 'x', 'y': 324.05}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 123.35}, {'x': 'field', 'y': 123.35}, {'x': 'type', 'y': 123.35}, {'x': 'field', 'y': 108.05}, {'x': 'type', 'y': 108.05}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.98}, {'x': 'field', 'y': 48.06}, {'x': 'type', 'y': 37.06}, {'x': 'field', 'y': 47.66}, {'x': 'type', 'y': 37.06}, {'x': 'field', 'y': 46.66}, {'x': 'type', 'y': 15.85}, {'x': 'field', 'y': 46.66}, {'x': 'type', 'y': 15.85}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##########################################################################<0x0A># TODO: Draw a nested barplot to show bills by year and year using the function from the previous query. <0x0A>###########################################################<0x0A><0x0A># Create a list of columns to plot<0x0A>columns = ['Year', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', '
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False,inplace=True)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_198
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_title('Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Plot<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Plot<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '5%/poverty lines'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', '5%/poverty lines'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Import duties<0x0A>import matplotlib.pyplot as plt<0x0A>import matplotlib.patches as mpatches<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A><0x0A># Import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['top'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['bottom'].set_linewidth(3)<0x0A><0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((intramental to housing development)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.43}, {'x': 'field', 'y': 5.43}, {'x': 'type', 'y': 12.25}, {'x': 'field', 'y': 12.25}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = percentage_sr_lanka.sort_values(by='percentage_sr_lanka', ascending=False)<0x0A><0x0A>g = sns.catplot(x="percentage_sr_lanka", y="percentage_sr_lanka", data=percentage_sr_lanka, kind="point", height=10, aspect=1.5, palette="mako")<0x0A>g.set_axis_labels("{0: ", "20": "{0: ", "40": "{0: ", "40: ", "50": "{0: ", "50": "{0: ", "50": "{0: ", "50": "{0: ", "50": "{0: ", "50: ", "50: "}]", ": ".join
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Percentage of children ages 12-23 months who received DPT vaccinations in Denmark}} ': {'x': {'field': 'Year', 'type': 'quantitative'}}, 'y': {'x': {'field': 'Year', 'type': 'quantitative'}}, 'y': {'x': {'field': 'Year', 'type': 'quantitative'}}, 'y': {'x': {'field': 'Year', 'type': 'quantitative'}}, 'y': {'x': {'field': 'Year', 'type': 'quantitative'}}, 'y': {'x': {'field': 'Year', 'type': 'quantitative'}}, 'y': {'x': {'field': 'Year', 'type': 'quantitative'}}, 'y': {'x': {'field': 'Year', 'type': 'quantitative'}}, 'y': {'x': {'field': 'Year', 'type': 'quantitative'}},<0xAB>}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat_plot = percentage_households_sat.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(15,15))<0x0A>percentage_households_sat_plot.set_title('Percentage of households in Russian Federation that uses iodized salt', fontsize=16)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country'] == 'UK') & (grupo['Type'] == 'Output')]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GVG)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.tick_params(bottom=False, top=True, left=False, right=False)<0x0A>ax.tick_params(top=False, bottom=False, left=False, right=False)<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Ather Capital (set % of GVG)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.tick_params(bottom=False, top=True, left=False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Plotting the graph<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs weak (2e [8000]}})'}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'field', 'y': 2.08}, {'x': 'type', 'y': 2.08}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.7 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:04<01:26,  4.55s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:09<01:29,  4.99s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:13<01:17,  4.58s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:23<01:44,  6.55s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:26<01:17,  5.16s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:30<01:10,  5.02s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:34<01:00,  4.62s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:39<00:57,  4.79s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:45<00:55,  5.01s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:49<00:47,  4.78s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:56<00:49,  5.52s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:04<00:49,  6.22s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:13<00:49,  7.08s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:19<00:39,  6.58s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:21<00:26,  5.34s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:25<00:19,  4.76s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:28<00:12,  4.32s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:33<00:09,  4.60s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:39<00:04,  4.88s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:39<00:04,  4.88s/it]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5550, 'y': 4218}, {'x': 2496, 'y': 2108}, {'x': 4772, 'y': 2961}, {'x': 2496, 'y': 2108}, {'x': 3690, 'y': 3785}, {'x': 4290, 'y': 2961}, {'x': 2496, 'y': 4218}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.13}, {'x': 'USA', 'y': 24.12}, {'x': 'Dog', 'y': 120.36}, {'x': 'Nike', 'y': 48.08}, {'x': 'Apple', 'y': 48.08}, {'x': 'Male', 'y': 24.12}, {'x': 'Rock', 'y': 27.71}, {'x': 'Sedan', 'y': 24.12}, {'x': 'Spanish', 'y': 48.08}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 191.37, 'y': 60.73}, {'x': 292.09, 'y': 13.48}, {'x': 54.68, 'y': 60.62}, {'x': 191.07, 'y': 60.73}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7152, 'y': 364.01}, {'x': 5752, 'y': 226.2}, {'x': 3888, 'y': 364.01}, {'x': 7152, 'y': 114.25}, {'x': 5752, 'y': 42.81}, {'x': 3188, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 201.87}, {'x': 1918, 'y': 198.55}, {'x': 1921, 'y': 16.53}, {'x': 1925, 'y': 16.53}, {'x': 1929, 'y': 16.53}, {'x': 1933, 'y': 36.06}, {'x': 1936, 'y': 198.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.98}, {'x': 1816, 'y': 39.24}, {'x': 1818, 'y': 79.98}, {'x': 1820, 'y': 9.33}, {'x': 1822, 'y': 80.89}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1861, 'y': 252.59}, {'x': 1866, 'y': 263.79}, {'x': 1872, 'y': 110.59}, {'x': 1876, 'y': 263.79}, {'x': 1882, 'y': 269.46}, {'x': 1888, 'y': 101.06}, {'x': 1892, 'y': 263.79}, {'x': 1896, 'y': 101.06}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 506, 'y': 64}, {'x': 462, 'y': 16}, {'x': 512, 'y': 16}, {'x': 622, 'y': 24}, {'x': 462, 'y': 64}, {'x': 376, 'y': 24}, {'x': 512, 'y': 64}, {'x': 622, 'y': 56}, {'x': 462, 'y': 16}, {'x': 376, 'y': 24}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584.3}, {'x': 1814, 'y': 147.65}, {'x': 1824, 'y': 27.0}, {'x': 1830, 'y': 27.0}, {'x': 1836, 'y': 147.65}, {'x': 1844, 'y': 310.9}, {'x': 1852, 'y': 308.1}, {'x': 1858, 'y': 147.65}, {'x': 1868, 'y': 150.25}, {'x': 1874, 'y': 577.9}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4580, 'y': 61.52}, {'x': 3128, 'y': 55.00}, {'x': 4272, 'y': 55.00}, {'x': 2870, 'y': 78.64}, {'x': 3128, 'y': 61.52}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1925, 'y': 2885}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.09}, {'x': 676, 'y': 121.98}, {'x': 1576, 'y': 37.48}, {'x': 1576, 'y': 40.25}, {'x': 1576, 'y': 365.88}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2935}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 877}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 361}, {'x': 1809, 'y': 361}, {'x': 1811, 'y': 4964}, {'x': 1813, 'y': 5760}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4890}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4890}, {'x': 1840, 'y': 3385}, {'x': 1846, 'y': 4890}, {'x': 1854, 'y': 3385}, {'x': 1858, 'y': 4890}, {'x': 1864, 'y': 1910}, {'x': 1871, 'y': 3385}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1916, 'y': 530.25}, {'x': 3936, 'y': 624.91}, {'x': 3936, 'y': 564.55}, {'x': 1916, 'y': 527.61}, {'x': 3936, 'y': 627.61}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:03<01:08,  3.63s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:07<01:08,  3.79s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:12<01:15,  4.47s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:13<00:47,  3.00s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:22<01:15,  5.03s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:28<01:16,  5.50s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:35<01:15,  5.81s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:50<01:45,  8.76s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [01:07<02:07, 11.58s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [01:22<02:06, 12.61s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [01:38<02:02, 13.61s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:59<02:07, 15.95s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [02:17<01:55, 16.54s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [02:21<01:16, 12.72s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [02:38<01:09, 13.83s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [02:43<00:45, 11.30s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [02:48<00:28,  9.45s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [03:06<00:23, 11.82s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [03:11<00:09,  9.86s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [03:11<00:09,  9.86s/it]
[35m|[39m JSON to Vega conversion error rate: [31m60.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.69 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'x', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'type', 'y': 605}, {'x': 'field', 'y': 605}, {'x': 'variable', 'y': 605}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of total non-fertiliser discharges)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 55.23}, {'x': 'y', 'y': 99.29}, {'x': 'y', 'y': 55.23}, {'x': 'x', 'y': 99.29}, {'x': 'y', 'y': 61.83}, {'x': 'x', 'y': 61.83}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31marable_land_plot('Seychelles', 'Year', 'Arable land (hectares) in Seychelles')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 125.65}, {'x': 'y', 'y': 315.45}, {'x': 'x', 'y': 315.45}, {'x': 'y', 'y': 315.45}, {'x': 'x', 'y': 315.45}, {'x': 'y', 'y': 315.45}, {'x': 'x', 'y': 315.45}, {'x': 'y', 'y': 315.45}, {'x': 'x', 'y': 315.45}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 123.35}, {'x': 'field', 'y': 123.35}, {'x': 'type', 'y': 123.35}, {'x': 'field', 'y': 108.05}, {'x': 'type', 'y': 108.05}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 13.65}, {'x': 'field', 'y': 47.88}, {'x': 'type', 'y': 37.06}, {'x': 'field', 'y': 49.56}, {'x': 'type', 'y': 13.65}, {'x': 'field', 'y': 47.88}, {'x': 'type', 'y': 7.05}, {'x': 'field', 'y': 46.66}, {'x': 'type', 'y': 7.05}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##########################################################################<0x0A># TODO: Draw a nested barplot to show bills by year and year using the function from the previous query. <0x0A>###########################################################<0x0A><0x0A># Create a list of columns to plot<0x0A>columns = ['Year', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', 'Bill', '
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(1
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:14<00:00,  9.70s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['top'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['bottom'].set_linewidth(3)<0x0A><0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((intramental to housing development)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.85}, {'x': 'field', 'y': 55.05}, {'x': 'type', 'y': 12.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Country']).sum()<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by=['Country'], ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 111}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 111}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat = pd.DataFrame(households_sat.groupby(['Year'])['Year'].count()).reset_index()<0x0A>percentage_households_sat.columns = ['Percentage of households in Russian Federation that uses iodized salt', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>percentage_households_sat.columns = ['Year', 'Percentage of households in Russian Federation that uses iodized salt']<0x0A>percentage_households_sat.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(15, 15))<0x0A>plt.title('Percentage of households in Russian Federation that uses iodized salt')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country'] == 'UK') & (grupo['Type'] == 'Output')]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Atheritage (%) (Year of Growth)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Consumption of Atheritage (%) (Year of Growth)'])<0x0A><0x0A># Setting the background color of the graph<0x0A>fig.colorbar(shrink=0.8, ax=ax)<0x0A><0x0A># Setting the title<0x0A>fig.colorbar(shrink=0.8, ax=ax)<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength Index (Cs weak (2e [8000]}})'}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'field', 'y': 2.08}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.17 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.69 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  5%|█████▋                                                                                                            | 1/20 [00:05<01:42,  5.39s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:10<01:34,  5.23s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:13<01:12,  4.26s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:19<01:20,  5.00s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:22<01:02,  4.16s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:27<01:03,  4.57s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:32<00:57,  4.46s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:36<00:54,  4.53s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:41<00:52,  4.75s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:48<00:52,  5.27s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:54<00:48,  5.43s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:00<00:44,  5.61s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:09<00:47,  6.78s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:13<00:34,  5.80s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:16<00:24,  4.91s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:20<00:18,  4.64s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:24<00:13,  4.46s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:28<00:09,  4.53s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:34<00:05,  5.01s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:34<00:05,  5.01s/it]
[35m|[39m JSON to Vega conversion error rate: [31m10.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5553, 'y': 4218}, {'x': 3196', 'y': 3381}, {'x': 2690, 'y': 2108}, {'x': 4690, 'y': 2964}, {'x': 5553, 'y': 4218}, {'x': 3924, 'y': 2108}, {'x': 1924, 'y': 835}, {'x': 1924, 'y': 2964}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.13}, {'x': 'USA', 'y': 24.12}, {'x': 'Dog', 'y': 120.39}, {'x': 'Nike', 'y': 48.39}, {'x': 'Apple', 'y': 48.39}, {'x': 'Male', 'y': 24.12}, {'x': 'Rock', 'y': 27.78}, {'x': 'Sedan', 'y': 24.12}, {'x': 'Spanish', 'y': 48.39}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.42}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 191.37, 'y': 60.73}, {'x': 279.09, 'y': 13.49}, {'x': 53.68, 'y': 60.62}, {'x': 191.28, 'y': 60.73}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7152, 'y': 364.01}, {'x': 7152, 'y': 42.18}, {'x': 5752, 'y': 226.04}, {'x': 3888, 'y': 364.01}, {'x': 7152, 'y': 114.25}, {'x': 3888, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 201.87}, {'x': 1919, 'y': 198.46}, {'x': 1923, 'y': 17.51}, {'x': 1928, 'y': 17.51}, {'x': 1930, 'y': 36.28}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.98}, {'x': 1816, 'y': 30.79}, {'x': 1818, 'y': 79.98}, {'x': 1820, 'y': 48.52}, {'x': 1822, 'y': 80.59}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.59}, {'x': 1866, 'y': 268.95}, {'x': 1870, 'y': 268.95}, {'x': 1872, 'y': 110.59}, {'x': 1876, 'y': 268.95}, {'x': 1882, 'y': 268.95}, {'x': 1886, 'y': 101.01}, {'x': 1892, 'y': 268.95}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 570, 'y': 64}, {'x': 472, 'y': 16}, {'x': 570, 'y': 64}, {'x': 628, 'y': 32}, {'x': 712, 'y': 64}, {'x': 234, 'y': 24}, {'x': 472, 'y': 16}, {'x': 628, 'y': 56}, {'x': 234, 'y': 24}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 584.3}, {'x': 1817, 'y': 147.65}, {'x': 1824, 'y': 27.0}, {'x': 1828, 'y': 27.0}, {'x': 1834, 'y': 27.0}, {'x': 1838, 'y': 147.65}, {'x': 1847, 'y': 310.9}, {'x': 1852, 'y': 308.1}, {'x': 1858, 'y': 147.65}, {'x': 1866, 'y': 150.25}, {'x': 1872, 'y': 584.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4580, 'y': 61.52}, {'x': 3344, 'y': 61.52}, {'x': 30 pts', 'y': 55.00}, {'x': 40 pts', 'y': 55.00}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1925, 'y': 2885}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.09}, {'x': 696, 'y': 121.98}, {'x': 1576, 'y': 366.68}, {'x': 1576, 'y': 40.15}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2932}, {'x': 'USA', 'y': 1474}, {'x': 'Dog', 'y': 877}, {'x': 'Nike', 'y': 1474}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 361}, {'x': 1809, 'y': 361}, {'x': 1811, 'y': 4964}, {'x': 1813, 'y': 5764}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4890}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4890}, {'x': 1840, 'y': 3385}, {'x': 1846, 'y': 4890}, {'x': 1854, 'y': 3385}, {'x': 1858, 'y': 4890}, {'x': 1864, 'y': 1910}, {'x': 1871, 'y': 4890}, {'x': 1876, 'y': 3385}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1275, 'y': 529.79}, {'x': 3690, 'y': 624.96}, {'x': 3690, 'y': 529.79}, {'x': 1275, 'y': 564.96}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:04<01:17,  4.07s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:11<01:50,  6.16s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:18<01:46,  6.28s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:34<02:42, 10.14s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:41<02:15,  9.02s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:45<01:45,  7.53s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:53<01:39,  7.69s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [01:13<02:18, 11.51s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [01:29<02:22, 13.00s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [01:45<02:19, 13.91s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [02:04<02:17, 15.27s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [02:21<02:07, 15.93s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [02:41<02:00, 17.21s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [02:45<01:18, 13.06s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [03:00<01:09, 13.87s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [03:05<00:44, 11.20s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [03:24<00:40, 13.39s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [03:42<00:29, 14.66s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [03:48<00:12, 12.21s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:53<00:00, 11.65s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:53<00:00, 11.65s/it]
[35m|[39m JSON to Vega conversion error rate: [31m70.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.12 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.69 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'y': 0.01}, {'x': 'x', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'type', 'y': 605}, {'x': 'field', 'y': 605}, {'x': 'variable', 'y': 'Median Household Income (k$)': 980}, {'x': 'variable', 'y': 605}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of total non-fertiliser discharges)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 99.68}, {'x': 'type', 'y': 99.68}, {'x': 'field', 'y': 55.33}, {'x': 'field', 'y': 99.68}, {'x': 'type', 'y': 61.83}, {'x': 'field', 'y': 61.83}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31m# Plotting the graph<0x0A><0x0A>fig = plt.figure(figsize=(25,25))<0x0A><0x0A># Plotting the graph<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average Land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average Land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average Land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average Land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average Land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average Land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average Land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, aspect=2.5, palette="gist_rainbow_r")<0x0A><0x0A># Plotting the graph<0x0A>sns.relplot(x="Year", y="Average Land (hectares)", data=df, kind="line", ci=None, height=15, aspect=2.5, aspect=2.5, aspect=2.5, aspect=2.5, aspect=2.5, aspect=2.5, aspect=2.5, aspect=2.5, aspect=2.5
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.05}, {'x': 'field', 'y': 324.05}, {'x': 'type', 'y': 127.05}, {'x': 'field', 'y': 324.05}, {'x': 'type', 'y': 127.05}, {'x': 'field', 'y': 262.25}, {'x': 'type', 'y': 271.45}, {'x': 'field', 'y': 324.05}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 123.33}, {'x': 'y': 'Year', 'y': 123.33}, {'x': 'field', 'y': 108.05}, {'x': 'field', 'y': 108.05}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.98}, {'x': 'field', 'y': 47.66}, {'x': 'type', 'y': 37.06}, {'x': 'field', 'y': 49.56}, {'x': 'type', 'y': 7.03}, {'x': 'field', 'y': 46.66}, {'x': 'type', 'y': 7.03}, {'x': 'field', 'y': 47.66}, {'x': 'type', 'y': 37.06}, {'x': 'field', 'y': 47.66}, {'x': 'variable', 'y': 15.85}, {'x': 'variable', 'y': 15.85}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##########################################################################<0x0A># TODO: Draw a nested barplot to show bills by year and year using the function from the previous query. <0x0A>###########################################################<0x0A><0x0A># Create a list of columns to plot on<0x0A># Note: this is a list of strings for strings, so we'll use them later.<0x0A>#############################################################<0x0A><0x0A># Create a list of floats as a DataFrame<0x0A># DataFrame <0x0A># Group by Type, Category, and Number of items<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#... YOUR CODE FOR TASK 3 HERE<0x0A>#...
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = df_1981.groupby(['Country'])['yield'].sum().reset_index()<0x0A>Country_1981['Country'] = Country_1981['Country'].astype(str)<0x0A>Country_1981.sort_values(by='yield',ascending=False)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(10)<0x0A>Country_1981.head(1
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_title('Mean shortfall from the poverty lines (as a percentage of the poverty lines) in Sri Lanka')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Plot<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean(), color='g', align='center', edgecolor='black')<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean()['Poverty'], color='g', align='center', edgecolor='black')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A><0x0A># Plot<0x0A>ax.bar( grupo_df.Year, grupo_df.mean()['Poverty'], color='g', align='center')<0x0A>ax.set_ylabel('5%/poverty lines')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_ylabel('5%/poverty
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Import duties<0x0A>import matplotlib.pyplot as plt<0x0A>import matplotlib.patches as mpatches<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of tax revenue) of Indonesia'])<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A><0x0A># Import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['top'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['bottom'].set_linewidth(3)<0x0A><0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((intramental to housing development)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.85}, {'x': 'field', 'y': 55.05}, {'x': 'type', 'y': 12.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Country']).sum()<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by=['Country'], ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'field', 'y': 7.5}, {'x': 'variable', 'y': 7.5}, {'x': 'variable', 'y': 7.5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat_plot = percentage_households_sat.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(15,15))<0x0A>percentage_households_sat_plot.set_title('Percentage of households in Russian Federation that uses iodized salt', fontsize=16)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country'] == 'UK') & (grupo['Type'] == 'Output')]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Consumption of Atheritage (%) (Year of Growth)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Consumption of Atheritage (%) (Year of Growth)'])<0x0A><0x0A># Setting the background color of the graph<0x0A>fig.colorbar(shrink=0.8, ax=ax)<0x0A><0x0A># Setting the title<0x0A>fig.colorbar(shrink=0.8, ax=ax)<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting the title<0x0A>fig.suptitle('Capital used up in the process of production in United Kingdom')<0x0A><0x0A># Setting
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 19.25}, {'x': 'field', 'y': 19.25}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Strength index (Cs weak (2e [8000]}})'}, 'y': {'field': 'Rating regarding strength of legal rights index in Croatia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'y': 2.08}, {'x': 'field': 'Rating regarding strength of legal rights index in Croatia', 'y': 'Strength index (Cs weak (2e [8000]}})}}}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.12 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.69 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  5%|█████▋                                                                                                            | 1/20 [00:06<01:58,  6.24s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:12<01:53,  6.33s/it]
 15%|█████████████████                                                                                                 | 3/20 [00:16<01:30,  5.31s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:24<01:39,  6.24s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:27<01:14,  4.95s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:32<01:11,  5.11s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:36<01:02,  4.83s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:42<01:01,  5.12s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:48<00:57,  5.26s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [00:52<00:49,  4.97s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [00:58<00:47,  5.25s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:04<00:44,  5.54s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [01:14<00:47,  6.79s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [01:18<00:36,  6.11s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [01:21<00:26,  5.23s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [01:25<00:18,  4.72s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [01:28<00:12,  4.21s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [01:32<00:08,  4.23s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [01:38<00:04,  4.72s/it]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
  0%|                                                                                                                          | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m0.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5553, 'y': 4218}, {'x': 3196, 'y': 3381}, {'x': 1826, 'y': 835}, {'x': 2690, 'y': 2108}, {'x': 4690, 'y': 2962}, {'x': 5553, 'y': 4218}, {'x': 3922, 'y': 2108}, {'x': 1826, 'y': 3804}, {'x': 4690, 'y': 2962}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7080}, {'x': 'USA', 'y': 4230}, {'x': 'Dog', 'y': 691}, {'x': 'Nike', 'y': 4230}, {'x': 'Apple', 'y': 6370}, {'x': 'Male', 'y': 691}, {'x': 'Rock', 'y': 7080}, {'x': 'Sedan', 'y': 4230}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1010}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 191.13}, {'x': 'USA', 'y': 24.12}, {'x': 'Dog', 'y': 120.11}, {'x': 'Nike', 'y': 48.08}, {'x': 'Apple', 'y': 48.08}, {'x': 'Male', 'y': 24.12}, {'x': 'Rock', 'y': 27.78}, {'x': 'Sedan', 'y': 24.12}, {'x': 'Spanish', 'y': 48.08}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.5}, {'x': 'USA', 'y': 152.35}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.0}, {'x': 'USA', 'y': 8.33}, {'x': 'Dog', 'y': 8.28}, {'x': 'Nike', 'y': 12.0}, {'x': 'Apple', 'y': 3.87}, {'x': 'Dog', 'y': 8.33}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 191.37, 'y': 60.73}, {'x': 279.09, 'y': 13.49}, {'x': 53.68, 'y': 60.62}, {'x': 191.11, 'y': 60.73}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 7142, 'y': 364.01}, {'x': 5766, 'y': 226.2}, {'x': 3852, 'y': 364.01}, {'x': 7142, 'y': 42.81}, {'x': 1842, 'y': 364.01}, {'x': 3180, 'y': 364.01}, {'x': 7142, 'y': 114.25}, {'x': 1842, 'y': 364.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 201.86}, {'x': 1918, 'y': 198.55}, {'x': 1921, 'y': 16.53}, {'x': 1925, 'y': 16.53}, {'x': 1929, 'y': 16.53}, {'x': 1933, 'y': 36.06}, {'x': 1936, 'y': 198.55}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1814, 'y': 79.98}, {'x': 1816, 'y': 30.54}, {'x': 1818, 'y': 79.98}, {'x': 1820, 'y': 9.32}, {'x': 1822, 'y': 80.69}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.59}, {'x': 1866, 'y': 268.95}, {'x': 1869, 'y': 268.95}, {'x': 1872, 'y': 110.59}, {'x': 1877, 'y': 268.95}, {'x': 1882, 'y': 268.95}, {'x': 1886, 'y': 101.01}, {'x': 1890, 'y': 268.95}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 712, 'y': 56}, {'x': 506, 'y': 64}, {'x': 536, 'y': 16}, {'x': 506, 'y': 64}, {'x': 232, 'y': 24}, {'x': 536, 'y': 16}, {'x': 606, 'y': 32}, {'x': 712, 'y': 56}, {'x': 232, 'y': 24}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1808, 'y': 584}, {'x': 1814, 'y': 146}, {'x': 1824, 'y': 27}, {'x': 1832, 'y': 27}, {'x': 1838, 'y': 146}, {'x': 1848, 'y': 310}, {'x': 1856, 'y': 308}, {'x': 1864, 'y': 146}, {'x': 1872, 'y': 577}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 4580, 'y': 61.52}, {'x': 3344, 'y': 61.52}, {'x': 3064, 'y': 55.00}, {'x': 4006, 'y': 55.00}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2886}, {'x': 1925, 'y': 2886}, {'x': 1930, 'y': 2886}, {'x': 1939, 'y': 2886}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1576, 'y': 38.09}, {'x': 676, 'y': 121.99}, {'x': 1576, 'y': 366.68}, {'x': 1576, 'y': 40.15}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2935}, {'x': 'USA', 'y': 1470}, {'x': 'Dog', 'y': 875}, {'x': 'Nike', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Incomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1803, 'y': 4296}, {'x': 1806, 'y': 361}, {'x': 1809, 'y': 361}, {'x': 1811, 'y': 4964}, {'x': 1813, 'y': 5760}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4874}, {'x': 1831, 'y': 3385}, {'x': 1837, 'y': 4874}, {'x': 1840, 'y': 3385}, {'x': 1846, 'y': 1898}, {'x': 1854, 'y': 3385}, {'x': 1858, 'y': 4874}, {'x': 1865, 'y': 3385}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1275, 'y': 529.79}, {'x': 3640, 'y': 624.96}, {'x': 3640, 'y': 529.79}, {'x': 1275, 'y': 564.96}, {'x': 3640, 'y': 624.96}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.75 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 1.0 [35m|
  5%|█████▋                                                                                                            | 1/20 [00:03<01:11,  3.79s/it]
 10%|███████████▍                                                                                                      | 2/20 [00:08<01:13,  4.08s/it]
 20%|██████████████████████▊                                                                                           | 4/20 [00:14<00:49,  3.08s/it]
 25%|████████████████████████████▌                                                                                     | 5/20 [00:19<01:00,  4.03s/it]
 30%|██████████████████████████████████▏                                                                               | 6/20 [00:24<00:59,  4.23s/it]
 35%|███████████████████████████████████████▉                                                                          | 7/20 [00:29<00:59,  4.56s/it]
 40%|█████████████████████████████████████████████▌                                                                    | 8/20 [00:51<02:01, 10.09s/it]
 45%|███████████████████████████████████████████████████▎                                                              | 9/20 [00:57<01:38,  8.91s/it]
 50%|████████████████████████████████████████████████████████▌                                                        | 10/20 [01:13<01:51, 11.13s/it]
 55%|██████████████████████████████████████████████████████████████▏                                                  | 11/20 [01:32<02:01, 13.45s/it]
 60%|███████████████████████████████████████████████████████████████████▊                                             | 12/20 [01:53<02:04, 15.58s/it]
 65%|█████████████████████████████████████████████████████████████████████████▍                                       | 13/20 [02:12<01:56, 16.59s/it]
 70%|███████████████████████████████████████████████████████████████████████████████                                  | 14/20 [02:16<01:17, 12.94s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████▊                            | 15/20 [02:31<01:07, 13.58s/it]
 80%|██████████████████████████████████████████████████████████████████████████████████████████▍                      | 16/20 [02:35<00:42, 10.70s/it]
 85%|████████████████████████████████████████████████████████████████████████████████████████████████                 | 17/20 [02:52<00:37, 12.64s/it]
 90%|█████████████████████████████████████████████████████████████████████████████████████████████████████▋           | 18/20 [03:09<00:27, 13.73s/it]
 95%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▎     | 19/20 [03:16<00:11, 11.88s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:20<00:00, 10.02s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:20<00:00, 10.02s/it]
[35m|[39m JSON to Vega conversion error rate: [31m55.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.59 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.59 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'type', 'y': 0.01}, {'x': 'field', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'type', 'y': 605}, {'x': 'field', 'y': 605}, {'x': 'type', 'y': 605}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of total non-fertiliser discharges)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 98.05}, {'x': 'type', 'y': 98.05}, {'x': 'field', 'y': 55.33}, {'x': 'field', 'y': 30.2}, {'x': 'type', 'y': 98.05}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31marable_land_plot('Synthesis', 'Arable land (hectares) in Seychelles', 'Year')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.05}, {'x': 'field', 'y': 324.05}, {'x': 'type', 'y': 127.26}, {'x': 'field', 'y': 324.05}, {'x': 'type', 'y': 127.26}, {'x': 'field', 'y': 262.05}, {'x': 'type', 'y': 262.05}, {'x': 'field', 'y': 324.05}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 123.35}, {'x': 'y': 'Year', 'y': 123.35}, {'x': 'field', 'y': 16.15}, {'x': 'field', 'y': 16.15}, {'x': 'type', 'y': 'Number of Days', 'order': {'x': 'Year', 'y': 123.35}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.98}, {'x': 'field', 'y': 48.06}, {'x': 'type', 'y': 37.06}, {'x': 'field', 'y': 47.66}, {'x': 'type', 'y': 7.05}, {'x': 'field', 'y': 46.06}, {'x': 'type', 'y': 7.05}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##########################################################################<0x0A># TODO: Draw a nested barplot to show bills by year and year using the function from the previous query. <0x0A>##########################################################################<0x0A><0x0A># Create a list of columns to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of column names to plot on<0x0A># the 'column'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A>#
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country']).mean()['Yield for per headcountry'].sort_values(ascending=False).head(10))<0x0A>Country_1981.index = Country_1981.index.map(int)<0x0A>Country_1981.sort_values(ascending=False).head(10).plot(kind='bar', figsize=(15,15), color='green')<0x0A>Country_1981.set_title('Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield for per headcountry')<0x0A>Country_1981.set_xticklabels(['', 'No'], rotation=90)<0x0A>Country_1981.set_yticklabels(['', 'Yes'], rotation=0)<0x0A>Country_1981.legend(bbox_to_anchor=(1.25, 1))<0x0A>Country_1981.grid(False)<0x0A>Country_1981.grid(False)<0x0A>Country_1981.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.bar( grupo_df.Year, grupo_df.Shortfall, color='g', edgecolor='k', linewidth=1.5)<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_ylabel('5% poverty lines')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 1)<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_ylabel('5% poverty lines')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_ylabel('5% poverty lines')<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_ylabel('5% poverty lines')<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_ylabel('5% poverty lines')<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_ylabel('5% poverty lines')<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_ylabel('5% poverty lines')<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_ylabel('5% poverty lines')<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_ylabel('5% poverty lines')<0x0A><0x0A># Plot mean
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Import duties<0x0A>import matplotlib.pyplot as plt<0x0A>import matplotlib.patches as patches<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties (as % of tax revenue) of Indonesia<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', a
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', '
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['top'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((intramental to housing development)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.45}, {'x': 'field', 'y': 55.71}, {'x': 'type', 'y': 12.05}, {'x': 'field', 'y': 12.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Country']).sum()<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by=['Country'], ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 75}, {'x': 'variable', 'y': 75}, {'x': 'field', 'y': 75}, {'x': 'variable', 'y': 75}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat_plot = percentage_households_sat.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(15,15))<0x0A>percentage_households_sat_plot.set_title('Percentage of households in Russian Federation that uses iodized salt', fontsize=16)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country/Region'] == 'UK') & (grupo['Value'] > 0.05)]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Correspondence of Alfred Capital (Alfred Capital (Alfred CGM)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.tick_params(bottom=False, top=True, left=False, right=False)<0x0A>ax.tick_params(top=False, bottom=False, left=False, right=False)<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Correspondence of Alfred Capital (Alfred Capital (Alfred CGM)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.tick_params(bottom=False, top=True, right=False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 19.25}, {'x': 'field', 'y': 19.25}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'field', 'y': 2.08}, {'x': 'type', 'y': 2.08}, {'x': 'field', 'y': 2.08}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.59 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.59 [35m|
  0%|                                                                                                                         | 0/100 [00:00<?, ?it/s]
  1%|█▏                                                                                                               | 1/100 [00:04<07:02,  4.26s/it]
  2%|██▎                                                                                                              | 2/100 [00:08<07:03,  4.32s/it]
  3%|███▍                                                                                                             | 3/100 [00:13<07:27,  4.61s/it]
  4%|████▌                                                                                                            | 4/100 [00:19<08:03,  5.03s/it]
  5%|█████▋                                                                                                           | 5/100 [00:23<07:27,  4.71s/it]
  6%|██████▊                                                                                                          | 6/100 [00:26<06:35,  4.20s/it]
  7%|███████▉                                                                                                         | 7/100 [00:31<07:05,  4.57s/it]
  8%|█████████                                                                                                        | 8/100 [00:48<12:50,  8.38s/it]
  9%|██████████▏                                                                                                      | 9/100 [01:08<18:14, 12.03s/it]
 10%|███████████▏                                                                                                    | 10/100 [01:25<20:16, 13.52s/it]
 12%|█████████████▍                                                                                                  | 12/100 [01:32<11:50,  8.08s/it]
 13%|██████████████▌                                                                                                 | 13/100 [01:36<10:08,  6.99s/it]
 14%|███████████████▋                                                                                                | 14/100 [01:40<08:24,  5.87s/it]
 15%|████████████████▊                                                                                               | 15/100 [01:41<06:18,  4.45s/it]
 16%|█████████████████▉                                                                                              | 16/100 [01:56<10:36,  7.58s/it]
 17%|███████████████████                                                                                             | 17/100 [02:12<13:57, 10.10s/it]
 18%|████████████████████▏                                                                                           | 18/100 [02:28<16:21, 11.97s/it]
 19%|█████████████████████▎                                                                                          | 19/100 [02:32<13:09,  9.74s/it]
 20%|██████████████████████▍                                                                                         | 20/100 [02:48<15:19, 11.50s/it]
 21%|███████████████████████▌                                                                                        | 21/100 [02:54<12:49,  9.75s/it]
 22%|████████████████████████▋                                                                                       | 22/100 [03:15<17:04, 13.14s/it]
 23%|█████████████████████████▊                                                                                      | 23/100 [03:19<13:37, 10.62s/it]
 24%|██████████████████████████▉                                                                                     | 24/100 [03:24<11:11,  8.84s/it]
 25%|████████████████████████████                                                                                    | 25/100 [03:29<09:27,  7.57s/it]
 26%|█████████████████████████████                                                                                   | 26/100 [03:47<13:22, 10.85s/it]
 27%|██████████████████████████████▏                                                                                 | 27/100 [03:52<10:48,  8.88s/it]
 28%|███████████████████████████████▎                                                                                | 28/100 [04:06<12:40, 10.57s/it]
 29%|████████████████████████████████▍                                                                               | 29/100 [04:28<16:36, 14.03s/it]
 30%|█████████████████████████████████▌                                                                              | 30/100 [04:45<17:26, 14.96s/it]
 31%|██████████████████████████████████▋                                                                             | 31/100 [05:03<18:14, 15.86s/it]
 32%|███████████████████████████████████▊                                                                            | 32/100 [05:25<20:01, 17.68s/it]
 33%|████████████████████████████████████▉                                                                           | 33/100 [05:31<15:40, 14.04s/it]
 34%|██████████████████████████████████████                                                                          | 34/100 [05:33<11:29, 10.45s/it]
 35%|███████████████████████████████████████▏                                                                        | 35/100 [05:49<13:16, 12.25s/it]
 36%|████████████████████████████████████████▎                                                                       | 36/100 [05:55<10:52, 10.20s/it]
 37%|█████████████████████████████████████████▍                                                                      | 37/100 [06:00<09:13,  8.79s/it]
 38%|██████████████████████████████████████████▌                                                                     | 38/100 [06:11<09:37,  9.32s/it]
 39%|███████████████████████████████████████████▋                                                                    | 39/100 [06:27<11:36, 11.42s/it]
 40%|████████████████████████████████████████████▊                                                                   | 40/100 [06:32<09:25,  9.42s/it]
 41%|█████████████████████████████████████████████▉                                                                  | 41/100 [06:39<08:35,  8.74s/it]
 42%|███████████████████████████████████████████████                                                                 | 42/100 [06:44<07:18,  7.55s/it]
 43%|████████████████████████████████████████████████▏                                                               | 43/100 [06:50<06:52,  7.24s/it]
 44%|█████████████████████████████████████████████████▎                                                              | 44/100 [07:13<11:01, 11.81s/it]
 45%|██████████████████████████████████████████████████▍                                                             | 45/100 [07:20<09:30, 10.37s/it]
 46%|███████████████████████████████████████████████████▌                                                            | 46/100 [07:23<07:19,  8.13s/it]
 47%|████████████████████████████████████████████████████▋                                                           | 47/100 [07:27<06:15,  7.08s/it]
 48%|█████████████████████████████████████████████████████▊                                                          | 48/100 [07:42<08:10,  9.43s/it]
 49%|██████████████████████████████████████████████████████▉                                                         | 49/100 [08:02<10:43, 12.62s/it]
 50%|████████████████████████████████████████████████████████                                                        | 50/100 [08:09<09:04, 10.89s/it]
 51%|█████████████████████████████████████████████████████████                                                       | 51/100 [08:27<10:32, 12.90s/it]
 52%|██████████████████████████████████████████████████████████▏                                                     | 52/100 [08:32<08:26, 10.55s/it]
 53%|███████████████████████████████████████████████████████████▎                                                    | 53/100 [08:37<07:00,  8.94s/it]
 54%|████████████████████████████████████████████████████████████▍                                                   | 54/100 [08:43<06:06,  7.96s/it]
 55%|█████████████████████████████████████████████████████████████▌                                                  | 55/100 [08:59<07:50, 10.46s/it]
 56%|██████████████████████████████████████████████████████████████▋                                                 | 56/100 [09:20<10:01, 13.67s/it]
 57%|███████████████████████████████████████████████████████████████▊                                                | 57/100 [09:38<10:40, 14.90s/it]
 58%|████████████████████████████████████████████████████████████████▉                                               | 58/100 [09:41<08:04, 11.53s/it]
 59%|██████████████████████████████████████████████████████████████████                                              | 59/100 [09:47<06:41,  9.78s/it]
 60%|███████████████████████████████████████████████████████████████████▏                                            | 60/100 [10:08<08:43, 13.08s/it]
 61%|████████████████████████████████████████████████████████████████████▎                                           | 61/100 [10:13<06:52, 10.58s/it]
 62%|█████████████████████████████████████████████████████████████████████▍                                          | 62/100 [10:18<05:37,  8.88s/it]
 63%|██████████████████████████████████████████████████████████████████████▌                                         | 63/100 [10:23<04:45,  7.71s/it]
 64%|███████████████████████████████████████████████████████████████████████▋                                        | 64/100 [10:30<04:31,  7.53s/it]
 65%|████████████████████████████████████████████████████████████████████████▊                                       | 65/100 [10:51<06:49, 11.69s/it]
 66%|█████████████████████████████████████████████████████████████████████████▉                                      | 66/100 [10:56<05:32,  9.77s/it]
 67%|███████████████████████████████████████████████████████████████████████████                                     | 67/100 [11:13<06:30, 11.83s/it]
 68%|████████████████████████████████████████████████████████████████████████████▏                                   | 68/100 [11:30<07:11, 13.49s/it]
 69%|█████████████████████████████████████████████████████████████████████████████▎                                  | 69/100 [11:36<05:42, 11.05s/it]
 70%|██████████████████████████████████████████████████████████████████████████████▍                                 | 70/100 [11:39<04:25,  8.84s/it]
 71%|███████████████████████████████████████████████████████████████████████████████▌                                | 71/100 [12:01<06:07, 12.69s/it]
 72%|████████████████████████████████████████████████████████████████████████████████▋                               | 72/100 [12:16<06:17, 13.49s/it]
 73%|█████████████████████████████████████████████████████████████████████████████████▊                              | 73/100 [12:24<05:12, 11.56s/it]
 74%|██████████████████████████████████████████████████████████████████████████████████▉                             | 74/100 [12:27<03:59,  9.23s/it]
 75%|████████████████████████████████████████████████████████████████████████████████████                            | 75/100 [12:33<03:26,  8.25s/it]
 76%|█████████████████████████████████████████████████████████████████████████████████████                           | 76/100 [12:54<04:49, 12.04s/it]
 77%|██████████████████████████████████████████████████████████████████████████████████████▏                         | 77/100 [13:12<05:18, 13.85s/it]
 78%|███████████████████████████████████████████████████████████████████████████████████████▎                        | 78/100 [13:14<03:47, 10.34s/it]
 79%|████████████████████████████████████████████████████████████████████████████████████████▍                       | 79/100 [13:18<02:54,  8.30s/it]
 80%|█████████████████████████████████████████████████████████████████████████████████████████▌                      | 80/100 [13:22<02:19,  6.99s/it]
 81%|██████████████████████████████████████████████████████████████████████████████████████████▋                     | 81/100 [13:25<01:53,  5.99s/it]
 82%|███████████████████████████████████████████████████████████████████████████████████████████▊                    | 82/100 [13:27<01:25,  4.75s/it]
 83%|████████████████████████████████████████████████████████████████████████████████████████████▉                   | 83/100 [13:33<01:26,  5.11s/it]
 84%|██████████████████████████████████████████████████████████████████████████████████████████████                  | 84/100 [13:39<01:24,  5.27s/it]
 85%|███████████████████████████████████████████████████████████████████████████████████████████████▏                | 85/100 [13:44<01:15,  5.07s/it]
 86%|████████████████████████████████████████████████████████████████████████████████████████████████▎               | 86/100 [13:49<01:11,  5.13s/it]
 87%|█████████████████████████████████████████████████████████████████████████████████████████████████▍              | 87/100 [13:54<01:08,  5.25s/it]
 88%|██████████████████████████████████████████████████████████████████████████████████████████████████▌             | 88/100 [14:06<01:24,  7.05s/it]
 89%|███████████████████████████████████████████████████████████████████████████████████████████████████▋            | 89/100 [14:24<01:55, 10.51s/it]
 90%|████████████████████████████████████████████████████████████████████████████████████████████████████▊           | 90/100 [14:40<02:02, 12.24s/it]
 91%|█████████████████████████████████████████████████████████████████████████████████████████████████████▉          | 91/100 [15:03<02:17, 15.33s/it]
 92%|███████████████████████████████████████████████████████████████████████████████████████████████████████         | 92/100 [15:18<02:03, 15.38s/it]
 93%|████████████████████████████████████████████████████████████████████████████████████████████████████████▏       | 93/100 [15:23<01:24, 12.04s/it]
 94%|█████████████████████████████████████████████████████████████████████████████████████████████████████████▎      | 94/100 [15:30<01:03, 10.57s/it]
 95%|██████████████████████████████████████████████████████████████████████████████████████████████████████████▍     | 95/100 [15:35<00:44,  8.88s/it]
 96%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▌    | 96/100 [15:51<00:44, 11.05s/it]
 97%|████████████████████████████████████████████████████████████████████████████████████████████████████████████▋   | 97/100 [16:07<00:37, 12.43s/it]
 99%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████▉ | 99/100 [16:12<00:07,  7.20s/it]
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████| 100/100 [16:30<00:00,  9.91s/it]
  0%|                                                                                                                          | 0/37 [00:00<?, ?it/s]
  0%|                                                                                                                          | 0/37 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m63.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.94 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.2 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.97 [35m|[39m [36m[1mY-NAME[39m[22m : 0.63 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total reserves (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1987', 'y': 36748875.4}, {'x': '1988', 'y': 39619764.0}, {'x': '1989', 'y': 26162212.8}, {'x': '1990', 'y': 17599674.8}, {'x': '1991', 'y': 8542562.3}, {'x': '1992', 'y': 23497500.0}, {'x': '1993', 'y': 20068808.52}, {'x': '1994', 'y': 17418040.14}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total reserves (including gold) of Solomon Islands', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'year', 'y': 655155}, {'x': 'field', 'y': 4059600}, {'x': 'type', 'y': 655155}, {'x': 'field', 'y': 364554}, {'x': 'type', 'y': 162555}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Time (in hours)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 424}, {'x': '2007', 'y': 424}, {'x': '2008', 'y': 424}, {'x': '2009', 'y': 424}, {'x': '2010', 'y': 424}, {'x': '2011', 'y': 424}, {'x': '2012', 'y': 424}]}}
[31m# Create a figure with ax.<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Add a title to the graph.<0x0A>ax.set_title('Time to prepare and pay taxes in Sao Tome and Principe')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Travel (hours)')<0x0A><0x0A># Create a horizontal bar graph.<0x0A>ax.bar(x, y, width=0.5, color='#008080', edgecolor='white')<0x0A><0x0A># Add a legend.<0x0A>ax.legend(loc='upper left', frameon=False)<0x0A><0x0A># Display the graph.<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.02}, {'x': '2010', 'y': 0.03}, {'x': '2011', 'y': 0.03}, {'x': '2012', 'y': 0.03}, {'x': '2013', 'y': 0.03}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Coal (axis % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.01}, {'x': 'type', 'y': 0.01}, {'x': 'field', 'y': 0.01}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2005', 'y': 64.61}, {'x': '2006', 'y': 69.38}, {'x': '2007', 'y': 60.8}, {'x': '2008', 'y': 54.98}, {'x': '2009', 'y': 56.12}, {'x': '2010', 'y': 61.52}, {'x': '2011', 'y': 65.44}, {'x': '2012', 'y': 68.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications and computers with respect to service imports of Papua New Guinea', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 8.05}, {'x': 'y', 'y': 7.05}, {'x': 'x', 'y': 7.05}, {'x': 'y', 'y': 7.05}, {'x': 'x', 'y': 22.05}, {'x': 'y', 'y': 22.05}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed total(% of total labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 23.6}, {'x': '2007', 'y': 22.2}, {'x': '2008', 'y': 22.8}, {'x': '2009', 'y': 23.5}, {'x': '2010', 'y': 23.3}, {'x': '2011', 'y': 21.9}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total unemployed youth population of Colombia', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 6050}, {'x': 'field', 'y': 6050}, {'x': 'type', 'y': 605}, {'x': 'field', 'y': 605}, {'x': 'type', 'y': 605}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Net GHG emissions or removals (Mt of CO2 equivalent)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1993', 'y': -60.26}, {'x': '1994', 'y': -62.2}, {'x': '1995', 'y': -61.84}, {'x': '1996', 'y': -62.43}, {'x': '1997', 'y': -64.34}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Net GHG emissions or removals by LUCF in Turkey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 20}, {'x': 'Nominal', 'y': 48}, {'x': 'Nominal', 'y': 48}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 52.32}, {'x': '2002', 'y': 30.61}, {'x': '2007', 'y': 32.2}, {'x': '2012', 'y': 32.85}, {'x': '2013', 'y': 32.85}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Annual freshwater withdrawals (%) (of total non-fertiliser discharges)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 55.33}, {'x': 'field', 'y': 98.05}, {'x': 'type', 'y': 98.05}, {'x': 'field', 'y': 55.33}, {'x': 'field', 'y': 30.2}, {'x': 'type', 'y': 98.05}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2011', 'y': 118}, {'x': '2012', 'y': 118}, {'x': '2013', 'y': 118}, {'x': '2014', 'y': 118}, {'x': '2015', 'y': 118}]}}
[31mgrupo_bairro = grupo_bairro.sort_values('Year', ascending=False)<0x0A><0x0A># plotando o gráfico<0x0A>ax = grupo_bairro.plot(kind='bar', title='Time required for register a property in Barbados', color='#1555B4', figsize=(25, 30))<0x0A>ax.set_ylabel('Number of days')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># plotando o gráfico<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># plotando o gráfico<0x0A>ax.set_yticklabels([''] + ['%s' % y for y in range(0, 25, 25)] + ['%s' % y for y in range(0, 25, 25)]<0x0A><0x0A># plotando o gráfico<0x0A>ax.set_yticklabels([''] + ['%s' % y for y in range(0, 25, 25)] + ['%s' % y for y in range(0, 25, 25)]<0x0A><0x0A># plotando o gráfico<0x0A>ax.set_yticklabels([''] + ['%s' % y for y in range(0, 25, 25)]<0x0A><0x0A># plotando o gráfico<0x0A>ax.set_yticklabels([''] + ['%s' % y for y in range(0, 25, 25)]<0x0A><0x0A># plotando o gráfico<0x0A>ax.set_yticklabels([''] + ['%s' % y for y in range(0, 25, 25)]<0x0A><0x0A># plotando o gráfico<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># plotando o gráfico<0x0A>ax.set_yticklabels([''] + ['%s' % y for y in range(0, 25, 25)]<0x0A><0x0A># plotando o gráfico<0x0A>ax.set_yticklabels([''] + ['%s' % y for y in range(0, 25, 25)]<0x0A><0x0A># plotando o gráfico<0x0A>ax.set_ylabel('Number of days')<0x0A><0x0A># plotando o gráfico<0x0A>ax.set_ylabel('Number of days')<0x0A><0x0A># plotando o gráfico<0x0A>ax.set_ylabel('Number of days')<0x0A><0x0A># plotando o gráfico<0x0A>ax.set_ylabel('Number of days')<0x0A><0x0A># plotando o gráfico<0x0A>ax.set
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of repeaters', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2008', 'y': 0.22}, {'x': '2009', 'y': 0.17}, {'x': '2010', 'y': 0.4}, {'x': '2011', 'y': 0.52}, {'x': '2012', 'y': 0.84}]}}
[31mpercentage_repeaters_st_lucia = {'line': {'x': {'field': 'Year', 'type': 'temporal'}, 'line': {'field': 'Percentage of repeaters in secondary general education of St. Lucia}}    for x in range(0, 10)}    }<0x0A><0x0A>fig, ax = plt.subplots(figsize=(20,20))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_linestyle('-')<0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linestyle('-')<0x0A><0x0A>ax.spines['left'].set_linewidth(3)<0x0A>ax.spines['left'].set_linestyle('-')<0x0A><0x0A>ax.spines['left'].set_linestyle('-')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['left'].set_linestyle('-')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['left'].set_linestyle('-')<0x0A>ax.spines['left'].set_linestyle('-')<0x0A><0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['left'].set_linestyle('-')<0x0A><0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['left'].set_linestyle('-')<0x0A><0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['left'].set_linestyle('-')<0x0A><0x0A>ax.spines['left'].set_linestyle('-')<0x0A><0x0A>ax.spines['left'].set_linestyle('-')<0x0A><0x0A>ax.spines['left'].set_linestyle('-')<0x0A><0x0A>ax.spines['left'].set_linestyle('-')<0x0A><0x0A>ax.spines['left'].set_linestyle('-'
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Annual freshwater withdrawals (% of internal resources)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1987', 'y': 0.06}, {'x': '2002', 'y': 0.07}, {'x': '2013', 'y': 0.07}]}}
[31mfig, ax = plt.subplots(figsize=(18, 18))<0x0A><0x0A># Plot the annual freshwater withdrawals<0x0A>ax.set_title('Annual freshwater withdrawals (%) in Liberia')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Annual freshwater withdrawals (%) in Liberia')<0x0A><0x0A># Plot the annual freshwater withdrawals<0x0A>ax.axhline(y=0.01, color='r', linestyle='-')<0x0A>ax.axhline(y=0.001, color='g', linestyle='-')<0x0A><0x0A># Plot the annual freshwater withdrawals<0x0A>ax.axhline(y=0.001, color='g', linestyle='-')<0x0A><0x0A># Plot the annual freshwater withdrawals<0x0A>ax.axhline(y=0.001, color='g', linestyle='-')<0x0A><0x0A># Plot the annual freshwater withdrawals<0x0A>ax.axhline(y=0.001, color='g', linestyle='-')<0x0A><0x0A># Plot the annual freshwater withdrawals<0x0A>ax.axhline(y=0.001, color='g', linestyle='-')<0x0A><0x0A># Plot the annual freshwater withdrawals<0x0A>ax.axhline(y=0.001, color='g', linestyle='-')<0x0A><0x0A># Plot the annual freshwater withdrawals<0x0A>ax.axhline(y=0.001, color='g', linestyle='-')<0x0A><0x0A># Plot the annual freshwater withdrawals<0x0A>ax.axhline(y=0.001, color='g', linestyle='-')<0x0A><0x0A># Plot the annual freshwater withdrawals<0x0A>ax.axhline(y=0.001, color='g', linestyle='-')<0x0A><0x0A># Plot the annual freshwater withdrawals<0x0A>ax.axhline(y=0.001, color='g', linestyle='-')<0x0A><0x0A># Plot the annual freshwater withdrawals<0x0A>ax.axhline(y=0.001, color='g', linestyle='-')<0x0A><0x0A># Plot the annual freshwater withdrawals<0x0A>ax.axhline(y=0.001, color='g', linestyle='-')<0x0A><0x0A># Plot the annual freshwater withdrawals<0x0A>ax.axhline(y=0.001, color='g', linestyle='-')<0x0A><0x0A># Plot the annual freshwater withdrawals<0x0A>ax.axhline(y=0.001, color='g', linestyle='-')<0x0A><0x0A># Plot the annual freshwater withdrawals<0x0A>ax.axhline(y=0.001, color
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed males(% of male labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 16.8}, {'x': '1991', 'y': 17.0}, {'x': '1992', 'y': 18.6}, {'x': '1993', 'y': 23.6}, {'x': '1994', 'y': 27.2}, {'x': '1995', 'y': 23.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed male youth population of France', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 16.86}, {'x': 'field', 'y': 16.86}, {'x': 'variable', 'y': 16.86}, {'x': 'field', 'y': 16.86}, {'x': 'variable', 'y': 16.86}, {'x': 'field', 'y': 16.86}, {'x': 'variable', 'y': 16.86}, {'x': 'variable', 'y': 16.86}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (in hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1000}, {'x': '1991', 'y': 1000}, {'x': '1992', 'y': 1000}, {'x': '1993', 'y': 1000}, {'x': '1994', 'y': 1000}, {'x': '1995', 'y': 1000}, {'x': '1996', 'y': 1000}, {'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}]}}
[31marable_land_plot('Synthesis', 'Arable land (hectares) in Seychelles', 'Year')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total Vulnerable employment (% of total employment)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1996', 'y': 80.1}, {'x': '2001', 'y': 75.9}, {'x': '2005', 'y': 79.8}, {'x': '2010', 'y': 73.6}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total Vulnerable employment (% of total employment)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 79.71}, {'x': 'field', 'y': 79.71}, {'x': 'type', 'y': 79.71}, {'x': 'field', 'y': 79.71}, {'x': 'type', 'y': 79.71}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Domestic credit (% of GDP)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 13.87}, {'x': '2003', 'y': 15.0}, {'x': '2004', 'y': 17.17}, {'x': '2005', 'y': 17.56}, {'x': '2006', 'y': 18.24}, {'x': '2007', 'y': 17.91}, {'x': '2008', 'y': 18.18}, {'x': '2009', 'y': 20.0}, {'x': '2010', 'y': 22.66}]}}
[31mdomestic_credit = df.groupby('Year')['Domestic credit (% of GDP)'].sum()<0x0A>domestic_credit.plot(kind='line', x='Year', y='Domestic credit (% of GDP)', color='orange', figsize=(25, 25))<0x0A>plt.title('Domestic credit provided by financial sector in Central African Republic')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Domestic credit (% of GDP)')<0x0A>plt.xticks(rotation=90)<0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Birth Registration (in %)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 31.8}, {'x': '2012', 'y': 63.9}]}}
[31mpercentage_births_plot(birth_data, 'Year', 'Birth Registration (in %)', 'Percentage of children under age 5 whose births were registered at the time of the survey in Niger')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Birth Registration (in %)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 64.0}, {'x': '2010', 'y': 76.9}]}}
[31mpercentage_of_children_under_age_5 = df_copy.groupby(['Year', 'Birth Registration in 1000'])['Birth Registration in 1000'].sum()<0x0A>percentage_of_children_under_age_5 = percentage_of_children_under_age_5.sort_values(by=['Birth Registration in 1000'])<0x0A>percentage_of_children_under_age_5 = percentage_of_children_under_age_5.reset_index()<0x0A>percentage_of_children_under_age_5.rename(columns={'index':'Year', 'age':'Birth Registration in 1000', 'total_births':'Birth Registration in 1000', 'total_births':'Total Births in 1000', 'total_births':'Total Births in 1000', 'total_births':'Total Births in 1000', 'total_births':'Total Births in 1000', 'total_births':'Total Births in 1000', 'total_births':'Total Births in 1000', 'total_births':'Total Births in 1000', 'total_births':'Total Births in 1000', 'total_births':'Total Births in 1000', 'total_births':'Total Births in 1000', 'total_births':'Total Births in 1000', 'total_births':'Total Births in 1000', 'total_births':'Total Births in 1000', 'total_births':'Total Births in 1000', 'total_births':'Total Births in 1000', 'total_births':'Total Births in 1000', 'total_births':'Total Births in 1000', 'total_births':'Total Births in 1000', 'total_births':'Total Births in 1000', 'total_births':'Total Births in 1000', 'total_births':'Total Births in 1000', 'total_births':'Total Births in 1000', 'total_births':'Total Births in 1000',
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of repeaters', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 0.24}, {'x': '2000', 'y': 0.22}, {'x': '2001', 'y': 0.23}, {'x': '2002', 'y': 0.17}]}}
[31m# Plotting the percentage of repeaters in secondary general education of Kyrgyz Republic<0x0A><0x0A>fig = plt.figure(figsize=(25,25))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Plotting the percentage of repeaters in secondary general education of Kyrgyz Republic<0x0A>ax.plot(df_republic['Year'], df_republic['Percentage of repeaters in secondary general education of Kyrgyz Republic'], color='#000000')<0x0A><0x0A># Plotting the percentage of repeaters in secondary general education of Kyrgyz Republic<0x0A>ax.plot(df_republic['Year'], df_republic['Percentage of repeaters in secondary general education of Kyrgyz Republic'], color='#000000')<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Percentage of repeaters in secondary general education of Kyrgyz Republic')<0x0A>ax.set_title('Percentage of repeaters in secondary general education of Kyrgyz Republic')<0x0A><0x0A># Plotting the percentage of repeaters in secondary general education of Kyrgyz Republic<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A># Plotting the percentage of repeaters in secondary general education of Kyrgyz Republic<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A># Plotting the percentage of repeaters in secondary general education of Kyrgyz Republic<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Percentage of repeaters in secondary general education of Kyrgyz Republic')<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A>ax.set_yticklabels(['Year', 'Year
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Workers(% of total employed)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2001', 'y': 46.5}, {'x': '2008', 'y': 36.1}, {'x': '2012', 'y': 1.5}]}}
[31mgrupo_bairro = {'axes': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Workability of Social Work/Payroll', 'type': 'temporal'}, 'axes': {'x': {'field': 'Year', 'type': 'quantitative'}}, 'y': {'field': 'Workability of Social Work/Payroll', 'type': 'quantitative'}}, 'axes': {'x': {'field': 'Year', 'type': 'quantitative'}}, 'y': {'field': 'Workability of Social Work/Payroll', 'type': 'quantitative'}}, 'axes': {'x': {'field': 'Year', 'type': 'quantitative'}}, 'y': 'Value': {'x': 'field', 'y': 'Value': {'x': 'field', 'y': 'Value': {'x': 'field', 'type': 'quantitative'}}, 'y': 'Value': {'x': 'field', 'y': 'Value': {'x': 'field', 'y': 'Value': {'x': 'type': 'quantitative'}}, 'y': 'Value': {'x': 'field', 'y': 'Value': {'x': 'type': 'quantitative'}}, 'y': 'Value': {'x': 'field': 'Value'parserups'}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Global Equity Indices (annual % change)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 48.8}, {'x': '1998', 'y': -38.9}, {'x': '1999', 'y': 78.5}, {'x': '2000', 'y': -21.48}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Global Equity Indices of Mutual % Chlorogly', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 9.11}, {'x': 'field', 'y': 22.15}, {'x': 'type', 'y': 9.11}, {'x': 'field', 'y': 22.15}, {'x': 'type', 'y': 15.03}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of reported total deaths to estimated total deaths', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2005', 'y': 82.05}, {'x': '2007', 'y': 80.48}]}}
[31mCountry_year = 'Pakistan'<0x0A>Country_year_completeness = Country_year.replace({'country': 'Pakistan', 'country_year': Country_year})<0x0A>Country_year_completeness = Country_year_completeness.replace({'country': 'Pakistan', 'country_year': Country_year})<0x0A>Country_year_completeness = Country_year_completeness.replace({'country': 'Pakistan', 'country_year': Country_year})<0x0A>Country_year_completeness = Country_year_completeness.replace({'country': 'Pakistan', 'country_year': Country_year})<0x0A>Country_year_completeness = Country_year_completeness.replace({'country': 'Pakistan', 'country_year': Country_year})<0x0A>Country_year_completeness = Country_year_completeness.replace({'country': 'Pakistan', 'country_year': Country_year})<0x0A>Country_year_completeness = Country_year_completeness.replace({'country': 'Pakistan', 'country_year': Country_year})<0x0A>Country_year_completeness = Country_year_completeness.replace({'country': 'Pakistan', 'country_year': Country_year})<0x0A>Country_year_completeness = Country_year_completeness.replace({'country': 'Pakistan', 'country_year': Country_year})<0x0A>Country_year_completeness = Country_year_completeness.replace({'country': 'Pakistan', 'country_year': Country_year})<0x0A>Country_year_completeness = Country_year_completeness.replace({'country': 'Pakistan', 'country_year': Country_year})<0x0A>Country_year_completeness = Country_year_completeness.replace({'country': 'Pakistan', 'country_year': Country_year})<0x0A>Country_year_completeness = Country_year_completeness.replace({'country': 'Pakistan', 'country_year': Country_year})<0x0A>Country_year_completeness = Country_year_completeness.replace({'country': 'Pakistan', 'country_year': Country_year})<0x0A>Country_year_completeness = Country_year_completeness.replace({'country': 'Pakistan', 'country_year': Country_year})<0x0A>Country_year_completeness
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of fertilizer production', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 326.59}, {'x': '2008', 'y': 309.01}, {'x': '2009', 'y': 269.27}, {'x': '2010', 'y': 324.87}, {'x': '2011', 'y': 383.54}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Performance of fertilizer consumption in Brazil as a percentage of production', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 324.05}, {'x': 'field', 'y': 324.05}, {'x': 'type', 'y': 127.26}, {'x': 'field', 'y': 324.05}, {'x': 'type', 'y': 127.26}, {'x': 'field', 'y': 262.05}, {'x': 'type', 'y': 262.05}, {'x': 'field', 'y': 324.05}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Elevated land area (as % of total land area)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 4.46}, {'x': '2000', 'y': 4.46}]}}
[31mpercentage_total_land_area_senegal = df_total_land_area_senegal.groupby(['Year','Total Land Area']).sum()<0x0A>percentage_total_land_area_senegal = percentage_total_land_area_senegal.groupby(['Year','Total Land Area']).sum()<0x0A>percentage_total_land_area_senegal.plot(kind='scatter', x='Year', y='Percentage of Total land area in Senegal where the elevation is below 5 meters', figsize=(15,15), color='blue')<0x0A>plt.title('Percentage of Total land area in Senegal where the elevation is below 5 meters')<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Earvelted for and less than 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Vulnerable female employment (% of total female employment)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 73}, {'x': '2008', 'y': 15}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Vulnerable females in Lesotho who are vulnerable to fall into poverty', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 72.33}, {'x': 'field', 'y': 72.33}, {'x': 'type', 'y': 15.51}, {'x': 'field', 'y': 15.51}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 147}, {'x': '2010', 'y': 27}, {'x': '2011', 'y': 15}, {'x': '2012', 'y': 15}, {'x': '2013', 'y': 15}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 123.35}, {'x': 'y': 'Year', 'y': 123.35}, {'x': 'field', 'y': 16.15}, {'x': 'field', 'y': 16.15}, {'x': 'type', 'y': 'Number of Days', 'order': {'x': 'Year', 'y': 123.35}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, computer etc. (% of service imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 48.51}, {'x': '2008', 'y': 56.64}, {'x': '2009', 'y': 55.96}, {'x': '2010', 'y': 40.69}, {'x': '2011', 'y': 47.58}, {'x': '2012', 'y': 37.18}, {'x': '2013', 'y': 39.53}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost Of Communications and computers with respect to service imports of Lebanon', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.98}, {'x': 'field', 'y': 48.06}, {'x': 'type', 'y': 37.06}, {'x': 'field', 'y': 47.66}, {'x': 'type', 'y': 7.05}, {'x': 'field', 'y': 46.06}, {'x': 'type', 'y': 7.05}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 3850000}, {'x': '2000', 'y': 11710000}, {'x': '2001', 'y': 3430000}, {'x': '2002', 'y': 2620000}, {'x': '2003', 'y': 8810000}]}}
[31m##########################################################################<0x0A># TODO: Draw a nested barplot to show bills by year and year using the function from the previous query. <0x0A>##########################################################################<0x0A><0x0A># Create a list of columns to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of column names to plot on<0x0A># the 'column'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A># Create a list of values to plot on<0x0A># the 'bar'<0x0A>#############################################################<0x0A><0x0A>#
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Expenditure (as % of GDP per capita)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 208.0}, {'x': '2001', 'y': 225.25}, {'x': '2004', 'y': 274.43}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Government expenditure per student as % of GDP per capita in Kenya', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 61.85}, {'x': 'Nominal', 'y': 224.05}, {'x': 'Year', 'y': 224.05}, {'x': 'Nominal', 'y': 61.85}, {'x': 'Year', 'y': 71.05}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Earning from trade(% of GDP)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Burundi', 'y': 26.99}, {'x': 'Cabo Verde', 'y': 43.48}, {'x': 'Cambodia', 'y': 96.39}, {'x': 'Cameroon', 'y': 34.19}, {'x': 'Canada', 'y': 47.12}]}}
[31mCountry_Earning = pd.DataFrame(country_earning, columns = ['Country', 'Earning of countries from merchandise trade in the year 2009'])<0x0A>Country_Earning.sort_values(by = 'Earning of countries from merchandise trade in the year 2009', ascending = False).head(10)<0x0A>Country_Earning.plot(kind = 'bar', title = 'Earning of countries from merchandise trade in the year 2009', figsize = (25,25))<0x0A>Country_Earning.plot(kind = 'bar', title = 'Earning of countries from merchandise trade in the year 2009', figsize = (25,25))<0x0A>Country_Earning.plot(kind = 'bar', title = 'Earning of countries from merchandise trade in the year 2009', figsize = (25,25))<0x0A>Country_Earning.plot(kind = 'bar', title = 'Earning of countries from merchandise trade in the year 2009', figsize = (25,25))<0x0A>Country_Earning.plot(kind = 'bar', title = 'Earning of countries from merchandise trade in the year 2009', figsize = (25,25))<0x0A>Country_Earning.plot(kind = 'bar', title = 'Earning of countries from merchandise trade in the year 2009', figsize = (25,25))<0x0A>Country_Earning.plot(kind = 'bar', title = 'Earning of countries from merchandise trade in the year 2009', figsize = (25,25))<0x0A>Country_Earning.plot(kind = 'bar', title = 'Earning of countries from merchandise trade in the year 2009', figsize = (25,25))<0x0A>Country_Earning.plot(kind = 'bar', title = 'Earning of countries from merchandise trade in the year 2009', figsize = (25,25))<0x0A>Country_Earning.plot(kind = 'bar', title = 'Earning of countries from merchandise trade in the year 2009', figsize = (25,25))<0x0A>Country_Earning.plot(kind = 'bar', title = 'Earning of countries from merchandise trade in the year 20
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Energy consumed(% of total)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Cameroon', 'y': 16.11}, {'x': 'Canada', 'y': 74.26}, {'x': 'Chile', 'y': 66.36}, {'x': 'China', 'y': 75.43}, {'x': 'Colombia', 'y': 70.81}]}}
[31m##############################################################################<0x0A>#################################################################################<0x0A>##################################################################################################<0x0A><0x0A>##########################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################################
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'IMF credit(in current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Bangladesh', 'y': 67856000}, {'x': 'Bolivia', 'y': 8555000}, {'x': 'Chad', 'y': 2367000}, {'x': 'Congo (Democratic)', 'y': 30649000}, {'x': 'Dominican Republic', 'y': 4071000}]}}
[31mCountry_use_of_IMF_credit_1972_in_the_Department_of_Defense_of_different_countries.plot(kind='bar', title='Use of IMF credit in 1972 in the Department of Defense of different countries', figsize=(20,15), color='red')<0x0A>Country_use_of_IMF_credit_1972_in_the_Department_of_Defense_of_different_countries.plot(kind='bar', title='Use of IMF credit in 1972 in the Department of Defense of different countries', figsize=(20,15), color='red')<0x0A>Country_use_of_IMF_credit_1972_in_the_Department_of_Defense_of_different_countries.plot(kind='bar', title='Use of IMF credit in 1972 in the Department of Defense of different countries', figsize=(20,15), color='red')<0x0A>Country_use_of_IMF_credit_1972_in_the_Department_of_Defense_of_different_countries.plot(kind='bar', title='Use of IMF credit in 1972 in the Department of Defense of different countries', figsize=(20,15), color='red')<0x0A>Country_use_of_IMF_credit_1972_in_the_Department_of_Defense_of_different_countries.plot(kind='bar', title='Use of IMF credit in 1972 in the Department of Defense of different countries', figsize=(20,15), color='red')<0x0A>Country_use_of_IMF_credit_1972_in_the_Department_of_Defense_of_different_countries.plot(kind='bar', title='Use of IMF credit in 1972 in the Department of Defense of different countries', figsize=(20,15), color='red')<0x0A>Country_use_of_IMF_credit_1972_in_the_Department_of_Defense_of_different_countries.plot(kind='bar', title='Use of IMF credit in 1972 in the Department of Defense of different countries', figsize=(20,15), color='red')<0x0A>Country_use_of_IMF_credit_1972_in_the_Department_of_Defense_of_different_countries.plot(kind='bar', title='Use of IMF credit in 1972
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households with a female head', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1994', 'y': 15.1}, {'x': '1999', 'y': 14.4}, {'x': '2005', 'y': 18.4}, {'x': '2012', 'y': 18.0}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import os<0x0A>import re<0x0A>import re.as_pyplot as plt<0x0A>import seaborn as sns<0x0A>from sklearn.preprocessing import StandardScaler<0x0A>from sklearn.preprocessing import StandardScaler<0x0A>from sklearn.model_selection import train_test_split<0x0A>from sklearn.metrics import r2_score<0x0A>from sklearn.metrics import accuracy_score<0x0A>from sklearn.metrics import r2_score<0x0A>from sklearn.metrics import accuracy_score<0x0A><0x0A># Load the example dataset<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_csv("dataset.csv")<0x0A>#dataset = pd.read_
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Debt(current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Sri Lanka', 'y': 1769910000.0}, {'x': 'St. Lucia', 'y': 24373000.0}, {'x': 'St. Vincent and the Grenadines', 'y': 26240000.0}, {'x': 'Sudan', 'y': 1548887000.0}, {'x': 'Swaziland', 'y': 65058000.0}, {'x': 'Syrian Arab Republic', 'y': 544265000.0}]}}
[31mCountry_total_undisbursed = pd.DataFrame(country_total_undisbursed, columns=['Country', 'Undisbursed external debt of countries as per the survey of 1989'])<0x0A>Country_total_undisbursed.index = Country_total_undisbursed.index.map(int)<0x0A>Country_total_undisbursed.sort_values(inplace=True, ascending=False)<0x0A>Country_total_undisbursed.plot(kind='bar', title='Total undisbursed external debt of countries as per the survey of 1989', color='#1f77d4', figsize=(15,15))<0x0A>Country_total_undisbursed.plot(kind='bar', title='Total undisbursed external debt of countries as per the survey of 1989', color='#1f77d4', figsize=(15,15))<0x0A>Country_total_undisbursed.plot(kind='bar', title='Total undisbursed external debt of countries as per the survey of 1989', color='#1f77d4', figsize=(15,15))<0x0A>Country_total_undisbursed.plot(kind='bar', title='Total undisbursed external debt of countries as per the survey of 1989', color='#1f77d4', figsize=(15,15))<0x0A>Country_total_undisbursed.plot(kind='bar', title='Total undisbursed external debt of countries as per the survey of 1989', color='#1f77d4', figsize=(15,15))<0x0A>Country_total_undisbursed.plot(kind='bar', title='Total undisbursed external debt of countries as per the survey of 1989', color='#1f77d4', figsize=(15,15))<0x0A>Country_total_undisbursed.plot(kind='bar', title='Total undisbursed external debt of countries as per the survey of 1989', color='#1f77d4', figsize=(15,15))<0x0A>Country_total_undisbursed.plot(kind='bar', title='Total undisbursed external debt of countries as per the survey of 1989', color='#1f77d4', figsize=(15
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Total subscribers (per 100 people)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Ecuador', 'y': 0.05}, {'x': 'Egypt, Arab Rep.', 'y': 0.07}, {'x': 'Estonia', 'y': 3.45}, {'x': 'Faeroe Islands', 'y': 0.24}, {'x': 'Finland', 'y': 5.26}, {'x': 'France', 'y': 2.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Fixed broadband subscriptions (per 100 people) in the year 2002', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'country', 'y': 2.58}, {'x': 'field', 'y': 2.58}, {'x': 'type', 'y': 7.05}, {'x': 'field', 'y': 7.05}, {'x': 'type', 'y': 2.05}, {'x': 'field', 'y': 2.05}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Part-time female workers(% of females employed)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2003', 'y': 13.2}, {'x': '2004', 'y': 10.8}, {'x': '2005', 'y': 12.2}, {'x': '2006', 'y': 13.1}, {'x': '2007', 'y': 11.8}]}}
[31mfemale_part_time_workers.plot(kind='bar', figsize=(20,15), color='#1f77b4', title='Percentage of female part-time workers in South Africa')<0x0A>plt.ylabel('Performance for women working in South Africa')<0x0A>plt.xlabel('Year')<0x0A>plt.xticks(rotation=0)<0x0A>plt.yticks(rotation=0)<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Debt(% of exports of goods, services and primary income)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1996', 'y': 6.52}, {'x': '1997', 'y': 6.27}, {'x': '1998', 'y': 6.21}, {'x': '1999', 'y': 7.79}, {'x': '2000', 'y': 7.91}, {'x': '2001', 'y': 8.91}]}}
[31mtitle = 'Long-term public and publicly guaranteed debt and repayments of Lao PDR to the IMF'<0x0A>df = get_debt_debt_loan(df,title,'Year',title_freq='M',title_text='Debt 1% of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of unpaid of
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Number of flight takeoffs', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Australia', 'y': 18700}, {'x': 'Austria', 'y': 21000}, {'x': 'Bahamas', 'y': 15900}, {'x': 'Bahrain', 'y': 5400}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Number of domestic takeoffs and takeoffs abroad of air carriers registered in countries', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 1865}, {'x': 'y', 'y': 2100}, {'x': 'y', 'y': 2095}, {'x': 'x', 'y': 1585}, {'x': 'y', 'y': 1585}, {'x': 'y', 'y': 5428}, {'x': 'y', 'y': 2095}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Amount (in current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1987', 'y': 174653000}, {'x': '1988', 'y': -110802000}, {'x': '1989', 'y': 164303000}, {'x': '1990', 'y': 21902000}, {'x': '1991', 'y': -38847000}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Amount (in common (US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 16509556}, {'x': 'field', 'y': 17483456}, {'x': 'type', 'y': 17483456}, {'x': 'field', 'y': 17483456',atuspsparentes}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of children', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 1000}, {'x': '1998', 'y': 1000}, {'x': '1999', 'y': 1000}, {'x': '2000', 'y': 1000}, {'x': '2001', 'y': 1000}]}}
[31m# 2.2.2<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># Draw a nested barplot to show bills by year and sex<0x0A>sns.barplot(x=df_sex['Year'], y=df_sex['Number of children ages 0-14 who are infected with HIV in Jamaica'], palette="mako")<0x0A><0x0A># Set up the margins<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A># Set up the axes<0x0A>plt.xticks(rotation=90)<0x0A>plt.yticks(fontsize=15)<0x0A><0x0A># Set up the axes<0x0A>plt.xlabel('Year', fontsize=15)<0x0A>plt.ylabel('Number of children ages 0-14 who are infected with HIV in Jamaica', fontsize=15)<0x0A>plt.title('Number of children ages 0-14 who are infected with HIV in Jamaica', fontsize=15)<0x0A><0x0A># Save the figure<0x0A>plt.savefig('Number of children ages 0-14 who are infected with HIV in Jamaica', dpi=300)<0x0A><0x0A># Show the figure<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Proportion of dependents per 100 working-age population', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 50.35}, {'x': '2010', 'y': 50.68}, {'x': '2011', 'y': 51.42}, {'x': '2012', 'y': 52.46}, {'x': '2013', 'y': 53.73}, {'x': '2014', 'y': 55.06}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Age']).mean()<0x0A><0x0A># plotagem de retornos<0x0A>fig, ax = plt.subplots(figsize=(15, 20))<0x0A><0x0A># plotagem de retornos<0x0A>ax.bar( grupo_df.Year, grupo_df.Age, color='purple')<0x0A><0x0A># plotagem de retornos<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Proportion of dependants for 10 and 3,999 percado')<0x0A>ax.set_title('Age dependency ratio in Greece')<0x0A><0x0A># plotagem de retornos<0x0A>ax.set_xticklabels(['Year', 'Age', 'Year'])<0x0A><0x0A># plotagem de retornos<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A># plotagem de retornos<0x0A>ax.set_yticklabels(['Year', 'Age'])<0x0A><0x0A># plotagem de retornos<0x0A>ax.set_yticklabels(['Year', 'Age'])<0x0A><0x0A># plotagem de retornos<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A># plotagem de retornos<0x0A>ax.set_yticklabels(['Year', 'Age'])<0x0A><0x0A># plotagem de retornos<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A># plotagem de retornos<0x0A>ax.set_yticklabels(['Year', 'Age'])<0x0A><0x0A># plotagem de retornos<0x0A>ax.set_yticklabels(['Year', 'Age'])<0x0A><0x0A># plotagem de retornos<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A># plotagem de retornos<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A># plotagem de retornos<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A># plotagem de retornos<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A># plotagem de retornos<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A># plotagem de retornos<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A># plotagem de retornos<0x0A>ax.set_yticklabels(['Year', 'Year'])<0x0A><0x0A># plotagem
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'new registrations per 1,000 people ages 15-64', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2005', 'y': 0.59}, {'x': '2006', 'y': 0.56}, {'x': '2007', 'y': 0.58}, {'x': '2008', 'y': 0.62}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'New registrationsper 1200 people ages 15-64', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 67.55}, {'x': 'field', 'y': 67.55}, {'x': 'type', 'y': 67.55}, {'x': 'field', 'y': 67.55}, {'x': 'field', 'y': 67.55}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Amount (in current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Mali', 'y': 252581000.0}, {'x': 'Mauritania', 'y': 450743000.0}, {'x': 'Mauritius', 'y': 492046000.0}, {'x': 'Mexico', 'y': 50479571000.0}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Amount (in current (SS)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x28', 'y': 48125552}, {'x': 'y': 413025552}, {'x': 'y': 505674590}, {'x': 'y': 505674590}, {'x': 'y': 124062919}, {'x': 'y': 124062919}, {'x': 'y': 505674590}, {'x': 'y': 124062919 Paulo Campos', 'y': 481255552}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of children', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 1100}, {'x': '2003', 'y': 1100}, {'x': '2004', 'y': 1200}, {'x': '2005', 'y': 1300}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Number of children ages 0-14 who are infected with HIV in Djibouti', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 1004}, {'x': 'y', 'y': 1004}, {'x': 'y', 'y': 1004}, {'x': 'x', 'y': 1004}, {'x': 'y', 'y': 1004}, {'x': 'y', 'y': 1004}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Gabon', 'y': 1456.53}, {'x': 'Gambia, The', 'y': 1329.39}, {'x': 'Germany', 'y': 4161.63}, {'x': 'Ghana', 'y': 860.02}, {'x': 'Greece', 'y': 3312.52}, {'x': 'Grenada', 'y': 1044.44}]}}
[31mCountry_1981 = pd.DataFrame(country_1981.groupby(['Country']).mean()['Yield for per headcountry'].sort_values(ascending=False).head(10))<0x0A>Country_1981.index = Country_1981.index.map(int)<0x0A>Country_1981.sort_values(ascending=False).head(10).plot(kind='bar', figsize=(15,15), color='green')<0x0A>Country_1981.set_title('Cereal yield in different countries as per the survey of 1981')<0x0A>Country_1981.set_xlabel('Country')<0x0A>Country_1981.set_ylabel('Yield for per headcountry')<0x0A>Country_1981.set_xticklabels(['', 'No'], rotation=90)<0x0A>Country_1981.set_yticklabels(['', 'Yes'], rotation=0)<0x0A>Country_1981.legend(bbox_to_anchor=(1.25, 1))<0x0A>Country_1981.grid(False)<0x0A>Country_1981.grid(False)<0x0A>Country_1981.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Aid flow from DAC donars (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Angola', 'y': 270000.0}, {'x': 'Antigua and Barbuda', 'y': 2690000.0}, {'x': 'Argentina', 'y': 12250000.0}, {'x': 'Bahamas', 'y': 80000.0}]}}
[31mCountry = df.groupby(['Country'])['Country'].count().reset_index()<0x0A>Country.columns = ['Country', 'Net bilateral aid flow in the year 1974 from Development Assistance Committee']<0x0A>Country.index = Country.index.map(int)<0x0A>Country.sort_values(by='Net bilateral aid flow in the year 1974 from Development Assistance Committee', ascending=False)<0x0A>Country.head()<0x0A>Country.head(10)<0x0A>Country.head(15)<0x0A>Country.head(25)<0x0A>Country.head(35)<0x0A>Country.head(45)<0x0A>Country.head(55)<0x0A>Country.head(65)<0x0A>Country.head(75)<0x0A>Country.head(10)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(15)<0x0A>Country.head(
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cereal Production (hectares)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2003', 'y': 2901562}, {'x': '2004', 'y': 3000600}, {'x': '2005', 'y': 2350515}, {'x': '2006', 'y': 2672157}, {'x': '2007', 'y': 2873827}, {'x': '2008', 'y': 1485453}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Land under cereal production (hectares) in Algeria', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x2', 'y': 2900000}, {'x': 'y': 2900000}, {'x': 'y': 'y', 'y': 2850000}, {'x': 'x6', 'y': 2900000}, {'x': 'y': 'y', 'y': 2850000}, {'x': 'y': 'x', 'y': 2900000}, {'x': 'y': 'x', 'y': 2900000}, {'x': 'y': 'x', 'y': 2900000}, {'x': 'y': 'y', 'y': 2900000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Average number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 10.0}, {'x': '2005', 'y': 7.6}, {'x': '2009', 'y': 4.6}, {'x': '2012', 'y': 5.6}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Average number of Days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 181}, {'x': 'field', 'y': 78}, {'x': 'type', 'y': 78}, {'x': 'field', 'y': 78}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Investment (in US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2008', 'y': 15074790314}, {'x': '2009', 'y': -17756860244}, {'x': '2010', 'y': -36875471079}, {'x': '2011', 'y': -2664809742}, {'x': '2012', 'y': -29285240146}, {'x': '2013', 'y': -6857994918}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Investing in US$', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x2', 'y': 160}, {'x': 'y': 130}, {'x': 'y': 130}, {'x': 'y': 0.73}, {'x': 'y': 0.73}, {'x': 'x3', 'y': 130}, {'x': 'y': 1.03}, {'x': 'y': 0.73}, {'x': 'y': 1.03}, {'x': 'x4', 'y': 1.03}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 5.1}, {'x': '2006', 'y': 3.1}, {'x': '2009', 'y': 1.7}, {'x': '2012', 'y': 1.2}]}}
[31mgrupo_df = grupo_df.groupby(['Year', 'Country']).mean()<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.bar( grupo_df.Year, grupo_df.Shortfall, color='g', edgecolor='k', linewidth=1.5)<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_ylabel('5% poverty lines')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year', 'Year'])<0x0A>ax.set_ylim(0, 1)<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_ylim(0, 1)<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_xticklabels(['Year', 'Year', 'Year'])<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_ylabel('5% poverty lines')<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_ylabel('5% poverty lines')<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_ylabel('5% poverty lines')<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_ylabel('5% poverty lines')<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_ylabel('5% poverty lines')<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_ylabel('5% poverty lines')<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_ylabel('5% poverty lines')<0x0A><0x0A># Plot mean shortfall from poverty lines in Sri Lanka<0x0A>ax.set_ylabel('5% poverty lines')<0x0A><0x0A># Plot mean
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of tax revenue', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 5.46}, {'x': '1992', 'y': 5.96}, {'x': '1993', 'y': 6.1}, {'x': '1994', 'y': 6.88}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig = plt.figure(figsize=(15,15))<0x0A>ax = fig.add_subplot(111)<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties = pd.DataFrame(custom_import_duties, columns=['Year', 'Customs and other import duties (as % of revenue) of Indonesia'])<0x0A>custom_import_duties.set_index('Year', inplace=True)<0x0A>custom_import_duties.sort_values(by='Year', ascending=False, inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Import duties<0x0A>import matplotlib.pyplot as plt<0x0A>import matplotlib.patches as patches<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties (as % of revenue) of Indonesia<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A><0x0A># Custom and other import duties (as % of tax revenue) of Indonesia<0x0A>custom_import_duties.sort_values(by='Year', inplace=True)<0x0A>custom_import_duties.plot(kind='bar', color='green', ax=ax)<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('$ % of tax revenue')<0x0A>ax.set_title('Customs and other import duties (as % of tax revenue) of Indonesia')<0x0A><0x0A># Custom and other import duties<0x0A>custom_import_duties.plot(kind='bar', color='green', a
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Survival rate(%)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1983', 'y': 59.82}, {'x': '1985', 'y': 63.41}, {'x': '1986', 'y': 57.17}, {'x': '1990', 'y': 53.38}, {'x': '1991', 'y': 48.48}, {'x': '1992', 'y': 38.48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Survival rate of the students in Mauritania to the last grade of primary education', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 99.79}, {'x': 'field', 'y': 99.79}, {'x': 'field', 'y': 62.05}, {'x': 'variable', 'y': 62.05}, {'x': 'field', 'y': 62.05}, {'x': 'variable', 'y': 99.79}, {'x': 'field', 'y': 62.05}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Amount spent (% of revenue)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 6.66}, {'x': '2010', 'y': 7.24}, {'x': '2011', 'y': 7.25}, {'x': '2012', 'y': 7.04}]}}
[31mgrupo_soc_mauritius = (<0x0A>    pd.crosstab(df["Year"], df["Social contributions made by the government of Mauritius"],<0x0A>    margins = True,  row_labels = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    index = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    col_names = ["Year", "Year", "Amount spent (% of running)", "Year"], <0x0A>    col_index = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    col_names = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    col_index = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    col_names = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    col_index = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    col_index = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    col_index = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    col_index = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    col_index = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    col_index = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    col_index = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    col_index = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    col_index = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    col_index = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    col_index = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    col_index = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    col_index = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    col_index = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    col_index = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    col_index = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    col_index = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    col_index = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    col_index = ["Year", "Amount spent (% of running)", "Year"], <0x0A>    col_index = ["Year", "
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Amount of total stocks', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 50280}, {'x': '1980', 'y': 52493}, {'x': '1985', 'y': 38770}, {'x': '1990', 'y': 40191}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Amount of of illegal stock', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x2', 'y': 5556}, {'x': 'y': 5556}, {'x': 'y': 5556}, {'x': 'y': 5556}, {'x': 'y': 6556}, {'x': 'x6', 'y': 5556}, {'x': 'y': 5556}, {'x': 'y': 6556}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Amount (in current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 330813000}, {'x': '1991', 'y': 584218000}, {'x': '1992', 'y': 68314000}, {'x': '1993', 'y': 291328000}, {'x': '1994', 'y': 590868000}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Amount (in earned k$S$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x2', 'y': 3316000}, {'x': 'y': 'y', 'y': 6000000}, {'x': 'y': 'x', 'y': 2900000}, {'x': 'y': 'x', 'y': 2900000}, {'x': 'y': 'x', 'y': 6000000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Population(%)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1960', 'y': 50.76}, {'x': '1961', 'y': 50.72}, {'x': '1962', 'y': 50.67}, {'x': '1963', 'y': 50.61}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'nominal'}, 'y': {'field': 'Population(Y$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 50.89}, {'x': 'field', 'y': 50.89}, {'x': 'type', 'y': 50.89}, {'x': 'field', 'y': 50.89}, {'x': 'field', 'y': 51.15}, {'x': 'type', 'y': 51.15}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Number of tax payers', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'East Asia (developing only)', 'y': 26.61}, {'x': 'Euro area', 'y': 13.22}, {'x': 'Europe(all income levels)', 'y': 29.45}, {'x': 'Europe(developing only)', 'y': 52.0}, {'x': 'European Union', 'y': 17.63}, {'x': 'Fragile and conflict affected situations', 'y': 35.7}]}}
[31mCountry = 'China'<0x0A>Year = '2010'<0x0A>Country_name = 'Country'<0x0A><0x0A>df = DataFrame(country_name, columns = ['Year', 'TotalPay', 'TotalCharges', 'TotalCharges'])<0x0A>df = df.sort_values(by = 'TotalPay', ascending = False)<0x0A>df = df.drop(df.index[-1], axis = 1)<0x0A>df = df.drop(df.index[-1], axis = 1)<0x0A><0x0A>df = df.drop(df.index[-1], axis = 1)<0x0A>df = df.drop(df.index[-1], axis = 1)<0x0A><0x0A>df = df.drop(df.index[-1], axis = 1)<0x0A>df = df.drop(df.index[-1], axis = 1)<0x0A><0x0A>df = df.drop(df.index[-1], axis = 1)<0x0A>df = df.drop(df.index[-1], axis = 1)<0x0A><0x0A>df = df.drop(df.index[-1], axis = 1)<0x0A><0x0A>df = df.drop(df.index[-1], axis = 1)<0x0A><0x0A>df = df.drop(df.index[-1], axis = 1)<0x0A><0x0A>df = df.drop(df.index[-1], axis = 1)<0x0A><0x0A>df = df.drop(df.index[-1], axis = 1)<0x0A><0x0A>df = df.drop(df.index[-1], axis = 1)<0x0A><0x0A>df = df.drop(df.index[-1], axis = 1)<0x0A><0x0A>df = df.drop(df.index[-1], axis = 1)<0x0A><0x0A>df = df.drop(df.index[-1], axis = 1)<0x0A><0x0A>df = df.drop(df.index[-1], axis = 1)<0x0A><0x0A>df = df.drop(df.index[-1], axis = 1)<0x0A><0x0A>df = df.drop(df.index[-1], axis = 1)<0x0A><0x0A>df = df.drop(df.index[-1], axis = 1)<0x0A><0x0A>df = df.drop(df.index[-1], axis = 1)<0x0A><0x0A>df = df.drop(df.index[-1], axis = 1)<0x0A><0x0A>df = df.drop(df.index[-1], axis = 1)<0x0A><0x0A>df = df.drop(df.index[-1],
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of procedures to build a warehouse', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 11}, {'x': '2011', 'y': 11}, {'x': '2012', 'y': 11}, {'x': '2013', 'y': 11}]}}
[31mgrupo_bairro(['year', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', 'location', 'type', '
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2005', 'y': 44.5}, {'x': '2008', 'y': 41.9}, {'x': '2011', 'y': 80.1}]}}
[31mpercentage_households = pd.DataFrame(data=percentage_households, columns=['Year', '5g of Households', 'Percentage of households in Philippines that uses iodized salt'])<0x0A>percentage_households.index = percentage_households.index.map(int)<0x0A><0x0A>g = sns.catplot(x="Year", y="5g of Households", data=percentage_households, kind="bar", palette="Reds_d", height=15)<0x0A>g.set_xticklabels(rotation=90)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A>#g.fig.suptitle('Percentage of households in Philippines that uses iodized salt')<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A>#g.fig.subplots_adjust(bottom=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A>#g.fig.subplots_adjust(bottom=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A>#g.fig.subplots_adjust(left=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A>#g.fig.subplots_adjust(left=0.9)<0x0A>g.fig.subplots_adjust(top=0.9)<0x0A><0x0A>#g.fig.subplots_adjust(bottom=0.9)<0x0A>g.fig.subplots_adjust(left=0.9)<0x0A><0x0A>#g.fig.subplots_adjust(top=0.9)<0x0A>g.fig.subplots_adjust(left=0.9)<0x0A><0x0A>#g.fig.subplots_adjust(bottom=0.9)<0x0A>g.fig.subplots_adjust(left=0.9)<0x0A><0x0A>#g.fig.subplots_adjust(left=0.9)<0x0A>g.fig.subplots_adjust(left=0.9)<0x0A><0x0A>#g.fig.subplots_adjust(left=0.9)<0x0A>g.fig.subplots_adjust(left=0.9)<0x0A><0x0A>#g.fig
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of women ages 15-49', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1980', 'y': 71.2}, {'x': '1995', 'y': 82.0}]}}
[31mgrupo_female_women = (df_female_women.groupby('Year')['Sex'].count()).sort_values(ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.bar( grupo_female_women.index, grupo_female_women.values, color='c', align='center')<0x0A>ax.set_ylabel('Percentage of women aged (Cdg)')<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_title('Percentage of women in Switzerland who are practicing any form of contraception')<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Electric power consumption (kWh per capita)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'India', 'y': 510.7}, {'x': 'Indonesia', 'y': 519.51}, {'x': 'Iran', 'y': 2209.66}, {'x': 'Iraq', 'y': 972.33}]}}
[31mCountry_2006 = df_2006.groupby(['Country','Country'])['Electric power consumption (kWh per capita) by countries in the year 2006'].sum()<0x0A>Country_2006 = Country_2006.sort_values(by=['Electric power consumption (kWh per capita) by countries in the year 2006'],ascending=False)<0x0A>Country_2006 = Country_2006.iloc[:,:-1]<0x0A>Country_2006 = Country_2006.reset_index()<0x0A>Country_2006.head()<0x0A>Country_2006.plot(kind='bar',figsize=(15,15),color='black')<0x0A>plt.xlabel('Country')<0x0A>plt.ylabel('Electric power consumption (kWh per capita) by countries in the year 2006')<0x0A>plt.title('Electric power consumption (kWh per capita) by countries in the year 2006')<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Amount (in current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Benin', 'y': 128069000.0}, {'x': 'Bhutan', 'y': 47336000.0}, {'x': 'Bolivia', 'y': 594170000.0}, {'x': 'Bosnia and Herzegovina', 'y': 824769000.0}]}}
[31mCountry_2019 = pd.DataFrame(country_2019.groupby(['Country'])['Amount (US$)'].mean()).reset_index()<0x0A>Country_2019['Country'] = Country_2019['Country'].astype(str).apply(lambda x: '%s' % x.upper())<0x0A>Country_2019.sort_values(by='Amount (US$)',ascending=False).head(10)<0x0A>Country_2019.sort_values(by='Amount (US$)',ascending=False).head(10)<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_2019.head()<0x0A>Country_20
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Domestic credit (% of GDP)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2001', 'y': 28.46}, {'x': '2002', 'y': 31.92}, {'x': '2003', 'y': 32.61}, {'x': '2004', 'y': 31.35}, {'x': '2005', 'y': 31.41}]}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Domestic credit (%) of GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 9.55}, {'x': 'field', 'y': 7.85}, {'x': 'type', 'y': 9.55}, {'x': 'field', 'y': 7.85}, {'x': 'type', 'y': 9.55}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Tuberculosis incidents (per 100,000 people)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1994', 'y': 69}, {'x': '1995', 'y': 71}, {'x': '1996', 'y': 73}, {'x': '1997', 'y': 76}]}}
[31mgrupo_bairro['year'] = grupo_bairro['date'].apply(lambda x: str(x.year) + '.')<0x0A><0x0A># plot<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># plot<0x0A>ax.bar(groupe_bairro['year'], grupo_bairro['cases'], color='orange')<0x0A><0x0A># set title<0x0A>ax.set_title('Number of tuberculosis cases reported in Brunei Darussalam')<0x0A><0x0A># set x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># set y-axis label<0x0A>ax.set_ylabel('Tuberculosis mortality per 10,200 people')<0x0A><0x0A># set y-axis limit<0x0A>ax.set_ylim(0, 70)<0x0A><0x0A># save plot as png<0x0A>plt.savefig('Number of tuberculosis cases reported in Brunei Darussalam')<0x0A><0x0A># save plot as png<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total subscribers', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2008', 'y': 46242}, {'x': '2009', 'y': 63000}, {'x': '2010', 'y': 72800}, {'x': '2011', 'y': 70000}, {'x': '2012', 'y': 67300}, {'x': '2013', 'y': 64700}, {'x': '2014', 'y': 62800}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Total subscriptions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 15754}, {'x': 'y', 'y': 15754}, {'x': 'y', 'y': 6576}, {'x': 'x', 'y': 6576}, {'x': 'y', 'y': 15754}, {'x': 'x', 'y': 7555}, {'x': 'y', 'y': 6576}, {'x': 'x', 'y': 7555}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Yield kg per hectare', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1122.1}, {'x': '1971', 'y': 1074.44}, {'x': '1972', 'y': 1066.85}, {'x': '1973', 'y': 1049.12}, {'x': '1974', 'y': 936.04}, {'x': '1975', 'y': 1074.82}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Yield of 10/20/20', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 104.66}, {'x': 'field', 'y': 104.66}, {'x': 'type', 'y': 67.25}, {'x': 'field', 'y': 67.25}, {'x': 'field', 'y': 104.66}, {'x': 'field', 'y': 115.45}, {'x': 'field', 'y': 104.66}, {'x': 'field', 'y': 67.25}, {'x': 'field', 'y': 115.45}, {'x': 'field', 'y': 67.25}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed females (as % of female labor force)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2003', 'y': 6.86}, {'x': '2004', 'y': 6.73}, {'x': '2005', 'y': 6.68}, {'x': '2006', 'y': 6.39}]}}
[31mfemale_unemployment_plot = pd.DataFrame(female_unemployment, columns = ['Year', 'Unemployment for female (100% of females)', 'Female unemployment in World'])<0x0A>female_unemployment_plot.index = female_unemployment_plot.index.map(int)<0x0A>female_unemployment_plot.plot(kind='bar', figsize=(15,15), color='green')<0x0A>female_unemployment_plot.plot(kind='bar', figsize=(15,15), color='red')<0x0A>female_unemployment_plot.plot(kind='bar', figsize=(15,15), color='red')<0x0A>female_unemployment_plot.plot(kind='bar', figsize=(15,15), color='red')<0x0A>female_unemployment_plot.plot(kind='bar', figsize=(15,15), color='red')<0x0A>female_unemployment_plot.plot(kind='bar', figsize=(15,15), color='red')<0x0A>female_unemployment_plot.plot(kind='bar', figsize=(15,15), color='red')<0x0A>female_unemployment_plot.plot(kind='bar', figsize=(15,15), color='red')<0x0A>female_unemployment_plot.plot(kind='bar', figsize=(15,15), color='red')<0x0A>female_unemployment_plot.plot(kind='bar', figsize=(15,15), color='red')<0x0A>female_unemployment_plot.plot(kind='bar', figsize=(15,15), color='red')<0x0A>female_unemployment_plot.plot(kind='bar', figsize=(15,15), color='red')<0x0A>female_unemployment_plot.plot(kind='bar', figsize=(15,15), color='red')<0x0A>female_unemployment_plot.plot(kind='bar', figsize=(15,15), color='red')<0x0A>female_unemployment_plot.plot(kind='bar', figsize=(15,15), color='red')<0x0A>female_unemployment_plot.plot(kind='bar', figsize=(15,15), color='red')<0x0A>female_unemployment_plot.plot(kind='bar', figsize=(15,15), color='red')<0x0A>female_unemployment_plot.plot(kind='bar', figsize=(15,15), color='red')<0x0A>female_unemployment
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Teachers, male (%)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 91.45}, {'x': '2008', 'y': 87.37}, {'x': '2009', 'y': 84.51}, {'x': '2010', 'y': 80.3}, {'x': '2011', 'y': 77.99}, {'x': '2012', 'y': 75.14}, {'x': '2013', 'y': 80.2}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Teachers make (%)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 81.55}, {'x': 'field', 'y': 64.09}, {'x': 'type', 'y': 64.09}, {'x': 'field', 'y': 81.55}, {'x': 'type', 'y': 64.09}, {'x': 'field', 'y': 64.09}, {'x': 'type', 'y': 64.09}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Production in metric tons', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1976', 'y': 105946}, {'x': '1977', 'y': 75660}, {'x': '1978', 'y': 103167}, {'x': '1979', 'y': 73240}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['top'].set_color('none')<0x0A>ax.spines['right'].set_color('none')<0x0A><0x0A>ax.spines['left'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['bottom'].set_color('none')<0x0A>ax.spines['left'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_color('none')<0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines['right'].set_linewidth(3)<0x0A><0x0A>ax.spines
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployment (% of total unemployment)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 20.9}, {'x': '2010', 'y': 23.8}, {'x': '2011', 'y': 23.0}, {'x': '2012', 'y': 19.7}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Long-term unemployment in Panama', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 95.89}, {'x': 'field', 'y': 'Long-term unemployment (% of total unmet medical conditions)', 'data': {'x': 'Year', 'y': 'Value', 'orderups': {'x': 'field', 'y': 'Value', 'orderups': Bayesian optimal combinations"}); }<0x0A>       }<0x0A>       }<0x0A>       }<0x0A>    {'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}}, 'y': {'x': 'field', 'y': 'quantitative'}}, 'y': 'Value': {'x': 'field', 'y': 'quantitative'}}, 'y': 'Value': {'x': 'field', 'y': 'quantitative'}}, 'y': 'Value': {'x': 'field', 'y': 'Value', 'orderups': {'x': 'value', 'y': 'value'}}, 'y': 'value': {'x': 'field', 'y': 'quantitative'}}, 'y': 'value': {'x': 'value', 'y': 'quantitative'}}, 'y': 'value': {'x': 'field', 'y': 'quantitative'}}, 'y': 'value': {'x': 'value', 'y': 'quantitative'}}, 'y': 'value': {'x': 'value', 'y': 'quantitative'}}, 'y': 'value': {'x': 'value', 'y':
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Detection rate (%, all forms)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1992', 'y': 110}, {'x': '1995', 'y': 76}, {'x': '1996', 'y': 77}, {'x': '1997', 'y': 120}, {'x': '1998', 'y': 160}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Outduction rate (%s all Aerial)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 103.65}, {'x': 'field', 'y': 71.85}, {'x': 'type', 'y': 103.65}, {'x': 'field', 'y': 71.85}, {'x': 'type', 'y': 103.65}, {'x': 'field', 'y': 71.85}, {'x': 'variable', 'y': 103.65}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Score (0=lowest to 100=highest performance)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2010', 'y': 62.37}, {'x': '2011', 'y': 64.87}, {'x': '2012', 'y': 68.78}, {'x': '2013', 'y': 70.34}, {'x': '2014', 'y': 72.68}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Score ((intramental to housing development)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5.45}, {'x': 'field', 'y': 55.71}, {'x': 'type', 'y': 12.05}, {'x': 'field', 'y': 12.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of births', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 22.3}, {'x': '2005', 'y': 17.6}, {'x': '2007', 'y': 17.0}]}}
[31mpercentage_sr_lanka = df_sr_lanka.groupby(['Country']).sum()<0x0A>percentage_sr_lanka = percentage_sr_lanka.sort_values(by=['Country'], ascending=False)<0x0A><0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Birth Registration (in %)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 41.1}, {'x': '2011', 'y': 83.6}]}}
[31mpercentage_india = pd.DataFrame(data=percentage_india, columns=['Year', 'Birth Registration (in %)', 'Age', 'Birth', 'Birth', 'Age', 'Birth', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age', 'Age
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total reserves (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1967', 'y': 2629210307.44}, {'x': '1968', 'y': 2798136288.14}, {'x': '1969', 'y': 2540014731.45}, {'x': '1970', 'y': 3362472584.51}, {'x': '1971', 'y': 4102925821.88}, {'x': '1972', 'y': 6242195051.24}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Page 1 International (current KSS)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x1', 'y': 26200e9}, {'x': 'y': 26200e9}, {'x': 'x2', 'y': 26200e9}, {'x': 'y': 1.77}, {'x': 'y': 1.77}, {'x': 'y': 1.77}, {'x': 'y': 1.77}, {'x': 'x3', 'y': 26200e9}, {'x': 'y': 1.77}, {'x': 'y': 26200e9}, {'x': 'y': 1.77}, {'x': 'x4', 'y': 26200e9}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Current account balance (% of GDP)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 15.22}, {'x': '2007', 'y': 5.85}, {'x': '2008', 'y': 8.24}, {'x': '2009', 'y': -1.04}, {'x': '2010', 'y': 8.59}, {'x': '2011', 'y': 13.17}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Current account balance of Oman after reporting goods and services', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 5}, {'x': 'Field', 'y': 5}, {'x': 'x', 'y': 5}, {'x': 'Field', 'y': 5}, {'x': 'x', 'y': 5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total subscribers (per 100 people)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 0.0}, {'x': '2010', 'y': 0.0}, {'x': '2011', 'y': 0.0}, {'x': '2012', 'y': 0.0}, {'x': '2013', 'y': 0.0}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Fixed broadband subscriptions (per 100 people) in Eritrea}}, 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.05}, {'x': 'field', 'y': 0.05}, {'x': 'type', 'y': 0.05}, {'x': 'field', 'y': 0.05}, {'x': 'type', 'y': 780}, {'x': 'field', 'y': 0.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Amount of imports(% of total goods imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2003', 'y': 8.49}, {'x': '2004', 'y': 7.33}, {'x': '2005', 'y': 8.42}, {'x': '2006', 'y': 8.76}, {'x': '2007', 'y': 8.17}]}}
[31mpartido_df = pd.DataFrame(<0x0A>    {'x': 'Year', 'y': 'Amount of import(s) of local goods imported by Portugal', 'data': df,'mode': 'quantitative'}, <0x0A>    {'x': 'Year', 'y': 'Amount of import(s) of local goods imported by Portugal', 'data': df}, <0x0A>   {'x': 'Year', 'y': 'Amount of import(s) of local goods imported by Portugal', 'data': df}, <0x0A>   {'x': 'Year', 'y': 'Amount of import(s) of local goods imported by Portugal', 'data': df}, <0x0A>   {'x': 'Year', 'y': 'Amount of import(s) of local goods imported by Portugal', 'data': df}, <0x0A>   {'x': 'Year', 'y': 'Amount of import(s) of local goods imported by Portugal', 'data': df}, <0x0A>   {'x': 'Year', 'y': 'Amount of import(s) of local goods imported by Portugal', 'data': df}, <0x0A>   {'x': 'Year', 'y': 'Amount of import(s) of local goods imported by Portugal', 'data': df}, <0x0A>   {'x': 'Year', 'y': 'Amount of import(s) of local goods imported by Portugal', 'data': df}, <0x0A>   {'x': 'Year', 'y': 'Amount of import(s) of local goods imported by Portugal', 'data': df}, <0x0A>   {'x': 'Year', 'y': 'Amount of import(s) of local goods imported by Portugal', 'data': df}, <0x0A>   {'x': 'Year', 'y': 'Amount of import(s) of local goods imported by Portugal', 'data': df}, <0x0A>   {'x': 'Year', 'y': 'Amount of import(s) of local goods imported by Portugal', 'data': df}, <0x0A>   {'x': 'Year', 'y'
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of women ages 15-49', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1992', 'y': 48.0}, {'x': '2000', 'y': 42.1}, {'x': '2006', 'y': 45.6}, {'x': '2010', 'y': 47.6}]}}
[31mpercentage_women_survived_by_country = (<0x0A>    df_female_survived_by_country.groupby(['Year','Country'])['Survived']<0x0A>   .sum()<0x0A>   .sort_values(by='Survived',ascending=False)<0x0A>   .reset_index()<0x0A>   .sort_values(by='Survived',ascending=False)<0x0A>   .head()<0x0A>   .plot(x='Year',y='Survived',kind='scatter',title='Percentage of women in Suriname who are practicing any form of contraception',figsize=(18, 20),color='green')<0x0A>   .set_xlabel('Year')<0x0A>   .set_ylabel('% of American aged (-14p)')<0x0A>   .invert_yaxis()<0x0A>   .invert_xaxis()<0x0A>   .plot(x='Year',y='Survived',kind='scatter',title='Percentage of Women in Suriname who are practicing any form of contraception',figsize=(18, 20),color='red')<0x0A>   .invert_yaxis()<0x0A>   .plot(x='Year',y='Survived',kind='scatter',title='Percentage of Suriname aged (-14p)',figsize=(18, 20),color='green')<0x0A>   .invert_yaxis()<0x0A>   .plot(x='Year',y='Survived',kind='scatter',title='Percentage of Suriname aged (-14p)',figsize=(18, 20),color='red')<0x0A>   .invert_yaxis()<0x0A>   .plot(x='Year',y='Survived',kind='scatter',title='Percentage of Suriname aged (-14p)',figsize=(18, 20),color='green')<0x0A>   .invert_yaxis()<0x0A>   .plot(x='Year',y='Survived',kind='scatter',title='Percentage of Suriname aged (-14p)')<0x0A>   .invert_yaxis()<0x0A>   .plot(x='Year',y='Survived',kind='scatter',title='Percentage of Suriname aged (-14p)')<0x0A>   .invert_yaxis()<0x0A>   .plot(x='Year',y='Survi
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Discrepancy in expenditure estimate of GDP (constant LCU)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 100000.0}, {'x': '2003', 'y': -100000.0}, {'x': '2004', 'y': -100000.0}, {'x': '2012', 'y': -100000.0}, {'x': '2014', 'y': -100000.0}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Discrepancy in expenditure estimate of GDP of Oman', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x2', 'y': 1000e4}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Twenty- foot Equivalent Units(TEU)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2001', 'y': 1080545.0}, {'x': '2002', 'y': 1167880.0}, {'x': '2003', 'y': 1250126.0}, {'x': '2004', 'y': 1658672.0}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Transparent Zone (Growwalled Outlets (TEA)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 10352}, {'x': 'field', 'y': 10352}, {'x': 'type', 'y': 10352}, {'x': 'field', 'y': 10352}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Armed forces personnel', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1985', 'y': 276000}, {'x': '1989', 'y': 319000}, {'x': '1990', 'y': 295000}, {'x': '1991', 'y': 295000}, {'x': '1992', 'y': 296000}, {'x': '1993', 'y': 296000}, {'x': '1994', 'y': 296000}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field':'Armed Forces personnel', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x2', 'y': 27500000}, {'x': 'y': 150000}, {'x': 'y': 150000}, {'x': 'y': 150000}, {'x': 'y': 15000e-5, 'y': 1500e-5}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children who received DPT vaccine', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 90}, {'x': '1992', 'y': 91}, {'x': '1993', 'y': 88}, {'x': '1994', 'y': 89}, {'x': '1995', 'y': 90}, {'x': '1996', 'y': 77}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '% of children who received DPT vaccinations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 7.5}, {'x': 'field', 'y': 75}, {'x': 'variable', 'y': 75}, {'x': 'field', 'y': 75}, {'x': 'variable', 'y': 75}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Exports (% of total merchandise exports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 18.43}, {'x': '2001', 'y': 16.87}, {'x': '2002', 'y': 17.92}, {'x': '2003', 'y': 17.06}, {'x': '2004', 'y': 18.91}, {'x': '2005', 'y': 19.22}]}}
[31mgrupo_bairro['Merchandise exports'].plot(kind='scatter', x='Year', y='Export 1% of total merchandise exports', color='green', figsize=(15,15))<0x0A>plt.xlabel('Year')<0x0A>plt.ylabel('Export 1% of total merchandise exports')<0x0A>plt.title('Merchandise exports between developing economies in Europe and Bulgaria')<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of total applications', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1982', 'y': 220832}, {'x': '1983', 'y': 252378}, {'x': '1984', 'y': 278310}, {'x': '1985', 'y': 311757}, {'x': '1986', 'y': 326155}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Number of Equal Appropriations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 32242}, {'x': 'y', 'y': 32242}, {'x': 'y', 'y': 27564}, {'x': 'x', 'y': 32242}, {'x': 'y', 'y': 32242}, {'x': 'x', 'y': 27564}, {'x': 'y', 'y': 32242}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Rating (1=extremely inefficient to 7=extremely efficient)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 4.4}, {'x': '2010', 'y': 4.63}, {'x': '2011', 'y': 4.7}, {'x': '2012', 'y': 4.8}, {'x': '2013', 'y': 5.0}]}}
[31mgrupo_bairro['Year'] = grupo_bairro['Year'].astype('category')<0x0A><0x0A># Create a DataFrame with the DataFrame<0x0A>grouped_df = pd.DataFrame(<0x0A>    group_bairro['Year'].unique(),<0x0A>    columns = grupo_bairro['Year'].unique(),<0x0A>    index = grupo_bairro['Year'].unique(),<0x0A>    columns = grupo_bairro['Year'].unique())<0x0A><0x0A># Plot the DataFrame<0x0A>grouped_df.plot(kind='scatter', x='Year', y='Rating', figsize=(15,15), color='green', s=200)<0x0A><0x0A># Add a title<0x0A>plt.title('Measure of Japan\'s business executives perception of the efficiency of customs procedures')<0x0A><0x0A># Add a legend<0x0A>plt.legend(loc='upper left')<0x0A><0x0A># Add a title<0x0A>plt.ylabel('Rating')<0x0A><0x0A># Add a title<0x0A>plt.ylabel('Rating')<0x0A><0x0A># Display the graph<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Debt(% of exports of goods, services and primary income)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2003', 'y': 7.8}, {'x': '2004', 'y': 8.83}, {'x': '2005', 'y': 8.44}, {'x': '2006', 'y': 7.1}, {'x': '2007', 'y': 19.36}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Value', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 1.35}, {'x': 'field', 'y': 2.05}, {'x': 'type', 'y': 7.05}, {'x': 'field', 'y': 2.05}, {'x': 'type', 'y': 2.05}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Loss(as % of annual sales)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 0.4}, {'x': '2005', 'y': 0.6}, {'x': '2009', 'y': 0.3}, {'x': '2013', 'y': 0.2}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Loss(y) % 6 (primary selling)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.62}, {'x': 'field', 'y': 0.62}, {'x': 'type', 'y': 0.22}, {'x': 'field', 'y': 0.22}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Amount of exports(% of total goods exports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 0.01}, {'x': '2007', 'y': 0.01}, {'x': '2008', 'y': 0.01}, {'x': '2009', 'y': 0.02}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Amount of exported', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 0.01}, {'x': 'field', 'y': 0.03}, {'x': 'type', 'y': 0.03}, {'x': 'field', 'y': 0.03}, {'x': 'type', 'y': 0.03}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of households', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 35}, {'x': '2003', 'y': 35}]}}
[31mpercentage_households_sat_plot = percentage_households_sat.plot(kind='scatter', x='Year', y='Percentage of households in Russian Federation that uses iodized salt', color='purple', figsize=(15,15))<0x0A>percentage_households_sat_plot.set_title('Percentage of households in Russian Federation that uses iodized salt', fontsize=16)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('% of households', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_xlabel('Year', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A>percentage_households_sat_plot.set_ylabel('Percentage of households in Russian Federation that uses iodized salt', fontsize=14)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Waste generated(% of total energy)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1995', 'y': 1.31}, {'x': '1996', 'y': 1.52}, {'x': '1997', 'y': 1.58}, {'x': '1998', 'y': 1.65}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Waste generated by Moddove', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 'Value (generated by Moddove)}}, 'x': 'Field', 'y': 'Value (generated by Moddove)}}, 'data': {'x': 'Year', 'y': 'Value (generated by Moddove)}}, 'data': {'x': 'Year', 'y': 'Value (generated by Moddove)}}, 'x': 'Values': [{'x': 'Year', 'y': 'Value (generated by Moddove)}}, 'x': 'Values': [{'x': 'Year', 'y': 'Value (generated by Moddove)}]}}, 'x': 'Year', 'y': 'Value (generated by Moddove}]}}] }<0x0A>       }<0x0A>       }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A>  }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }<0x0A> }
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Success rate(as % of new cases)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2004', 'y': 73}, {'x': '2005', 'y': 69}, {'x': '2007', 'y': 67}, {'x': '2008', 'y': 66}, {'x': '2009', 'y': 66}, {'x': '2010', 'y': 67}]}}
[31mgrupo_bairro['year'] = grupo_bairro['date'].apply(lambda x: str(x.year) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.day) + '-' + str(x.month) + '-' + str(x.month) + '-' + str(x.month) + '-' + str(x.month) + '-' + str(x.month) + '-' + str(x.month) + '-' + str(x.month) + '-' + str(x.
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of poverty lines', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 13.2}, {'x': '2008', 'y': 8.7}, {'x': '2009', 'y': 5.3}, {'x': '2010', 'y': 4.7}, {'x': '2011', 'y': 4.2}, {'x': '2012', 'y': 3.1}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A><0x0A>df = pd.read_csv('data/csv/income.csv')<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()<0x0A><0x0A>df = df.dropna()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1975', 'y': 14.25}, {'x': '1976', 'y': 14.62}, {'x': '1977', 'y': 15.0}, {'x': '1978', 'y': 15.26}, {'x': '1979', 'y': 15.59}, {'x': '1980', 'y': 16.23}]}}
[31mgrupo_2 = grupo[(grupo['Country/Region'] == 'UK') & (grupo['Value'] > 0.05)]<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Correspondence of Alfred Capital (Alfred Capital (Alfred CGM)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.tick_params(bottom=False, top=True, left=False, right=False)<0x0A>ax.tick_params(top=False, bottom=False, left=False, right=False)<0x0A><0x0A># Plotting the graph<0x0A>ax.scatter(grupos['Year'], grupo_2)<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Correspondence of Alfred Capital (Alfred Capital (Alfred CGM)')<0x0A>ax.set_title('Capital used up in the process of production in United Kingdom')<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.tick_params(bottom=False, top=True, right=False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployment (% of male unemployment)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 31.8}, {'x': '2010', 'y': 53.6}, {'x': '2011', 'y': 64.5}, {'x': '2012', 'y': 67.6}, {'x': '2013', 'y': 66.3}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Unemployment (Q of rural unemployment)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 9.55}, {'x': 'Field', 'y': 60.59}, {'x': 'x', 'y': 60.59}, {'x': 'Field', 'y': 6.45}, {'x': 'x', 'y': 6.45}, {'x': 'y': 'Value', 'y': 6.45}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1970', 'y': 1.54}, {'x': '1971', 'y': 1.3}, {'x': '1972', 'y': 1.3}, {'x': '1973', 'y': 2.03}, {'x': '1974', 'y': 2.01}, {'x': '1975', 'y': 4.07}, {'x': '1976', 'y': 2.75}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Cost (y = % of GW)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 18.65}, {'x': 'field', 'y': 18.65}, {'x': 'variable', 'y': 19.25}, {'x': 'field', 'y': 19.25}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Average precipitation (mm )', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1992', 'y': 1130}, {'x': '1997', 'y': 1130}, {'x': '2002', 'y': 1130}, {'x': '2007', 'y': 1130}, {'x': '2012', 'y': 1130}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': 'Average precipitation in depth in Paraguay', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 1064}, {'x': 'field', 'y': 1064}, {'x': 'type', 'y': 1064}, {'x': 'field', 'y': 1064}, {'x': 'type', 'y': 1064}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Births attended by skilled health staff (% of total births)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1992', 'y': 57.0}, {'x': '1997', 'y': 47.3}, {'x': '2000', 'y': 46.2}, {'x': '2004', 'y': 51.3}, {'x': '2009', 'y': 43.9}]}}
[31mpercentage_of_deliveries_at_khhs_by_location = df_train.groupby('Year')['EmployeeCount'].mean()<0x0A>percentage_of_deliveries_at_khhs_by_location = percentage_of_deliveries_at_khhs_by_location.sum()<0x0A>percentage_of_deliveries_at_khhs_by_location = percentage_of_deliveries_at_khhs_by_location.sort_values(by='EmployeeCount', ascending=False)<0x0A>percentage_of_deliveries_at_khhs_by_location = percentage_of_deliveries_at_khhs_by_location.sort_values(by='EmployeeCount', ascending=False)<0x0A>percentage_of_deliveries_at_khhs_by_location = percentage_of_deliveries_at_khhs_by_location.drop_duplicates(['EmployeeCount'], axis=1)<0x0A>percentage_of_deliveries_at_khhs_by_location = percentage_of_deliveries_at_khhs_by_location.drop_duplicates(['EmployeeCount'], axis=1)<0x0A>percentage_of_deliveries_at_khhs_by_location = percentage_of_deliveries_at_khhs_by_location.drop_duplicates(['EmployeeCount'], axis=1)<0x0A>percentage_of_deliveries_at_khhs_by_location = percentage_of_deliveries_at_khhs_by_location.drop_duplicates(['EmployeeCount'], axis=1)<0x0A>percentage_of_deliveries_at_khhs_by_location = percentage_of_deliveries_at_khhs_by_location.drop_duplicates(['EmployeeCount'], axis=1)<0x0A>percentage_of_deliveries_at_khhs_by_location = percentage_of_deliveries_at_khhs_by_location.drop_duplicates(['EmployeeCount'], axis=1)<0x0A>percentage_of_deliveries_at_khhs_by_location = percentage_of_deliveries_at_khhs_by_location.drop_duplicates(['EmployeeCount'], axis=1)<0x0A>percentage_of_deliveries_at_khhs_by_location = percentage_of_deliveries_at_khh
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of commercial services imports', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2008', 'y': 4.08}, {'x': '2009', 'y': 15.16}, {'x': '2010', 'y': 16.51}, {'x': '2011', 'y': 8.97}]}}
[31m# plot the graph<0x0A>fig, ax = plt.subplots(figsize=(20, 20))<0x0A><0x0A># set up the graph<0x0A>ax.scatter(df['Year'], df['Insurance provided to residents by nonresident enterprises outside Afghanistan'], color='blue')<0x0A><0x0A># set up the x-axis label<0x0A>ax.set_xlabel('Year')<0x0A><0x0A># set up the y-axis label<0x0A>ax.set_ylabel('% of commercial and non-profit housing')<0x0A><0x0A># set up the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># set up the title<0x0A>ax.set_title('Insurance provided to residents by nonresident insurance enterprises outside Afghanistan')<0x0A><0x0A># set up the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># set up the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># set up the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># set up the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># set up the legend<0x0A>ax.legend(loc='upper left', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># set up the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># set up the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># set up the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># set up the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># set up the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># set up the legend<0x0A>ax.legend(loc='upper right', bbox_to_anchor=(1.05, 1.05))<0x0A><0x0A># set up the legend<0x0A>ax.legend(loc='upper right', bbox_
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Strength Index( 0 = weak,12 = strong)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2013', 'y': 5}, {'x': '2014', 'y': 5}, {'x': '2015', 'y': 5}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Year', 'y': 2.08}, {'x': 'field', 'y': 2.08}, {'x': 'type', 'y': 2.08}, {'x': 'field', 'y': 2.08}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Area of land (hectares per person)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1988', 'y': 0.42}, {'x': '1989', 'y': 0.41}, {'x': '1990', 'y': 0.4}, {'x': '1991', 'y': 0.4}]}}
[31mgraph_by_year('Arable land in Uruguay')
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Imports (% of total merchandise imports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 2.28}, {'x': '2007', 'y': 2.3}, {'x': '2008', 'y': 4.24}, {'x': '2009', 'y': 1.78}, {'x': '2010', 'y': 1.6}]}}
[31mgrupo_bairro['Valor'] = grupo_bairro['Valor'].replace({'Valor': 'Merchandise imports between developing economies in Europe and Qatar', 'Valor': 'Merchandise imports between developing economies in Europe and Qatar'})<0x0A><0x0A># Plotando o gráfico de barras<0x0A>fig, ax = plt.subplots(figsize=(15,15))<0x0A><0x0A># Plotando o gráfico de barras<0x0A>sns.catplot(x='Year', y='Amount Avg (total import imports)', data= grupo_bairro, kind='point', ax=ax)<0x0A><0x0A># Plotando o gráfico de barras<0x0A>ax.set_xlabel('Year')<0x0A>ax.set_ylabel('Amount Avg (total imports)')<0x0A>ax.set_title('Merchandise imports between developing economies in Europe and Qatar')<0x0A><0x0A># Plotando o gráfico de barras<0x0A>ax.set_xticklabels(['Year', 'Year'])<0x0A><0x0A># Plotando o gráfico de barras<0x0A>ax.yaxis.grid(True)<0x0A><0x0A># Plotando o gráfico de barras<0x0A>ax.xaxis.grid(False)<0x0A><0x0A># Plotando o gráfico de barras<0x0A>ax.yaxis.grid(True)<0x0A><0x0A># Plotando o gráfico de barras<0x0A>ax.xaxis.grid(False)<0x0A><0x0A># Plotando o gráfico de barras<0x0A>ax.xaxis.grid(False)<0x0A><0x0A># Plotando o gráfico de barras<0x0A>ax.xaxis.grid(False)<0x0A><0x0A># Plotando o gráfico de barras<0x0A>ax.xaxis.grid(False)<0x0A><0x0A># Plotando o gráfico de barras<0x0A>ax.xaxis.grid(False)<0x0A><0x0A># Plotando o gráfico de barras<0x0A>ax.xaxis.grid(False)<0x0A><0x0A># Plotando o gráfico de barras<0x0A>ax.xaxis.grid(False)<0x0A><0x0A># Plotando o gráfico de barras<0x0A>ax.xaxis.grid(False)<0x0A><0x0A># Plotando o gráfico de barras<0x0A>ax.xaxis.grid(False)<0x0A><0x0A># Plotando o gráfico de barras<0x0A>ax.xaxis.grid(False)<0x0A><0x0A># Plotando o gráfico de barras<0x0A>ax.xaxis.grid(False)<0x0A><0x0A># Plotando o gráfico de barras<0x0A>ax.xaxis.grid(False)<0x0A><0x0A># Plotando o gráfico de barras<0x0A>
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.94 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.2 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.97 [35m|[39m [36m[1mY-NAME[39m[22m : 0.63 [35m|
  3%|███                                                                                                               | 1/37 [00:00<00:28,  1.25it/s]
  5%|██████▏                                                                                                           | 2/37 [00:03<01:04,  1.85s/it]
  8%|█████████▏                                                                                                        | 3/37 [00:08<01:52,  3.32s/it]
 11%|████████████▎                                                                                                     | 4/37 [00:27<05:20,  9.71s/it]
 14%|███████████████▍                                                                                                  | 5/37 [00:47<07:00, 13.15s/it]
 16%|██████████████████▍                                                                                               | 6/37 [00:54<05:50, 11.32s/it]
 19%|█████████████████████▌                                                                                            | 7/37 [01:05<05:28, 10.97s/it]
 22%|████████████████████████▋                                                                                         | 8/37 [01:11<04:38,  9.60s/it]
 24%|███████████████████████████▋                                                                                      | 9/37 [01:17<03:52,  8.30s/it]
 27%|██████████████████████████████▌                                                                                  | 10/37 [01:21<03:13,  7.15s/it]
 30%|█████████████████████████████████▌                                                                               | 11/37 [01:27<02:55,  6.76s/it]
 32%|████████████████████████████████████▋                                                                            | 12/37 [01:45<04:12, 10.08s/it]
 35%|███████████████████████████████████████▋                                                                         | 13/37 [02:00<04:34, 11.45s/it]
 38%|██████████████████████████████████████████▊                                                                      | 14/37 [02:11<04:21, 11.35s/it]
 41%|█████████████████████████████████████████████▊                                                                   | 15/37 [02:14<03:17,  9.00s/it]
 43%|████████████████████████████████████████████████▊                                                                | 16/37 [02:19<02:42,  7.74s/it]
 46%|███████████████████████████████████████████████████▉                                                             | 17/37 [02:36<03:32, 10.61s/it]
 49%|██████████████████████████████████████████████████████▉                                                          | 18/37 [02:46<03:17, 10.42s/it]
 51%|██████████████████████████████████████████████████████████                                                       | 19/37 [02:51<02:37,  8.72s/it]
 54%|█████████████████████████████████████████████████████████████                                                    | 20/37 [02:59<02:24,  8.51s/it]
 57%|████████████████████████████████████████████████████████████████▏                                                | 21/37 [03:04<01:59,  7.49s/it]
 59%|███████████████████████████████████████████████████████████████████▏                                             | 22/37 [03:12<01:53,  7.60s/it]
 62%|██████████████████████████████████████████████████████████████████████▏                                          | 23/37 [03:19<01:44,  7.43s/it]
 65%|█████████████████████████████████████████████████████████████████████████▎                                       | 24/37 [03:34<02:04,  9.55s/it]
 68%|████████████████████████████████████████████████████████████████████████████▎                                    | 25/37 [03:39<01:39,  8.31s/it]
 70%|███████████████████████████████████████████████████████████████████████████████▍                                 | 26/37 [03:47<01:29,  8.16s/it]
 73%|██████████████████████████████████████████████████████████████████████████████████▍                              | 27/37 [03:56<01:25,  8.51s/it]
 76%|█████████████████████████████████████████████████████████████████████████████████████▌                           | 28/37 [04:02<01:09,  7.73s/it]
 78%|████████████████████████████████████████████████████████████████████████████████████████▌                        | 29/37 [04:08<00:57,  7.15s/it]
 81%|███████████████████████████████████████████████████████████████████████████████████████████▌                     | 30/37 [04:13<00:46,  6.66s/it]
 84%|██████████████████████████████████████████████████████████████████████████████████████████████▋                  | 31/37 [04:25<00:49,  8.26s/it]
 86%|█████████████████████████████████████████████████████████████████████████████████████████████████▋               | 32/37 [04:34<00:42,  8.41s/it]
 89%|████████████████████████████████████████████████████████████████████████████████████████████████████▊            | 33/37 [04:42<00:32,  8.20s/it]
 92%|███████████████████████████████████████████████████████████████████████████████████████████████████████▊         | 34/37 [04:47<00:21,  7.33s/it]
 95%|██████████████████████████████████████████████████████████████████████████████████████████████████████████▉      | 35/37 [05:05<00:20, 10.48s/it]
 97%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████▉   | 36/37 [05:11<00:09,  9.26s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 37/37 [05:19<00:00,  8.63s/it]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 37/37 [05:19<00:00,  8.63s/it]
[35m|[39m JSON to Vega conversion error rate: [31m48.65[39m [31m%[39m [35m|
error
error
error
error
error
error
error
error
error
error
error
error
error
error
error
error
error
error
error
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'encoding': {'y': {'field': 'body_mass_g', 'type': 'quantitative'}, 'x': {'field': 'culmen_length_mm', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
[31mscatterplot(df, 'culmen_length_mm', 'body_mass_g', 'Scatterplot-Relationship between two variables')
[32m[1m{'encoding': {'y': {'field': 'Youth unemployment rate', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': 'tooth unemployment rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2019}, {'y': 1.7%}, {'x': 2009}, {'x': 2019}]}}
[32m[1m{'encoding': {'y': {'field': 'Amount of daily sent messages in billions', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'ordinal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Q4 '16', 'type': 'nominal'}, 'y': {'field': 'Amount of dataventure usage in billions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Q4 '16', 'y': 50}, {'x': 'Q2 '17', 'y': 50}, {'x': 'Q2 '17', 'y': 50}, {'x': 'Y': 60', 'y': 0.78}]}}
[32m[1m{'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'nominal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31m# df_2018 = df_2018.loc[(df_2018['Country Code'] == 'Germany')]<0x0A># df_2018['Country Code'].value_counts().sort_index().plot(kind='bar', figsize=(20, 30), fontsize=16)<0x0A># df_2018['Country Code'].value_counts().sort_index().plot(kind='bar', figsize=(20, 30), fontsize=16)<0x0A># df_2018['Country Code'].value_counts().sort_index().plot(kind='bar', figsize=(20, 30), fontsize=16)<0x0A># df_2018['Country Code'].value_counts().sort_index().plot(kind='bar', figsize=(20, 30), fontsize=16)<0x0A># df_2018['Country Code'].value_counts().sort_index().plot(kind='bar', figsize=(20, 30), fontsize=16)<0x0A># df_2018['Country Code'].value_counts().sort_index().plot(kind='bar', figsize=(20, 30), fontsize=16)<0x0A># df_2018['Country Code'].value_counts().sort_index().plot(kind='bar', figsize=(20, 30), fontsize=16)<0x0A># df_2018['Country Code'].value_counts().sort_index().plot(kind='bar', figsize=(20, 30), fontsize=16)<0x0A># df_2018['Country Code'].value_counts().sort_index().plot(kind='bar', figsize=(20, 30), fontsize=16)<0x0A># df_2018['Country Code'].value_counts().sort_index().plot(kind='bar', figsize=(20, 30), fontsize=16)<0x0A># df_2018['Country Code'].value_counts().sort_index().plot(kind='bar', figsize=(20, 30), fontsize=16)<0x0A># df_2018['Country Code'].value_counts().sort_index().plot(kind='bar', figsize=(20, 30), fontsize=16)<0x0A># df_2018['Country
[32m[1m{'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'nominal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31mgrupo_bairro = dados.query("CITY == 'B'")<0x0A><0x0A>dados_bairro = grupo_bairro.query("CITY == 'A'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'B'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'A'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'B'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'A'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'A'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'B'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'A'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'A'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'A'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'B'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'A'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'A'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'A'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'B'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'A'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'A'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'B'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'A'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'A'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'B'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'A'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'A'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'B'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'A'")<0x0A><0x0A>dados_bairro = dados_bairro.query("CITY == 'A'")<0x0A><0x0A>dados_bairro = dados_bairro
[32m[1m{'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 912, 'y': 889}, {'x': 1058, 'y': 2796}, {'x': 1058, 'y': 3048}, {'x': 1058, 'y': 3048}, {'x': 6940, 'y': 1155}, {'x': 912, 'y': 1798}, {'x': 4046, 'y': 889}, {'x': 1058, 'y': 1585}, {'x': 1168, 'y': 1692}, {'x': 1058, 'y': 1798}, {'x': 1168, 'y': 2796}, {'x': 912, 'y': 1155}]}}
[32m[1m{'encoding': {'y': {'field': ',<mark>bar</mark><x><type>temporal</type></x><y><type>quantitative</type><field>Ticket price in U.S. dollars</field></y>', 'type': 'quantitative'}, 'x': {'field': 'Ticket price in U.S. dollars', 'type': 'temporal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Treatment in UK States', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2006, 'y': 62.38}, {'x': 2007, 'y': 67.11}, {'x': 2008, 'y': 72.20}, {'x': 2009, 'y': 74.99}, {'x': 2010, 'y': 76.47}, {'x': 2011, 'y': 77.34}, {'x': 2012, 'y': 78.38}, {'x': 2013, 'y': 81.54}, {'x': 2014, 'y': 84.43}, {'x': 2015, 'y': 85.83}, {'x': 2016, 'y': 92.98}, {'x': 2017, 'y': 100.26}, {'x': 2018, 'y': 100.26}, {'x': 2019, 'y': 102.35}, {'x': 2020}]}}
[32m[1m{'encoding': {'y': {'field': 'Revenue in billions U.S. dollars', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'ordinal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Reserve in billion US dollars', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 15.51}, {'x': 'y', 'y': 25.71}, {'x': 'x', 'y': 15.11}, {'x': 'y', 'y': 13.51}, {'x': 'x', 'y': 13.51}, {'x': 'y', 'y': 15.11}, {'x': 'x', 'y': 15.11}, {'x': 'y', 'y': 15.11}, {'x': 'x', 'y': 15.11}, {'x': 'y', 'y': 15.11}]}}
[32m[1m{'encoding': {'y': {'field': 'Number of users in millions', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Number of cases in millions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2017, 'y': 67.2}, {'x': 2018, 'y': 72.38}, {'x': 2019, 'y': 76.29}, {'x': 2020*, 'y': 79.58}, {'x': 2021*, 'y': 82.33}, {'x': 2022*, 'y': 84.67}, {'x': 2023*, 'y': 86.68}, {'x': 2024*, 'y': 88.45}, {'x': 2025*, 'y': 90.04}]}}
[32m[1m{'encoding': {'y': {'field': 'Number of vehicles in thousands', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Number of workers in thousands', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2016, 'y': 48.4}, {'x': '2016': 'nominal', 'y': 95}, {'x': 2017, 'y': 95}, {'x': 2018, 'y': 87.8}, {'x': 2019, 'y': 84.7}, {'x': 2020, 'y': 77.8}, {'x': 2021, 'y': 87.3}]}}
[32m[1m{'encoding': {'y': {'field': 'Number of retail stores', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'nominal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Number of transactions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'X-Cold Spring', 'y': 94.01}, {'x': 'Y-Spring', 'y': 58.51}, {'x': 'X-Spring', 'y': 58.01}, {'x': 'X-Spring', 'y': 58.51}, {'x': 'Y-Spring', 'y': 58.51}, {'x': 'X-Spring', 'y': 58.51}, {'x': 'Y-Spring', 'y': 58.51}]}}
[32m[1m{'encoding': {'y': {'field': 'Outpatient Satisfaction', 'type': 'quantitative'}, 'x': {'field': 'Time (minutes) with Doctor in Outpatient Clinic Consultation', 'type': 'temporal'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Time (minutes) with Doctor in Outpatient Clinic Consultation \n (Independent Variable)': 'Outpatient Score 0 to 5)': '(Ulbert Score 0 to 5)': 'Independent Variable': 'Usage': 'quantitative': 'quantitative': 'auto': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quantitative': 'quant
[32m[1m{'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'nominal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31mgrupos = {'E': {'max_depth': [2, 5, 5, 5, 5.5],'min_samples_leaf': [1, 1, 1, 1, 1.5],'max_samples': [1, 5, 5, 5, 5.5],'min_samples_split': [1, 5, 5, 5, 5.5],'max_samples': [1, 5, 5, 5, 5.5],'max_samples': [1, 5, 5, 5, 5.5],'min_samples_split': [1, 5, 5, 5, 5.5],'max_samples': [1, 5, 5, 5, 5.5],'min_samples_leaf': [1, 5, 5, 5, 5.5],'min_samples_split': [1, 5, 5, 5, 5.5],'max_samples': [1, 5, 5, 5, 5.5],'min_samples_leaf': [1, 5, 5, 5, 5.5],'max_samples': [1, 5, 5, 5, 5.5],'min_samples_split': [1, 5, 5, 5, 5.5],'max_samples': [1, 5, 5, 5, 5.5],'min_samples_leaf': [1, 5, 5, 5, 5.5],'min_samples_split': [1, 5, 5, 5, 5.5],'max_samples': [1, 5, 5, 5, 5.5],'min_samples_leaf': [1, 5, 5, 5, 5.5],'min_samples_split': [1, 5, 5, 5, 5.5],'max_samples': [1, 5, 5, 5, 5.5],'min_samples_leaf': [1, 5, 5, 5, 5.5],'min_samples_split': [1, 5, 5, 5, 5.5],'min_samples_leaf': [1, 
[32m[1m{'encoding': {'y': {'field': 'Number of fatalities', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
[31m# Create a line plot for the number of deaths per year<0x0A># Set the figure size<0x0A>plt.figure(figsize=(15,15))<0x0A><0x0A># Create a bar plot of the number of deaths per year<0x0A>ax = sns.barplot(x=year_deaths.index, y=year_deaths.values, data=year_deaths)<0x0A><0x0A># Add labels to the x and y axes<0x0A>for label, x, y in zip(year_deaths.index, year_deaths.values, year_deaths.values):<0x0A>    label_str = '{0}'.format(label)<0x0A>    ax.annotate(label_str, (x, y), fontsize=14, color='black')<0x0A><0x0A># Add a title to the y and x axes<0x0A>ax.set_ylabel('Number of deaths')<0x0A>ax.set_xlabel('')<0x0A><0x0A># Add a title to the y and x axes<0x0A>ax.set_ylabel('Number of fatalities')<0x0A><0x0A># Create a legend<0x0A>for x, y in zip(year_deaths.index, year_deaths.values):<0x0A>    ax.annotate(str(label_str), (x, y), fontsize=14, color='black')<0x0A><0x0A># Display the graph<0x0A>plt.show()
[32m[1m{'encoding': {'y': {'field': 'Inflation rate compared to previous year', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
[31m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': 'Utilities and completed tonnesements', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2025, 'y': 2.5%}, {'x': 'y': 17.2%}, {'x': 'y': 15.8%}, {'x': 'y': 2.37%}, {'x': 'y': 0.81%, 'y': 17.2%}]}}
[32m[1m{'encoding': {'y': {'field': 'Unemployment rate', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': 'bremployment rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 1.79}, {'x': 'y', 'y': 1.79}, {'x': 'x', 'y': 1.79}, {'x': 'y', 'y': 1.79}, {'x': 'x', 'y': 1.79}, {'x': 'y', 'y': 1.79}, {'x': 'x', 'y': 3.56}, {'x': 'y', 'y': 3.56}]}}
[32m[1m{'encoding': {'y': {'field': 'Unemployment rate', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
[31m%%time<0x0A><0x0A># Plotting the graph<0x0A>fig, ax = plt.subplots(figsize=(15, 15))<0x0A>ax.plot(df_200.index, df_200['total_bill'], '-', color='blue', alpha=0.7)<0x0A>ax.set_ylabel('loan repayment rate')<0x0A>ax.set_ylabel('loan repayment rate')<0x0A>ax.set_xticks(range(0, 2000, 200))<0x0A>ax.set_xticklabels(df_200.index, rotation=45)<0x0A><0x0A># Adding axes labels<0x0A>ax.yaxis.set_major_formatter(ticker.FuncFormatter(lambda x, pos: '{:,.0f}%'.format(x.format(pos))))<0x0A><0x0A># Labels<0x0A>ax.xaxis.set_major_formatter(ticker.FuncFormatter(lambda x, pos: '{:,.0f}%'.format(x.format(pos))))<0x0A><0x0A># Labels<0x0A>ax.yaxis.set_major_formatter(ticker.FuncFormatter(lambda x, pos: '{:,.0f}%'.format(pos))<0x0A><0x0A># Labels<0x0A>ax.yaxis.set_major_formatter(ticker.FuncFormatter(lambda x, pos: {'size': 16}))<0x0A><0x0A># Labels<0x0A>ax.xaxis.set_minor_locator(mpl.ticker.MultipleLocator(10))<0x0A>ax.xaxis.set_minor_formatter(mpl.ticker.ScalarFormatter(useOffset=False))<0x0A><0x0A># Labels<0x0A>ax.xaxis.set_minor_locator(mpl.ticker.MultipleLocator(10))<0x0A>ax.xaxis.set_minor_formatter(mpl.ticker.ScalarFormatter(useOffset=False))<0x0A><0x0A># Labels<0x0A>ax.xaxis.set_minor_locator(mpl.ticker.MultipleLocator(10))<0x0A>ax.xaxis.set_minor_formatter(mpl.ticker.ScalarFormatter(useOffset=False))<0x0A><0x0A># Labels<0x0A>ax.xaxis.set_minor_locator(mpl.ticker.MultipleLocator(10))<0x0A>ax.xaxis.set_minor_formatter(mpl.ticker.ScalarFormatter(useOffset=False))<0x0A><0x0A># Labels<0x0A>ax.xaxis.set_minor_locator(mpl.ticker.MultipleLocator(10))<0x0A>ax.xaxis.tick_top()<0x0A><0x0A># Labels<0x0A>ax.xaxis.set_minor_locator
[32m[1m{'encoding': {'y': {'field': 'Quarterly revenue in million U.S. dollars', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'ordinal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': 'Quantity relation with the US dollars', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'x', 'y': 922}, {'x': 'y', 'y': 1384}, {'x': 'x', 'y': 199}, {'x': 'y', 'y': 278}, {'x': 'x', 'y': 278}, {'x': 'y', 'y': 922}, {'x': 'x', 'y': 1990}, {'x': 'y', 'y': 1384}, {'x': 'x', 'y': 1990}, {'x': 'y', 'y': 1990}, {'x': 'x', 'y': 2780}, {'x': 'y', 'y': 922}]}}
[32m[1m{'encoding': {'y': {'field': 'Average annual wages in euros', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': 'Average annual wage in each state', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2019, 'y': 8606}, {'x': 2019, 'y': 8606}, {'x': 2019, 'y': 9052}, {'x': 2019, 'y': 9052}, {'x': 2019, 'y': 13116, 'order': ['2019-01-01', 'y': 13116, 'order': 14310}]}}
[32m[1m{'encoding': {'y': {'field': 'Number of nominations', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'nominal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Number of nominations', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Redux', 'y': 35.03}, {'x': 'Blues', 'y': 8.01}, {'x': 'Greens', 'y': 12.0}, {'x': 'Redux', 'y': 8.01}, {'x': 'Blues', 'y': 7.01}, {'x': 'Navajo', 'y': 8.01}, {'x': 'Navajo', 'y': 6.01}, {'x': 'Somerset', 'y': 4.01}, {'x': 'Southern California', 'y': 6.01}]}}
[32m[1m{'encoding': {'y': {'field': 'Mileage (mpg)', 'type': 'quantitative'}, 'x': {'field': 'Weight (lbs.)', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Weight (lbs.)', 'type': 'quantitative'}, 'y': {'field': 'Milk (kgs.)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2000, 'y': 35.18}, {'x': 4000, 'y': 28.07}, {'x': 4000, 'y': 10.9}, {'x': 4000, 'y': 29.51}, {'x': 4000, 'y': 28.07}]}}
[32m[1m{'encoding': {'y': {'field': 'tip', 'type': 'quantitative'}, 'x': {'field': 'total_bill', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
{'mark': 'circle', 'encoding': {'x': {'field': 'total_bill', 'type': 'quantitative'}, 'y': {'field': 'tip', 'type': 'quantitative'}}, 'data': {'values': [{'x': 49, 'y': 9.99}, {'x': 39, 'y': 1.22}, {'x': 39, 'y': 7.55}, {'x': 19, 'y': 4.05}, {'x': 51, 'y': 9.99}, {'x': 39, 'y': 1.1}, {'x': 51, 'y': 4.05}, {'x': 24, 'y': 2.15}, {'x': 19, 'y': 4.05}, {'x': 24, 'y': 2.15}, {'x': 51, 'y': 10.24}, {'x': 24, 'y': 4.05}, {'x': 51, 'y': 7.55}, {'x': 24, 'y': 4.05}]}}
[32m[1m{'encoding': {'y': {'field': 'hopkins$wind', 'type': 'quantitative'}, 'x': {'field': 'hopkins$day', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
{'mark': 'circle', 'encoding': {'x': {'field': 'hopkins$day', 'type': 'quantitative'}, 'y': {'field': 'hopkins$wind', 'type': 'quantitative'}}, 'data': {'values': [{'x': 199.06, 'y': 4.5}, {'x': 207.95, 'y': 23.65}, {'x': 344.12, 'y': 4.09}, {'x': 206.04, 'y': 23.65}, {'x': 199.06, 'y': 23.65}, {'x': 199.06, 'y': 4.09}, {'x': 199.06, 'y': 23.65}]}}
[32m[1m{'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
[31mboxplot(data = df, x = 'price', y = 'price', col ='species', lty = 2, ltx = 0.5, lty = 0.5, lty = 0.5, ltx = 0.5, lty = 0.5, ltx = 0.5, lty = 0.5, ltx = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 0.5, lty = 
[32m[1m{'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2, 'y': 111.71}, {'x': 6, 'y': 85.63}, {'x': 12, 'y': 77.03}, {'x': 6, 'y': 102.74}, {'x': 11, 'y': 87.75}, {'x': 12, 'y': 87.75}, {'x': 6, 'y': 85.63}, {'x': 8, 'y': 112.85}, {'x': 11, 'y': 87.75}]}}
[32m[1m{'encoding': {'y': {'field': 'success', 'type': 'quantitative'}, 'x': {'field': 'length', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
{'mark': 'circle', 'encoding': {'x': {'field': 'length', 'type': 'quantitative'}, 'y': {'field':'success', 'type': 'quantitative'}}, 'data': {'values': [{'x': 12.0, 'y': 81.89}, {'x': 10.0, 'y': 92.09}, {'x': 7.0, 'y': 81.89}, {'x': 12.0, 'y': 60.55}, {'x': 13.43, 'y': 10.25}, {'x': 7.0, 'y': 10.25}, {'x': 13.43, 'y': 92.09}, {'x': 10.01, 'y': 81.89}, {'x': 13.43, 'y': 60.55}, {'x': 10.01, 'y': 15.75}, {'x': 13.43, 'y': 15.75}]}}
[32m[1m{'encoding': {'y': {'field': 'Temperature °C', 'type': 'quantitative'}, 'x': {'field': 'Time', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': 'Temperature °C', 'type': 'quantitative'}}, 'data': {'values': [{'x': 9am-10am, 'y': 2.77}, {'x': 11am-12pm, 'y': 8.46}, {'x': 16am-12pm, 'y': 10.06}, {'x': 16am-4pm, 'y': 16.18}, {'x': 16am-4pm, 'y': 10.06}, {'x': 11am-12pm, 'y': 12.32}, {'x': 16am-4pm, 'y': 10.06}, {'x': 11am-12pm, 'y': 18.5}, {'x': 16am-4pm, 'y': 16.18}]}}
[32m[1m{'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2017, 'y': 8.5}, {'x': 2018, 'y': 46.09}, {'x': 2019, 'y': 94.4}, {'x': 2020, 'y': 117.57}, {'x': 2021, 'y': 136.4}, {'x': 2022, 'y': 181.47}]}}
[32m[1m{'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'quantitative'}}, 'mark': 'line', 'data': {'url': '<url>'}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 0.01, 'y': 31.52}, {'x': 1.45, 'y': 167.65}, {'x': 3.79, 'y': 398.05}, {'x': 4.76, 'y': 148.05}, {'x': 4.26, 'y': 98.15}, {'x': 1.08, 'y': 198.65}, {'x': 3.45, 'y': 225.05}]}}
[32m[1m{'encoding': {'y': {'field': 'Average Monthly Temperature', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'ordinal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': 'Average Monthly Temperature', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'May', 'y': 16}, {'x': 'Feb', 'y': 5}, {'x': 'March', 'y': 9.85}, {'x': 'June', 'y': 20}, {'x': 'July', 'y': 22.85}, {'x': 'August', 'y': 22.85}, {'x': 'September', 'y': 20.12}, {'x': 'March', 'y': 19.58}, {'x': 'September', 'y': 19.58}, {'x': 'June', 'y': 19.58}]}}
[32m[1m{'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'quantitative'}}, 'mark': 'line', 'data': {'url': '<url>'}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 0.2, 'y': 50.89}, {'x': 3.65, 'y': 60.99}, {'x': 5.69, 'y': 90.02}, {'x': 7.21, 'y': 30.35}, {'x': 4.89, 'y': 90.02}, {'x': 9.32, 'y': 59.85}, {'x': 4.89, 'y': 79.89}, {'x': 9.33, 'y': 70.99}, {'x': 5.21, 'y': 59.85}, {'x': 4.96, 'y': 70.99}, {'x': 7.72, 'y': 59.85}, {'x': 5.95, 'y': 70.95}, {'x': 5.95, 'y': 59.85}, {'x': 7.62, 'y': 70.95}, {'x': 1.95, 'y': 59.85}]}}
[32m[1m{'encoding': {'y': {'field': '', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'quantitative'}}, 'mark': 'circle', 'data': {'url': '<url>'}}
{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3.06, 'y': 4.4}, {'x': 4.06, 'y': 7.63}, {'x': 6.88, 'y': 6.83}, {'x': 4.9, 'y': 4.21}, {'x': 4.96, 'y': 5.72}, {'x': 6.88, 'y': 4.8}, {'x': 4.96, 'y': 5.95}, {'x': 4.96, 'y': 3.15}, {'x': 7.04, 'y': 3.67}, {'x': 4.96, 'y': 3.15}, {'x': 4.96, 'y': 4.4}, {'x': 4.96, 'y': 6.83}]}}
[32m[1m{'encoding': {'y': {'field': 'Inhabitants in millions', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
[31m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': 'Wealthsma in millions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2009, 'y': 10.52}, {'x': 'y': 13.52}, {'x': 2010, 'y': 10.62}, {'x': 2011, 'y': 10.91}, {'x': 2012, 'y': 11.21}, {'x': 2013, 'y': 11.52}, {'x': 2014, 'y': 11.83}, {'x': 2015, 'y': 12.11}, {'x': 2016, 'y': 12.48}, {'x': 2017, 'y': 12.82}, {'x': 2018, 'y': 13.16}, {'x': 2019, 'y': 13.52}]}}
[32m[1m{'encoding': {'y': {'field': 'Life expectancy in years', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'nominal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Europe (total)', 'type': 'nominal'}, 'y': {'field': 'Life expectancy in years', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Nominal', 'y': 75.01}, {'x': 'Nominal', 'y': 82.01}, {'x': 'Nominal', 'y': 79.11}, {'x': 'Nominal', 'y': 84.01}, {'x': 'Nominal', 'y': 79.11}, {'x': 'Nominal', 'y': 84.01}, {'x': 'Nominal', 'y': 79.11}]}}
[32m[1m{'encoding': {'y': {'field': 'Percentage of votes', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'nominal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Revenage of crime', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Black', 'y': 88%, 'data': 'Red', 'values': 'BTC', 'values': 'VOTY', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN', 'values': 'ZN
[32m[1m{'encoding': {'y': {'field': 'Average daily rate in U.S. dollars', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'temporal'}}, 'mark': 'line', 'data': {'url': '<url>'}}
{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': 'Average daily rates in this state', 'type': 'quantitative'}}, 'data': {'values': [{'x': 167.9, 'y': 168.59}, {'x': 168.93, 'y': 169.32}, {'x': 169.36, 'y': 169.32}, {'x': 168.63, 'y': 169.32}, {'x': 169.91, 'y': 160.5}]}}
[32m[1m{'encoding': {'y': {'field': 'Gross profit margin', 'type': 'quantitative'}, 'x': {'field': '', 'type': 'nominal'}}, 'mark': 'bar', 'data': {'url': '<url>'}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Green profit margin', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red Cedar', 'y': 60%}, {'x': 'Blue Cedar', 'y': 58%}, {'x': 'Greens', 'y': 55%}, {'x': 'Red Cedar', 'y': 60%}, {'x': 'Greens', 'y': 55%}, {'x': 'Red Cedar', 'y': 60%}, {'x': 'Greens', 'y': 55%}, {'x': 'Red Cedar', 'y': 60%}, {'x': 'Greens', 'y': 55%}, {'x': 'Red Cedar', 'y': 60%}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------