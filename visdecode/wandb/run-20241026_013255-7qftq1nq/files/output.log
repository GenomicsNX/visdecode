
[36m[1mEpoch :[39m[22m 0 [32m[1m | Loss :[39m[22m 2.7558391094207764
















 95%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–‹      | 19/20 [01:30<00:06,  6.20s/it]
[35m|[39m JSON to Vega conversion error rate: [31m100.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
[31m# Create a scatter plot of Mode Age vs Alcohol Consumption<0x0A>sns.set(style="ticks")<0x0A><0x0A># Set up the axes<0x0A>f, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A># Draw a scatter plot of Mode Age vs Alcohol Consumption<0x0A>sns.stripplot(x="Mode_Age", y="Alcohol_Consumption", data=df, jitter=True, alpha=0.7)<0x0A><0x0A># Add axis labels<0x0A>plt.xlabel("Mode_Age")<0x0A>plt.ylabel("Alcohol Consumption")<0x0A><0x0A># Add axis limits<0x0A>plt.xlim(0, 6)<0x0A>plt.ylim(0, 4000)<0x0A><0x0A># Add axis legend<0x0A>plt.legend()<0x0A><0x0A># Show the plot<0x0A>plt.show()
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:37<00:00,  4.89s/it]
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)


















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:41<00:00,  5.08s/it]
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
[31m# Plot the data<0x0A>sns.set(context="notebook", style="ticks", font_scale=1.5)<0x0A><0x0A># Plot the data<0x0A>sns.set(style="ticks", color_codes=True)<0x0A><0x0A># Plot the data<0x0A>sns.set(context="notebook", style="ticks", font_scale=1.5)<0x0A><0x0A># Plot the data<0x0A>sns.set(context="notebook", style="ticks", font_scale=1.5)<0x0A><0x0A># Plot the data<0x0A>sns.set(style="ticks", color_codes=True)<0x0A><0x0A># Plot the data<0x0A>sns.set(context="notebook", style="ticks", font_scale=1.5)<0x0A><0x0A># Plot the data<0x0A>sns.set(context="notebook", style="ticks", font_scale=1.5)<0x0A><0x0A># Plot the data<0x0A>sns.set(context="notebook", style="ticks", font_scale=1.5)<0x0A><0x0A># Plot the data<0x0A>sns.set(context="notebook", style="ticks", font_scale=1.5)<0x0A><0x0A># Plot the data<0x0A>sns.set(context="notebook", style="ticks", font_scale=1.5)<0x0A><0x0A># Plot the data<0x0A>sns.set(context="notebook", style="ticks", font_scale=1.5)<0x0A><0x0A># Plot the data<0x0A>sns.set(context="notebook", style="ticks", font_scale=1.5)<0x0A><0x0A># Plot the data<0x0A>sns.set(context="notebook", style="ticks", font_scale=1.5)<0x0A><0x0A># Plot the data<0x0A>sns.set(context="notebook", style="ticks", font
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
[31m# 1. <0x0A># 2. <0x0A># 3. <0x0A># 4. <0x0A># 5. <0x0A># 6. <0x0A># 7. <0x0A># 8. <0x0A># 9. <0x0A># 10. <0x0A># 11. <0x0A># 12. <0x0A># 13. <0x0A># 14. <0x0A># 15. <0x0A># 16. <0x0A># 17. <0x0A># 18. <0x0A># 19. <0x0A># 20. <0x0A># 21. <0x0A># 22. <0x0A># 23. <0x0A># 24. <0x0A># 25. <0x0A># 26. <0x0A># 27. <0x0A># 28. <0x0A># 29. <0x0A># 30. <0x0A># 31. <0x0A># 32. <0x0A># 33. <0x0A># 34. <0x0A># 35. <0x0A># 36. <0x0A># 37. <0x0A># 38. <0x0A># 39. <0x0A># 40. <0x0A># 50. <0x0A># 60. <0x0A># 70. <0x0A># 80. <0x0A># 90. <0x0A># 10. <0x0A># 11. <0x0A># 10. <0x0A># 11. <0x0A># 10. <0x0A># 11. <0x0A># 12. <0x0A># 13. <0x0A># 14. <0x0A># 15. <0x0A># 11. <0x0A># 12. <0x0A># 11. <0x0A># 
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
[31m# Plotting the graph<0x0A>sns.set(style="ticks")<0x0A><0x0A># Compute the correlation matrix<0x0A>corr = df.corr()<0x0A><0x0A># Generate a mask for the upper triangle<0x0A>mask = np.zeros_like(corr, dtype=np.bool)<0x0A>mask[np.triu_indices_from(mask)] = True<0x0A><0x0A># Set up the matplotlib figure<0x0A>f, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A># Generate a custom diverging colormap<0x0A>cmap = sns.diverging_palette(220, 10, as_cmap=True)<0x0A><0x0A># Draw the heatmap with the mask and correct aspect ratio<0x0A>sns.heatmap(corr, mask=mask, cmap=cmap, vmax=155, center=0,<0x0A>            square=True, linewidths=.5, cbar_kws={"shrink":.5})
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
[31m# Create a bar plot of the cost of the salaries by experience level<0x0A>sns.set(context = 'notebook', style = 'ticks', <0x0A>        rc = {'x': {'field': 'Cost', 'type': 'temporal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2016', 'y': 8.3}, {'x': '2017', 'y': 8.3}, {'x': '2018', 'y': 8.3}, {'x': '2019', 'y': 8.3}, {'x': '2011', 'y': 8.3}, {'x': '2010', 'y': 8.3}, {'x': '2011', 'y': 8.3}, {'x': '2012', 'y': 8.3}, {'x': '2013', 'y': 8.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
[31m# ggplot(df, aes(x='Height', y='Height'))<0x0A>ggplot(df, aes(x='Height', y='Height')) + geom_point()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
[31m%matplotlib inline<0x0A><0x0A>import matplotlib.pyplot as plt<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A>ax.scatter(x, y, s=100)<0x0A><0x0A>ax.set_xlim(0, 1000)<0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
[31m# Plot the graph<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
[31m# Plot the Co2 Emissions<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A># Compute the co2 emissions<0x0A>co2_co2 = pd.DataFrame(<0x0A>    [<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>        (<0x0A>
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
[31msns.set(context="paper", style="ticks", palette="muted")<0x0A><0x0A>sns.relplot(x="Time", y="Value", data=df, kind="line", height=10, aspect=1.5)<0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
[31m#scatterplot<0x0A>scatterplot(data=df, x="Predictive Accuracy Of Seasonal Demand Forecasting Models", y="Heterogeneity In Clinical Trial Populations By Gender And Age",<0x0A>                  xlim=(0,800), ylim=(0,65),<0x0A>                  xlab="Predictive Accuracy Of Seasonal Demand Forecasting Models",<0x0A>                  ylab="Heterogeneity In Clinical Trial Populations By Gender And Age",<0x0A>                  main="Heterogeneity In Clinical Trial Populations By Gender And Age")
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
[31m# Plot the Distance vs Probability Density Function O/A for Population Survey<0x0A><0x0A>sns.set(context="notebook", style="ticks", font_scale=1.5)<0x0A><0x0A>sns.relplot(x="Distance", y="Probability Density Function O/A for Population Survey", data=df_survey_population_population_survey, kind="line", height=8, aspect=1.5)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
[31mempirical_value_fitted(df, 'GDP', 'Growth Rate', 'GDP', 'GDP')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
[31mimport matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>sns.set(style="ticks", color_codes=True)<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
[31mpoverty_barplot(data=df, x='Poverty Rate', y='Poverty Rate', <0x0A>                   x_label='Poverty Rate', y_label='Poverty Rate')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
[31m# Plot the results<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A># Plot the results<0x0A>ax.plot(x, y, lw=2, color='tab:blue', alpha=0.7)<0x0A>ax.set_xlabel('Impact Of Temperature Variability On Crop Yield Statistics')<0x0A>ax.set_ylabel('Dtrended Analysis Of Yearly Weather In Normalies In Temperature Data')<0x0A><0x0A># Plot the results<0x0A>ax.spines['right'].set_visible(False)<0x0A>ax.spines['top'].set_visible(False)<0x0A>ax.spines['bottom'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A>ax.spines['left'].set_visible(False)<0x0A><0x0A># Add a legend<0x0A>ax.legend()<0x0A><0x0A># Add a title<0x0A>ax.set_title('')<0x0A><0x0A># Add a legend<0x0A>ax.legend()<0x0A><0x0A># Add a legend<0x0A>ax.legend()<0x0A><0x0A># Add a legend<0x0A>ax.legend()<0x0A><0x0A># Add a legend<0x0A>ax.legend()<0x0A><0x0A># Add a legend<0x0A>ax.legend()<0x0A><0x0A># Add a legend<0x0A>ax.legend()<0x0A><0x0A># Add a legend<0x0A>ax.legend()<0x0A><0x0A># Add a legend<0x0A>ax.legend()<0x0A><0x0A># Add a legend<0x0A>ax.legend()<0x0A><0x0A># Add a legend<0x0A>ax.legend()<0x0A><0x0A># Add a legend<0x0A>ax.legend()<0x0A><0x0A># Add a legend<0x0A>ax.legend()<0x0A><0x0A># Add a legend<0x0A>ax.legend()<0x0A><0x0A># Add a legend<0x0A>ax.legend()<0x0A><0x0A># Add a legend<0x0A>ax.legend()<0x0A><0x0A># Add a legend<0x0A>ax.legend()<0x0A><0x0A># Add a legend<0x0A>ax.
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
[31mfig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>ax.plot(x,y)<0x0A>ax.set_ylim(0,5000)<0x0A><0x0A>ax.set_xlim(1,1840)<0x0A><0x0A>ax.set_ylim(0,5000)<0x0A><0x0A>ax.set_xticks(x)<0x0A>ax.set_xticklabels(x)<0x0A><0x0A>ax.set_yticks(y)<0x0A><0x0A>ax.set_xlim(1,1840)<0x0A>ax.set_ylim(0,5000)<0x0A><0x0A>ax.set_xticks(x)<0x0A>ax.set_yticks(y)<0x0A><0x0A>ax.set_xlim(1,1840)<0x0A><0x0A>ax.set_ylim(0,5000)<0x0A><0x0A>ax.set_xlim(1,1840)<0x0A><0x0A>ax.set_ylim(0,5000)<0x0A><0x0A>ax.set_xlim(1,1840)<0x0A><0x0A>ax.set_ylim(0,5000)<0x0A><0x0A>ax.set_xlim(1,1840)<0x0A><0x0A>ax.set_ylim(0,5000)<0x0A><0x0A>ax.set_xlim(1,1840)<0x0A><0x0A>ax.set_ylim(0,5000)<0x0A><0x0A>ax.set_xlim(1,1840)<0x0A><0x0A>ax.set_ylim(0,5000)<0x0A><0x0A>ax.set_xlim(1,1840)<0x0A><0x0A>ax.set_ylim(0,5000)<0x0A><0x0A>ax.set_xlim
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
[31m# Plot the graph<0x0A>sns.set(style="ticks")<0x0A>g = sns.relplot(x="Literacy Rate", y="Epoch Volume", data=df, height=7, aspect=1.5,<0x0A>                   palette="muted")<0x0A>g.set(xlim=(0,5000))<0x0A>g.set(ylim=(0,620))<0x0A>g.set(xlabel="Literacy Rate", ylabel="Epoch Volume")<0x0A>g.set(yticks=[0,100,200,300,400,500,600,700,800,900,1000,1100,1200,1300,1400,1500,1600,1700,1800,1900,2000,2100,2200,2300,2400,2500,2600,2700,2800,2900,3000,3100,3200,3300,3400,3500,3600,3700,3800,3900,4000,4100,4200,4300,4400,4500,4600,4800,4900,5000,5100,5200,5300,5400,5500,5600,5700,5800,5
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mY-TYPE[39m[22m : 0.0 [35m|[39m [36m[1mX-NAME[39m[22m : nan [35m|[39m [36m[1mY-NAME[39m[22m : nan [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m JSON to Vega conversion error rate: [31m60.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.25 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.94 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2003', 'y': 9.5}, {'x': '2004', 'y': 8.31}, {'x': '2005', 'y': 6.86}, {'x': '2006', 'y': 6.59}, {'x': '2007', 'y': 6.71}, {'x': '2008', 'y': 6.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of land capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 10.0}, {'x': '2010', 'y': 10.0}, {'x': '2011', 'y': 10.0}, {'x': '2012', 'y': 10.0}, {'x': '2013', 'y': 10.0}, {'x': '2014', 'y': 10.0}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of meetings(average for affected firms)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 1.3}, {'x': '2010', 'y': 1.5}]}}
[31mYear_plot(2014_2015_2016_2017_2018_2019_2010_2011_2012_2013_2014_2015_2015_2016_2017_2018_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_2019_
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 97}, {'x': '2010', 'y': 97}, {'x': '2011', 'y': 97}, {'x': '2012', 'y': 97}, {'x': '2013', 'y': 97}]}}
[31mYear_Count_plot(df, 'Number of days', 'Year', 'Number of days required to get electricity in Kiribati')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children under 5 taken to a health provider', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 37.0}, {'x': '2003', 'y': 33.0}, {'x': '2008', 'y': 45.4}, {'x': '2011', 'y': 39.7}, {'x': '2013', 'y': 34.5}]}}
[31mYear_group_plot(Total_Profit_Year, Total_Profit_Year, 'percentage', '% of children under 5 lives in poverty', 'Year', 'Percentage of infants who were provided with ART treatment in Nigeria', 'Percentage of children under 5 living to death provided', 'Percentage of infant who were provided with ART treatment in Nigeria', 'Percentage of children under 5 living to death provided', 'Percentage of infant who were provided with ART treatment in Nigeria', 'Percentage of children under 5 living to death provided', 'Percentage of children under 5 living to death provided', 'Percentage of children under 5 living to death provided', 'Percentage of children under 5 living to death provided', 'Percentage of children under 5 living to death provided', 'Percentage of children under 5 living to death provided', 'Percentage of children under 5 living to death provided', 'Percentage of children under 5 living to death provided', 'Percentage of children under 5 living to death provided', 'Percentage of children under 5 living to death provided', 'Percentage of children under 5 living to death provided', 'Percentage of children under 5 living to death provided', 'Percentage of children under 5 living to death provided', 'Percentage of children under 5 living to death provided', 'Percentage of children under 5 living to death provided', 'Percentage of children under 5 living to death provided', 'Percentage of children under 5 living to death provided',
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of firms', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 13.8}, {'x': '2013', 'y': 20.4}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of firms', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2012', 'y': 10.0}, {'x': '2013', 'y': 10.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Electric power consumption (kWh per capita)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 387.04}, {'x': '2003', 'y': 443.07}, {'x': '2004', 'y': 493.62}, {'x': '2005', 'y': 579.92}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Electric power consumption (kWh per capita)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2001', 'y': 100.0}, {'x': '2002', 'y': 100.0}, {'x': '2003', 'y': 100.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of computers, communications and other services (% of commerical service exports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 18.03}, {'x': '2008', 'y': 14.91}, {'x': '2009', 'y': 30.6}, {'x': '2010', 'y': 31.83}, {'x': '2011', 'y': 38.69}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications and computers, communications and other services (% of commercial service exports of Faeroe Islands)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 2009}, {'x': '2010', 'y': 2010}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Number of tractors', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'American Samoa', 'y': 11}, {'x': 'Argentina', 'y': 256100}, {'x': 'Armenia', 'y': 13350}, {'x': 'Austria', 'y': 356018}, {'x': 'Azerbaijan', 'y': 28675}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'quantitative'}}, 'y': {'field': 'Number of farmers', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Country', 'y': 2.0}, {'x': 'Country', 'y': 2.0}, {'x': 'Country', 'y': 2.0}, {'x': 'Country', 'y': 2.0}, {'x': 'Country', 'y': 2.0}, {'x': 'Country', 'y': 2.0}, {'x': 'Country', 'y': 2.0}, {'x': 'Country', 'y': 2.0}, {'x': 'Country', 'y': 2.0}, {'x': 'Country', 'y': 2.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Amount of energy used(kg of oil equivalent per capita)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 233.47}, {'x': '2004', 'y': 801.28}, {'x': '2005', 'y': 700.93}, {'x': '2006', 'y': 864.86}, {'x': '2007', 'y': 856.73}]}}
[31mYear_group_plot(df, 'Amount of energy used (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of equivalent (of (1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 72}, {'x': '2007', 'y': 72}, {'x': '2008', 'y': 72}, {'x': '2009', 'y': 72}, {'x': '2010', 'y': 72}, {'x': '2011', 'y': 72}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2016', 'y': 10.0}, {'x': '2017', 'y': 10.0}, {'x': '2018', 'y': 10.0}, {'x': '2019', 'y': 10.0}, {'x': '2010', 'y': 10.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Savings (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 58210441.85}, {'x': '2005', 'y': 53593973.65}, {'x': '2010', 'y': 82907873.35}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Savings (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 600000}, {'x': '2009', 'y': 600000}, {'x': '2009', 'y': 600000}, {'x': '2009', 'y': 600000}, {'x': '2009', 'y': 600000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Land (in sq. km)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1987', 'y': 352270}, {'x': '1988', 'y': 352500}, {'x': '1989', 'y': 354700}, {'x': '1990', 'y': 354550}, {'x': '1991', 'y': 357960}]}}
[31mBolivia_year_2010 = '2010'<0x0A><0x0A>ggplot(bolivia_year_2010, aes(x='Year', y='Land (in no year)', fill='Year')) +\<0x0A>    geom_bar(stat='identity', position='dodge', position_jitter=.1, data=bolivia_year_2010, aes(y='Land (in no year)', x='Year', fill='Year')) +\<0x0A>    geom_hline(yintercept=0.05, color='black', linetype='quantitative') +\<0x0A>    geom_vline(xintercept=0.05, color='black', linetype='quantitative') +\<0x0A>    geom_vline(xintercept=0.05, color='black', linetype='quantitative') +\<0x0A>    geom_vline(xintercept=0.05, color='black', linetype='quantitative') +\<0x0A>    geom_vline(xintercept=0.05, color='black', linetype='quantitative') +\<0x0A>    geom_vline(xintercept=0.05, color='black', linetype='quantitative') +\<0x0A>    geom_vline(xintercept=0.05, color='black', linetype='quantitative') +\<0x0A>    geom_vline(xintercept=0.05, color='black', linetype='quantitative') +\<0x0A>    geom_vline(xintercept=0.05, color='black', line
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'India', 'y': 2.23}, {'x': 'Indonesia', 'y': 1.14}, {'x': 'Israel', 'y': 0.01}, {'x': 'Jamaica', 'y': 0.5}, {'x': 'Japan', 'y': 0.0}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Cost (os % of GNI)', 'y': 0.03}, {'x': 'Cost (os % of GNI)', 'y': 0.03}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Average number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Russian Federation', 'y': 8.5}, {'x': 'Serbia', 'y': 9.8}, {'x': 'Slovak Republic', 'y': 18.9}, {'x': 'Slovenia', 'y': 9.6}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'quantitative'}}, 'y': {'field': 'Average number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Average number of days', 'y': 10.0}, {'x': 'Average number of days', 'y': 10.0}, {'x': 'Average number of days', 'y': 10.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Prive value of exports (constant LCU)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Indonesia', 'y': 42583037008862.3}, {'x': 'Iran', 'y': 50148144989168.6}, {'x': 'Ireland', 'y': 3959173052.56}, {'x': 'Italy', 'y': 44944861361.28}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total reserves (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1977', 'y': 12105786286.2}, {'x': '1978', 'y': 11977228956.28}, {'x': '1979', 'y': 15209640118.21}, {'x': '1980', 'y': 10222909028.22}, {'x': '1981', 'y': 1605412699.57}, {'x': '1982', 'y': 5701206773.52}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total reserves (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1.0}, {'x': '1991', 'y': 1.0}, {'x': '1992', 'y': 1.0}, {'x': '1993', 'y': 1.0}, {'x': '1994', 'y': 1.0}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed males(% of male labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1994', 'y': 16.07}, {'x': '1996', 'y': 20.72}, {'x': '1997', 'y': 21.63}, {'x': '1998', 'y': 24.35}, {'x': '1999', 'y': 22.57}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed male % of males (age 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 10.0}, {'x': '1991', 'y': 10.0}, {'x': '1992', 'y': 10.0}, {'x': '1993', 'y': 10.0}, {'x': '1994', 'y': 10.0}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Mean income or consumption per capita(2011 PPP $ per day)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 18.63}, {'x': '2012', 'y': 23.03}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Mean income or consumption per capita (Q1/Q4/Q5/Q7/Q7)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 10.0}, {'x': '1991', 'y': 10.0}, {'x': '1992', 'y': 10.0}, {'x': '1993', 'y': 10.0}, {'x': '1994', 'y': 10.0}, {'x': '1995', 'y': 10.0}, {'x': '1996', 'y': 10.0}, {'x': '1997', 'y': 10.0}, {'x': '1998', 'y': 10.0}, {'x': '1999', 'y': 10.0}, {'x': '1999', 'y': 10.0}, {'x': '1999', 'y': 10.0}, {'x': '1999
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Savings (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 570576439.03}, {'x': '2005', 'y': 264160696.95}, {'x': '2010', 'y': 364586320.06}]}}
[31mYear_group_plot(df, 'Year', 'Savvy', 'Savvy', 'current US$', 'correlation', 'bar', 'correlation', 'type', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative', 'quantitative',
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Value added (current Local Currency Unit)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1974', 'y': 1347000000}, {'x': '1975', 'y': 1528000000}, {'x': '1976', 'y': 1788000000}, {'x': '1977', 'y': 3066000000}, {'x': '1978', 'y': 4195000000}, {'x': '1979', 'y': 4601000000}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Value added (current Local Currency (Jah)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 1.00}, {'x': '1999', 'y': 1.00}, {'x': '1999', 'y': 1.00}, {'x': '1999', 'y': 1.00}, {'x': '1999', 'y': 1.00}, {'x': '1999', 'y': 1.00}, {'x': '1999', 'y': 1.00}, {'x': '1999', 'y': 1.00}, {'x': '1999', 'y': 1.00}, {'x': '1999', 'y': 1.00}, {'x': '1999', 'y': 1.00}, {'x': '1999', 'y': 1.00}, {'x': '1999', 'y': 1.00}]
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.25 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.94 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------





















model.safetensors: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 1.13G/1.13G [00:41<00:00, 27.0MB/s]
[36m[1mEpoch :[39m[22m 1 [32m[1m | Loss :[39m[22m 2.499070167541504

















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:37<00:00,  4.89s/it]
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
[35m|[39m JSON to Vega conversion error rate: [31m80.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.1 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
[31m# Create a scatter plot of Mode Age versus Alcohol Consumption<0x0A>sns.set(style="whitegrid")<0x0A><0x0A># Set up the graph<0x0A>plt.figure(figsize=(10,10))<0x0A><0x0A># Add a legend<0x0A>plt.axvline(x=mode_age, color="black", linewidth=1)<0x0A><0x0A># Add a title<0x0A>plt.ylabel("Alcohol Consumption")<0x0A><0x0A># Add a grid<0x0A>plt.grid(color="black", linestyle="-", linewidth=0.5)<0x0A><0x0A># Add a legend<0x0A>plt.axvline(x=mode_age, color="black", linewidth=0.5)<0x0A><0x0A># Add a legend<0x0A>plt.axhline(y=alcohol_consumption, color="black", linewidth=0.5)<0x0A><0x0A># Add a legend<0x0A>plt.axhline(y=alcohol_consumption_std, color="black", linewidth=0.5)<0x0A><0x0A># Add a grid<0x0A>plt.grid(color="black", linestyle="-", linewidth=0.5)<0x0A><0x0A># Add a legend<0x0A>plt.axhline(y=alcohol_consumption_std, color="black", linewidth=0.5)<0x0A><0x0A># Add a legend<0x0A>plt.axhline(y=alcohol_consumption_std, color="black", linewidth=0.5)<0x0A><0x0A># Add a legend<0x0A>plt.axhline(y=alcohol_consumption_std, color="black", linewidth=0.5)<0x0A><0x0A># Add a legend<0x0A>plt.axhline(y=alcohol_consumption_std, color="black", linewidth=0
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Apple', 'y': 6600.0}, {'x': 'Dog', 'y': 6600.0}, {'x': 'Malic', 'y': 4000.0}, {'x': 'Malic', 'y': 4000.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
[31m# Plot the data<0x0A>sns.set(context = 'notebook', style = 'ticks', <0x0A>        encoding = {'x': {'field': 'Dog', 'type': 'temporal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'USA', 'y': 5, 'data': 5, 'y': 5, 'data': 5, 'y': 5, 'y': 5, 'data': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, 'y': 5, '
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>sns.set(style="ticks", color_codes=True)<0x0A><0x0A># Load the example dataset<0x0A>dataset = pd.read_csv('dataset.csv', header=None, names=['Name', 'Gender', 'Age', 'Survived', 'Income', 'Education', 'Income', 'Education', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived',
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'temporal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'USA', 'y': 150.0}, {'x': 'USA', 'y': 150.0}, {'x': 'USA', 'y': 150.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'temporal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Apple', 'y': 8.3}, {'x': 'Dog', 'y': 8.3}, {'x': 'Nike', 'y': 12.1}, {'x': 'Red', 'y': 12.1}, {'x': 'USA', 'y': 12.1}, {'x': 'USA', 'y': 12.1}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
[31mheights.scatter('Height')
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
[31m%matplotlib inline<0x0A><0x0A>import matplotlib.pyplot as plt<0x0A>import numpy as np<0x0A><0x0A>fig = plt.figure(figsize=(10,10))<0x0A>ax = fig.add_subplot(111)<0x0A>ax.scatter(x, y, s=100)<0x0A>ax.set_xlim(0, 1000)<0x0A>ax.set_ylim(0, 400)<0x0A>ax.set_xlabel('')<0x0A>ax.set_ylabel('')<0x0A>ax.set_xlim(0, 1000)<0x0A>ax.set_ylim(0, 400)<0x0A>ax.set_xticks(np.arange(0, 1000, 100))<0x0A>ax.set_yticks(np.arange(0, 400, 100))<0x0A>ax.set_yticklabels(np.arange(0, 400, 100))<0x0A>ax.set_xlim(0, 1000)<0x0A>ax.set_ylim(0, 400)<0x0A>ax.set_xticklabels(np.arange(0, 1000, 100))<0x0A>ax.set_yticklabels(np.arange(0, 400, 100))<0x0A>ax.set_yticklabels(np.arange(0, 400, 100))<0x0A>ax.set_yticklabels(np.arange(0, 400, 100))<0x0A>ax.set_yticklabels(np.arange(0, 400, 100))<0x0A>ax.
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'quantitative'}}, 'y': {'field': 'Simulation Results Of Variable Interest Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1915', 'y': 100.0}, {'x': '1916', 'y': 100.0}, {'x': '1917', 'y': 100.0}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'y': 80.0}, {'x': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'y': 80.0}, {'x': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'y': 80.0}, {'x': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'y': 80.0}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
[31m# Plotting the time series<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>sns.despine(bottom=True, left=True)<0x0A><0x0A>sns.despine(top=True)<0x0A><0x0A>sns.despine(bottom=True)<0x0A><0x0A>sns.despine(left=True)<0x0A><0x0A>sns.despine(right=True)<0x0A><0x0A>sns.despine(bottom=True)<0x0A><0x0A>sns.despine(left=True)<0x0A><0x0A>sns.despine(right=True)<0x0A><0x0A>sns.despine(left=True)<0x0A><0x0A>sns.despine(left=True)<0x0A><0x0A>sns.despine(right=True)<0x0A><0x0A>sns.despine(left=True)<0x0A><0x0A>sns.despine(left=True)<0x0A><0x0A>sns.despine(left=True)<0x0A><0x0A>sns.despine(left=True)<0x0A><0x0A>sns.despine(left=True)<0x0A><0x0A>sns.despine(left=True)<0x0A><0x0A>sns.despine(left=True)<0x0A><0x0A>sns.despine(left=True)<0x0A><0x0A>sns.despine(left=True)<0x0A><0x0A>sns.despine(left=True)<0x0A><0x0A>sns.despine(left=True)<0x0A><0x0A>sns.despine(left=True)<0x0A><0x0A>sns.despine(left=True)<0x0A><0x0A>sns.despine(left=True)<0x0A><0x0A>sns.despine(left=True)<0x0A><0x0A>sns.despine(left=True)<0x0A><0x0A>s
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'y': 62.6}, {'x': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'y': 62.6}, {'x': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'y': 62.6}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Density Function OYA Age Distribution in Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1810', 'y': 500.0}, {'x': '1811', 'y': 500.0}, {'x': '1812', 'y': 500.0}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 69.9}, {'x': '2008', 'y': 69.9}, {'x': '2009', 'y': 69.9}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Mental Health', 'type': 'quantitative'}}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1920', 'y': 2800}, {'x': '1921', 'y': 2800}, {'x': '1922', 'y': 2800}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
[31mpoverty_barplot(data=df, x='Poverty Rate', y='Poverty Rate', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data_type='bar', <0x0A>           data
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1802', 'y': 4.3}, {'x': '1804', 'y': 4.3}, {'x': '1805', 'y': 5.3}, {'x': '1806', 'y': 5.3}, {'x': '1807', 'y': 5.3}, {'x': '1808', 'y': 5.3}, {'x': '1809', 'y': 5.3}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
[31m%matplotlib inline<0x0A><0x0A>import matplotlib.pyplot as plt<0x0A>import numpy as np<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A>x = np.arange(1825, 1840)<0x0A>y = np.array([343, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 20
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
[31m# Plot the graph<0x0A>sns.set(style="ticks")<0x0A>sns.lmplot(x="Literacy Rate", y="Epoch Volume", data=df, fit_reg=False, height=7, aspect=1.5, <0x0A>          scatter_kws={'alpha': 0.7})
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.67 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.1 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.98 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------




















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:23<00:00,  4.19s/it]
[35m|[39m JSON to Vega conversion error rate: [31m15.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.95 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.91 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2003', 'y': 9.5}, {'x': '2004', 'y': 8.31}, {'x': '2005', 'y': 6.86}, {'x': '2006', 'y': 6.59}, {'x': '2007', 'y': 6.71}, {'x': '2008', 'y': 6.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2001', 'y': 1.0}, {'x': '2002', 'y': 1.0}, {'x': '2003', 'y': 1.0}, {'x': '2004', 'y': 1.0}, {'x': '2005', 'y': 1.0}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of meetings(average for affected firms)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 1.3}, {'x': '2010', 'y': 1.5}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of meetings/venues for officials firms', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1.1}, {'x': '1991', 'y': 1.1}, {'x': '1992', 'y': 1.1}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 97}, {'x': '2010', 'y': 97}, {'x': '2011', 'y': 97}, {'x': '2012', 'y': 97}, {'x': '2013', 'y': 97}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2000', 'y': 80.0}, {'x': '2001', 'y': 80.0}, {'x': '2002', 'y': 80.0}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children under 5 taken to a health provider', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 37.0}, {'x': '2003', 'y': 33.0}, {'x': '2008', 'y': 45.4}, {'x': '2011', 'y': 39.7}, {'x': '2013', 'y': 34.5}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children under 5 taken to a health provider', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 10.0}, {'x': '1991', 'y': 10.0}, {'x': '1992', 'y': 10.0}, {'x': '1993', 'y': 10.0}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of firms', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 13.8}, {'x': '2013', 'y': 20.4}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of firms', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 10.0}, {'x': '2007', 'y': 10.0}, {'x': '2008', 'y': 10.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Electric power consumption (kWh per capita)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 387.04}, {'x': '2003', 'y': 443.07}, {'x': '2004', 'y': 493.62}, {'x': '2005', 'y': 579.92}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Electric power consumption (kWh per capita)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2001', 'y': 500.0}, {'x': '2002', 'y': 500.0}, {'x': '2003', 'y': 500.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of computers, communications and other services (% of commerical service exports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 18.03}, {'x': '2008', 'y': 14.91}, {'x': '2009', 'y': 30.6}, {'x': '2010', 'y': 31.83}, {'x': '2011', 'y': 38.69}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications and computers, communications and other services (% of commercial service exports of Faeroe Islands', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 10.0}, {'x': '2007', 'y': 10.0}, {'x': '2008', 'y': 10.0}, {'x': '2009', 'y': 10.0}, {'x': '2010', 'y': 10.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Number of tractors', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'American Samoa', 'y': 11}, {'x': 'Argentina', 'y': 256100}, {'x': 'Armenia', 'y': 13350}, {'x': 'Austria', 'y': 356018}, {'x': 'Azerbaijan', 'y': 28675}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Number of tractors', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Czech Republic', 'y': 2.50}, {'x': 'Czech Republic', 'y': 2.50}, {'x': 'Czech Republic', 'y': 2.50}, {'x': 'Czech Republic', 'y': 2.50}, {'x': 'Czech Republic', 'y': 2.50}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Amount of energy used(kg of oil equivalent per capita)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 233.47}, {'x': '2004', 'y': 801.28}, {'x': '2005', 'y': 700.93}, {'x': '2006', 'y': 864.86}, {'x': '2007', 'y': 856.73}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Amount of energy used (kg of atmospheric (2000)%)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 600}, {'x': '1991', 'y': 600}, {'x': '1992', 'y': 600}, {'x': '1993', 'y': 600}, {'x': '1994', 'y': 600}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 72}, {'x': '2007', 'y': 72}, {'x': '2008', 'y': 72}, {'x': '2009', 'y': 72}, {'x': '2010', 'y': 72}, {'x': '2011', 'y': 72}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 10.0}, {'x': '2007', 'y': 10.0}, {'x': '2008', 'y': 10.0}, {'x': '2009', 'y': 10.0}, {'x': '2010', 'y': 10.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Savings (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 58210441.85}, {'x': '2005', 'y': 53593973.65}, {'x': '2010', 'y': 82907873.35}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Savings (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 6700000}, {'x': '1991', 'y': 6700000}, {'x': '1992', 'y': 6700000}, {'x': '1993', 'y': 6700000}, {'x': '1994', 'y': 6700000}, {'x': '1995', 'y': 6700000}, {'x': '1996', 'y': 6700000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Land (in sq. km)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1987', 'y': 352270}, {'x': '1988', 'y': 352500}, {'x': '1989', 'y': 354700}, {'x': '1990', 'y': 354550}, {'x': '1991', 'y': 357960}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Land (in kg tons)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 200000}, {'x': '1991', 'y': 200000}, {'x': '1992', 'y': 200000}, {'x': '1993', 'y': 200000}, {'x': '1994', 'y': 200000}, {'x': '1995', 'y': 200000}, {'x': '1996', 'y': 200000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'India', 'y': 2.23}, {'x': 'Indonesia', 'y': 1.14}, {'x': 'Israel', 'y': 0.01}, {'x': 'Jamaica', 'y': 0.5}, {'x': 'Japan', 'y': 0.0}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Czech Republic', 'y': 1.1}, {'x': 'Czech Republic', 'y': 1.1}, {'x': 'Czech Republic', 'y': 1.1}, {'x': 'Czech Republic', 'y': 1.1}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Average number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Russian Federation', 'y': 8.5}, {'x': 'Serbia', 'y': 9.8}, {'x': 'Slovak Republic', 'y': 18.9}, {'x': 'Slovenia', 'y': 9.6}]}}
  0%|                                                                                                                                        | 0/20 [00:00<?, ?it/s]
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Prive value of exports (constant LCU)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Indonesia', 'y': 42583037008862.3}, {'x': 'Iran', 'y': 50148144989168.6}, {'x': 'Ireland', 'y': 3959173052.56}, {'x': 'Italy', 'y': 44944861361.28}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Prew value of exports (constant L21)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Czech Republic', 'y': 420000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total reserves (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1977', 'y': 12105786286.2}, {'x': '1978', 'y': 11977228956.28}, {'x': '1979', 'y': 15209640118.21}, {'x': '1980', 'y': 10222909028.22}, {'x': '1981', 'y': 1605412699.57}, {'x': '1982', 'y': 5701206773.52}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total reserves (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 12000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed males(% of male labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1994', 'y': 16.07}, {'x': '1996', 'y': 20.72}, {'x': '1997', 'y': 21.63}, {'x': '1998', 'y': 24.35}, {'x': '1999', 'y': 22.57}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed male % of male labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1.0}, {'x': '1991', 'y': 1.0}, {'x': '1992', 'y': 1.0}, {'x': '1993', 'y': 1.0}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Mean income or consumption per capita(2011 PPP $ per day)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 18.63}, {'x': '2012', 'y': 23.03}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Mean income or consumption per capita (211, 1997, 2011)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 10.0}, {'x': '1998', 'y': 10.0}, {'x': '1999', 'y': 10.0}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Savings (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 570576439.03}, {'x': '2005', 'y': 264160696.95}, {'x': '2010', 'y': 364586320.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Savings earned US$', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1.00}, {'x': '1991', 'y': 1.00}, {'x': '1992', 'y': 1.00}, {'x': '1993', 'y': 1.00}, {'x': '1994', 'y': 1.00}, {'x': '1995', 'y': 1.00}, {'x': '1996', 'y': 1.00}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Value added (current Local Currency Unit)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1974', 'y': 1347000000}, {'x': '1975', 'y': 1528000000}, {'x': '1976', 'y': 1788000000}, {'x': '1977', 'y': 3066000000}, {'x': '1978', 'y': 4195000000}, {'x': '1979', 'y': 4601000000}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Value added (current Local Currency Unit)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 4.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 0.95 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.91 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------


















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:18<00:00,  3.94s/it]
[35m|[39m JSON to Vega conversion error rate: [31m55.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'temporal'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2008', 'y': 4000}, {'x': '2009', 'y': 4000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Apple', 'y': 6666.2}, {'x': 'Dog', 'y': 6776.2}, {'x': 'Malic', 'y': 4776.2}, {'x': 'Malic', 'y': 4776.2}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
[31m# Plot the data<0x0A>sns.set(context = 'notebook', style = 'ticks', <0x0A>        encoding = {'x': {'field': 'Dog', 'type': 'temporal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'USA', 'y': 5000}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import seaborn as sns<0x0A><0x0A>sns.set(style="ticks", color_codes=True)<0x0A><0x0A># Load the example dataset<0x0A>dataset = pd.read_csv('dataset.csv', header=None, names=['Name', 'Gender', 'Age', 'Survived', 'Income', 'Education', 'Income', 'Education', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived', 'Survived',
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'temporal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'USA', 'y': 150.0}, {'x': 'USA', 'y': 150.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'temporal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Apple', 'y': 8.3}, {'x': 'Dog', 'y': 8.3}, {'x': 'Nike', 'y': 12.1}, {'x': 'Red', 'y': 12.1}, {'x': 'USA', 'y': 8.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
[31mheights.scatter('Height')
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
[31m%matplotlib inline<0x0A><0x0A>import matplotlib.pyplot as plt<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A>ax.scatter(x, y, s=100)<0x0A><0x0A>ax.set_xlim(0, 1000)<0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1915', 'y': 191.9}, {'x': '1916', 'y': 191.9}, {'x': '1917', 'y': 191.9}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'y': 80.0}, {'x': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'y': 80.0}, {'x': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'y': 80.0}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
[31mfacet = sns.FacetGrid(data=df, hue='Time', height=7)<0x0A>facet.map(sns.lineplot, 'Time', 'Count')<0x0A>facet.set(xlim=(1, 1900), ylim=(0, 270))<0x0A>facet.set(xlabel='Time')<0x0A>facet.set(ylabel='Count')<0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A><0x0A>
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'temporal'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'y': 62.6}, {'x': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'y': 62.6}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function OYA Age Distribution in Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1810', 'y': 500.0}, {'x': '1811', 'y': 500.0}, {'x': '1812', 'y': 500.0}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 69.6}, {'x': '2010', 'y': 69.6}, {'x': '2011', 'y': 69.6}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'quantitative'}}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1920', 'y': 2800}, {'x': '1921', 'y': 2800}, {'x': '1922', 'y': 2800}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
[31m%matplotlib inline<0x0A>import matplotlib.pyplot as plt<0x0A>import pandas as pd<0x0A>import numpy as np<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import csv<0x0A>import
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
[31mpoverty_barplot(data=df, x='Poverty Rate', y='Poverty Rate')
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather In Normalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1802', 'y': 4300}, {'x': '1803', 'y': 4300}, {'x': '1804', 'y': 4300}, {'x': '1805', 'y': 4300}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
[31m%matplotlib inline<0x0A><0x0A>import matplotlib.pyplot as plt<0x0A>import numpy as np<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A>x = np.arange(1825, 1840)<0x0A>y = np.array([3434, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
[31m# Plot the graph<0x0A>sns.set(context = 'notebook', style = 'ticks', <0x0A>        context = 'notebook', <0x0A>        axis = 'x', <0x0A>        style = 'ticks', <0x0A>        )<0x0A><0x0A>sns.lmplot(x = 'Literacy Rate', y = 'Epoch Volume', data = df, <0x0A>           fit_reg = False, <0x0A>           size = 8, <0x0A>           fit_reg = False, <0x0A>           data = df, <0x0A>           fit_reg = False, <0x0A>           size = 8, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, <0x0A>           fit_reg = False, 
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------




















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:18<00:00,  3.91s/it]
[35m|[39m JSON to Vega conversion error rate: [31m15.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.92 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2003', 'y': 9.5}, {'x': '2004', 'y': 8.31}, {'x': '2005', 'y': 6.86}, {'x': '2006', 'y': 6.59}, {'x': '2007', 'y': 6.71}, {'x': '2008', 'y': 6.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2001', 'y': 4.6}, {'x': '2002', 'y': 4.6}, {'x': '2003', 'y': 4.6}, {'x': '2004', 'y': 4.6}, {'x': '2005', 'y': 4.6}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of meetings(average for affected firms)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 1.3}, {'x': '2010', 'y': 1.5}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of meetings/events/tax officials firms', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 1.4}, {'x': '2007', 'y': 1.4}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 97}, {'x': '2010', 'y': 97}, {'x': '2011', 'y': 97}, {'x': '2012', 'y': 97}, {'x': '2013', 'y': 97}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2001', 'y': 88.6}, {'x': '2002', 'y': 88.6}, {'x': '2003', 'y': 88.6}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children under 5 taken to a health provider', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 37.0}, {'x': '2003', 'y': 33.0}, {'x': '2008', 'y': 45.4}, {'x': '2011', 'y': 39.7}, {'x': '2013', 'y': 34.5}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children under 5 taken to a health provider', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 40.0}, {'x': '1991', 'y': 40.0}, {'x': '1992', 'y': 40.0}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of firms', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 13.8}, {'x': '2013', 'y': 20.4}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of firms', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 18.6}, {'x': '2007', 'y': 18.6}, {'x': '2008', 'y': 18.6}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Electric power consumption (kWh per capita)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 387.04}, {'x': '2003', 'y': 443.07}, {'x': '2004', 'y': 493.62}, {'x': '2005', 'y': 579.92}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Electric power consumption (kWh per capita)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2001', 'y': 500.0}, {'x': '2002', 'y': 500.0}, {'x': '2003', 'y': 500.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of computers, communications and other services (% of commerical service exports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 18.03}, {'x': '2008', 'y': 14.91}, {'x': '2009', 'y': 30.6}, {'x': '2010', 'y': 31.83}, {'x': '2011', 'y': 38.69}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, communications and other services (% of commercial service exports of Faeroe Islands', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 20.0}, {'x': '2007', 'y': 20.0}, {'x': '2008', 'y': 20.0}, {'x': '2009', 'y': 20.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Number of tractors', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'American Samoa', 'y': 11}, {'x': 'Argentina', 'y': 256100}, {'x': 'Armenia', 'y': 13350}, {'x': 'Austria', 'y': 356018}, {'x': 'Azerbaijan', 'y': 28675}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Number of tractors', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Bangladesh', 'y': 2500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Amount of energy used(kg of oil equivalent per capita)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 233.47}, {'x': '2004', 'y': 801.28}, {'x': '2005', 'y': 700.93}, {'x': '2006', 'y': 864.86}, {'x': '2007', 'y': 856.73}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Amount of energy used (kg of deregulated 20x capacity)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 600}, {'x': '2007', 'y': 600}, {'x': '2008', 'y': 600}, {'x': '2009', 'y': 600}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 72}, {'x': '2007', 'y': 72}, {'x': '2008', 'y': 72}, {'x': '2009', 'y': 72}, {'x': '2010', 'y': 72}, {'x': '2011', 'y': 72}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 70.0}, {'x': '2007', 'y': 70.0}, {'x': '2008', 'y': 70.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Savings (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 58210441.85}, {'x': '2005', 'y': 53593973.65}, {'x': '2010', 'y': 82907873.35}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Savings (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 57800000}, {'x': '1991', 'y': 57800000}, {'x': '1992', 'y': 57800000}, {'x': '1993', 'y': 57800000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Land (in sq. km)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1987', 'y': 352270}, {'x': '1988', 'y': 352500}, {'x': '1989', 'y': 354700}, {'x': '1990', 'y': 354550}, {'x': '1991', 'y': 357960}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Land (in kg tons)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 300000}, {'x': '1991', 'y': 300000}, {'x': '1992', 'y': 300000}, {'x': '1993', 'y': 300000}, {'x': '1994', 'y': 300000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'India', 'y': 2.23}, {'x': 'Indonesia', 'y': 1.14}, {'x': 'Israel', 'y': 0.01}, {'x': 'Jamaica', 'y': 0.5}, {'x': 'Japan', 'y': 0.0}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Brazil', 'y': 1.1}, {'x': 'Bulgaria', 'y': 1.1}, {'x': 'Czech Republic', 'y': 1.1}, {'x': 'Czech Republic', 'y': 1.1}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Average number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Russian Federation', 'y': 8.5}, {'x': 'Serbia', 'y': 9.8}, {'x': 'Slovak Republic', 'y': 18.9}, {'x': 'Slovenia', 'y': 9.6}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Average number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Bahamas', 'y': 10.0}, {'x': 'Bangladesh', 'y': 10.0}, {'x': 'Bangladesh', 'y': 10.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Prive value of exports (constant LCU)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Indonesia', 'y': 42583037008862.3}, {'x': 'Iran', 'y': 50148144989168.6}, {'x': 'Ireland', 'y': 3959173052.56}, {'x': 'Italy', 'y': 44944861361.28}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Prew value of exports (constant L21)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Brazil', 'y': 4200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total reserves (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1977', 'y': 12105786286.2}, {'x': '1978', 'y': 11977228956.28}, {'x': '1979', 'y': 15209640118.21}, {'x': '1980', 'y': 10222909028.22}, {'x': '1981', 'y': 1605412699.57}, {'x': '1982', 'y': 5701206773.52}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total reserves (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 12000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed males(% of male labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1994', 'y': 16.07}, {'x': '1996', 'y': 20.72}, {'x': '1997', 'y': 21.63}, {'x': '1998', 'y': 24.35}, {'x': '1999', 'y': 22.57}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed male(% of male labor force age 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 12.3}, {'x': '1991', 'y': 12.3}, {'x': '1992', 'y': 12.3}, {'x': '1993', 'y': 12.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Mean income or consumption per capita(2011 PPP $ per day)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 18.63}, {'x': '2012', 'y': 23.03}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Mean income or consumption per capita (211, 1999, 2011)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 10.0}, {'x': '2010', 'y': 10.0}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Savings (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 570576439.03}, {'x': '2005', 'y': 264160696.95}, {'x': '2010', 'y': 364586320.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Savings (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1.00}, {'x': '1991', 'y': 1.00}, {'x': '1992', 'y': 1.00}, {'x': '1993', 'y': 1.00}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Value added (current Local Currency Unit)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1974', 'y': 1347000000}, {'x': '1975', 'y': 1528000000}, {'x': '1976', 'y': 1788000000}, {'x': '1977', 'y': 3066000000}, {'x': '1978', 'y': 4195000000}, {'x': '1979', 'y': 4601000000}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Value added (current Local Currency Unit)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 30000000}, {'x': '1991', 'y': 30000000}, {'x': '1992', 'y': 30000000}, {'x': '1993', 'y': 30000000}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.92 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
  0%|                                                                                                                                        | 0/20 [00:00<?, ?it/s]


















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:13<00:00,  3.67s/it]
  0%|                                                                                                                                        | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m55.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'temporal'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2008', 'y': 4000}, {'x': '2009', 'y': 4000}, {'x': '2010', 'y': 4000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Apple', 'y': 6600.0}, {'x': 'Dog', 'y': 7700.0}, {'x': 'Male', 'y': 4000.0}, {'x': 'Male', 'y': 4000.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
[31m# Plot the data<0x0A>sns.set(context = 'notebook', style = 'ticks', <0x0A>        encoding = {'x': {'field': 'Dog', 'type': 'temporal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'USA', 'y': 5000}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
[31mvisualize_top_words(df, 'text', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 'bar', 
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'temporal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'USA', 'y': 150.0}, {'x': 'USA', 'y': 150.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'temporal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Apple', 'y': 8.3}, {'x': 'Dog', 'y': 12.1}, {'x': 'Nike', 'y': 12.1}, {'x': 'Red', 'y': 8.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
[31mheights.scatter('Height')
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
[31m%matplotlib inline<0x0A><0x0A>import matplotlib.pyplot as plt<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A>ax.scatter(x, y, s=100)<0x0A><0x0A>ax.set_xlim(0, 1000)<0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1915', 'y': 19.1}, {'x': '1916', 'y': 19.1}, {'x': '1917', 'y': 19.1}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'y': 80.0}, {'x': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'y': 80.0}, {'x': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'y': 80.0}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
[31mfacet = sns.relplot(x="Time", y="Value", data=df, kind="line", height=8, aspect=1.5)<0x0A>facet.set(xlim=(1, 1900), ylim=(0, 270))<0x0A>facet.set(xlabel="Time", ylabel="Value", ylim=(0, 270))<0x0A>facet.set(ylim=(0, 270))<0x0A>facet.set(xlim=(1, 1900), ylim=(0, 270))<0x0A>facet.set(xlim=(1, 1900), ylim=(0, 270))<0x0A>facet.set(xlim=(1, 1900), ylim=(0, 270))<0x0A>facet.set(xlim=(1, 1900), ylim=(0, 270))<0x0A>facet.set(xlim=(1, 1900), ylim=(0, 270))<0x0A>facet.set(xlim=(1, 1900), ylim=(0, 270))
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'temporal'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'y': 62.0}, {'x': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'y': 62.0}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function OYA Age Distribution in Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1810', 'y': 560}, {'x': '1820', 'y': 560}, {'x': '1830', 'y': 560}, {'x': '1840', 'y': 310}, {'x': '1850', 'y': 310}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 69.6}, {'x': '1991', 'y': 69.6}, {'x': '1992', 'y': 69.6}, {'x': '1993', 'y': 69.6}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'quantitative'}}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1920', 'y': 2880}, {'x': '1921', 'y': 2880}, {'x': '1922', 'y': 2880}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
[31m%%R<0x0A><0x0A>ggplot(data=df, mapping=aes(x=df, y=df)) +<0x0A>  geom_point() +<0x0A>  scale_x_continuous(limits=c(0, 2000),<0x0A>                       limits=c(0, 400),<0x0A>                       axis=x_continuous(limits=c(0, 400),<0x0A>                       axis.x=x_continuous(limits=c(0, 400),<0x0A>                       axis.y=x_continuous(limits=c(0, 400),<0x0A>                       axis.y=y_continuous(limits=c(0, 400),<0x0A>                       axis.x=x_continuous(limits=c(0, 400),<0x0A>                       axis.y=y_continuous(limits=c(0, 400),<0x0A>                       axis.y=y_continuous(limits=c(0, 400),<0x0A>                       axis.y=y_continuous(limits=c(0, 400),<0x0A>                       axis.y=y_continuous(limits=c(0, 400),<0x0A>                       axis.y=y_continuous(limits=c(0, 400),<0x0A>                       axis.y=y_continuous(limits=c(0, 400),<0x0A>                       axis.y=y_continuous(limits=c(0, 400),<0x0A>                       axis.y=y_continuous(limits=c(0, 400),<0x0A>                       axis.y=y_continuous(limits=c(0,
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Dog', 'y': 1000}, {'x': 'Nike', 'y': 1000}, {'x': 'Red', 'y': 3000}, {'x': 'USA', 'y': 3000}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Weather In Normalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1802', 'y': 4200}, {'x': '1804', 'y': 4000}, {'x': '1805', 'y': 5000}, {'x': '1806', 'y': 5000}, {'x': '1807', 'y': 5000}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
[31m%matplotlib inline<0x0A><0x0A>import matplotlib.pyplot as plt<0x0A>import numpy as np<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A>x = np.arange(1, 1, 0.001)<0x0A>y = np.arange(0, 5, 0.001)<0x0A><0x0A>ax.plot(x, y, '-')<0x0A>ax.set_xticks(x)<0x0A>ax.set_xticklabels(x)<0x0A><0x0A>ax.set_ylim(0, 50000)<0x0A><0x0A>ax.set_xlim(1, 1840)<0x0A><0x0A>ax.set_ylim(0, 50000)<0x0A><0x0A>ax.set_xticklabels(x)<0x0A><0x0A>ax.set_yticks(y)<0x0A><0x0A>ax.set_xticklabels(x)<0x0A><0x0A>ax.set_yticks(y)<0x0A><0x0A>ax.set_xlim(1, 1840)<0x0A><0x0A>ax.set_ylim(0, 5000)<0x0A><0x0A>ax.set_xticks(x)<0x0A><0x0A>ax.set_yticks(y)<0x0A><0x0A>ax.set_xticks(x)<0x0A><0x0A>ax.set_yticks(y)<0x0A><0x0A>ax.set_yticks(y)<0x0A><0x0A>ax.set_xticks(x)<0x0A><0x0A>ax.set_yticks(y)<0x0A><0x0A>ax.set_yticks(y)<0x0A><0x0A>ax.set_xticks(x)<0x0A><0x0A>ax.set_yticks(y)<0x0A><0x0A>ax.set_yticks(y)<0x0A><0x0A>ax.set_y
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}}, 'y': {'field': 'Epoch Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 57.5}, {'x': '1991', 'y': 57.5}, {'x': '1992', 'y': 57.5}, {'x': '1993', 'y': 57.5}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.15 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.99 [35m|




















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:11<00:00,  3.55s/it]
[35m|[39m JSON to Vega conversion error rate: [31m5.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.96 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2003', 'y': 9.5}, {'x': '2004', 'y': 8.31}, {'x': '2005', 'y': 6.86}, {'x': '2006', 'y': 6.59}, {'x': '2007', 'y': 6.71}, {'x': '2008', 'y': 6.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2005', 'y': 5.6}, {'x': '2006', 'y': 5.6}, {'x': '2007', 'y': 5.6}, {'x': '2008', 'y': 5.6}, {'x': '2009', 'y': 5.6}, {'x': '2010', 'y': 5.6}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of meetings(average for affected firms)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 1.3}, {'x': '2010', 'y': 1.5}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of meetings/averages for officials firms', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2008', 'y': 1.3}, {'x': '2009', 'y': 1.3}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 97}, {'x': '2010', 'y': 97}, {'x': '2011', 'y': 97}, {'x': '2012', 'y': 97}, {'x': '2013', 'y': 97}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 88.0}, {'x': '1991', 'y': 88.0}, {'x': '1992', 'y': 88.0}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children under 5 taken to a health provider', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 37.0}, {'x': '2003', 'y': 33.0}, {'x': '2008', 'y': 45.4}, {'x': '2011', 'y': 39.7}, {'x': '2013', 'y': 34.5}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children under 5 taken to a health provider', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 40.6}, {'x': '2007', 'y': 43.6}, {'x': '2008', 'y': 43.6}, {'x': '2009', 'y': 43.6}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of firms', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 13.8}, {'x': '2013', 'y': 20.4}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of firms', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 18.6}, {'x': '2007', 'y': 18.6}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Electric power consumption (kWh per capita)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 387.04}, {'x': '2003', 'y': 443.07}, {'x': '2004', 'y': 493.62}, {'x': '2005', 'y': 579.92}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Electric power consumption (kWh per capita)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2001', 'y': 386.0}, {'x': '2002', 'y': 448.0}, {'x': '2003', 'y': 598.0}, {'x': '2004', 'y': 598.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of computers, communications and other services (% of commerical service exports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 18.03}, {'x': '2008', 'y': 14.91}, {'x': '2009', 'y': 30.6}, {'x': '2010', 'y': 31.83}, {'x': '2011', 'y': 38.69}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of communications, communications and other services (% of commercial service exports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 18.5}, {'x': '2007', 'y': 30.5}, {'x': '2008', 'y': 30.5}, {'x': '2009', 'y': 30.5}, {'x': '2010', 'y': 30.5}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Number of tractors', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'American Samoa', 'y': 11}, {'x': 'Argentina', 'y': 256100}, {'x': 'Armenia', 'y': 13350}, {'x': 'Austria', 'y': 356018}, {'x': 'Azerbaijan', 'y': 28675}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Number of tractors', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Brazil', 'y': 250000}, {'x': 'Bulgaria', 'y': 250000}, {'x': 'Czech Republic', 'y': 300000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Amount of energy used(kg of oil equivalent per capita)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 233.47}, {'x': '2004', 'y': 801.28}, {'x': '2005', 'y': 700.93}, {'x': '2006', 'y': 864.86}, {'x': '2007', 'y': 856.73}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Amount of energy used(kg of oil equivalent per capita)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1996', 'y': 200.0}, {'x': '1997', 'y': 600.0}, {'x': '1998', 'y': 660.0}, {'x': '1999', 'y': 660.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 72}, {'x': '2007', 'y': 72}, {'x': '2008', 'y': 72}, {'x': '2009', 'y': 72}, {'x': '2010', 'y': 72}, {'x': '2011', 'y': 72}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 70.0}, {'x': '2007', 'y': 70.0}, {'x': '2008', 'y': 70.0}, {'x': '2009', 'y': 70.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Savings (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 58210441.85}, {'x': '2005', 'y': 53593973.65}, {'x': '2010', 'y': 82907873.35}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Savings (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 58300000}, {'x': '1998', 'y': 57800000}, {'x': '1999', 'y': 67800000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Land (in sq. km)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1987', 'y': 352270}, {'x': '1988', 'y': 352500}, {'x': '1989', 'y': 354700}, {'x': '1990', 'y': 354550}, {'x': '1991', 'y': 357960}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Land (in kg tons)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 330000}, {'x': '1991', 'y': 330000}, {'x': '1992', 'y': 330000}, {'x': '1993', 'y': 330000}, {'x': '1994', 'y': 330000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'India', 'y': 2.23}, {'x': 'Indonesia', 'y': 1.14}, {'x': 'Israel', 'y': 0.01}, {'x': 'Jamaica', 'y': 0.5}, {'x': 'Japan', 'y': 0.0}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Brazil', 'y': 2.2}, {'x': 'Bulgaria', 'y': 1.1}, {'x': 'Czech Republic', 'y': 1.2}, {'x': 'Czech Republic', 'y': 1.2}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Average number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Russian Federation', 'y': 8.5}, {'x': 'Serbia', 'y': 9.8}, {'x': 'Slovak Republic', 'y': 18.9}, {'x': 'Slovenia', 'y': 9.6}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Average number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Bangladesh', 'y': 8.3}, {'x': 'Bangladesh', 'y': 10.0}, {'x': 'Bangladesh', 'y': 17.9}, {'x': 'Bangladesh', 'y': 17.9}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Prive value of exports (constant LCU)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Indonesia', 'y': 42583037008862.3}, {'x': 'Iran', 'y': 50148144989168.6}, {'x': 'Ireland', 'y': 3959173052.56}, {'x': 'Italy', 'y': 44944861361.28}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Prew value of exports (constant L210)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Republic', 'y': 4257990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total reserves (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1977', 'y': 12105786286.2}, {'x': '1978', 'y': 11977228956.28}, {'x': '1979', 'y': 15209640118.21}, {'x': '1980', 'y': 10222909028.22}, {'x': '1981', 'y': 1605412699.57}, {'x': '1982', 'y': 5701206773.52}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total reserves (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1991', 'y': 12000000000}, {'x': '1992', 'y': 12000000000}, {'x': '1993', 'y': 10000000000}, {'x': '1994', 'y': 10000000000}, {'x': '1995', 'y': 10000000000}, {'x': '1996', 'y': 10000000000}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed males(% of male labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1994', 'y': 16.07}, {'x': '1996', 'y': 20.72}, {'x': '1997', 'y': 21.63}, {'x': '1998', 'y': 24.35}, {'x': '1999', 'y': 22.57}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed males(% of male labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 22.2}, {'x': '1991', 'y': 22.2}, {'x': '1992', 'y': 22.2}, {'x': '1993', 'y': 22.2}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Mean income or consumption per capita(2011 PPP $ per day)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 18.63}, {'x': '2012', 'y': 23.03}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Mean income or consumption per capita (2011 population)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 1.0}, {'x': '2010', 'y': 1.0}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Savings (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 570576439.03}, {'x': '2005', 'y': 264160696.95}, {'x': '2010', 'y': 364586320.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Savings current US$', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 1500000}, {'x': '1991', 'y': 3000000}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Value added (current Local Currency Unit)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1974', 'y': 1347000000}, {'x': '1975', 'y': 1528000000}, {'x': '1976', 'y': 1788000000}, {'x': '1977', 'y': 3066000000}, {'x': '1978', 'y': 4195000000}, {'x': '1979', 'y': 4601000000}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Value added (current Local Currency Unit)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 40000000}, {'x': '1991', 'y': 30000000}, {'x': '1992', 'y': 30000000}, {'x': '1993', 'y': 30000000}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.96 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
README.md: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 5.18k/5.18k [00:00<00:00, 14.2MB/s]






















model.safetensors: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 1.13G/1.13G [00:42<00:00, 26.5MB/s]
  0%|                                                                                                                                        | 0/20 [00:00<?, ?it/s]


















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:03<00:00,  3.19s/it]
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/fromnumeric.py:3504: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
  0%|                                                                                                                                        | 0/20 [00:00<?, ?it/s]
[35m|[39m JSON to Vega conversion error rate: [31m50.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.9 [35m|[39m [36m[1mY-NAME[39m[22m : 0.89 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'quantitative'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': 3306, 'y': 3789}, {'x': 5510, 'y': 4210}, {'x': 3857, 'y': 2105}, {'x': 2755, 'y': 2105}, {'x': 3857, 'y': 3368}, {'x': 4408, 'y': 2105}, {'x': 2204, 'y': 842}, {'x': 4959, 'y': 2947}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Mode Age', 'type': 'temporal'}, 'y': {'field': 'Alcohol Consumption', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 2100}, {'x': '2000', 'y': 2100}, {'x': '2001', 'y': 2100}, {'x': '2002', 'y': 2100}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'nominal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 7070}, {'x': 'USA', 'y': 4242}, {'x': 'Dog', 'y': 707}, {'x': 'Nike', 'y': 4242}, {'x': 'Apple', 'y': 6363}, {'x': 'Male', 'y': 707}, {'x': 'Rock', 'y': 707}, {'x': 'Sedan', 'y': 4242}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Water Usage', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Apple', 'y': 6400.0}, {'x': 'Dog', 'y': 7000.0}, {'x': 'Male', 'y': 4100.0}, {'x': 'Nike', 'y': 7000.0}, {'x': 'Rock', 'y': 4100.0}, {'x': 'Sxdan', 'y': 4100.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 1002}, {'x': 'USA', 'y': 5010}, {'x': 'Dog', 'y': 501}]}}
[31m# Plot the data<0x0A>sns.set(context = 'notebook', style = 'ticks', <0x0A>        encoding = {'x': {'field': 'Dog', 'type': 'temporal'}, 'y': {'field': 'Kurtosis And Skewness Of Annual Corporate Profit Margins', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'USA', 'y': 5000}, {'x': 'USA', 'y': 5000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 192}, {'x': 'USA', 'y': 24}, {'x': 'Dog', 'y': 120}, {'x': 'Nike', 'y': 48}, {'x': 'Apple', 'y': 48}, {'x': 'Male', 'y': 24}, {'x': 'Rock', 'y': 240}, {'x': 'Sedan', 'y': 24}, {'x': 'Spanish', 'y': 48}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Type', 'type': 'temporal'}, 'y': {'field': 'type', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Apple', 'y': 120}, {'x': 'Dog', 'y': 25}, {'x': 'Nike', 'y': 190}, {'x': 'Rock', 'y': 25}, {'x': 'Sedan', 'y': 40}, {'x': 'USA', 'y': 25}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'nominal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 131.12}, {'x': 'USA', 'y': 151.76}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Median Household Income Indexed By Regional Inflation Rates', 'type': 'temporal'}, 'y': {'field': 'Bond Yield', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'USA', 'y': 150}, {'x': 'USA', 'y': 150}, {'x': 'USA', 'y': 150}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'nominal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 12.06}, {'x': 'USA', 'y': 8.31}, {'x': 'Dog', 'y': 8.31}, {'x': 'Nike', 'y': 12.06}, {'x': 'Apple', 'y': 3.93}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Cost', 'type': 'temporal'}, 'y': {'field': 'Quantile Regression Estimates Of Salary By Experience Level', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Apple', 'y': 8.3}, {'x': 'Dog', 'y': 12.1}, {'x': 'Red', 'y': 8.3}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Height', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 265.39, 'y': 13.46}, {'x': 163.06, 'y': 60.49}, {'x': 158.37, 'y': 57.42}, {'x': 58.0, 'y': 60.49}]}}
[31mheights.scatter('Height', 'Scatter', 'x', 'y', 'data', 'data', 'y', 'data', 'data', 'x', 'y', 'data', 'data', 'y', 'data', 'data', 'y', 'data', 'data', 'y', 'data', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y', 'data', 'y
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': '', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 5579, 'y': 226.38}, {'x': 6376, 'y': 41.73}, {'x': 7173, 'y': 113.45}, {'x': 7173, 'y': 364.61}, {'x': 3188, 'y': 364.61}]}}
[31m%matplotlib inline<0x0A><0x0A>import matplotlib.pyplot as plt<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A>ax.scatter(x, y, s=100, alpha=0.5)<0x0A><0x0A>ax.set_xlim(0, 1000)<0x0A>ax.set_ylim(0, 400)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1913, 'y': 197.58}, {'x': 1919, 'y': 16.67}, {'x': 1925, 'y': 16.67}, {'x': 1931, 'y': 38.16}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Smoking Rate', 'type': 'temporal'}, 'y': {'field': 'Simulation Results Of Variable Interest Rates On Bond Prices', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1915', 'y': 191.0}, {'x': '1920', 'y': 192.0}, {'x': '1925', 'y': 192.0}, {'x': '1930', 'y': 33.0}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1813, 'y': 80.15}, {'x': 1815, 'y': 28.85}, {'x': 1817, 'y': 62.02}, {'x': 1819, 'y': 80.15}, {'x': 1821, 'y': 9.06}, {'x': 1823, 'y': 9.06}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'type': 'temporal'}, 'y': {'field': 'CO2 Emissions', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'y': 29.0}, {'x': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'y': 28.0}, {'x': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'y': 80.0}, {'x': 'Adjusted R Squared For Linear Regression Model With Heteroscedasticity', 'y': 80.0}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Time', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1863, 'y': 252.01}, {'x': 1867, 'y': 268.63}, {'x': 1871, 'y': 269.06}, {'x': 1875, 'y': 110.31}, {'x': 1879, 'y': 268.63}, {'x': 1883, 'y': 268.63}, {'x': 1887, 'y': 105.2}, {'x': 1891, 'y': 268.63}, {'x': 1895, 'y': 105.2}]}}
[31m# Plotting the graph<0x0A><0x0A>sns.set(style="ticks")<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10,10))<0x0A><0x0A>sns.lineplot(x="Time", y="Value", data=df)<0x0A>sns.despine()<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'quantitative'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 743.82, 'y': 64}, {'x': 563.33, 'y': 16}, {'x': 566.18, 'y': 56}, {'x': 534.34, 'y': 64}, {'x': 595.96, 'y': 32}, {'x': 628.08, 'y': 16}, {'x': 609.87, 'y': 56}, {'x': 658.4, 'y': 24}, {'x': 320.27, 'y': 24}, {'x': 434.91, 'y': 16}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'type': 'temporal'}, 'y': {'field': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Predictive Accuracy Of Seasonal Demand Forecasting Models', 'y': 64.0}, {'x': 'Heterogeneity In Clinical Trial Populations By Gender And Age', 'y': 64.0}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function Of Age Distribution In Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1811, 'y': 574.93}, {'x': 1819, 'y': 146.97}, {'x': 1827, 'y': 28.74}, {'x': 1835, 'y': 28.74}, {'x': 1843, 'y': 149.17}, {'x': 1851, 'y': 311.6}, {'x': 1859, 'y': 146.97}, {'x': 1867, 'y': 575.7}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Distance', 'type': 'temporal'}, 'y': {'field': 'Probability Density Function OY Age Distribution in Population Survey', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1810', 'y': 120}, {'x': '1830', 'y': 120}, {'x': '1840', 'y': 310}, {'x': '1850', 'y': 150}, {'x': '1860', 'y': 150}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': 2832, 'y': 78.71}, {'x': 3304, 'y': 55.01}, {'x': 2832, 'y': 61.38}, {'x': 4720, 'y': 55.01}, {'x': 3304, 'y': 61.38}, {'x': 4720, 'y': 61.38}, {'x': 2832, 'y': 55.01}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Growth Rate', 'type': 'quantitative'}}, 'y': {'field': 'GDP', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 78.0}, {'x': '2000', 'y': 62.0}, {'x': '2001', 'y': 55.0}, {'x': '2002', 'y': 55.0}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'temporal'}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1920, 'y': 2885}, {'x': 1926, 'y': 2885}, {'x': 1932, 'y': 2885}, {'x': 1938, 'y': 2885}]}}
[31m{'mark': 'line', 'encoding': {'x': {'field': 'Mental Health', 'type': 'quantitative'}}, 'y': {'field': 'Import Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1920', 'y': 2880}, {'x': '1921', 'y': 2880}, {'x': '1922', 'y': 2880}, {'x': '1923', 'y': 2880}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Assessment Of Healthcare Utilization Rates By Demographic Groups', 'type': 'quantitative'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 630, 'y': 120.95}, {'x': 1680, 'y': 38.9}, {'x': 1470, 'y': 74.73}, {'x': 2100, 'y': 366.7}]}}
[31m%%R<0x0A><0x0A>ggplot(data=data, mapping=aes(x=data.index, y=data.values)) +<0x0A>  geom_point() +<0x0A>  scale_x_continuous(limits=c(0, 400)) +<0x0A>  scale_y_continuous(limits=c(0, 400))
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': '', 'type': 'nominal'}, 'y': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Red', 'y': 2930}, {'x': 'USA', 'y': 1465}, {'x': 'Dog', 'y': 879}, {'x': 'Nike', 'y': 1465}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Poverty Rate', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Dog', 'y': 880}, {'x': 'Nike', 'y': 1470}, {'x': 'Red', 'y': 2940}, {'x': 'USA', 'y': 1470}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Detrended Analysis Of Yearly Weather Anomalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1801, 'y': 4350}, {'x': 1808, 'y': 3625}, {'x': 1815, 'y': 5800}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Impact Of Temperature Variability On Crop Yield Statistics', 'type': 'temporal'}, 'y': {'field': 'Dtrended Analysis Of Yearly Weather Weather Informalies In Temperature Data', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1802', 'y': 4280}, {'x': '1804', 'y': 3810}, {'x': '1806', 'y': 3610}, {'x': '1807', 'y': 5810}, {'x': '1808', 'y': 5810}, {'x': '1819', 'y': 5810}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': '', 'type': 'temporal'}, 'y': {'field': '', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1823, 'y': 4850}, {'x': 1825, 'y': 3395}, {'x': 1827, 'y': 4850}, {'x': 1829, 'y': 1940}, {'x': 1831, 'y': 1940}, {'x': 1833, 'y': 4850}, {'x': 1835, 'y': 1940}, {'x': 1837, 'y': 4850}, {'x': 1839, 'y': 3395}]}}
[31m%matplotlib inline<0x0A><0x0A>fig, ax = plt.subplots(figsize=(10, 10))<0x0A><0x0A>ax.plot(x, y)<0x0A>ax.set_ylim(0, 5000)<0x0A><0x0A>ax.set_xlim(1, 1840)<0x0A><0x0A>ax.set_ylim(0, 5000)<0x0A><0x0A>ax.set_xticks(x)<0x0A>ax.set_yticks(y)<0x0A><0x0A>ax.set_xticklabels(x)<0x0A>ax.set_yticklabels(y)<0x0A><0x0A>plt.show()
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}, 'y': {'field': 'Export Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': 1480, 'y': 530.06}, {'x': 740, 'y': 567.36}, {'x': 3700, 'y': 626.04}, {'x': 740, 'y': 596.14}, {'x': 3700, 'y': 530.06}]}}
[31m{'mark': 'circle', 'encoding': {'x': {'field': 'Literacy Rate', 'type': 'quantitative'}}, 'y': {'field': 'Epoch Volume', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 570}, {'x': '1991', 'y': 520}, {'x': '1992', 'y': 520}, {'x': '1993', 'y': 520}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.14 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 0.9 [35m|[39m [36m[1mY-NAME[39m[22m : 0.89 [35m|




















100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [01:20<00:00,  4.03s/it]
[35m|[39m JSON to Vega conversion error rate: [31m15.0[39m [31m%[39m [35m|
[35m[1m----------------------------------------------------- EVALUATION -------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.97 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2003', 'y': 9.5}, {'x': '2004', 'y': 8.31}, {'x': '2005', 'y': 6.86}, {'x': '2006', 'y': 6.59}, {'x': '2007', 'y': 6.71}, {'x': '2008', 'y': 6.2}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Consumption of fixed capital (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2005', 'y': 5.6}, {'x': '2006', 'y': 5.2}, {'x': '2007', 'y': 3.8}, {'x': '2008', 'y': 3.6}, {'x': '2009', 'y': 3.6}, {'x': '2010', 'y': 3.6}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of meetings(average for affected firms)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 1.3}, {'x': '2010', 'y': 1.5}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of meetings/averages for officials firms', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2008', 'y': 1.33}, {'x': '2010', 'y': 1.43}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 97}, {'x': '2010', 'y': 97}, {'x': '2011', 'y': 97}, {'x': '2012', 'y': 97}, {'x': '2013', 'y': 97}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1999', 'y': 95.0}, {'x': '2000', 'y': 95.0}, {'x': '2001', 'y': 95.0}, {'x': '2002', 'y': 95.0}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children under 5 taken to a health provider', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 37.0}, {'x': '2003', 'y': 33.0}, {'x': '2008', 'y': 45.4}, {'x': '2011', 'y': 39.7}, {'x': '2013', 'y': 34.5}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of children under 5 taken to a health provider', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2005', 'y': 36.0}, {'x': '2006', 'y': 32.0}, {'x': '2007', 'y': 46.0}, {'x': '2008', 'y': 44.0}, {'x': '2009', 'y': 43.0}]}}
[32m[1m{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of firms', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 13.8}, {'x': '2013', 'y': 20.4}]}}
{'mark': 'line', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': '% of firms', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 13.6}, {'x': '2010', 'y': 20.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Electric power consumption (kWh per capita)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 387.04}, {'x': '2003', 'y': 443.07}, {'x': '2004', 'y': 493.62}, {'x': '2005', 'y': 579.92}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Electric power consumption (kWh per capita)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2002', 'y': 388.14}, {'x': '2003', 'y': 443.17}, {'x': '2004', 'y': 494.17}, {'x': '2005', 'y': 578.87}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of computers, communications and other services (% of commerical service exports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 18.03}, {'x': '2008', 'y': 14.91}, {'x': '2009', 'y': 30.6}, {'x': '2010', 'y': 31.83}, {'x': '2011', 'y': 38.69}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Cost of computers, communications and other services (% of commercial service exports)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 18.0}, {'x': '2008', 'y': 14.8}, {'x': '2009', 'y': 30.7}, {'x': '2010', 'y': 31.7}, {'x': '2011', 'y': 38.3}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Number of tractors', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'American Samoa', 'y': 11}, {'x': 'Argentina', 'y': 256100}, {'x': 'Armenia', 'y': 13350}, {'x': 'Austria', 'y': 356018}, {'x': 'Azerbaijan', 'y': 28675}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Number of tractors', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Burkina Faso', 'y': 10000}, {'x': 'France', 'y': 25000}, {'x': 'Finland', 'y': 00000}, {'x': 'France', 'y': 30000}, {'x': 'Poland', 'y': 30000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Amount of energy used(kg of oil equivalent per capita)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 233.47}, {'x': '2004', 'y': 801.28}, {'x': '2005', 'y': 700.93}, {'x': '2006', 'y': 864.86}, {'x': '2007', 'y': 856.73}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Amount of energy used(kg of oil equivalent per capita)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1996', 'y': 24.0}, {'x': '2002', 'y': 800.0}, {'x': '2003', 'y': 700.0}, {'x': '2004', 'y': 700.0}, {'x': '2005', 'y': 700.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2006', 'y': 72}, {'x': '2007', 'y': 72}, {'x': '2008', 'y': 72}, {'x': '2009', 'y': 72}, {'x': '2010', 'y': 72}, {'x': '2011', 'y': 72}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 71}, {'x': '2010', 'y': 71}, {'x': '2011', 'y': 71}, {'x': '2012', 'y': 71}, {'x': '2013', 'y': 71}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Savings (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 58210441.85}, {'x': '2005', 'y': 53593973.65}, {'x': '2010', 'y': 82907873.35}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Savings (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1997', 'y': 58000000}, {'x': '2002', 'y': 53500000}, {'x': '2003', 'y': 82500000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Land (in sq. km)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1987', 'y': 352270}, {'x': '1988', 'y': 352500}, {'x': '1989', 'y': 354700}, {'x': '1990', 'y': 354550}, {'x': '1991', 'y': 357960}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Land (in kg/mm)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 350000}, {'x': '1991', 'y': 350000}, {'x': '1992', 'y': 350000}, {'x': '1993', 'y': 350000}, {'x': '1994', 'y': 350000}, {'x': '1995', 'y': 350000}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'India', 'y': 2.23}, {'x': 'Indonesia', 'y': 1.14}, {'x': 'Israel', 'y': 0.01}, {'x': 'Jamaica', 'y': 0.5}, {'x': 'Japan', 'y': 0.0}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Cost (as % of GNI)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Kenya', 'y': 2.24}, {'x': 'Netherlands', 'y': 1.14}, {'x': 'Niger', 'y': 0.0}, {'x': 'Norway', 'y': 0.50}, {'x': 'Pakistan', 'y': 0.0}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Average number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Russian Federation', 'y': 8.5}, {'x': 'Serbia', 'y': 9.8}, {'x': 'Slovak Republic', 'y': 18.9}, {'x': 'Slovenia', 'y': 9.6}]}}
{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Average number of days', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Finland, recent years', 'y': 8.3}, {'x': 'Latvia', 'y': 9.9}, {'x': 'Slovak Republic', 'y': 18.1}, {'x': 'Slovenia', 'y': 9.6}]}}
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Prive value of exports (constant LCU)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Indonesia', 'y': 42583037008862.3}, {'x': 'Iran', 'y': 50148144989168.6}, {'x': 'Ireland', 'y': 3959173052.56}, {'x': 'Italy', 'y': 44944861361.28}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'Prrw value of exports (constant L210)', 'type': 'quantitative'}}, 'data': {'values': [{'x': 'Republic', 'y': 4257980000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
[32m[1m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total reserves (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1977', 'y': 12105786286.2}, {'x': '1978', 'y': 11977228956.28}, {'x': '1979', 'y': 15209640118.21}, {'x': '1980', 'y': 10222909028.22}, {'x': '1981', 'y': 1605412699.57}, {'x': '1982', 'y': 5701206773.52}]}}
[31m{'mark': 'bar', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Total reserves (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1977', 'y': 13800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed males(% of male labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1994', 'y': 16.07}, {'x': '1996', 'y': 20.72}, {'x': '1997', 'y': 21.63}, {'x': '1998', 'y': 24.35}, {'x': '1999', 'y': 22.57}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Unemployed males(% of male labor force ages 15-24)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1996', 'y': 16.1}, {'x': '1997', 'y': 20.7}, {'x': '1998', 'y': 22.7}, {'x': '1999', 'y': 23.6}, {'x': '1999', 'y': 22.8}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Mean income or consumption per capita(2011 PPP $ per day)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2007', 'y': 18.63}, {'x': '2012', 'y': 23.03}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Mean income or consumption per capita(2011 PPP$ per day)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '2009', 'y': 9.21}, {'x': '2010', 'y': 9.29}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Savings (current US$)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1990', 'y': 570576439.03}, {'x': '2005', 'y': 264160696.95}, {'x': '2010', 'y': 364586320.06}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Savings current US$', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1996', 'y': 56300000}, {'x': '1997', 'y': 27000000}, {'x': '1998', 'y': 34000000}]}}
[32m[1m{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Value added (current Local Currency Unit)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1974', 'y': 1347000000}, {'x': '1975', 'y': 1528000000}, {'x': '1976', 'y': 1788000000}, {'x': '1977', 'y': 3066000000}, {'x': '1978', 'y': 4195000000}, {'x': '1979', 'y': 4601000000}]}}
{'mark': 'circle', 'encoding': {'x': {'field': 'Year', 'type': 'temporal'}, 'y': {'field': 'Value added (current Local Currency Unit)', 'type': 'quantitative'}}, 'data': {'values': [{'x': '1994', 'y': 130000000}, {'x': '1995', 'y': 150000000}, {'x': '1996', 'y': 150000000}, {'x': '1997', 'y': 300000000}, {'x': '1998', 'y': 400000000}, {'x': '1999', 'y': 400000000}]}}
[35m[1m------------------------------------------------------------------------------------------------------------------------
[35m|[39m [36m[1mMARK-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-TYPE[39m[22m : 0.5 [35m|[39m [36m[1mY-TYPE[39m[22m : 1.0 [35m|[39m [36m[1mX-NAME[39m[22m : 1.0 [35m|[39m [36m[1mY-NAME[39m[22m : 0.97 [35m|
[35m[1m------------------------------------------------------------------------------------------------------------------------














model.safetensors:  60%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ                                         | 680M/1.13G [00:31<00:12, 34.8MB/s]HTTP Error 500 thrown while requesting PUT https://hf-hub-lfs-us-east-1.s3-accelerate.amazonaws.com/repos/8f/3b/8f3b53ab06d63b36b95168e07b741badd7572fccb1569467e2409d4937138150/a9d0d8dd87ad4d7861453d52ac180685c8ceece6e766ff8bef24e0ed699c5e22?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIA2JU7TKAQLC2QXPN7%2F20241026%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20241026T050509Z&X-Amz-Expires=86400&X-Amz-Signature=d946d2201d1c99b277f44884e01dfd0bca1b4b9774ae016cfa209ffe5cbce4d9&X-Amz-SignedHeaders=host&partNumber=43&uploadId=6CCNKFud6SOZj2zg.PTNCydGjAmBrM2nyEEiEzhD25tvXArWM562nTgX2lTjc9fYBnBb25VqSqgCt9CRoo5MIqUoC3pumSYmMAu6yQgKAfL4koRclUdEHGVgZnfmc6G0&x-id=UploadPart
Retrying in 1s [Retry 1/5].






model.safetensors: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 1.13G/1.13G [00:47<00:00, 23.9MB/s]
Traceback (most recent call last):
  File "/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/huggingface_hub/utils/_errors.py", line 286, in hf_raise_for_status
    response.raise_for_status()
  File "/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/requests/models.py", line 1021, in raise_for_status
    raise HTTPError(http_error_msg, response=self)
requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://huggingface.co/api/complete_multipart?uploadId=6CCNKFud6SOZj2zg.PTNCydGjAmBrM2nyEEiEzhD25tvXArWM562nTgX2lTjc9fYBnBb25VqSqgCt9CRoo5MIqUoC3pumSYmMAu6yQgKAfL4koRclUdEHGVgZnfmc6G0&bucket=hf-hub-lfs-us-east-1&prefix=repos%2F8f%2F3b%2F8f3b53ab06d63b36b95168e07b741badd7572fccb1569467e2409d4937138150&expiration=Sun%2C+27+Oct+2024+05%3A05%3A09+GMT&signature=3037dc51f47cb233d5db35624765a99b6c8de3a23bb96c6c51c3673f88d92677
The above exception was the direct cause of the following exception:
Traceback (most recent call last):
  File "/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/huggingface_hub/_commit_api.py", line 400, in _wrapped_lfs_upload
    lfs_upload(operation=operation, lfs_batch_action=batch_action, token=token)
  File "/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/huggingface_hub/lfs.py", line 228, in lfs_upload
    _upload_multi_part(operation=operation, header=header, chunk_size=chunk_size, upload_url=upload_action["href"])
  File "/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/huggingface_hub/lfs.py", line 334, in _upload_multi_part
    hf_raise_for_status(completion_res)
  File "/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/huggingface_hub/utils/_errors.py", line 329, in hf_raise_for_status
    raise BadRequestError(message, response=response) from e
huggingface_hub.utils._errors.BadRequestError:  (Request ID: Root=1-671c78b5-7568c8274ee543035da338ee;aa03864f-32dd-4e52-b338-dfd96b261ef7)
Bad request:
Your proposed upload is smaller than the minimum allowed size
The above exception was the direct cause of the following exception:
Traceback (most recent call last):
  File "/mnt/disk2/msinnona/visdecode/eurographics/trainer.py", line 159, in <module>
    model.push_to_hub(MODEL)
  File "/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/transformers/modeling_utils.py", line 2499, in push_to_hub
    return super().push_to_hub(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/transformers/utils/hub.py", line 894, in push_to_hub
    return self._upload_modified_files(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/transformers/utils/hub.py", line 758, in _upload_modified_files
    return create_commit(
           ^^^^^^^^^^^^^^
  File "/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/huggingface_hub/utils/_validators.py", line 118, in _inner_fn
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/huggingface_hub/hf_api.py", line 1208, in _inner
    return fn(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/huggingface_hub/hf_api.py", line 3558, in create_commit
    self.preupload_lfs_files(
  File "/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/huggingface_hub/hf_api.py", line 4058, in preupload_lfs_files
    _upload_lfs_files(
  File "/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/huggingface_hub/utils/_validators.py", line 118, in _inner_fn
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/huggingface_hub/_commit_api.py", line 410, in _upload_lfs_files
    _wrapped_lfs_upload(filtered_actions[0])
  File "/mnt/disk2/msinnona/miniconda3/envs/martin/lib/python3.12/site-packages/huggingface_hub/_commit_api.py", line 402, in _wrapped_lfs_upload
    raise RuntimeError(f"Error while uploading '{operation.path_in_repo}' to the Hub.") from exc
RuntimeError: Error while uploading 'model.safetensors' to the Hub.